var EZ=Object.defineProperty;var NZ=(t,e,n)=>e in t?EZ(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var z2=(t,e,n)=>(NZ(t,typeof e!="symbol"?e+"":e,n),n);function IZ(t,e){for(var n=0;n<e.length;n++){const r=e[n];if(typeof r!="string"&&!Array.isArray(r)){for(const i in r)if(i!=="default"&&!(i in t)){const o=Object.getOwnPropertyDescriptor(r,i);o&&Object.defineProperty(t,i,o.get?o:{enumerable:!0,get:()=>r[i]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&r(s)}).observe(document,{childList:!0,subtree:!0});function n(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerpolicy&&(o.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?o.credentials="include":i.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(i){if(i.ep)return;i.ep=!0;const o=n(i);fetch(i.href,o)}})();var fi=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function MZ(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var S={exports:{}},fe={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var td=Symbol.for("react.element"),AZ=Symbol.for("react.portal"),LZ=Symbol.for("react.fragment"),ZZ=Symbol.for("react.strict_mode"),XZ=Symbol.for("react.profiler"),WZ=Symbol.for("react.provider"),RZ=Symbol.for("react.context"),FZ=Symbol.for("react.forward_ref"),HZ=Symbol.for("react.suspense"),DZ=Symbol.for("react.memo"),GZ=Symbol.for("react.lazy"),V2=Symbol.iterator;function jZ(t){return t===null||typeof t!="object"?null:(t=V2&&t[V2]||t["@@iterator"],typeof t=="function"?t:null)}var F9={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},H9=Object.assign,D9={};function zl(t,e,n){this.props=t,this.context=e,this.refs=D9,this.updater=n||F9}zl.prototype.isReactComponent={};zl.prototype.setState=function(t,e){if(typeof t!="object"&&typeof t!="function"&&t!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")};zl.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")};function G9(){}G9.prototype=zl.prototype;function d1(t,e,n){this.props=t,this.context=e,this.refs=D9,this.updater=n||F9}var f1=d1.prototype=new G9;f1.constructor=d1;H9(f1,zl.prototype);f1.isPureReactComponent=!0;var E2=Array.isArray,j9=Object.prototype.hasOwnProperty,h1={current:null},B9={key:!0,ref:!0,__self:!0,__source:!0};function Y9(t,e,n){var r,i={},o=null,s=null;if(e!=null)for(r in e.ref!==void 0&&(s=e.ref),e.key!==void 0&&(o=""+e.key),e)j9.call(e,r)&&!B9.hasOwnProperty(r)&&(i[r]=e[r]);var a=arguments.length-2;if(a===1)i.children=n;else if(1<a){for(var l=Array(a),c=0;c<a;c++)l[c]=arguments[c+2];i.children=l}if(t&&t.defaultProps)for(r in a=t.defaultProps,a)i[r]===void 0&&(i[r]=a[r]);return{$$typeof:td,type:t,key:o,ref:s,props:i,_owner:h1.current}}function BZ(t,e){return{$$typeof:td,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}function p1(t){return typeof t=="object"&&t!==null&&t.$$typeof===td}function YZ(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,function(n){return e[n]})}var N2=/\/+/g;function Ng(t,e){return typeof t=="object"&&t!==null&&t.key!=null?YZ(""+t.key):e.toString(36)}function Gf(t,e,n,r,i){var o=typeof t;(o==="undefined"||o==="boolean")&&(t=null);var s=!1;if(t===null)s=!0;else switch(o){case"string":case"number":s=!0;break;case"object":switch(t.$$typeof){case td:case AZ:s=!0}}if(s)return s=t,i=i(s),t=r===""?"."+Ng(s,0):r,E2(i)?(n="",t!=null&&(n=t.replace(N2,"$&/")+"/"),Gf(i,e,n,"",function(c){return c})):i!=null&&(p1(i)&&(i=BZ(i,n+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(N2,"$&/")+"/")+t)),e.push(i)),1;if(s=0,r=r===""?".":r+":",E2(t))for(var a=0;a<t.length;a++){o=t[a];var l=r+Ng(o,a);s+=Gf(o,e,n,l,i)}else if(l=jZ(t),typeof l=="function")for(t=l.call(t),a=0;!(o=t.next()).done;)o=o.value,l=r+Ng(o,a++),s+=Gf(o,e,n,l,i);else if(o==="object")throw e=String(t),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return s}function Id(t,e,n){if(t==null)return t;var r=[],i=0;return Gf(t,r,"","",function(o){return e.call(n,o,i++)}),r}function KZ(t){if(t._status===-1){var e=t._result;e=e(),e.then(function(n){(t._status===0||t._status===-1)&&(t._status=1,t._result=n)},function(n){(t._status===0||t._status===-1)&&(t._status=2,t._result=n)}),t._status===-1&&(t._status=0,t._result=e)}if(t._status===1)return t._result.default;throw t._result}var tn={current:null},jf={transition:null},UZ={ReactCurrentDispatcher:tn,ReactCurrentBatchConfig:jf,ReactCurrentOwner:h1};fe.Children={map:Id,forEach:function(t,e,n){Id(t,function(){e.apply(this,arguments)},n)},count:function(t){var e=0;return Id(t,function(){e++}),e},toArray:function(t){return Id(t,function(e){return e})||[]},only:function(t){if(!p1(t))throw Error("React.Children.only expected to receive a single React element child.");return t}};fe.Component=zl;fe.Fragment=LZ;fe.Profiler=XZ;fe.PureComponent=d1;fe.StrictMode=ZZ;fe.Suspense=HZ;fe.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=UZ;fe.cloneElement=function(t,e,n){if(t==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+t+".");var r=H9({},t.props),i=t.key,o=t.ref,s=t._owner;if(e!=null){if(e.ref!==void 0&&(o=e.ref,s=h1.current),e.key!==void 0&&(i=""+e.key),t.type&&t.type.defaultProps)var a=t.type.defaultProps;for(l in e)j9.call(e,l)&&!B9.hasOwnProperty(l)&&(r[l]=e[l]===void 0&&a!==void 0?a[l]:e[l])}var l=arguments.length-2;if(l===1)r.children=n;else if(1<l){a=Array(l);for(var c=0;c<l;c++)a[c]=arguments[c+2];r.children=a}return{$$typeof:td,type:t.type,key:i,ref:o,props:r,_owner:s}};fe.createContext=function(t){return t={$$typeof:RZ,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},t.Provider={$$typeof:WZ,_context:t},t.Consumer=t};fe.createElement=Y9;fe.createFactory=function(t){var e=Y9.bind(null,t);return e.type=t,e};fe.createRef=function(){return{current:null}};fe.forwardRef=function(t){return{$$typeof:FZ,render:t}};fe.isValidElement=p1;fe.lazy=function(t){return{$$typeof:GZ,_payload:{_status:-1,_result:t},_init:KZ}};fe.memo=function(t,e){return{$$typeof:DZ,type:t,compare:e===void 0?null:e}};fe.startTransition=function(t){var e=jf.transition;jf.transition={};try{t()}finally{jf.transition=e}};fe.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};fe.useCallback=function(t,e){return tn.current.useCallback(t,e)};fe.useContext=function(t){return tn.current.useContext(t)};fe.useDebugValue=function(){};fe.useDeferredValue=function(t){return tn.current.useDeferredValue(t)};fe.useEffect=function(t,e){return tn.current.useEffect(t,e)};fe.useId=function(){return tn.current.useId()};fe.useImperativeHandle=function(t,e,n){return tn.current.useImperativeHandle(t,e,n)};fe.useInsertionEffect=function(t,e){return tn.current.useInsertionEffect(t,e)};fe.useLayoutEffect=function(t,e){return tn.current.useLayoutEffect(t,e)};fe.useMemo=function(t,e){return tn.current.useMemo(t,e)};fe.useReducer=function(t,e,n){return tn.current.useReducer(t,e,n)};fe.useRef=function(t){return tn.current.useRef(t)};fe.useState=function(t){return tn.current.useState(t)};fe.useSyncExternalStore=function(t,e,n){return tn.current.useSyncExternalStore(t,e,n)};fe.useTransition=function(){return tn.current.useTransition()};fe.version="18.2.0";(function(t){t.exports=fe})(S);const R=MZ(S.exports),I2=IZ({__proto__:null,default:R},[S.exports]);var xb={},rm={exports:{}},Mn={},K9={exports:{}},U9={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(t){function e(L,H){var q=L.length;L.push(H);e:for(;0<q;){var le=q-1>>>1,ue=L[le];if(0<i(ue,H))L[le]=H,L[q]=ue,q=le;else break e}}function n(L){return L.length===0?null:L[0]}function r(L){if(L.length===0)return null;var H=L[0],q=L.pop();if(q!==H){L[0]=q;e:for(var le=0,ue=L.length,re=ue>>>1;le<re;){var Te=2*(le+1)-1,Ve=L[Te],He=Te+1,Ye=L[He];if(0>i(Ve,q))He<ue&&0>i(Ye,Ve)?(L[le]=Ye,L[He]=q,le=He):(L[le]=Ve,L[Te]=q,le=Te);else if(He<ue&&0>i(Ye,q))L[le]=Ye,L[He]=q,le=He;else break e}}return H}function i(L,H){var q=L.sortIndex-H.sortIndex;return q!==0?q:L.id-H.id}if(typeof performance=="object"&&typeof performance.now=="function"){var o=performance;t.unstable_now=function(){return o.now()}}else{var s=Date,a=s.now();t.unstable_now=function(){return s.now()-a}}var l=[],c=[],u=1,d=null,f=3,h=!1,p=!1,m=!1,v=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,b=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function y(L){for(var H=n(c);H!==null;){if(H.callback===null)r(c);else if(H.startTime<=L)r(c),H.sortIndex=H.expirationTime,e(l,H);else break;H=n(c)}}function x(L){if(m=!1,y(L),!p)if(n(l)!==null)p=!0,D(k);else{var H=n(c);H!==null&&ee(x,H.startTime-L)}}function k(L,H){p=!1,m&&(m=!1,g(z),z=-1),h=!0;var q=f;try{for(y(H),d=n(l);d!==null&&(!(d.expirationTime>H)||L&&!X());){var le=d.callback;if(typeof le=="function"){d.callback=null,f=d.priorityLevel;var ue=le(d.expirationTime<=H);H=t.unstable_now(),typeof ue=="function"?d.callback=ue:d===n(l)&&r(l),y(H)}else r(l);d=n(l)}if(d!==null)var re=!0;else{var Te=n(c);Te!==null&&ee(x,Te.startTime-H),re=!1}return re}finally{d=null,f=q,h=!1}}var P=!1,O=null,z=-1,I=5,E=-1;function X(){return!(t.unstable_now()-E<I)}function Y(){if(O!==null){var L=t.unstable_now();E=L;var H=!0;try{H=O(!0,L)}finally{H?Q():(P=!1,O=null)}}else P=!1}var Q;if(typeof b=="function")Q=function(){b(Y)};else if(typeof MessageChannel<"u"){var ae=new MessageChannel,oe=ae.port2;ae.port1.onmessage=Y,Q=function(){oe.postMessage(null)}}else Q=function(){v(Y,0)};function D(L){O=L,P||(P=!0,Q())}function ee(L,H){z=v(function(){L(t.unstable_now())},H)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(L){L.callback=null},t.unstable_continueExecution=function(){p||h||(p=!0,D(k))},t.unstable_forceFrameRate=function(L){0>L||125<L?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<L?Math.floor(1e3/L):5},t.unstable_getCurrentPriorityLevel=function(){return f},t.unstable_getFirstCallbackNode=function(){return n(l)},t.unstable_next=function(L){switch(f){case 1:case 2:case 3:var H=3;break;default:H=f}var q=f;f=H;try{return L()}finally{f=q}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(L,H){switch(L){case 1:case 2:case 3:case 4:case 5:break;default:L=3}var q=f;f=L;try{return H()}finally{f=q}},t.unstable_scheduleCallback=function(L,H,q){var le=t.unstable_now();switch(typeof q=="object"&&q!==null?(q=q.delay,q=typeof q=="number"&&0<q?le+q:le):q=le,L){case 1:var ue=-1;break;case 2:ue=250;break;case 5:ue=1073741823;break;case 4:ue=1e4;break;default:ue=5e3}return ue=q+ue,L={id:u++,callback:H,priorityLevel:L,startTime:q,expirationTime:ue,sortIndex:-1},q>le?(L.sortIndex=q,e(c,L),n(l)===null&&L===n(c)&&(m?(g(z),z=-1):m=!0,ee(x,q-le))):(L.sortIndex=ue,e(l,L),p||h||(p=!0,D(k))),L},t.unstable_shouldYield=X,t.unstable_wrapCallback=function(L){var H=f;return function(){var q=f;f=H;try{return L.apply(this,arguments)}finally{f=q}}}})(U9);(function(t){t.exports=U9})(K9);/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var q9=S.exports,Nn=K9.exports;function W(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var J9=new Set,iu={};function Ws(t,e){rl(t,e),rl(t+"Capture",e)}function rl(t,e){for(iu[t]=e,t=0;t<e.length;t++)J9.add(e[t])}var Si=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),Sb=Object.prototype.hasOwnProperty,qZ=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,M2={},A2={};function JZ(t){return Sb.call(A2,t)?!0:Sb.call(M2,t)?!1:qZ.test(t)?A2[t]=!0:(M2[t]=!0,!1)}function QZ(t,e,n,r){if(n!==null&&n.type===0)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return r?!1:n!==null?!n.acceptsBooleans:(t=t.toLowerCase().slice(0,5),t!=="data-"&&t!=="aria-");default:return!1}}function _Z(t,e,n,r){if(e===null||typeof e>"u"||QZ(t,e,n,r))return!0;if(r)return!1;if(n!==null)switch(n.type){case 3:return!e;case 4:return e===!1;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}function nn(t,e,n,r,i,o,s){this.acceptsBooleans=e===2||e===3||e===4,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=o,this.removeEmptyString=s}var Mt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t){Mt[t]=new nn(t,0,!1,t,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(t){var e=t[0];Mt[e]=new nn(e,1,!1,t[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(t){Mt[t]=new nn(t,2,!1,t.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(t){Mt[t]=new nn(t,2,!1,t,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t){Mt[t]=new nn(t,3,!1,t.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(t){Mt[t]=new nn(t,3,!0,t,null,!1,!1)});["capture","download"].forEach(function(t){Mt[t]=new nn(t,4,!1,t,null,!1,!1)});["cols","rows","size","span"].forEach(function(t){Mt[t]=new nn(t,6,!1,t,null,!1,!1)});["rowSpan","start"].forEach(function(t){Mt[t]=new nn(t,5,!1,t.toLowerCase(),null,!1,!1)});var m1=/[\-:]([a-z])/g;function g1(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t){var e=t.replace(m1,g1);Mt[e]=new nn(e,1,!1,t,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t){var e=t.replace(m1,g1);Mt[e]=new nn(e,1,!1,t,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(t){var e=t.replace(m1,g1);Mt[e]=new nn(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(t){Mt[t]=new nn(t,1,!1,t.toLowerCase(),null,!1,!1)});Mt.xlinkHref=new nn("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(t){Mt[t]=new nn(t,1,!1,t.toLowerCase(),null,!0,!0)});function b1(t,e,n,r){var i=Mt.hasOwnProperty(e)?Mt[e]:null;(i!==null?i.type!==0:r||!(2<e.length)||e[0]!=="o"&&e[0]!=="O"||e[1]!=="n"&&e[1]!=="N")&&(_Z(e,n,i,r)&&(n=null),r||i===null?JZ(e)&&(n===null?t.removeAttribute(e):t.setAttribute(e,""+n)):i.mustUseProperty?t[i.propertyName]=n===null?i.type===3?!1:"":n:(e=i.attributeName,r=i.attributeNamespace,n===null?t.removeAttribute(e):(i=i.type,n=i===3||i===4&&n===!0?"":""+n,r?t.setAttributeNS(r,e,n):t.setAttribute(e,n))))}var Ei=q9.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Md=Symbol.for("react.element"),ma=Symbol.for("react.portal"),ga=Symbol.for("react.fragment"),v1=Symbol.for("react.strict_mode"),kb=Symbol.for("react.profiler"),Q9=Symbol.for("react.provider"),_9=Symbol.for("react.context"),y1=Symbol.for("react.forward_ref"),wb=Symbol.for("react.suspense"),Pb=Symbol.for("react.suspense_list"),x1=Symbol.for("react.memo"),Hi=Symbol.for("react.lazy"),$9=Symbol.for("react.offscreen"),L2=Symbol.iterator;function Kl(t){return t===null||typeof t!="object"?null:(t=L2&&t[L2]||t["@@iterator"],typeof t=="function"?t:null)}var _e=Object.assign,Ig;function pc(t){if(Ig===void 0)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);Ig=e&&e[1]||""}return`
`+Ig+t}var Mg=!1;function Ag(t,e){if(!t||Mg)return"";Mg=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(e,[])}catch(c){var r=c}Reflect.construct(t,[],e)}else{try{e.call()}catch(c){r=c}t.call(e.prototype)}else{try{throw Error()}catch(c){r=c}t()}}catch(c){if(c&&r&&typeof c.stack=="string"){for(var i=c.stack.split(`
`),o=r.stack.split(`
`),s=i.length-1,a=o.length-1;1<=s&&0<=a&&i[s]!==o[a];)a--;for(;1<=s&&0<=a;s--,a--)if(i[s]!==o[a]){if(s!==1||a!==1)do if(s--,a--,0>a||i[s]!==o[a]){var l=`
`+i[s].replace(" at new "," at ");return t.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",t.displayName)),l}while(1<=s&&0<=a);break}}}finally{Mg=!1,Error.prepareStackTrace=n}return(t=t?t.displayName||t.name:"")?pc(t):""}function $Z(t){switch(t.tag){case 5:return pc(t.type);case 16:return pc("Lazy");case 13:return pc("Suspense");case 19:return pc("SuspenseList");case 0:case 2:case 15:return t=Ag(t.type,!1),t;case 11:return t=Ag(t.type.render,!1),t;case 1:return t=Ag(t.type,!0),t;default:return""}}function Ob(t){if(t==null)return null;if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case ga:return"Fragment";case ma:return"Portal";case kb:return"Profiler";case v1:return"StrictMode";case wb:return"Suspense";case Pb:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case _9:return(t.displayName||"Context")+".Consumer";case Q9:return(t._context.displayName||"Context")+".Provider";case y1:var e=t.render;return t=t.displayName,t||(t=e.displayName||e.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case x1:return e=t.displayName||null,e!==null?e:Ob(t.type)||"Memo";case Hi:e=t._payload,t=t._init;try{return Ob(t(e))}catch{}}return null}function eX(t){var e=t.type;switch(t.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return t=e.render,t=t.displayName||t.name||"",e.displayName||(t!==""?"ForwardRef("+t+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Ob(e);case 8:return e===v1?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e}return null}function xo(t){switch(typeof t){case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function eO(t){var e=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function tX(t){var e=eO(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),r=""+t[e];if(!t.hasOwnProperty(e)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var i=n.get,o=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return i.call(this)},set:function(s){r=""+s,o.call(this,s)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(s){r=""+s},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}function Ad(t){t._valueTracker||(t._valueTracker=tX(t))}function tO(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),r="";return t&&(r=eO(t)?t.checked?"true":"false":t.value),t=r,t!==n?(e.setValue(t),!0):!1}function zh(t){if(t=t||(typeof document<"u"?document:void 0),typeof t>"u")return null;try{return t.activeElement||t.body}catch{return t.body}}function Cb(t,e){var n=e.checked;return _e({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n!=null?n:t._wrapperState.initialChecked})}function Z2(t,e){var n=e.defaultValue==null?"":e.defaultValue,r=e.checked!=null?e.checked:e.defaultChecked;n=xo(e.value!=null?e.value:n),t._wrapperState={initialChecked:r,initialValue:n,controlled:e.type==="checkbox"||e.type==="radio"?e.checked!=null:e.value!=null}}function nO(t,e){e=e.checked,e!=null&&b1(t,"checked",e,!1)}function Tb(t,e){nO(t,e);var n=xo(e.value),r=e.type;if(n!=null)r==="number"?(n===0&&t.value===""||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if(r==="submit"||r==="reset"){t.removeAttribute("value");return}e.hasOwnProperty("value")?zb(t,e.type,n):e.hasOwnProperty("defaultValue")&&zb(t,e.type,xo(e.defaultValue)),e.checked==null&&e.defaultChecked!=null&&(t.defaultChecked=!!e.defaultChecked)}function X2(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!(r!=="submit"&&r!=="reset"||e.value!==void 0&&e.value!==null))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}n=t.name,n!==""&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,n!==""&&(t.name=n)}function zb(t,e,n){(e!=="number"||zh(t.ownerDocument)!==t)&&(n==null?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}var mc=Array.isArray;function Aa(t,e,n,r){if(t=t.options,e){e={};for(var i=0;i<n.length;i++)e["$"+n[i]]=!0;for(n=0;n<t.length;n++)i=e.hasOwnProperty("$"+t[n].value),t[n].selected!==i&&(t[n].selected=i),i&&r&&(t[n].defaultSelected=!0)}else{for(n=""+xo(n),e=null,i=0;i<t.length;i++){if(t[i].value===n){t[i].selected=!0,r&&(t[i].defaultSelected=!0);return}e!==null||t[i].disabled||(e=t[i])}e!==null&&(e.selected=!0)}}function Vb(t,e){if(e.dangerouslySetInnerHTML!=null)throw Error(W(91));return _e({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function W2(t,e){var n=e.value;if(n==null){if(n=e.children,e=e.defaultValue,n!=null){if(e!=null)throw Error(W(92));if(mc(n)){if(1<n.length)throw Error(W(93));n=n[0]}e=n}e==null&&(e=""),n=e}t._wrapperState={initialValue:xo(n)}}function rO(t,e){var n=xo(e.value),r=xo(e.defaultValue);n!=null&&(n=""+n,n!==t.value&&(t.value=n),e.defaultValue==null&&t.defaultValue!==n&&(t.defaultValue=n)),r!=null&&(t.defaultValue=""+r)}function R2(t){var e=t.textContent;e===t._wrapperState.initialValue&&e!==""&&e!==null&&(t.value=e)}function iO(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Eb(t,e){return t==null||t==="http://www.w3.org/1999/xhtml"?iO(e):t==="http://www.w3.org/2000/svg"&&e==="foreignObject"?"http://www.w3.org/1999/xhtml":t}var Ld,oO=function(t){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(e,n,r,i){MSApp.execUnsafeLocalFunction(function(){return t(e,n,r,i)})}:t}(function(t,e){if(t.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in t)t.innerHTML=e;else{for(Ld=Ld||document.createElement("div"),Ld.innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=Ld.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}});function ou(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&n.nodeType===3){n.nodeValue=e;return}}t.textContent=e}var zc={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},nX=["Webkit","ms","Moz","O"];Object.keys(zc).forEach(function(t){nX.forEach(function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),zc[e]=zc[t]})});function sO(t,e,n){return e==null||typeof e=="boolean"||e===""?"":n||typeof e!="number"||e===0||zc.hasOwnProperty(t)&&zc[t]?(""+e).trim():e+"px"}function aO(t,e){t=t.style;for(var n in e)if(e.hasOwnProperty(n)){var r=n.indexOf("--")===0,i=sO(n,e[n],r);n==="float"&&(n="cssFloat"),r?t.setProperty(n,i):t[n]=i}}var rX=_e({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Nb(t,e){if(e){if(rX[t]&&(e.children!=null||e.dangerouslySetInnerHTML!=null))throw Error(W(137,t));if(e.dangerouslySetInnerHTML!=null){if(e.children!=null)throw Error(W(60));if(typeof e.dangerouslySetInnerHTML!="object"||!("__html"in e.dangerouslySetInnerHTML))throw Error(W(61))}if(e.style!=null&&typeof e.style!="object")throw Error(W(62))}}function Ib(t,e){if(t.indexOf("-")===-1)return typeof e.is=="string";switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Mb=null;function S1(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var Ab=null,La=null,Za=null;function F2(t){if(t=id(t)){if(typeof Ab!="function")throw Error(W(280));var e=t.stateNode;e&&(e=lm(e),Ab(t.stateNode,t.type,e))}}function lO(t){La?Za?Za.push(t):Za=[t]:La=t}function cO(){if(La){var t=La,e=Za;if(Za=La=null,F2(t),e)for(t=0;t<e.length;t++)F2(e[t])}}function uO(t,e){return t(e)}function dO(){}var Lg=!1;function fO(t,e,n){if(Lg)return t(e,n);Lg=!0;try{return uO(t,e,n)}finally{Lg=!1,(La!==null||Za!==null)&&(dO(),cO())}}function su(t,e){var n=t.stateNode;if(n===null)return null;var r=lm(n);if(r===null)return null;n=r[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(t=t.type,r=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!r;break e;default:t=!1}if(t)return null;if(n&&typeof n!="function")throw Error(W(231,e,typeof n));return n}var Lb=!1;if(Si)try{var Ul={};Object.defineProperty(Ul,"passive",{get:function(){Lb=!0}}),window.addEventListener("test",Ul,Ul),window.removeEventListener("test",Ul,Ul)}catch{Lb=!1}function iX(t,e,n,r,i,o,s,a,l){var c=Array.prototype.slice.call(arguments,3);try{e.apply(n,c)}catch(u){this.onError(u)}}var Vc=!1,Vh=null,Eh=!1,Zb=null,oX={onError:function(t){Vc=!0,Vh=t}};function sX(t,e,n,r,i,o,s,a,l){Vc=!1,Vh=null,iX.apply(oX,arguments)}function aX(t,e,n,r,i,o,s,a,l){if(sX.apply(this,arguments),Vc){if(Vc){var c=Vh;Vc=!1,Vh=null}else throw Error(W(198));Eh||(Eh=!0,Zb=c)}}function Rs(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do e=t,(e.flags&4098)!==0&&(n=e.return),t=e.return;while(t)}return e.tag===3?n:null}function hO(t){if(t.tag===13){var e=t.memoizedState;if(e===null&&(t=t.alternate,t!==null&&(e=t.memoizedState)),e!==null)return e.dehydrated}return null}function H2(t){if(Rs(t)!==t)throw Error(W(188))}function lX(t){var e=t.alternate;if(!e){if(e=Rs(t),e===null)throw Error(W(188));return e!==t?null:t}for(var n=t,r=e;;){var i=n.return;if(i===null)break;var o=i.alternate;if(o===null){if(r=i.return,r!==null){n=r;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===n)return H2(i),t;if(o===r)return H2(i),e;o=o.sibling}throw Error(W(188))}if(n.return!==r.return)n=i,r=o;else{for(var s=!1,a=i.child;a;){if(a===n){s=!0,n=i,r=o;break}if(a===r){s=!0,r=i,n=o;break}a=a.sibling}if(!s){for(a=o.child;a;){if(a===n){s=!0,n=o,r=i;break}if(a===r){s=!0,r=o,n=i;break}a=a.sibling}if(!s)throw Error(W(189))}}if(n.alternate!==r)throw Error(W(190))}if(n.tag!==3)throw Error(W(188));return n.stateNode.current===n?t:e}function pO(t){return t=lX(t),t!==null?mO(t):null}function mO(t){if(t.tag===5||t.tag===6)return t;for(t=t.child;t!==null;){var e=mO(t);if(e!==null)return e;t=t.sibling}return null}var gO=Nn.unstable_scheduleCallback,D2=Nn.unstable_cancelCallback,cX=Nn.unstable_shouldYield,uX=Nn.unstable_requestPaint,ot=Nn.unstable_now,dX=Nn.unstable_getCurrentPriorityLevel,k1=Nn.unstable_ImmediatePriority,bO=Nn.unstable_UserBlockingPriority,Nh=Nn.unstable_NormalPriority,fX=Nn.unstable_LowPriority,vO=Nn.unstable_IdlePriority,im=null,Gr=null;function hX(t){if(Gr&&typeof Gr.onCommitFiberRoot=="function")try{Gr.onCommitFiberRoot(im,t,void 0,(t.current.flags&128)===128)}catch{}}var mr=Math.clz32?Math.clz32:gX,pX=Math.log,mX=Math.LN2;function gX(t){return t>>>=0,t===0?32:31-(pX(t)/mX|0)|0}var Zd=64,Xd=4194304;function gc(t){switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return t&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return t}}function Ih(t,e){var n=t.pendingLanes;if(n===0)return 0;var r=0,i=t.suspendedLanes,o=t.pingedLanes,s=n&268435455;if(s!==0){var a=s&~i;a!==0?r=gc(a):(o&=s,o!==0&&(r=gc(o)))}else s=n&~i,s!==0?r=gc(s):o!==0&&(r=gc(o));if(r===0)return 0;if(e!==0&&e!==r&&(e&i)===0&&(i=r&-r,o=e&-e,i>=o||i===16&&(o&4194240)!==0))return e;if((r&4)!==0&&(r|=n&16),e=t.entangledLanes,e!==0)for(t=t.entanglements,e&=r;0<e;)n=31-mr(e),i=1<<n,r|=t[n],e&=~i;return r}function bX(t,e){switch(t){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function vX(t,e){for(var n=t.suspendedLanes,r=t.pingedLanes,i=t.expirationTimes,o=t.pendingLanes;0<o;){var s=31-mr(o),a=1<<s,l=i[s];l===-1?((a&n)===0||(a&r)!==0)&&(i[s]=bX(a,e)):l<=e&&(t.expiredLanes|=a),o&=~a}}function Xb(t){return t=t.pendingLanes&-1073741825,t!==0?t:t&1073741824?1073741824:0}function yO(){var t=Zd;return Zd<<=1,(Zd&4194240)===0&&(Zd=64),t}function Zg(t){for(var e=[],n=0;31>n;n++)e.push(t);return e}function nd(t,e,n){t.pendingLanes|=e,e!==536870912&&(t.suspendedLanes=0,t.pingedLanes=0),t=t.eventTimes,e=31-mr(e),t[e]=n}function yX(t,e){var n=t.pendingLanes&~e;t.pendingLanes=e,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=e,t.mutableReadLanes&=e,t.entangledLanes&=e,e=t.entanglements;var r=t.eventTimes;for(t=t.expirationTimes;0<n;){var i=31-mr(n),o=1<<i;e[i]=0,r[i]=-1,t[i]=-1,n&=~o}}function w1(t,e){var n=t.entangledLanes|=e;for(t=t.entanglements;n;){var r=31-mr(n),i=1<<r;i&e|t[r]&e&&(t[r]|=e),n&=~i}}var Oe=0;function xO(t){return t&=-t,1<t?4<t?(t&268435455)!==0?16:536870912:4:1}var SO,P1,kO,wO,PO,Wb=!1,Wd=[],lo=null,co=null,uo=null,au=new Map,lu=new Map,Yi=[],xX="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function G2(t,e){switch(t){case"focusin":case"focusout":lo=null;break;case"dragenter":case"dragleave":co=null;break;case"mouseover":case"mouseout":uo=null;break;case"pointerover":case"pointerout":au.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":lu.delete(e.pointerId)}}function ql(t,e,n,r,i,o){return t===null||t.nativeEvent!==o?(t={blockedOn:e,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[i]},e!==null&&(e=id(e),e!==null&&P1(e)),t):(t.eventSystemFlags|=r,e=t.targetContainers,i!==null&&e.indexOf(i)===-1&&e.push(i),t)}function SX(t,e,n,r,i){switch(e){case"focusin":return lo=ql(lo,t,e,n,r,i),!0;case"dragenter":return co=ql(co,t,e,n,r,i),!0;case"mouseover":return uo=ql(uo,t,e,n,r,i),!0;case"pointerover":var o=i.pointerId;return au.set(o,ql(au.get(o)||null,t,e,n,r,i)),!0;case"gotpointercapture":return o=i.pointerId,lu.set(o,ql(lu.get(o)||null,t,e,n,r,i)),!0}return!1}function OO(t){var e=is(t.target);if(e!==null){var n=Rs(e);if(n!==null){if(e=n.tag,e===13){if(e=hO(n),e!==null){t.blockedOn=e,PO(t.priority,function(){kO(n)});return}}else if(e===3&&n.stateNode.current.memoizedState.isDehydrated){t.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}t.blockedOn=null}function Bf(t){if(t.blockedOn!==null)return!1;for(var e=t.targetContainers;0<e.length;){var n=Rb(t.domEventName,t.eventSystemFlags,e[0],t.nativeEvent);if(n===null){n=t.nativeEvent;var r=new n.constructor(n.type,n);Mb=r,n.target.dispatchEvent(r),Mb=null}else return e=id(n),e!==null&&P1(e),t.blockedOn=n,!1;e.shift()}return!0}function j2(t,e,n){Bf(t)&&n.delete(e)}function kX(){Wb=!1,lo!==null&&Bf(lo)&&(lo=null),co!==null&&Bf(co)&&(co=null),uo!==null&&Bf(uo)&&(uo=null),au.forEach(j2),lu.forEach(j2)}function Jl(t,e){t.blockedOn===e&&(t.blockedOn=null,Wb||(Wb=!0,Nn.unstable_scheduleCallback(Nn.unstable_NormalPriority,kX)))}function cu(t){function e(i){return Jl(i,t)}if(0<Wd.length){Jl(Wd[0],t);for(var n=1;n<Wd.length;n++){var r=Wd[n];r.blockedOn===t&&(r.blockedOn=null)}}for(lo!==null&&Jl(lo,t),co!==null&&Jl(co,t),uo!==null&&Jl(uo,t),au.forEach(e),lu.forEach(e),n=0;n<Yi.length;n++)r=Yi[n],r.blockedOn===t&&(r.blockedOn=null);for(;0<Yi.length&&(n=Yi[0],n.blockedOn===null);)OO(n),n.blockedOn===null&&Yi.shift()}var Xa=Ei.ReactCurrentBatchConfig,Mh=!0;function wX(t,e,n,r){var i=Oe,o=Xa.transition;Xa.transition=null;try{Oe=1,O1(t,e,n,r)}finally{Oe=i,Xa.transition=o}}function PX(t,e,n,r){var i=Oe,o=Xa.transition;Xa.transition=null;try{Oe=4,O1(t,e,n,r)}finally{Oe=i,Xa.transition=o}}function O1(t,e,n,r){if(Mh){var i=Rb(t,e,n,r);if(i===null)Yg(t,e,r,Ah,n),G2(t,r);else if(SX(i,t,e,n,r))r.stopPropagation();else if(G2(t,r),e&4&&-1<xX.indexOf(t)){for(;i!==null;){var o=id(i);if(o!==null&&SO(o),o=Rb(t,e,n,r),o===null&&Yg(t,e,r,Ah,n),o===i)break;i=o}i!==null&&r.stopPropagation()}else Yg(t,e,r,null,n)}}var Ah=null;function Rb(t,e,n,r){if(Ah=null,t=S1(r),t=is(t),t!==null)if(e=Rs(t),e===null)t=null;else if(n=e.tag,n===13){if(t=hO(e),t!==null)return t;t=null}else if(n===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;t=null}else e!==t&&(t=null);return Ah=t,null}function CO(t){switch(t){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(dX()){case k1:return 1;case bO:return 4;case Nh:case fX:return 16;case vO:return 536870912;default:return 16}default:return 16}}var Qi=null,C1=null,Yf=null;function TO(){if(Yf)return Yf;var t,e=C1,n=e.length,r,i="value"in Qi?Qi.value:Qi.textContent,o=i.length;for(t=0;t<n&&e[t]===i[t];t++);var s=n-t;for(r=1;r<=s&&e[n-r]===i[o-r];r++);return Yf=i.slice(t,1<r?1-r:void 0)}function Kf(t){var e=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&e===13&&(t=13)):t=e,t===10&&(t=13),32<=t||t===13?t:0}function Rd(){return!0}function B2(){return!1}function An(t){function e(n,r,i,o,s){this._reactName=n,this._targetInst=i,this.type=r,this.nativeEvent=o,this.target=s,this.currentTarget=null;for(var a in t)t.hasOwnProperty(a)&&(n=t[a],this[a]=n?n(o):o[a]);return this.isDefaultPrevented=(o.defaultPrevented!=null?o.defaultPrevented:o.returnValue===!1)?Rd:B2,this.isPropagationStopped=B2,this}return _e(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=Rd)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=Rd)},persist:function(){},isPersistent:Rd}),e}var Vl={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},T1=An(Vl),rd=_e({},Vl,{view:0,detail:0}),OX=An(rd),Xg,Wg,Ql,om=_e({},rd,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:z1,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==Ql&&(Ql&&t.type==="mousemove"?(Xg=t.screenX-Ql.screenX,Wg=t.screenY-Ql.screenY):Wg=Xg=0,Ql=t),Xg)},movementY:function(t){return"movementY"in t?t.movementY:Wg}}),Y2=An(om),CX=_e({},om,{dataTransfer:0}),TX=An(CX),zX=_e({},rd,{relatedTarget:0}),Rg=An(zX),VX=_e({},Vl,{animationName:0,elapsedTime:0,pseudoElement:0}),EX=An(VX),NX=_e({},Vl,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),IX=An(NX),MX=_e({},Vl,{data:0}),K2=An(MX),AX={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},LX={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ZX={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function XX(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):(t=ZX[t])?!!e[t]:!1}function z1(){return XX}var WX=_e({},rd,{key:function(t){if(t.key){var e=AX[t.key]||t.key;if(e!=="Unidentified")return e}return t.type==="keypress"?(t=Kf(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?LX[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:z1,charCode:function(t){return t.type==="keypress"?Kf(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?Kf(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),RX=An(WX),FX=_e({},om,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),U2=An(FX),HX=_e({},rd,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:z1}),DX=An(HX),GX=_e({},Vl,{propertyName:0,elapsedTime:0,pseudoElement:0}),jX=An(GX),BX=_e({},om,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),YX=An(BX),KX=[9,13,27,32],V1=Si&&"CompositionEvent"in window,Ec=null;Si&&"documentMode"in document&&(Ec=document.documentMode);var UX=Si&&"TextEvent"in window&&!Ec,zO=Si&&(!V1||Ec&&8<Ec&&11>=Ec),q2=String.fromCharCode(32),J2=!1;function VO(t,e){switch(t){case"keyup":return KX.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function EO(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var ba=!1;function qX(t,e){switch(t){case"compositionend":return EO(e);case"keypress":return e.which!==32?null:(J2=!0,q2);case"textInput":return t=e.data,t===q2&&J2?null:t;default:return null}}function JX(t,e){if(ba)return t==="compositionend"||!V1&&VO(t,e)?(t=TO(),Yf=C1=Qi=null,ba=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return zO&&e.locale!=="ko"?null:e.data;default:return null}}var QX={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Q2(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e==="input"?!!QX[t.type]:e==="textarea"}function NO(t,e,n,r){lO(r),e=Lh(e,"onChange"),0<e.length&&(n=new T1("onChange","change",null,n,r),t.push({event:n,listeners:e}))}var Nc=null,uu=null;function _X(t){DO(t,0)}function sm(t){var e=xa(t);if(tO(e))return t}function $X(t,e){if(t==="change")return e}var IO=!1;if(Si){var Fg;if(Si){var Hg="oninput"in document;if(!Hg){var _2=document.createElement("div");_2.setAttribute("oninput","return;"),Hg=typeof _2.oninput=="function"}Fg=Hg}else Fg=!1;IO=Fg&&(!document.documentMode||9<document.documentMode)}function $2(){Nc&&(Nc.detachEvent("onpropertychange",MO),uu=Nc=null)}function MO(t){if(t.propertyName==="value"&&sm(uu)){var e=[];NO(e,uu,t,S1(t)),fO(_X,e)}}function eW(t,e,n){t==="focusin"?($2(),Nc=e,uu=n,Nc.attachEvent("onpropertychange",MO)):t==="focusout"&&$2()}function tW(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return sm(uu)}function nW(t,e){if(t==="click")return sm(e)}function rW(t,e){if(t==="input"||t==="change")return sm(e)}function iW(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var xr=typeof Object.is=="function"?Object.is:iW;function du(t,e){if(xr(t,e))return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;var n=Object.keys(t),r=Object.keys(e);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var i=n[r];if(!Sb.call(e,i)||!xr(t[i],e[i]))return!1}return!0}function ek(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function tk(t,e){var n=ek(t);t=0;for(var r;n;){if(n.nodeType===3){if(r=t+n.textContent.length,t<=e&&r>=e)return{node:n,offset:e-t};t=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=ek(n)}}function AO(t,e){return t&&e?t===e?!0:t&&t.nodeType===3?!1:e&&e.nodeType===3?AO(t,e.parentNode):"contains"in t?t.contains(e):t.compareDocumentPosition?!!(t.compareDocumentPosition(e)&16):!1:!1}function LO(){for(var t=window,e=zh();e instanceof t.HTMLIFrameElement;){try{var n=typeof e.contentWindow.location.href=="string"}catch{n=!1}if(n)t=e.contentWindow;else break;e=zh(t.document)}return e}function E1(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&(e==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||e==="textarea"||t.contentEditable==="true")}function oW(t){var e=LO(),n=t.focusedElem,r=t.selectionRange;if(e!==n&&n&&n.ownerDocument&&AO(n.ownerDocument.documentElement,n)){if(r!==null&&E1(n)){if(e=r.start,t=r.end,t===void 0&&(t=e),"selectionStart"in n)n.selectionStart=e,n.selectionEnd=Math.min(t,n.value.length);else if(t=(e=n.ownerDocument||document)&&e.defaultView||window,t.getSelection){t=t.getSelection();var i=n.textContent.length,o=Math.min(r.start,i);r=r.end===void 0?o:Math.min(r.end,i),!t.extend&&o>r&&(i=r,r=o,o=i),i=tk(n,o);var s=tk(n,r);i&&s&&(t.rangeCount!==1||t.anchorNode!==i.node||t.anchorOffset!==i.offset||t.focusNode!==s.node||t.focusOffset!==s.offset)&&(e=e.createRange(),e.setStart(i.node,i.offset),t.removeAllRanges(),o>r?(t.addRange(e),t.extend(s.node,s.offset)):(e.setEnd(s.node,s.offset),t.addRange(e)))}}for(e=[],t=n;t=t.parentNode;)t.nodeType===1&&e.push({element:t,left:t.scrollLeft,top:t.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<e.length;n++)t=e[n],t.element.scrollLeft=t.left,t.element.scrollTop=t.top}}var sW=Si&&"documentMode"in document&&11>=document.documentMode,va=null,Fb=null,Ic=null,Hb=!1;function nk(t,e,n){var r=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;Hb||va==null||va!==zh(r)||(r=va,"selectionStart"in r&&E1(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),Ic&&du(Ic,r)||(Ic=r,r=Lh(Fb,"onSelect"),0<r.length&&(e=new T1("onSelect","select",null,e,n),t.push({event:e,listeners:r}),e.target=va)))}function Fd(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var ya={animationend:Fd("Animation","AnimationEnd"),animationiteration:Fd("Animation","AnimationIteration"),animationstart:Fd("Animation","AnimationStart"),transitionend:Fd("Transition","TransitionEnd")},Dg={},ZO={};Si&&(ZO=document.createElement("div").style,"AnimationEvent"in window||(delete ya.animationend.animation,delete ya.animationiteration.animation,delete ya.animationstart.animation),"TransitionEvent"in window||delete ya.transitionend.transition);function am(t){if(Dg[t])return Dg[t];if(!ya[t])return t;var e=ya[t],n;for(n in e)if(e.hasOwnProperty(n)&&n in ZO)return Dg[t]=e[n];return t}var XO=am("animationend"),WO=am("animationiteration"),RO=am("animationstart"),FO=am("transitionend"),HO=new Map,rk="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Vo(t,e){HO.set(t,e),Ws(e,[t])}for(var Gg=0;Gg<rk.length;Gg++){var jg=rk[Gg],aW=jg.toLowerCase(),lW=jg[0].toUpperCase()+jg.slice(1);Vo(aW,"on"+lW)}Vo(XO,"onAnimationEnd");Vo(WO,"onAnimationIteration");Vo(RO,"onAnimationStart");Vo("dblclick","onDoubleClick");Vo("focusin","onFocus");Vo("focusout","onBlur");Vo(FO,"onTransitionEnd");rl("onMouseEnter",["mouseout","mouseover"]);rl("onMouseLeave",["mouseout","mouseover"]);rl("onPointerEnter",["pointerout","pointerover"]);rl("onPointerLeave",["pointerout","pointerover"]);Ws("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Ws("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Ws("onBeforeInput",["compositionend","keypress","textInput","paste"]);Ws("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Ws("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Ws("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var bc="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),cW=new Set("cancel close invalid load scroll toggle".split(" ").concat(bc));function ik(t,e,n){var r=t.type||"unknown-event";t.currentTarget=n,aX(r,e,void 0,t),t.currentTarget=null}function DO(t,e){e=(e&4)!==0;for(var n=0;n<t.length;n++){var r=t[n],i=r.event;r=r.listeners;e:{var o=void 0;if(e)for(var s=r.length-1;0<=s;s--){var a=r[s],l=a.instance,c=a.currentTarget;if(a=a.listener,l!==o&&i.isPropagationStopped())break e;ik(i,a,c),o=l}else for(s=0;s<r.length;s++){if(a=r[s],l=a.instance,c=a.currentTarget,a=a.listener,l!==o&&i.isPropagationStopped())break e;ik(i,a,c),o=l}}}if(Eh)throw t=Zb,Eh=!1,Zb=null,t}function Le(t,e){var n=e[Yb];n===void 0&&(n=e[Yb]=new Set);var r=t+"__bubble";n.has(r)||(GO(e,t,2,!1),n.add(r))}function Bg(t,e,n){var r=0;e&&(r|=4),GO(n,t,r,e)}var Hd="_reactListening"+Math.random().toString(36).slice(2);function fu(t){if(!t[Hd]){t[Hd]=!0,J9.forEach(function(n){n!=="selectionchange"&&(cW.has(n)||Bg(n,!1,t),Bg(n,!0,t))});var e=t.nodeType===9?t:t.ownerDocument;e===null||e[Hd]||(e[Hd]=!0,Bg("selectionchange",!1,e))}}function GO(t,e,n,r){switch(CO(e)){case 1:var i=wX;break;case 4:i=PX;break;default:i=O1}n=i.bind(null,e,n,t),i=void 0,!Lb||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(i=!0),r?i!==void 0?t.addEventListener(e,n,{capture:!0,passive:i}):t.addEventListener(e,n,!0):i!==void 0?t.addEventListener(e,n,{passive:i}):t.addEventListener(e,n,!1)}function Yg(t,e,n,r,i){var o=r;if((e&1)===0&&(e&2)===0&&r!==null)e:for(;;){if(r===null)return;var s=r.tag;if(s===3||s===4){var a=r.stateNode.containerInfo;if(a===i||a.nodeType===8&&a.parentNode===i)break;if(s===4)for(s=r.return;s!==null;){var l=s.tag;if((l===3||l===4)&&(l=s.stateNode.containerInfo,l===i||l.nodeType===8&&l.parentNode===i))return;s=s.return}for(;a!==null;){if(s=is(a),s===null)return;if(l=s.tag,l===5||l===6){r=o=s;continue e}a=a.parentNode}}r=r.return}fO(function(){var c=o,u=S1(n),d=[];e:{var f=HO.get(t);if(f!==void 0){var h=T1,p=t;switch(t){case"keypress":if(Kf(n)===0)break e;case"keydown":case"keyup":h=RX;break;case"focusin":p="focus",h=Rg;break;case"focusout":p="blur",h=Rg;break;case"beforeblur":case"afterblur":h=Rg;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":h=Y2;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":h=TX;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":h=DX;break;case XO:case WO:case RO:h=EX;break;case FO:h=jX;break;case"scroll":h=OX;break;case"wheel":h=YX;break;case"copy":case"cut":case"paste":h=IX;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":h=U2}var m=(e&4)!==0,v=!m&&t==="scroll",g=m?f!==null?f+"Capture":null:f;m=[];for(var b=c,y;b!==null;){y=b;var x=y.stateNode;if(y.tag===5&&x!==null&&(y=x,g!==null&&(x=su(b,g),x!=null&&m.push(hu(b,x,y)))),v)break;b=b.return}0<m.length&&(f=new h(f,p,null,n,u),d.push({event:f,listeners:m}))}}if((e&7)===0){e:{if(f=t==="mouseover"||t==="pointerover",h=t==="mouseout"||t==="pointerout",f&&n!==Mb&&(p=n.relatedTarget||n.fromElement)&&(is(p)||p[ki]))break e;if((h||f)&&(f=u.window===u?u:(f=u.ownerDocument)?f.defaultView||f.parentWindow:window,h?(p=n.relatedTarget||n.toElement,h=c,p=p?is(p):null,p!==null&&(v=Rs(p),p!==v||p.tag!==5&&p.tag!==6)&&(p=null)):(h=null,p=c),h!==p)){if(m=Y2,x="onMouseLeave",g="onMouseEnter",b="mouse",(t==="pointerout"||t==="pointerover")&&(m=U2,x="onPointerLeave",g="onPointerEnter",b="pointer"),v=h==null?f:xa(h),y=p==null?f:xa(p),f=new m(x,b+"leave",h,n,u),f.target=v,f.relatedTarget=y,x=null,is(u)===c&&(m=new m(g,b+"enter",p,n,u),m.target=y,m.relatedTarget=v,x=m),v=x,h&&p)t:{for(m=h,g=p,b=0,y=m;y;y=na(y))b++;for(y=0,x=g;x;x=na(x))y++;for(;0<b-y;)m=na(m),b--;for(;0<y-b;)g=na(g),y--;for(;b--;){if(m===g||g!==null&&m===g.alternate)break t;m=na(m),g=na(g)}m=null}else m=null;h!==null&&ok(d,f,h,m,!1),p!==null&&v!==null&&ok(d,v,p,m,!0)}}e:{if(f=c?xa(c):window,h=f.nodeName&&f.nodeName.toLowerCase(),h==="select"||h==="input"&&f.type==="file")var k=$X;else if(Q2(f))if(IO)k=rW;else{k=tW;var P=eW}else(h=f.nodeName)&&h.toLowerCase()==="input"&&(f.type==="checkbox"||f.type==="radio")&&(k=nW);if(k&&(k=k(t,c))){NO(d,k,n,u);break e}P&&P(t,f,c),t==="focusout"&&(P=f._wrapperState)&&P.controlled&&f.type==="number"&&zb(f,"number",f.value)}switch(P=c?xa(c):window,t){case"focusin":(Q2(P)||P.contentEditable==="true")&&(va=P,Fb=c,Ic=null);break;case"focusout":Ic=Fb=va=null;break;case"mousedown":Hb=!0;break;case"contextmenu":case"mouseup":case"dragend":Hb=!1,nk(d,n,u);break;case"selectionchange":if(sW)break;case"keydown":case"keyup":nk(d,n,u)}var O;if(V1)e:{switch(t){case"compositionstart":var z="onCompositionStart";break e;case"compositionend":z="onCompositionEnd";break e;case"compositionupdate":z="onCompositionUpdate";break e}z=void 0}else ba?VO(t,n)&&(z="onCompositionEnd"):t==="keydown"&&n.keyCode===229&&(z="onCompositionStart");z&&(zO&&n.locale!=="ko"&&(ba||z!=="onCompositionStart"?z==="onCompositionEnd"&&ba&&(O=TO()):(Qi=u,C1="value"in Qi?Qi.value:Qi.textContent,ba=!0)),P=Lh(c,z),0<P.length&&(z=new K2(z,t,null,n,u),d.push({event:z,listeners:P}),O?z.data=O:(O=EO(n),O!==null&&(z.data=O)))),(O=UX?qX(t,n):JX(t,n))&&(c=Lh(c,"onBeforeInput"),0<c.length&&(u=new K2("onBeforeInput","beforeinput",null,n,u),d.push({event:u,listeners:c}),u.data=O))}DO(d,e)})}function hu(t,e,n){return{instance:t,listener:e,currentTarget:n}}function Lh(t,e){for(var n=e+"Capture",r=[];t!==null;){var i=t,o=i.stateNode;i.tag===5&&o!==null&&(i=o,o=su(t,n),o!=null&&r.unshift(hu(t,o,i)),o=su(t,e),o!=null&&r.push(hu(t,o,i))),t=t.return}return r}function na(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5);return t||null}function ok(t,e,n,r,i){for(var o=e._reactName,s=[];n!==null&&n!==r;){var a=n,l=a.alternate,c=a.stateNode;if(l!==null&&l===r)break;a.tag===5&&c!==null&&(a=c,i?(l=su(n,o),l!=null&&s.unshift(hu(n,l,a))):i||(l=su(n,o),l!=null&&s.push(hu(n,l,a)))),n=n.return}s.length!==0&&t.push({event:e,listeners:s})}var uW=/\r\n?/g,dW=/\u0000|\uFFFD/g;function sk(t){return(typeof t=="string"?t:""+t).replace(uW,`
`).replace(dW,"")}function Dd(t,e,n){if(e=sk(e),sk(t)!==e&&n)throw Error(W(425))}function Zh(){}var Db=null,Gb=null;function jb(t,e){return t==="textarea"||t==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var Bb=typeof setTimeout=="function"?setTimeout:void 0,fW=typeof clearTimeout=="function"?clearTimeout:void 0,ak=typeof Promise=="function"?Promise:void 0,hW=typeof queueMicrotask=="function"?queueMicrotask:typeof ak<"u"?function(t){return ak.resolve(null).then(t).catch(pW)}:Bb;function pW(t){setTimeout(function(){throw t})}function Kg(t,e){var n=e,r=0;do{var i=n.nextSibling;if(t.removeChild(n),i&&i.nodeType===8)if(n=i.data,n==="/$"){if(r===0){t.removeChild(i),cu(e);return}r--}else n!=="$"&&n!=="$?"&&n!=="$!"||r++;n=i}while(n);cu(e)}function fo(t){for(;t!=null;t=t.nextSibling){var e=t.nodeType;if(e===1||e===3)break;if(e===8){if(e=t.data,e==="$"||e==="$!"||e==="$?")break;if(e==="/$")return null}}return t}function lk(t){t=t.previousSibling;for(var e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="$"||n==="$!"||n==="$?"){if(e===0)return t;e--}else n==="/$"&&e++}t=t.previousSibling}return null}var El=Math.random().toString(36).slice(2),Zr="__reactFiber$"+El,pu="__reactProps$"+El,ki="__reactContainer$"+El,Yb="__reactEvents$"+El,mW="__reactListeners$"+El,gW="__reactHandles$"+El;function is(t){var e=t[Zr];if(e)return e;for(var n=t.parentNode;n;){if(e=n[ki]||n[Zr]){if(n=e.alternate,e.child!==null||n!==null&&n.child!==null)for(t=lk(t);t!==null;){if(n=t[Zr])return n;t=lk(t)}return e}t=n,n=t.parentNode}return null}function id(t){return t=t[Zr]||t[ki],!t||t.tag!==5&&t.tag!==6&&t.tag!==13&&t.tag!==3?null:t}function xa(t){if(t.tag===5||t.tag===6)return t.stateNode;throw Error(W(33))}function lm(t){return t[pu]||null}var Kb=[],Sa=-1;function Eo(t){return{current:t}}function We(t){0>Sa||(t.current=Kb[Sa],Kb[Sa]=null,Sa--)}function Me(t,e){Sa++,Kb[Sa]=t.current,t.current=e}var So={},Gt=Eo(So),cn=Eo(!1),Os=So;function il(t,e){var n=t.type.contextTypes;if(!n)return So;var r=t.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var i={},o;for(o in n)i[o]=e[o];return r&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=i),i}function un(t){return t=t.childContextTypes,t!=null}function Xh(){We(cn),We(Gt)}function ck(t,e,n){if(Gt.current!==So)throw Error(W(168));Me(Gt,e),Me(cn,n)}function jO(t,e,n){var r=t.stateNode;if(e=e.childContextTypes,typeof r.getChildContext!="function")return n;r=r.getChildContext();for(var i in r)if(!(i in e))throw Error(W(108,eX(t)||"Unknown",i));return _e({},n,r)}function Wh(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||So,Os=Gt.current,Me(Gt,t),Me(cn,cn.current),!0}function uk(t,e,n){var r=t.stateNode;if(!r)throw Error(W(169));n?(t=jO(t,e,Os),r.__reactInternalMemoizedMergedChildContext=t,We(cn),We(Gt),Me(Gt,t)):We(cn),Me(cn,n)}var ui=null,cm=!1,Ug=!1;function BO(t){ui===null?ui=[t]:ui.push(t)}function bW(t){cm=!0,BO(t)}function No(){if(!Ug&&ui!==null){Ug=!0;var t=0,e=Oe;try{var n=ui;for(Oe=1;t<n.length;t++){var r=n[t];do r=r(!0);while(r!==null)}ui=null,cm=!1}catch(i){throw ui!==null&&(ui=ui.slice(t+1)),gO(k1,No),i}finally{Oe=e,Ug=!1}}return null}var ka=[],wa=0,Rh=null,Fh=0,Gn=[],jn=0,Cs=null,mi=1,gi="";function Yo(t,e){ka[wa++]=Fh,ka[wa++]=Rh,Rh=t,Fh=e}function YO(t,e,n){Gn[jn++]=mi,Gn[jn++]=gi,Gn[jn++]=Cs,Cs=t;var r=mi;t=gi;var i=32-mr(r)-1;r&=~(1<<i),n+=1;var o=32-mr(e)+i;if(30<o){var s=i-i%5;o=(r&(1<<s)-1).toString(32),r>>=s,i-=s,mi=1<<32-mr(e)+i|n<<i|r,gi=o+t}else mi=1<<o|n<<i|r,gi=t}function N1(t){t.return!==null&&(Yo(t,1),YO(t,1,0))}function I1(t){for(;t===Rh;)Rh=ka[--wa],ka[wa]=null,Fh=ka[--wa],ka[wa]=null;for(;t===Cs;)Cs=Gn[--jn],Gn[jn]=null,gi=Gn[--jn],Gn[jn]=null,mi=Gn[--jn],Gn[jn]=null}var Tn=null,On=null,je=!1,hr=null;function KO(t,e){var n=Yn(5,null,null,0);n.elementType="DELETED",n.stateNode=e,n.return=t,e=t.deletions,e===null?(t.deletions=[n],t.flags|=16):e.push(n)}function dk(t,e){switch(t.tag){case 5:var n=t.type;return e=e.nodeType!==1||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e,e!==null?(t.stateNode=e,Tn=t,On=fo(e.firstChild),!0):!1;case 6:return e=t.pendingProps===""||e.nodeType!==3?null:e,e!==null?(t.stateNode=e,Tn=t,On=null,!0):!1;case 13:return e=e.nodeType!==8?null:e,e!==null?(n=Cs!==null?{id:mi,overflow:gi}:null,t.memoizedState={dehydrated:e,treeContext:n,retryLane:1073741824},n=Yn(18,null,null,0),n.stateNode=e,n.return=t,t.child=n,Tn=t,On=null,!0):!1;default:return!1}}function Ub(t){return(t.mode&1)!==0&&(t.flags&128)===0}function qb(t){if(je){var e=On;if(e){var n=e;if(!dk(t,e)){if(Ub(t))throw Error(W(418));e=fo(n.nextSibling);var r=Tn;e&&dk(t,e)?KO(r,n):(t.flags=t.flags&-4097|2,je=!1,Tn=t)}}else{if(Ub(t))throw Error(W(418));t.flags=t.flags&-4097|2,je=!1,Tn=t}}}function fk(t){for(t=t.return;t!==null&&t.tag!==5&&t.tag!==3&&t.tag!==13;)t=t.return;Tn=t}function Gd(t){if(t!==Tn)return!1;if(!je)return fk(t),je=!0,!1;var e;if((e=t.tag!==3)&&!(e=t.tag!==5)&&(e=t.type,e=e!=="head"&&e!=="body"&&!jb(t.type,t.memoizedProps)),e&&(e=On)){if(Ub(t))throw UO(),Error(W(418));for(;e;)KO(t,e),e=fo(e.nextSibling)}if(fk(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(W(317));e:{for(t=t.nextSibling,e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="/$"){if(e===0){On=fo(t.nextSibling);break e}e--}else n!=="$"&&n!=="$!"&&n!=="$?"||e++}t=t.nextSibling}On=null}}else On=Tn?fo(t.stateNode.nextSibling):null;return!0}function UO(){for(var t=On;t;)t=fo(t.nextSibling)}function ol(){On=Tn=null,je=!1}function M1(t){hr===null?hr=[t]:hr.push(t)}var vW=Ei.ReactCurrentBatchConfig;function dr(t,e){if(t&&t.defaultProps){e=_e({},e),t=t.defaultProps;for(var n in t)e[n]===void 0&&(e[n]=t[n]);return e}return e}var Hh=Eo(null),Dh=null,Pa=null,A1=null;function L1(){A1=Pa=Dh=null}function Z1(t){var e=Hh.current;We(Hh),t._currentValue=e}function Jb(t,e,n){for(;t!==null;){var r=t.alternate;if((t.childLanes&e)!==e?(t.childLanes|=e,r!==null&&(r.childLanes|=e)):r!==null&&(r.childLanes&e)!==e&&(r.childLanes|=e),t===n)break;t=t.return}}function Wa(t,e){Dh=t,A1=Pa=null,t=t.dependencies,t!==null&&t.firstContext!==null&&((t.lanes&e)!==0&&(an=!0),t.firstContext=null)}function _n(t){var e=t._currentValue;if(A1!==t)if(t={context:t,memoizedValue:e,next:null},Pa===null){if(Dh===null)throw Error(W(308));Pa=t,Dh.dependencies={lanes:0,firstContext:t}}else Pa=Pa.next=t;return e}var os=null;function X1(t){os===null?os=[t]:os.push(t)}function qO(t,e,n,r){var i=e.interleaved;return i===null?(n.next=n,X1(e)):(n.next=i.next,i.next=n),e.interleaved=n,wi(t,r)}function wi(t,e){t.lanes|=e;var n=t.alternate;for(n!==null&&(n.lanes|=e),n=t,t=t.return;t!==null;)t.childLanes|=e,n=t.alternate,n!==null&&(n.childLanes|=e),n=t,t=t.return;return n.tag===3?n.stateNode:null}var Di=!1;function W1(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function JO(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function vi(t,e){return{eventTime:t,lane:e,tag:0,payload:null,callback:null,next:null}}function ho(t,e,n){var r=t.updateQueue;if(r===null)return null;if(r=r.shared,(be&2)!==0){var i=r.pending;return i===null?e.next=e:(e.next=i.next,i.next=e),r.pending=e,wi(t,n)}return i=r.interleaved,i===null?(e.next=e,X1(r)):(e.next=i.next,i.next=e),r.interleaved=e,wi(t,n)}function Uf(t,e,n){if(e=e.updateQueue,e!==null&&(e=e.shared,(n&4194240)!==0)){var r=e.lanes;r&=t.pendingLanes,n|=r,e.lanes=n,w1(t,n)}}function hk(t,e){var n=t.updateQueue,r=t.alternate;if(r!==null&&(r=r.updateQueue,n===r)){var i=null,o=null;if(n=n.firstBaseUpdate,n!==null){do{var s={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};o===null?i=o=s:o=o.next=s,n=n.next}while(n!==null);o===null?i=o=e:o=o.next=e}else i=o=e;n={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:o,shared:r.shared,effects:r.effects},t.updateQueue=n;return}t=n.lastBaseUpdate,t===null?n.firstBaseUpdate=e:t.next=e,n.lastBaseUpdate=e}function Gh(t,e,n,r){var i=t.updateQueue;Di=!1;var o=i.firstBaseUpdate,s=i.lastBaseUpdate,a=i.shared.pending;if(a!==null){i.shared.pending=null;var l=a,c=l.next;l.next=null,s===null?o=c:s.next=c,s=l;var u=t.alternate;u!==null&&(u=u.updateQueue,a=u.lastBaseUpdate,a!==s&&(a===null?u.firstBaseUpdate=c:a.next=c,u.lastBaseUpdate=l))}if(o!==null){var d=i.baseState;s=0,u=c=l=null,a=o;do{var f=a.lane,h=a.eventTime;if((r&f)===f){u!==null&&(u=u.next={eventTime:h,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var p=t,m=a;switch(f=e,h=n,m.tag){case 1:if(p=m.payload,typeof p=="function"){d=p.call(h,d,f);break e}d=p;break e;case 3:p.flags=p.flags&-65537|128;case 0:if(p=m.payload,f=typeof p=="function"?p.call(h,d,f):p,f==null)break e;d=_e({},d,f);break e;case 2:Di=!0}}a.callback!==null&&a.lane!==0&&(t.flags|=64,f=i.effects,f===null?i.effects=[a]:f.push(a))}else h={eventTime:h,lane:f,tag:a.tag,payload:a.payload,callback:a.callback,next:null},u===null?(c=u=h,l=d):u=u.next=h,s|=f;if(a=a.next,a===null){if(a=i.shared.pending,a===null)break;f=a,a=f.next,f.next=null,i.lastBaseUpdate=f,i.shared.pending=null}}while(1);if(u===null&&(l=d),i.baseState=l,i.firstBaseUpdate=c,i.lastBaseUpdate=u,e=i.shared.interleaved,e!==null){i=e;do s|=i.lane,i=i.next;while(i!==e)}else o===null&&(i.shared.lanes=0);zs|=s,t.lanes=s,t.memoizedState=d}}function pk(t,e,n){if(t=e.effects,e.effects=null,t!==null)for(e=0;e<t.length;e++){var r=t[e],i=r.callback;if(i!==null){if(r.callback=null,r=n,typeof i!="function")throw Error(W(191,i));i.call(r)}}}var QO=new q9.Component().refs;function Qb(t,e,n,r){e=t.memoizedState,n=n(r,e),n=n==null?e:_e({},e,n),t.memoizedState=n,t.lanes===0&&(t.updateQueue.baseState=n)}var um={isMounted:function(t){return(t=t._reactInternals)?Rs(t)===t:!1},enqueueSetState:function(t,e,n){t=t._reactInternals;var r=Qt(),i=mo(t),o=vi(r,i);o.payload=e,n!=null&&(o.callback=n),e=ho(t,o,i),e!==null&&(gr(e,t,i,r),Uf(e,t,i))},enqueueReplaceState:function(t,e,n){t=t._reactInternals;var r=Qt(),i=mo(t),o=vi(r,i);o.tag=1,o.payload=e,n!=null&&(o.callback=n),e=ho(t,o,i),e!==null&&(gr(e,t,i,r),Uf(e,t,i))},enqueueForceUpdate:function(t,e){t=t._reactInternals;var n=Qt(),r=mo(t),i=vi(n,r);i.tag=2,e!=null&&(i.callback=e),e=ho(t,i,r),e!==null&&(gr(e,t,r,n),Uf(e,t,r))}};function mk(t,e,n,r,i,o,s){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(r,o,s):e.prototype&&e.prototype.isPureReactComponent?!du(n,r)||!du(i,o):!0}function _O(t,e,n){var r=!1,i=So,o=e.contextType;return typeof o=="object"&&o!==null?o=_n(o):(i=un(e)?Os:Gt.current,r=e.contextTypes,o=(r=r!=null)?il(t,i):So),e=new e(n,o),t.memoizedState=e.state!==null&&e.state!==void 0?e.state:null,e.updater=um,t.stateNode=e,e._reactInternals=t,r&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=i,t.__reactInternalMemoizedMaskedChildContext=o),e}function gk(t,e,n,r){t=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(n,r),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(n,r),e.state!==t&&um.enqueueReplaceState(e,e.state,null)}function _b(t,e,n,r){var i=t.stateNode;i.props=n,i.state=t.memoizedState,i.refs=QO,W1(t);var o=e.contextType;typeof o=="object"&&o!==null?i.context=_n(o):(o=un(e)?Os:Gt.current,i.context=il(t,o)),i.state=t.memoizedState,o=e.getDerivedStateFromProps,typeof o=="function"&&(Qb(t,e,o,n),i.state=t.memoizedState),typeof e.getDerivedStateFromProps=="function"||typeof i.getSnapshotBeforeUpdate=="function"||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(e=i.state,typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount(),e!==i.state&&um.enqueueReplaceState(i,i.state,null),Gh(t,n,i,r),i.state=t.memoizedState),typeof i.componentDidMount=="function"&&(t.flags|=4194308)}function _l(t,e,n){if(t=n.ref,t!==null&&typeof t!="function"&&typeof t!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(W(309));var r=n.stateNode}if(!r)throw Error(W(147,t));var i=r,o=""+t;return e!==null&&e.ref!==null&&typeof e.ref=="function"&&e.ref._stringRef===o?e.ref:(e=function(s){var a=i.refs;a===QO&&(a=i.refs={}),s===null?delete a[o]:a[o]=s},e._stringRef=o,e)}if(typeof t!="string")throw Error(W(284));if(!n._owner)throw Error(W(290,t))}return t}function jd(t,e){throw t=Object.prototype.toString.call(e),Error(W(31,t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t))}function bk(t){var e=t._init;return e(t._payload)}function $O(t){function e(g,b){if(t){var y=g.deletions;y===null?(g.deletions=[b],g.flags|=16):y.push(b)}}function n(g,b){if(!t)return null;for(;b!==null;)e(g,b),b=b.sibling;return null}function r(g,b){for(g=new Map;b!==null;)b.key!==null?g.set(b.key,b):g.set(b.index,b),b=b.sibling;return g}function i(g,b){return g=go(g,b),g.index=0,g.sibling=null,g}function o(g,b,y){return g.index=y,t?(y=g.alternate,y!==null?(y=y.index,y<b?(g.flags|=2,b):y):(g.flags|=2,b)):(g.flags|=1048576,b)}function s(g){return t&&g.alternate===null&&(g.flags|=2),g}function a(g,b,y,x){return b===null||b.tag!==6?(b=t0(y,g.mode,x),b.return=g,b):(b=i(b,y),b.return=g,b)}function l(g,b,y,x){var k=y.type;return k===ga?u(g,b,y.props.children,x,y.key):b!==null&&(b.elementType===k||typeof k=="object"&&k!==null&&k.$$typeof===Hi&&bk(k)===b.type)?(x=i(b,y.props),x.ref=_l(g,b,y),x.return=g,x):(x=eh(y.type,y.key,y.props,null,g.mode,x),x.ref=_l(g,b,y),x.return=g,x)}function c(g,b,y,x){return b===null||b.tag!==4||b.stateNode.containerInfo!==y.containerInfo||b.stateNode.implementation!==y.implementation?(b=n0(y,g.mode,x),b.return=g,b):(b=i(b,y.children||[]),b.return=g,b)}function u(g,b,y,x,k){return b===null||b.tag!==7?(b=gs(y,g.mode,x,k),b.return=g,b):(b=i(b,y),b.return=g,b)}function d(g,b,y){if(typeof b=="string"&&b!==""||typeof b=="number")return b=t0(""+b,g.mode,y),b.return=g,b;if(typeof b=="object"&&b!==null){switch(b.$$typeof){case Md:return y=eh(b.type,b.key,b.props,null,g.mode,y),y.ref=_l(g,null,b),y.return=g,y;case ma:return b=n0(b,g.mode,y),b.return=g,b;case Hi:var x=b._init;return d(g,x(b._payload),y)}if(mc(b)||Kl(b))return b=gs(b,g.mode,y,null),b.return=g,b;jd(g,b)}return null}function f(g,b,y,x){var k=b!==null?b.key:null;if(typeof y=="string"&&y!==""||typeof y=="number")return k!==null?null:a(g,b,""+y,x);if(typeof y=="object"&&y!==null){switch(y.$$typeof){case Md:return y.key===k?l(g,b,y,x):null;case ma:return y.key===k?c(g,b,y,x):null;case Hi:return k=y._init,f(g,b,k(y._payload),x)}if(mc(y)||Kl(y))return k!==null?null:u(g,b,y,x,null);jd(g,y)}return null}function h(g,b,y,x,k){if(typeof x=="string"&&x!==""||typeof x=="number")return g=g.get(y)||null,a(b,g,""+x,k);if(typeof x=="object"&&x!==null){switch(x.$$typeof){case Md:return g=g.get(x.key===null?y:x.key)||null,l(b,g,x,k);case ma:return g=g.get(x.key===null?y:x.key)||null,c(b,g,x,k);case Hi:var P=x._init;return h(g,b,y,P(x._payload),k)}if(mc(x)||Kl(x))return g=g.get(y)||null,u(b,g,x,k,null);jd(b,x)}return null}function p(g,b,y,x){for(var k=null,P=null,O=b,z=b=0,I=null;O!==null&&z<y.length;z++){O.index>z?(I=O,O=null):I=O.sibling;var E=f(g,O,y[z],x);if(E===null){O===null&&(O=I);break}t&&O&&E.alternate===null&&e(g,O),b=o(E,b,z),P===null?k=E:P.sibling=E,P=E,O=I}if(z===y.length)return n(g,O),je&&Yo(g,z),k;if(O===null){for(;z<y.length;z++)O=d(g,y[z],x),O!==null&&(b=o(O,b,z),P===null?k=O:P.sibling=O,P=O);return je&&Yo(g,z),k}for(O=r(g,O);z<y.length;z++)I=h(O,g,z,y[z],x),I!==null&&(t&&I.alternate!==null&&O.delete(I.key===null?z:I.key),b=o(I,b,z),P===null?k=I:P.sibling=I,P=I);return t&&O.forEach(function(X){return e(g,X)}),je&&Yo(g,z),k}function m(g,b,y,x){var k=Kl(y);if(typeof k!="function")throw Error(W(150));if(y=k.call(y),y==null)throw Error(W(151));for(var P=k=null,O=b,z=b=0,I=null,E=y.next();O!==null&&!E.done;z++,E=y.next()){O.index>z?(I=O,O=null):I=O.sibling;var X=f(g,O,E.value,x);if(X===null){O===null&&(O=I);break}t&&O&&X.alternate===null&&e(g,O),b=o(X,b,z),P===null?k=X:P.sibling=X,P=X,O=I}if(E.done)return n(g,O),je&&Yo(g,z),k;if(O===null){for(;!E.done;z++,E=y.next())E=d(g,E.value,x),E!==null&&(b=o(E,b,z),P===null?k=E:P.sibling=E,P=E);return je&&Yo(g,z),k}for(O=r(g,O);!E.done;z++,E=y.next())E=h(O,g,z,E.value,x),E!==null&&(t&&E.alternate!==null&&O.delete(E.key===null?z:E.key),b=o(E,b,z),P===null?k=E:P.sibling=E,P=E);return t&&O.forEach(function(Y){return e(g,Y)}),je&&Yo(g,z),k}function v(g,b,y,x){if(typeof y=="object"&&y!==null&&y.type===ga&&y.key===null&&(y=y.props.children),typeof y=="object"&&y!==null){switch(y.$$typeof){case Md:e:{for(var k=y.key,P=b;P!==null;){if(P.key===k){if(k=y.type,k===ga){if(P.tag===7){n(g,P.sibling),b=i(P,y.props.children),b.return=g,g=b;break e}}else if(P.elementType===k||typeof k=="object"&&k!==null&&k.$$typeof===Hi&&bk(k)===P.type){n(g,P.sibling),b=i(P,y.props),b.ref=_l(g,P,y),b.return=g,g=b;break e}n(g,P);break}else e(g,P);P=P.sibling}y.type===ga?(b=gs(y.props.children,g.mode,x,y.key),b.return=g,g=b):(x=eh(y.type,y.key,y.props,null,g.mode,x),x.ref=_l(g,b,y),x.return=g,g=x)}return s(g);case ma:e:{for(P=y.key;b!==null;){if(b.key===P)if(b.tag===4&&b.stateNode.containerInfo===y.containerInfo&&b.stateNode.implementation===y.implementation){n(g,b.sibling),b=i(b,y.children||[]),b.return=g,g=b;break e}else{n(g,b);break}else e(g,b);b=b.sibling}b=n0(y,g.mode,x),b.return=g,g=b}return s(g);case Hi:return P=y._init,v(g,b,P(y._payload),x)}if(mc(y))return p(g,b,y,x);if(Kl(y))return m(g,b,y,x);jd(g,y)}return typeof y=="string"&&y!==""||typeof y=="number"?(y=""+y,b!==null&&b.tag===6?(n(g,b.sibling),b=i(b,y),b.return=g,g=b):(n(g,b),b=t0(y,g.mode,x),b.return=g,g=b),s(g)):n(g,b)}return v}var sl=$O(!0),eC=$O(!1),od={},jr=Eo(od),mu=Eo(od),gu=Eo(od);function ss(t){if(t===od)throw Error(W(174));return t}function R1(t,e){switch(Me(gu,e),Me(mu,t),Me(jr,od),t=e.nodeType,t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:Eb(null,"");break;default:t=t===8?e.parentNode:e,e=t.namespaceURI||null,t=t.tagName,e=Eb(e,t)}We(jr),Me(jr,e)}function al(){We(jr),We(mu),We(gu)}function tC(t){ss(gu.current);var e=ss(jr.current),n=Eb(e,t.type);e!==n&&(Me(mu,t),Me(jr,n))}function F1(t){mu.current===t&&(We(jr),We(mu))}var qe=Eo(0);function jh(t){for(var e=t;e!==null;){if(e.tag===13){var n=e.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if((e.flags&128)!==0)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var qg=[];function H1(){for(var t=0;t<qg.length;t++)qg[t]._workInProgressVersionPrimary=null;qg.length=0}var qf=Ei.ReactCurrentDispatcher,Jg=Ei.ReactCurrentBatchConfig,Ts=0,Qe=null,ft=null,bt=null,Bh=!1,Mc=!1,bu=0,yW=0;function Lt(){throw Error(W(321))}function D1(t,e){if(e===null)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!xr(t[n],e[n]))return!1;return!0}function G1(t,e,n,r,i,o){if(Ts=o,Qe=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,qf.current=t===null||t.memoizedState===null?wW:PW,t=n(r,i),Mc){o=0;do{if(Mc=!1,bu=0,25<=o)throw Error(W(301));o+=1,bt=ft=null,e.updateQueue=null,qf.current=OW,t=n(r,i)}while(Mc)}if(qf.current=Yh,e=ft!==null&&ft.next!==null,Ts=0,bt=ft=Qe=null,Bh=!1,e)throw Error(W(300));return t}function j1(){var t=bu!==0;return bu=0,t}function Nr(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return bt===null?Qe.memoizedState=bt=t:bt=bt.next=t,bt}function $n(){if(ft===null){var t=Qe.alternate;t=t!==null?t.memoizedState:null}else t=ft.next;var e=bt===null?Qe.memoizedState:bt.next;if(e!==null)bt=e,ft=t;else{if(t===null)throw Error(W(310));ft=t,t={memoizedState:ft.memoizedState,baseState:ft.baseState,baseQueue:ft.baseQueue,queue:ft.queue,next:null},bt===null?Qe.memoizedState=bt=t:bt=bt.next=t}return bt}function vu(t,e){return typeof e=="function"?e(t):e}function Qg(t){var e=$n(),n=e.queue;if(n===null)throw Error(W(311));n.lastRenderedReducer=t;var r=ft,i=r.baseQueue,o=n.pending;if(o!==null){if(i!==null){var s=i.next;i.next=o.next,o.next=s}r.baseQueue=i=o,n.pending=null}if(i!==null){o=i.next,r=r.baseState;var a=s=null,l=null,c=o;do{var u=c.lane;if((Ts&u)===u)l!==null&&(l=l.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:t(r,c.action);else{var d={lane:u,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};l===null?(a=l=d,s=r):l=l.next=d,Qe.lanes|=u,zs|=u}c=c.next}while(c!==null&&c!==o);l===null?s=r:l.next=a,xr(r,e.memoizedState)||(an=!0),e.memoizedState=r,e.baseState=s,e.baseQueue=l,n.lastRenderedState=r}if(t=n.interleaved,t!==null){i=t;do o=i.lane,Qe.lanes|=o,zs|=o,i=i.next;while(i!==t)}else i===null&&(n.lanes=0);return[e.memoizedState,n.dispatch]}function _g(t){var e=$n(),n=e.queue;if(n===null)throw Error(W(311));n.lastRenderedReducer=t;var r=n.dispatch,i=n.pending,o=e.memoizedState;if(i!==null){n.pending=null;var s=i=i.next;do o=t(o,s.action),s=s.next;while(s!==i);xr(o,e.memoizedState)||(an=!0),e.memoizedState=o,e.baseQueue===null&&(e.baseState=o),n.lastRenderedState=o}return[o,r]}function nC(){}function rC(t,e){var n=Qe,r=$n(),i=e(),o=!xr(r.memoizedState,i);if(o&&(r.memoizedState=i,an=!0),r=r.queue,B1(sC.bind(null,n,r,t),[t]),r.getSnapshot!==e||o||bt!==null&&bt.memoizedState.tag&1){if(n.flags|=2048,yu(9,oC.bind(null,n,r,i,e),void 0,null),vt===null)throw Error(W(349));(Ts&30)!==0||iC(n,e,i)}return i}function iC(t,e,n){t.flags|=16384,t={getSnapshot:e,value:n},e=Qe.updateQueue,e===null?(e={lastEffect:null,stores:null},Qe.updateQueue=e,e.stores=[t]):(n=e.stores,n===null?e.stores=[t]:n.push(t))}function oC(t,e,n,r){e.value=n,e.getSnapshot=r,aC(e)&&lC(t)}function sC(t,e,n){return n(function(){aC(e)&&lC(t)})}function aC(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!xr(t,n)}catch{return!0}}function lC(t){var e=wi(t,1);e!==null&&gr(e,t,1,-1)}function vk(t){var e=Nr();return typeof t=="function"&&(t=t()),e.memoizedState=e.baseState=t,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:vu,lastRenderedState:t},e.queue=t,t=t.dispatch=kW.bind(null,Qe,t),[e.memoizedState,t]}function yu(t,e,n,r){return t={tag:t,create:e,destroy:n,deps:r,next:null},e=Qe.updateQueue,e===null?(e={lastEffect:null,stores:null},Qe.updateQueue=e,e.lastEffect=t.next=t):(n=e.lastEffect,n===null?e.lastEffect=t.next=t:(r=n.next,n.next=t,t.next=r,e.lastEffect=t)),t}function cC(){return $n().memoizedState}function Jf(t,e,n,r){var i=Nr();Qe.flags|=t,i.memoizedState=yu(1|e,n,void 0,r===void 0?null:r)}function dm(t,e,n,r){var i=$n();r=r===void 0?null:r;var o=void 0;if(ft!==null){var s=ft.memoizedState;if(o=s.destroy,r!==null&&D1(r,s.deps)){i.memoizedState=yu(e,n,o,r);return}}Qe.flags|=t,i.memoizedState=yu(1|e,n,o,r)}function yk(t,e){return Jf(8390656,8,t,e)}function B1(t,e){return dm(2048,8,t,e)}function uC(t,e){return dm(4,2,t,e)}function dC(t,e){return dm(4,4,t,e)}function fC(t,e){if(typeof e=="function")return t=t(),e(t),function(){e(null)};if(e!=null)return t=t(),e.current=t,function(){e.current=null}}function hC(t,e,n){return n=n!=null?n.concat([t]):null,dm(4,4,fC.bind(null,e,t),n)}function Y1(){}function pC(t,e){var n=$n();e=e===void 0?null:e;var r=n.memoizedState;return r!==null&&e!==null&&D1(e,r[1])?r[0]:(n.memoizedState=[t,e],t)}function mC(t,e){var n=$n();e=e===void 0?null:e;var r=n.memoizedState;return r!==null&&e!==null&&D1(e,r[1])?r[0]:(t=t(),n.memoizedState=[t,e],t)}function gC(t,e,n){return(Ts&21)===0?(t.baseState&&(t.baseState=!1,an=!0),t.memoizedState=n):(xr(n,e)||(n=yO(),Qe.lanes|=n,zs|=n,t.baseState=!0),e)}function xW(t,e){var n=Oe;Oe=n!==0&&4>n?n:4,t(!0);var r=Jg.transition;Jg.transition={};try{t(!1),e()}finally{Oe=n,Jg.transition=r}}function bC(){return $n().memoizedState}function SW(t,e,n){var r=mo(t);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},vC(t))yC(e,n);else if(n=qO(t,e,n,r),n!==null){var i=Qt();gr(n,t,r,i),xC(n,e,r)}}function kW(t,e,n){var r=mo(t),i={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(vC(t))yC(e,i);else{var o=t.alternate;if(t.lanes===0&&(o===null||o.lanes===0)&&(o=e.lastRenderedReducer,o!==null))try{var s=e.lastRenderedState,a=o(s,n);if(i.hasEagerState=!0,i.eagerState=a,xr(a,s)){var l=e.interleaved;l===null?(i.next=i,X1(e)):(i.next=l.next,l.next=i),e.interleaved=i;return}}catch{}finally{}n=qO(t,e,i,r),n!==null&&(i=Qt(),gr(n,t,r,i),xC(n,e,r))}}function vC(t){var e=t.alternate;return t===Qe||e!==null&&e===Qe}function yC(t,e){Mc=Bh=!0;var n=t.pending;n===null?e.next=e:(e.next=n.next,n.next=e),t.pending=e}function xC(t,e,n){if((n&4194240)!==0){var r=e.lanes;r&=t.pendingLanes,n|=r,e.lanes=n,w1(t,n)}}var Yh={readContext:_n,useCallback:Lt,useContext:Lt,useEffect:Lt,useImperativeHandle:Lt,useInsertionEffect:Lt,useLayoutEffect:Lt,useMemo:Lt,useReducer:Lt,useRef:Lt,useState:Lt,useDebugValue:Lt,useDeferredValue:Lt,useTransition:Lt,useMutableSource:Lt,useSyncExternalStore:Lt,useId:Lt,unstable_isNewReconciler:!1},wW={readContext:_n,useCallback:function(t,e){return Nr().memoizedState=[t,e===void 0?null:e],t},useContext:_n,useEffect:yk,useImperativeHandle:function(t,e,n){return n=n!=null?n.concat([t]):null,Jf(4194308,4,fC.bind(null,e,t),n)},useLayoutEffect:function(t,e){return Jf(4194308,4,t,e)},useInsertionEffect:function(t,e){return Jf(4,2,t,e)},useMemo:function(t,e){var n=Nr();return e=e===void 0?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var r=Nr();return e=n!==void 0?n(e):e,r.memoizedState=r.baseState=e,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:e},r.queue=t,t=t.dispatch=SW.bind(null,Qe,t),[r.memoizedState,t]},useRef:function(t){var e=Nr();return t={current:t},e.memoizedState=t},useState:vk,useDebugValue:Y1,useDeferredValue:function(t){return Nr().memoizedState=t},useTransition:function(){var t=vk(!1),e=t[0];return t=xW.bind(null,t[1]),Nr().memoizedState=t,[e,t]},useMutableSource:function(){},useSyncExternalStore:function(t,e,n){var r=Qe,i=Nr();if(je){if(n===void 0)throw Error(W(407));n=n()}else{if(n=e(),vt===null)throw Error(W(349));(Ts&30)!==0||iC(r,e,n)}i.memoizedState=n;var o={value:n,getSnapshot:e};return i.queue=o,yk(sC.bind(null,r,o,t),[t]),r.flags|=2048,yu(9,oC.bind(null,r,o,n,e),void 0,null),n},useId:function(){var t=Nr(),e=vt.identifierPrefix;if(je){var n=gi,r=mi;n=(r&~(1<<32-mr(r)-1)).toString(32)+n,e=":"+e+"R"+n,n=bu++,0<n&&(e+="H"+n.toString(32)),e+=":"}else n=yW++,e=":"+e+"r"+n.toString(32)+":";return t.memoizedState=e},unstable_isNewReconciler:!1},PW={readContext:_n,useCallback:pC,useContext:_n,useEffect:B1,useImperativeHandle:hC,useInsertionEffect:uC,useLayoutEffect:dC,useMemo:mC,useReducer:Qg,useRef:cC,useState:function(){return Qg(vu)},useDebugValue:Y1,useDeferredValue:function(t){var e=$n();return gC(e,ft.memoizedState,t)},useTransition:function(){var t=Qg(vu)[0],e=$n().memoizedState;return[t,e]},useMutableSource:nC,useSyncExternalStore:rC,useId:bC,unstable_isNewReconciler:!1},OW={readContext:_n,useCallback:pC,useContext:_n,useEffect:B1,useImperativeHandle:hC,useInsertionEffect:uC,useLayoutEffect:dC,useMemo:mC,useReducer:_g,useRef:cC,useState:function(){return _g(vu)},useDebugValue:Y1,useDeferredValue:function(t){var e=$n();return ft===null?e.memoizedState=t:gC(e,ft.memoizedState,t)},useTransition:function(){var t=_g(vu)[0],e=$n().memoizedState;return[t,e]},useMutableSource:nC,useSyncExternalStore:rC,useId:bC,unstable_isNewReconciler:!1};function ll(t,e){try{var n="",r=e;do n+=$Z(r),r=r.return;while(r);var i=n}catch(o){i=`
Error generating stack: `+o.message+`
`+o.stack}return{value:t,source:e,stack:i,digest:null}}function $g(t,e,n){return{value:t,source:null,stack:n!=null?n:null,digest:e!=null?e:null}}function $b(t,e){try{console.error(e.value)}catch(n){setTimeout(function(){throw n})}}var CW=typeof WeakMap=="function"?WeakMap:Map;function SC(t,e,n){n=vi(-1,n),n.tag=3,n.payload={element:null};var r=e.value;return n.callback=function(){Uh||(Uh=!0,cv=r),$b(t,e)},n}function kC(t,e,n){n=vi(-1,n),n.tag=3;var r=t.type.getDerivedStateFromError;if(typeof r=="function"){var i=e.value;n.payload=function(){return r(i)},n.callback=function(){$b(t,e)}}var o=t.stateNode;return o!==null&&typeof o.componentDidCatch=="function"&&(n.callback=function(){$b(t,e),typeof r!="function"&&(po===null?po=new Set([this]):po.add(this));var s=e.stack;this.componentDidCatch(e.value,{componentStack:s!==null?s:""})}),n}function xk(t,e,n){var r=t.pingCache;if(r===null){r=t.pingCache=new CW;var i=new Set;r.set(e,i)}else i=r.get(e),i===void 0&&(i=new Set,r.set(e,i));i.has(n)||(i.add(n),t=FW.bind(null,t,e,n),e.then(t,t))}function Sk(t){do{var e;if((e=t.tag===13)&&(e=t.memoizedState,e=e!==null?e.dehydrated!==null:!0),e)return t;t=t.return}while(t!==null);return null}function kk(t,e,n,r,i){return(t.mode&1)===0?(t===e?t.flags|=65536:(t.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(e=vi(-1,1),e.tag=2,ho(n,e,1))),n.lanes|=1),t):(t.flags|=65536,t.lanes=i,t)}var TW=Ei.ReactCurrentOwner,an=!1;function Yt(t,e,n,r){e.child=t===null?eC(e,null,n,r):sl(e,t.child,n,r)}function wk(t,e,n,r,i){n=n.render;var o=e.ref;return Wa(e,i),r=G1(t,e,n,r,o,i),n=j1(),t!==null&&!an?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~i,Pi(t,e,i)):(je&&n&&N1(e),e.flags|=1,Yt(t,e,r,i),e.child)}function Pk(t,e,n,r,i){if(t===null){var o=n.type;return typeof o=="function"&&!ex(o)&&o.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(e.tag=15,e.type=o,wC(t,e,o,r,i)):(t=eh(n.type,null,r,e,e.mode,i),t.ref=e.ref,t.return=e,e.child=t)}if(o=t.child,(t.lanes&i)===0){var s=o.memoizedProps;if(n=n.compare,n=n!==null?n:du,n(s,r)&&t.ref===e.ref)return Pi(t,e,i)}return e.flags|=1,t=go(o,r),t.ref=e.ref,t.return=e,e.child=t}function wC(t,e,n,r,i){if(t!==null){var o=t.memoizedProps;if(du(o,r)&&t.ref===e.ref)if(an=!1,e.pendingProps=r=o,(t.lanes&i)!==0)(t.flags&131072)!==0&&(an=!0);else return e.lanes=t.lanes,Pi(t,e,i)}return ev(t,e,n,r,i)}function PC(t,e,n){var r=e.pendingProps,i=r.children,o=t!==null?t.memoizedState:null;if(r.mode==="hidden")if((e.mode&1)===0)e.memoizedState={baseLanes:0,cachePool:null,transitions:null},Me(Ca,Sn),Sn|=n;else{if((n&1073741824)===0)return t=o!==null?o.baseLanes|n:n,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:t,cachePool:null,transitions:null},e.updateQueue=null,Me(Ca,Sn),Sn|=t,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=o!==null?o.baseLanes:n,Me(Ca,Sn),Sn|=r}else o!==null?(r=o.baseLanes|n,e.memoizedState=null):r=n,Me(Ca,Sn),Sn|=r;return Yt(t,e,i,n),e.child}function OC(t,e){var n=e.ref;(t===null&&n!==null||t!==null&&t.ref!==n)&&(e.flags|=512,e.flags|=2097152)}function ev(t,e,n,r,i){var o=un(n)?Os:Gt.current;return o=il(e,o),Wa(e,i),n=G1(t,e,n,r,o,i),r=j1(),t!==null&&!an?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~i,Pi(t,e,i)):(je&&r&&N1(e),e.flags|=1,Yt(t,e,n,i),e.child)}function Ok(t,e,n,r,i){if(un(n)){var o=!0;Wh(e)}else o=!1;if(Wa(e,i),e.stateNode===null)Qf(t,e),_O(e,n,r),_b(e,n,r,i),r=!0;else if(t===null){var s=e.stateNode,a=e.memoizedProps;s.props=a;var l=s.context,c=n.contextType;typeof c=="object"&&c!==null?c=_n(c):(c=un(n)?Os:Gt.current,c=il(e,c));var u=n.getDerivedStateFromProps,d=typeof u=="function"||typeof s.getSnapshotBeforeUpdate=="function";d||typeof s.UNSAFE_componentWillReceiveProps!="function"&&typeof s.componentWillReceiveProps!="function"||(a!==r||l!==c)&&gk(e,s,r,c),Di=!1;var f=e.memoizedState;s.state=f,Gh(e,r,s,i),l=e.memoizedState,a!==r||f!==l||cn.current||Di?(typeof u=="function"&&(Qb(e,n,u,r),l=e.memoizedState),(a=Di||mk(e,n,a,r,f,l,c))?(d||typeof s.UNSAFE_componentWillMount!="function"&&typeof s.componentWillMount!="function"||(typeof s.componentWillMount=="function"&&s.componentWillMount(),typeof s.UNSAFE_componentWillMount=="function"&&s.UNSAFE_componentWillMount()),typeof s.componentDidMount=="function"&&(e.flags|=4194308)):(typeof s.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=r,e.memoizedState=l),s.props=r,s.state=l,s.context=c,r=a):(typeof s.componentDidMount=="function"&&(e.flags|=4194308),r=!1)}else{s=e.stateNode,JO(t,e),a=e.memoizedProps,c=e.type===e.elementType?a:dr(e.type,a),s.props=c,d=e.pendingProps,f=s.context,l=n.contextType,typeof l=="object"&&l!==null?l=_n(l):(l=un(n)?Os:Gt.current,l=il(e,l));var h=n.getDerivedStateFromProps;(u=typeof h=="function"||typeof s.getSnapshotBeforeUpdate=="function")||typeof s.UNSAFE_componentWillReceiveProps!="function"&&typeof s.componentWillReceiveProps!="function"||(a!==d||f!==l)&&gk(e,s,r,l),Di=!1,f=e.memoizedState,s.state=f,Gh(e,r,s,i);var p=e.memoizedState;a!==d||f!==p||cn.current||Di?(typeof h=="function"&&(Qb(e,n,h,r),p=e.memoizedState),(c=Di||mk(e,n,c,r,f,p,l)||!1)?(u||typeof s.UNSAFE_componentWillUpdate!="function"&&typeof s.componentWillUpdate!="function"||(typeof s.componentWillUpdate=="function"&&s.componentWillUpdate(r,p,l),typeof s.UNSAFE_componentWillUpdate=="function"&&s.UNSAFE_componentWillUpdate(r,p,l)),typeof s.componentDidUpdate=="function"&&(e.flags|=4),typeof s.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof s.componentDidUpdate!="function"||a===t.memoizedProps&&f===t.memoizedState||(e.flags|=4),typeof s.getSnapshotBeforeUpdate!="function"||a===t.memoizedProps&&f===t.memoizedState||(e.flags|=1024),e.memoizedProps=r,e.memoizedState=p),s.props=r,s.state=p,s.context=l,r=c):(typeof s.componentDidUpdate!="function"||a===t.memoizedProps&&f===t.memoizedState||(e.flags|=4),typeof s.getSnapshotBeforeUpdate!="function"||a===t.memoizedProps&&f===t.memoizedState||(e.flags|=1024),r=!1)}return tv(t,e,n,r,o,i)}function tv(t,e,n,r,i,o){OC(t,e);var s=(e.flags&128)!==0;if(!r&&!s)return i&&uk(e,n,!1),Pi(t,e,o);r=e.stateNode,TW.current=e;var a=s&&typeof n.getDerivedStateFromError!="function"?null:r.render();return e.flags|=1,t!==null&&s?(e.child=sl(e,t.child,null,o),e.child=sl(e,null,a,o)):Yt(t,e,a,o),e.memoizedState=r.state,i&&uk(e,n,!0),e.child}function CC(t){var e=t.stateNode;e.pendingContext?ck(t,e.pendingContext,e.pendingContext!==e.context):e.context&&ck(t,e.context,!1),R1(t,e.containerInfo)}function Ck(t,e,n,r,i){return ol(),M1(i),e.flags|=256,Yt(t,e,n,r),e.child}var nv={dehydrated:null,treeContext:null,retryLane:0};function rv(t){return{baseLanes:t,cachePool:null,transitions:null}}function TC(t,e,n){var r=e.pendingProps,i=qe.current,o=!1,s=(e.flags&128)!==0,a;if((a=s)||(a=t!==null&&t.memoizedState===null?!1:(i&2)!==0),a?(o=!0,e.flags&=-129):(t===null||t.memoizedState!==null)&&(i|=1),Me(qe,i&1),t===null)return qb(e),t=e.memoizedState,t!==null&&(t=t.dehydrated,t!==null)?((e.mode&1)===0?e.lanes=1:t.data==="$!"?e.lanes=8:e.lanes=1073741824,null):(s=r.children,t=r.fallback,o?(r=e.mode,o=e.child,s={mode:"hidden",children:s},(r&1)===0&&o!==null?(o.childLanes=0,o.pendingProps=s):o=pm(s,r,0,null),t=gs(t,r,n,null),o.return=e,t.return=e,o.sibling=t,e.child=o,e.child.memoizedState=rv(n),e.memoizedState=nv,t):K1(e,s));if(i=t.memoizedState,i!==null&&(a=i.dehydrated,a!==null))return zW(t,e,s,r,a,i,n);if(o){o=r.fallback,s=e.mode,i=t.child,a=i.sibling;var l={mode:"hidden",children:r.children};return(s&1)===0&&e.child!==i?(r=e.child,r.childLanes=0,r.pendingProps=l,e.deletions=null):(r=go(i,l),r.subtreeFlags=i.subtreeFlags&14680064),a!==null?o=go(a,o):(o=gs(o,s,n,null),o.flags|=2),o.return=e,r.return=e,r.sibling=o,e.child=r,r=o,o=e.child,s=t.child.memoizedState,s=s===null?rv(n):{baseLanes:s.baseLanes|n,cachePool:null,transitions:s.transitions},o.memoizedState=s,o.childLanes=t.childLanes&~n,e.memoizedState=nv,r}return o=t.child,t=o.sibling,r=go(o,{mode:"visible",children:r.children}),(e.mode&1)===0&&(r.lanes=n),r.return=e,r.sibling=null,t!==null&&(n=e.deletions,n===null?(e.deletions=[t],e.flags|=16):n.push(t)),e.child=r,e.memoizedState=null,r}function K1(t,e){return e=pm({mode:"visible",children:e},t.mode,0,null),e.return=t,t.child=e}function Bd(t,e,n,r){return r!==null&&M1(r),sl(e,t.child,null,n),t=K1(e,e.pendingProps.children),t.flags|=2,e.memoizedState=null,t}function zW(t,e,n,r,i,o,s){if(n)return e.flags&256?(e.flags&=-257,r=$g(Error(W(422))),Bd(t,e,s,r)):e.memoizedState!==null?(e.child=t.child,e.flags|=128,null):(o=r.fallback,i=e.mode,r=pm({mode:"visible",children:r.children},i,0,null),o=gs(o,i,s,null),o.flags|=2,r.return=e,o.return=e,r.sibling=o,e.child=r,(e.mode&1)!==0&&sl(e,t.child,null,s),e.child.memoizedState=rv(s),e.memoizedState=nv,o);if((e.mode&1)===0)return Bd(t,e,s,null);if(i.data==="$!"){if(r=i.nextSibling&&i.nextSibling.dataset,r)var a=r.dgst;return r=a,o=Error(W(419)),r=$g(o,r,void 0),Bd(t,e,s,r)}if(a=(s&t.childLanes)!==0,an||a){if(r=vt,r!==null){switch(s&-s){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}i=(i&(r.suspendedLanes|s))!==0?0:i,i!==0&&i!==o.retryLane&&(o.retryLane=i,wi(t,i),gr(r,t,i,-1))}return $1(),r=$g(Error(W(421))),Bd(t,e,s,r)}return i.data==="$?"?(e.flags|=128,e.child=t.child,e=HW.bind(null,t),i._reactRetry=e,null):(t=o.treeContext,On=fo(i.nextSibling),Tn=e,je=!0,hr=null,t!==null&&(Gn[jn++]=mi,Gn[jn++]=gi,Gn[jn++]=Cs,mi=t.id,gi=t.overflow,Cs=e),e=K1(e,r.children),e.flags|=4096,e)}function Tk(t,e,n){t.lanes|=e;var r=t.alternate;r!==null&&(r.lanes|=e),Jb(t.return,e,n)}function e0(t,e,n,r,i){var o=t.memoizedState;o===null?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:i}:(o.isBackwards=e,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=i)}function zC(t,e,n){var r=e.pendingProps,i=r.revealOrder,o=r.tail;if(Yt(t,e,r.children,n),r=qe.current,(r&2)!==0)r=r&1|2,e.flags|=128;else{if(t!==null&&(t.flags&128)!==0)e:for(t=e.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&Tk(t,n,e);else if(t.tag===19)Tk(t,n,e);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}r&=1}if(Me(qe,r),(e.mode&1)===0)e.memoizedState=null;else switch(i){case"forwards":for(n=e.child,i=null;n!==null;)t=n.alternate,t!==null&&jh(t)===null&&(i=n),n=n.sibling;n=i,n===null?(i=e.child,e.child=null):(i=n.sibling,n.sibling=null),e0(e,!1,i,n,o);break;case"backwards":for(n=null,i=e.child,e.child=null;i!==null;){if(t=i.alternate,t!==null&&jh(t)===null){e.child=i;break}t=i.sibling,i.sibling=n,n=i,i=t}e0(e,!0,n,null,o);break;case"together":e0(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function Qf(t,e){(e.mode&1)===0&&t!==null&&(t.alternate=null,e.alternate=null,e.flags|=2)}function Pi(t,e,n){if(t!==null&&(e.dependencies=t.dependencies),zs|=e.lanes,(n&e.childLanes)===0)return null;if(t!==null&&e.child!==t.child)throw Error(W(153));if(e.child!==null){for(t=e.child,n=go(t,t.pendingProps),e.child=n,n.return=e;t.sibling!==null;)t=t.sibling,n=n.sibling=go(t,t.pendingProps),n.return=e;n.sibling=null}return e.child}function VW(t,e,n){switch(e.tag){case 3:CC(e),ol();break;case 5:tC(e);break;case 1:un(e.type)&&Wh(e);break;case 4:R1(e,e.stateNode.containerInfo);break;case 10:var r=e.type._context,i=e.memoizedProps.value;Me(Hh,r._currentValue),r._currentValue=i;break;case 13:if(r=e.memoizedState,r!==null)return r.dehydrated!==null?(Me(qe,qe.current&1),e.flags|=128,null):(n&e.child.childLanes)!==0?TC(t,e,n):(Me(qe,qe.current&1),t=Pi(t,e,n),t!==null?t.sibling:null);Me(qe,qe.current&1);break;case 19:if(r=(n&e.childLanes)!==0,(t.flags&128)!==0){if(r)return zC(t,e,n);e.flags|=128}if(i=e.memoizedState,i!==null&&(i.rendering=null,i.tail=null,i.lastEffect=null),Me(qe,qe.current),r)break;return null;case 22:case 23:return e.lanes=0,PC(t,e,n)}return Pi(t,e,n)}var VC,iv,EC,NC;VC=function(t,e){for(var n=e.child;n!==null;){if(n.tag===5||n.tag===6)t.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break;for(;n.sibling===null;){if(n.return===null||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}};iv=function(){};EC=function(t,e,n,r){var i=t.memoizedProps;if(i!==r){t=e.stateNode,ss(jr.current);var o=null;switch(n){case"input":i=Cb(t,i),r=Cb(t,r),o=[];break;case"select":i=_e({},i,{value:void 0}),r=_e({},r,{value:void 0}),o=[];break;case"textarea":i=Vb(t,i),r=Vb(t,r),o=[];break;default:typeof i.onClick!="function"&&typeof r.onClick=="function"&&(t.onclick=Zh)}Nb(n,r);var s;n=null;for(c in i)if(!r.hasOwnProperty(c)&&i.hasOwnProperty(c)&&i[c]!=null)if(c==="style"){var a=i[c];for(s in a)a.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else c!=="dangerouslySetInnerHTML"&&c!=="children"&&c!=="suppressContentEditableWarning"&&c!=="suppressHydrationWarning"&&c!=="autoFocus"&&(iu.hasOwnProperty(c)?o||(o=[]):(o=o||[]).push(c,null));for(c in r){var l=r[c];if(a=i!=null?i[c]:void 0,r.hasOwnProperty(c)&&l!==a&&(l!=null||a!=null))if(c==="style")if(a){for(s in a)!a.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in l)l.hasOwnProperty(s)&&a[s]!==l[s]&&(n||(n={}),n[s]=l[s])}else n||(o||(o=[]),o.push(c,n)),n=l;else c==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,a=a?a.__html:void 0,l!=null&&a!==l&&(o=o||[]).push(c,l)):c==="children"?typeof l!="string"&&typeof l!="number"||(o=o||[]).push(c,""+l):c!=="suppressContentEditableWarning"&&c!=="suppressHydrationWarning"&&(iu.hasOwnProperty(c)?(l!=null&&c==="onScroll"&&Le("scroll",t),o||a===l||(o=[])):(o=o||[]).push(c,l))}n&&(o=o||[]).push("style",n);var c=o;(e.updateQueue=c)&&(e.flags|=4)}};NC=function(t,e,n,r){n!==r&&(e.flags|=4)};function $l(t,e){if(!je)switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;e!==null;)e.alternate!==null&&(n=e),e=e.sibling;n===null?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?e||t.tail===null?t.tail=null:t.tail.sibling=null:r.sibling=null}}function Zt(t){var e=t.alternate!==null&&t.alternate.child===t.child,n=0,r=0;if(e)for(var i=t.child;i!==null;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags&14680064,r|=i.flags&14680064,i.return=t,i=i.sibling;else for(i=t.child;i!==null;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags,r|=i.flags,i.return=t,i=i.sibling;return t.subtreeFlags|=r,t.childLanes=n,e}function EW(t,e,n){var r=e.pendingProps;switch(I1(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Zt(e),null;case 1:return un(e.type)&&Xh(),Zt(e),null;case 3:return r=e.stateNode,al(),We(cn),We(Gt),H1(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(t===null||t.child===null)&&(Gd(e)?e.flags|=4:t===null||t.memoizedState.isDehydrated&&(e.flags&256)===0||(e.flags|=1024,hr!==null&&(fv(hr),hr=null))),iv(t,e),Zt(e),null;case 5:F1(e);var i=ss(gu.current);if(n=e.type,t!==null&&e.stateNode!=null)EC(t,e,n,r,i),t.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!r){if(e.stateNode===null)throw Error(W(166));return Zt(e),null}if(t=ss(jr.current),Gd(e)){r=e.stateNode,n=e.type;var o=e.memoizedProps;switch(r[Zr]=e,r[pu]=o,t=(e.mode&1)!==0,n){case"dialog":Le("cancel",r),Le("close",r);break;case"iframe":case"object":case"embed":Le("load",r);break;case"video":case"audio":for(i=0;i<bc.length;i++)Le(bc[i],r);break;case"source":Le("error",r);break;case"img":case"image":case"link":Le("error",r),Le("load",r);break;case"details":Le("toggle",r);break;case"input":Z2(r,o),Le("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Le("invalid",r);break;case"textarea":W2(r,o),Le("invalid",r)}Nb(n,o),i=null;for(var s in o)if(o.hasOwnProperty(s)){var a=o[s];s==="children"?typeof a=="string"?r.textContent!==a&&(o.suppressHydrationWarning!==!0&&Dd(r.textContent,a,t),i=["children",a]):typeof a=="number"&&r.textContent!==""+a&&(o.suppressHydrationWarning!==!0&&Dd(r.textContent,a,t),i=["children",""+a]):iu.hasOwnProperty(s)&&a!=null&&s==="onScroll"&&Le("scroll",r)}switch(n){case"input":Ad(r),X2(r,o,!0);break;case"textarea":Ad(r),R2(r);break;case"select":case"option":break;default:typeof o.onClick=="function"&&(r.onclick=Zh)}r=i,e.updateQueue=r,r!==null&&(e.flags|=4)}else{s=i.nodeType===9?i:i.ownerDocument,t==="http://www.w3.org/1999/xhtml"&&(t=iO(n)),t==="http://www.w3.org/1999/xhtml"?n==="script"?(t=s.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):typeof r.is=="string"?t=s.createElement(n,{is:r.is}):(t=s.createElement(n),n==="select"&&(s=t,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):t=s.createElementNS(t,n),t[Zr]=e,t[pu]=r,VC(t,e,!1,!1),e.stateNode=t;e:{switch(s=Ib(n,r),n){case"dialog":Le("cancel",t),Le("close",t),i=r;break;case"iframe":case"object":case"embed":Le("load",t),i=r;break;case"video":case"audio":for(i=0;i<bc.length;i++)Le(bc[i],t);i=r;break;case"source":Le("error",t),i=r;break;case"img":case"image":case"link":Le("error",t),Le("load",t),i=r;break;case"details":Le("toggle",t),i=r;break;case"input":Z2(t,r),i=Cb(t,r),Le("invalid",t);break;case"option":i=r;break;case"select":t._wrapperState={wasMultiple:!!r.multiple},i=_e({},r,{value:void 0}),Le("invalid",t);break;case"textarea":W2(t,r),i=Vb(t,r),Le("invalid",t);break;default:i=r}Nb(n,i),a=i;for(o in a)if(a.hasOwnProperty(o)){var l=a[o];o==="style"?aO(t,l):o==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,l!=null&&oO(t,l)):o==="children"?typeof l=="string"?(n!=="textarea"||l!=="")&&ou(t,l):typeof l=="number"&&ou(t,""+l):o!=="suppressContentEditableWarning"&&o!=="suppressHydrationWarning"&&o!=="autoFocus"&&(iu.hasOwnProperty(o)?l!=null&&o==="onScroll"&&Le("scroll",t):l!=null&&b1(t,o,l,s))}switch(n){case"input":Ad(t),X2(t,r,!1);break;case"textarea":Ad(t),R2(t);break;case"option":r.value!=null&&t.setAttribute("value",""+xo(r.value));break;case"select":t.multiple=!!r.multiple,o=r.value,o!=null?Aa(t,!!r.multiple,o,!1):r.defaultValue!=null&&Aa(t,!!r.multiple,r.defaultValue,!0);break;default:typeof i.onClick=="function"&&(t.onclick=Zh)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(e.flags|=4)}e.ref!==null&&(e.flags|=512,e.flags|=2097152)}return Zt(e),null;case 6:if(t&&e.stateNode!=null)NC(t,e,t.memoizedProps,r);else{if(typeof r!="string"&&e.stateNode===null)throw Error(W(166));if(n=ss(gu.current),ss(jr.current),Gd(e)){if(r=e.stateNode,n=e.memoizedProps,r[Zr]=e,(o=r.nodeValue!==n)&&(t=Tn,t!==null))switch(t.tag){case 3:Dd(r.nodeValue,n,(t.mode&1)!==0);break;case 5:t.memoizedProps.suppressHydrationWarning!==!0&&Dd(r.nodeValue,n,(t.mode&1)!==0)}o&&(e.flags|=4)}else r=(n.nodeType===9?n:n.ownerDocument).createTextNode(r),r[Zr]=e,e.stateNode=r}return Zt(e),null;case 13:if(We(qe),r=e.memoizedState,t===null||t.memoizedState!==null&&t.memoizedState.dehydrated!==null){if(je&&On!==null&&(e.mode&1)!==0&&(e.flags&128)===0)UO(),ol(),e.flags|=98560,o=!1;else if(o=Gd(e),r!==null&&r.dehydrated!==null){if(t===null){if(!o)throw Error(W(318));if(o=e.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(W(317));o[Zr]=e}else ol(),(e.flags&128)===0&&(e.memoizedState=null),e.flags|=4;Zt(e),o=!1}else hr!==null&&(fv(hr),hr=null),o=!0;if(!o)return e.flags&65536?e:null}return(e.flags&128)!==0?(e.lanes=n,e):(r=r!==null,r!==(t!==null&&t.memoizedState!==null)&&r&&(e.child.flags|=8192,(e.mode&1)!==0&&(t===null||(qe.current&1)!==0?pt===0&&(pt=3):$1())),e.updateQueue!==null&&(e.flags|=4),Zt(e),null);case 4:return al(),iv(t,e),t===null&&fu(e.stateNode.containerInfo),Zt(e),null;case 10:return Z1(e.type._context),Zt(e),null;case 17:return un(e.type)&&Xh(),Zt(e),null;case 19:if(We(qe),o=e.memoizedState,o===null)return Zt(e),null;if(r=(e.flags&128)!==0,s=o.rendering,s===null)if(r)$l(o,!1);else{if(pt!==0||t!==null&&(t.flags&128)!==0)for(t=e.child;t!==null;){if(s=jh(t),s!==null){for(e.flags|=128,$l(o,!1),r=s.updateQueue,r!==null&&(e.updateQueue=r,e.flags|=4),e.subtreeFlags=0,r=n,n=e.child;n!==null;)o=n,t=r,o.flags&=14680066,s=o.alternate,s===null?(o.childLanes=0,o.lanes=t,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=s.childLanes,o.lanes=s.lanes,o.child=s.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=s.memoizedProps,o.memoizedState=s.memoizedState,o.updateQueue=s.updateQueue,o.type=s.type,t=s.dependencies,o.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext}),n=n.sibling;return Me(qe,qe.current&1|2),e.child}t=t.sibling}o.tail!==null&&ot()>cl&&(e.flags|=128,r=!0,$l(o,!1),e.lanes=4194304)}else{if(!r)if(t=jh(s),t!==null){if(e.flags|=128,r=!0,n=t.updateQueue,n!==null&&(e.updateQueue=n,e.flags|=4),$l(o,!0),o.tail===null&&o.tailMode==="hidden"&&!s.alternate&&!je)return Zt(e),null}else 2*ot()-o.renderingStartTime>cl&&n!==1073741824&&(e.flags|=128,r=!0,$l(o,!1),e.lanes=4194304);o.isBackwards?(s.sibling=e.child,e.child=s):(n=o.last,n!==null?n.sibling=s:e.child=s,o.last=s)}return o.tail!==null?(e=o.tail,o.rendering=e,o.tail=e.sibling,o.renderingStartTime=ot(),e.sibling=null,n=qe.current,Me(qe,r?n&1|2:n&1),e):(Zt(e),null);case 22:case 23:return _1(),r=e.memoizedState!==null,t!==null&&t.memoizedState!==null!==r&&(e.flags|=8192),r&&(e.mode&1)!==0?(Sn&1073741824)!==0&&(Zt(e),e.subtreeFlags&6&&(e.flags|=8192)):Zt(e),null;case 24:return null;case 25:return null}throw Error(W(156,e.tag))}function NW(t,e){switch(I1(e),e.tag){case 1:return un(e.type)&&Xh(),t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 3:return al(),We(cn),We(Gt),H1(),t=e.flags,(t&65536)!==0&&(t&128)===0?(e.flags=t&-65537|128,e):null;case 5:return F1(e),null;case 13:if(We(qe),t=e.memoizedState,t!==null&&t.dehydrated!==null){if(e.alternate===null)throw Error(W(340));ol()}return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 19:return We(qe),null;case 4:return al(),null;case 10:return Z1(e.type._context),null;case 22:case 23:return _1(),null;case 24:return null;default:return null}}var Yd=!1,Ft=!1,IW=typeof WeakSet=="function"?WeakSet:Set,B=null;function Oa(t,e){var n=t.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(r){$e(t,e,r)}else n.current=null}function ov(t,e,n){try{n()}catch(r){$e(t,e,r)}}var zk=!1;function MW(t,e){if(Db=Mh,t=LO(),E1(t)){if("selectionStart"in t)var n={start:t.selectionStart,end:t.selectionEnd};else e:{n=(n=t.ownerDocument)&&n.defaultView||window;var r=n.getSelection&&n.getSelection();if(r&&r.rangeCount!==0){n=r.anchorNode;var i=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch{n=null;break e}var s=0,a=-1,l=-1,c=0,u=0,d=t,f=null;t:for(;;){for(var h;d!==n||i!==0&&d.nodeType!==3||(a=s+i),d!==o||r!==0&&d.nodeType!==3||(l=s+r),d.nodeType===3&&(s+=d.nodeValue.length),(h=d.firstChild)!==null;)f=d,d=h;for(;;){if(d===t)break t;if(f===n&&++c===i&&(a=s),f===o&&++u===r&&(l=s),(h=d.nextSibling)!==null)break;d=f,f=d.parentNode}d=h}n=a===-1||l===-1?null:{start:a,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(Gb={focusedElem:t,selectionRange:n},Mh=!1,B=e;B!==null;)if(e=B,t=e.child,(e.subtreeFlags&1028)!==0&&t!==null)t.return=e,B=t;else for(;B!==null;){e=B;try{var p=e.alternate;if((e.flags&1024)!==0)switch(e.tag){case 0:case 11:case 15:break;case 1:if(p!==null){var m=p.memoizedProps,v=p.memoizedState,g=e.stateNode,b=g.getSnapshotBeforeUpdate(e.elementType===e.type?m:dr(e.type,m),v);g.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var y=e.stateNode.containerInfo;y.nodeType===1?y.textContent="":y.nodeType===9&&y.documentElement&&y.removeChild(y.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(W(163))}}catch(x){$e(e,e.return,x)}if(t=e.sibling,t!==null){t.return=e.return,B=t;break}B=e.return}return p=zk,zk=!1,p}function Ac(t,e,n){var r=e.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var i=r=r.next;do{if((i.tag&t)===t){var o=i.destroy;i.destroy=void 0,o!==void 0&&ov(e,n,o)}i=i.next}while(i!==r)}}function fm(t,e){if(e=e.updateQueue,e=e!==null?e.lastEffect:null,e!==null){var n=e=e.next;do{if((n.tag&t)===t){var r=n.create;n.destroy=r()}n=n.next}while(n!==e)}}function sv(t){var e=t.ref;if(e!==null){var n=t.stateNode;switch(t.tag){case 5:t=n;break;default:t=n}typeof e=="function"?e(t):e.current=t}}function IC(t){var e=t.alternate;e!==null&&(t.alternate=null,IC(e)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(e=t.stateNode,e!==null&&(delete e[Zr],delete e[pu],delete e[Yb],delete e[mW],delete e[gW])),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}function MC(t){return t.tag===5||t.tag===3||t.tag===4}function Vk(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||MC(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function av(t,e,n){var r=t.tag;if(r===5||r===6)t=t.stateNode,e?n.nodeType===8?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(n.nodeType===8?(e=n.parentNode,e.insertBefore(t,n)):(e=n,e.appendChild(t)),n=n._reactRootContainer,n!=null||e.onclick!==null||(e.onclick=Zh));else if(r!==4&&(t=t.child,t!==null))for(av(t,e,n),t=t.sibling;t!==null;)av(t,e,n),t=t.sibling}function lv(t,e,n){var r=t.tag;if(r===5||r===6)t=t.stateNode,e?n.insertBefore(t,e):n.appendChild(t);else if(r!==4&&(t=t.child,t!==null))for(lv(t,e,n),t=t.sibling;t!==null;)lv(t,e,n),t=t.sibling}var Pt=null,fr=!1;function Li(t,e,n){for(n=n.child;n!==null;)AC(t,e,n),n=n.sibling}function AC(t,e,n){if(Gr&&typeof Gr.onCommitFiberUnmount=="function")try{Gr.onCommitFiberUnmount(im,n)}catch{}switch(n.tag){case 5:Ft||Oa(n,e);case 6:var r=Pt,i=fr;Pt=null,Li(t,e,n),Pt=r,fr=i,Pt!==null&&(fr?(t=Pt,n=n.stateNode,t.nodeType===8?t.parentNode.removeChild(n):t.removeChild(n)):Pt.removeChild(n.stateNode));break;case 18:Pt!==null&&(fr?(t=Pt,n=n.stateNode,t.nodeType===8?Kg(t.parentNode,n):t.nodeType===1&&Kg(t,n),cu(t)):Kg(Pt,n.stateNode));break;case 4:r=Pt,i=fr,Pt=n.stateNode.containerInfo,fr=!0,Li(t,e,n),Pt=r,fr=i;break;case 0:case 11:case 14:case 15:if(!Ft&&(r=n.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){i=r=r.next;do{var o=i,s=o.destroy;o=o.tag,s!==void 0&&((o&2)!==0||(o&4)!==0)&&ov(n,e,s),i=i.next}while(i!==r)}Li(t,e,n);break;case 1:if(!Ft&&(Oa(n,e),r=n.stateNode,typeof r.componentWillUnmount=="function"))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(a){$e(n,e,a)}Li(t,e,n);break;case 21:Li(t,e,n);break;case 22:n.mode&1?(Ft=(r=Ft)||n.memoizedState!==null,Li(t,e,n),Ft=r):Li(t,e,n);break;default:Li(t,e,n)}}function Ek(t){var e=t.updateQueue;if(e!==null){t.updateQueue=null;var n=t.stateNode;n===null&&(n=t.stateNode=new IW),e.forEach(function(r){var i=DW.bind(null,t,r);n.has(r)||(n.add(r),r.then(i,i))})}}function or(t,e){var n=e.deletions;if(n!==null)for(var r=0;r<n.length;r++){var i=n[r];try{var o=t,s=e,a=s;e:for(;a!==null;){switch(a.tag){case 5:Pt=a.stateNode,fr=!1;break e;case 3:Pt=a.stateNode.containerInfo,fr=!0;break e;case 4:Pt=a.stateNode.containerInfo,fr=!0;break e}a=a.return}if(Pt===null)throw Error(W(160));AC(o,s,i),Pt=null,fr=!1;var l=i.alternate;l!==null&&(l.return=null),i.return=null}catch(c){$e(i,e,c)}}if(e.subtreeFlags&12854)for(e=e.child;e!==null;)LC(e,t),e=e.sibling}function LC(t,e){var n=t.alternate,r=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:if(or(e,t),Or(t),r&4){try{Ac(3,t,t.return),fm(3,t)}catch(m){$e(t,t.return,m)}try{Ac(5,t,t.return)}catch(m){$e(t,t.return,m)}}break;case 1:or(e,t),Or(t),r&512&&n!==null&&Oa(n,n.return);break;case 5:if(or(e,t),Or(t),r&512&&n!==null&&Oa(n,n.return),t.flags&32){var i=t.stateNode;try{ou(i,"")}catch(m){$e(t,t.return,m)}}if(r&4&&(i=t.stateNode,i!=null)){var o=t.memoizedProps,s=n!==null?n.memoizedProps:o,a=t.type,l=t.updateQueue;if(t.updateQueue=null,l!==null)try{a==="input"&&o.type==="radio"&&o.name!=null&&nO(i,o),Ib(a,s);var c=Ib(a,o);for(s=0;s<l.length;s+=2){var u=l[s],d=l[s+1];u==="style"?aO(i,d):u==="dangerouslySetInnerHTML"?oO(i,d):u==="children"?ou(i,d):b1(i,u,d,c)}switch(a){case"input":Tb(i,o);break;case"textarea":rO(i,o);break;case"select":var f=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!o.multiple;var h=o.value;h!=null?Aa(i,!!o.multiple,h,!1):f!==!!o.multiple&&(o.defaultValue!=null?Aa(i,!!o.multiple,o.defaultValue,!0):Aa(i,!!o.multiple,o.multiple?[]:"",!1))}i[pu]=o}catch(m){$e(t,t.return,m)}}break;case 6:if(or(e,t),Or(t),r&4){if(t.stateNode===null)throw Error(W(162));i=t.stateNode,o=t.memoizedProps;try{i.nodeValue=o}catch(m){$e(t,t.return,m)}}break;case 3:if(or(e,t),Or(t),r&4&&n!==null&&n.memoizedState.isDehydrated)try{cu(e.containerInfo)}catch(m){$e(t,t.return,m)}break;case 4:or(e,t),Or(t);break;case 13:or(e,t),Or(t),i=t.child,i.flags&8192&&(o=i.memoizedState!==null,i.stateNode.isHidden=o,!o||i.alternate!==null&&i.alternate.memoizedState!==null||(J1=ot())),r&4&&Ek(t);break;case 22:if(u=n!==null&&n.memoizedState!==null,t.mode&1?(Ft=(c=Ft)||u,or(e,t),Ft=c):or(e,t),Or(t),r&8192){if(c=t.memoizedState!==null,(t.stateNode.isHidden=c)&&!u&&(t.mode&1)!==0)for(B=t,u=t.child;u!==null;){for(d=B=u;B!==null;){switch(f=B,h=f.child,f.tag){case 0:case 11:case 14:case 15:Ac(4,f,f.return);break;case 1:Oa(f,f.return);var p=f.stateNode;if(typeof p.componentWillUnmount=="function"){r=f,n=f.return;try{e=r,p.props=e.memoizedProps,p.state=e.memoizedState,p.componentWillUnmount()}catch(m){$e(r,n,m)}}break;case 5:Oa(f,f.return);break;case 22:if(f.memoizedState!==null){Ik(d);continue}}h!==null?(h.return=f,B=h):Ik(d)}u=u.sibling}e:for(u=null,d=t;;){if(d.tag===5){if(u===null){u=d;try{i=d.stateNode,c?(o=i.style,typeof o.setProperty=="function"?o.setProperty("display","none","important"):o.display="none"):(a=d.stateNode,l=d.memoizedProps.style,s=l!=null&&l.hasOwnProperty("display")?l.display:null,a.style.display=sO("display",s))}catch(m){$e(t,t.return,m)}}}else if(d.tag===6){if(u===null)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(m){$e(t,t.return,m)}}else if((d.tag!==22&&d.tag!==23||d.memoizedState===null||d===t)&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===t)break e;for(;d.sibling===null;){if(d.return===null||d.return===t)break e;u===d&&(u=null),d=d.return}u===d&&(u=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:or(e,t),Or(t),r&4&&Ek(t);break;case 21:break;default:or(e,t),Or(t)}}function Or(t){var e=t.flags;if(e&2){try{e:{for(var n=t.return;n!==null;){if(MC(n)){var r=n;break e}n=n.return}throw Error(W(160))}switch(r.tag){case 5:var i=r.stateNode;r.flags&32&&(ou(i,""),r.flags&=-33);var o=Vk(t);lv(t,o,i);break;case 3:case 4:var s=r.stateNode.containerInfo,a=Vk(t);av(t,a,s);break;default:throw Error(W(161))}}catch(l){$e(t,t.return,l)}t.flags&=-3}e&4096&&(t.flags&=-4097)}function AW(t,e,n){B=t,ZC(t)}function ZC(t,e,n){for(var r=(t.mode&1)!==0;B!==null;){var i=B,o=i.child;if(i.tag===22&&r){var s=i.memoizedState!==null||Yd;if(!s){var a=i.alternate,l=a!==null&&a.memoizedState!==null||Ft;a=Yd;var c=Ft;if(Yd=s,(Ft=l)&&!c)for(B=i;B!==null;)s=B,l=s.child,s.tag===22&&s.memoizedState!==null?Mk(i):l!==null?(l.return=s,B=l):Mk(i);for(;o!==null;)B=o,ZC(o),o=o.sibling;B=i,Yd=a,Ft=c}Nk(t)}else(i.subtreeFlags&8772)!==0&&o!==null?(o.return=i,B=o):Nk(t)}}function Nk(t){for(;B!==null;){var e=B;if((e.flags&8772)!==0){var n=e.alternate;try{if((e.flags&8772)!==0)switch(e.tag){case 0:case 11:case 15:Ft||fm(5,e);break;case 1:var r=e.stateNode;if(e.flags&4&&!Ft)if(n===null)r.componentDidMount();else{var i=e.elementType===e.type?n.memoizedProps:dr(e.type,n.memoizedProps);r.componentDidUpdate(i,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=e.updateQueue;o!==null&&pk(e,o,r);break;case 3:var s=e.updateQueue;if(s!==null){if(n=null,e.child!==null)switch(e.child.tag){case 5:n=e.child.stateNode;break;case 1:n=e.child.stateNode}pk(e,s,n)}break;case 5:var a=e.stateNode;if(n===null&&e.flags&4){n=a;var l=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(e.memoizedState===null){var c=e.alternate;if(c!==null){var u=c.memoizedState;if(u!==null){var d=u.dehydrated;d!==null&&cu(d)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(W(163))}Ft||e.flags&512&&sv(e)}catch(f){$e(e,e.return,f)}}if(e===t){B=null;break}if(n=e.sibling,n!==null){n.return=e.return,B=n;break}B=e.return}}function Ik(t){for(;B!==null;){var e=B;if(e===t){B=null;break}var n=e.sibling;if(n!==null){n.return=e.return,B=n;break}B=e.return}}function Mk(t){for(;B!==null;){var e=B;try{switch(e.tag){case 0:case 11:case 15:var n=e.return;try{fm(4,e)}catch(l){$e(e,n,l)}break;case 1:var r=e.stateNode;if(typeof r.componentDidMount=="function"){var i=e.return;try{r.componentDidMount()}catch(l){$e(e,i,l)}}var o=e.return;try{sv(e)}catch(l){$e(e,o,l)}break;case 5:var s=e.return;try{sv(e)}catch(l){$e(e,s,l)}}}catch(l){$e(e,e.return,l)}if(e===t){B=null;break}var a=e.sibling;if(a!==null){a.return=e.return,B=a;break}B=e.return}}var LW=Math.ceil,Kh=Ei.ReactCurrentDispatcher,U1=Ei.ReactCurrentOwner,Jn=Ei.ReactCurrentBatchConfig,be=0,vt=null,lt=null,Nt=0,Sn=0,Ca=Eo(0),pt=0,xu=null,zs=0,hm=0,q1=0,Lc=null,rn=null,J1=0,cl=1/0,ci=null,Uh=!1,cv=null,po=null,Kd=!1,_i=null,qh=0,Zc=0,uv=null,_f=-1,$f=0;function Qt(){return(be&6)!==0?ot():_f!==-1?_f:_f=ot()}function mo(t){return(t.mode&1)===0?1:(be&2)!==0&&Nt!==0?Nt&-Nt:vW.transition!==null?($f===0&&($f=yO()),$f):(t=Oe,t!==0||(t=window.event,t=t===void 0?16:CO(t.type)),t)}function gr(t,e,n,r){if(50<Zc)throw Zc=0,uv=null,Error(W(185));nd(t,n,r),((be&2)===0||t!==vt)&&(t===vt&&((be&2)===0&&(hm|=n),pt===4&&Ki(t,Nt)),dn(t,r),n===1&&be===0&&(e.mode&1)===0&&(cl=ot()+500,cm&&No()))}function dn(t,e){var n=t.callbackNode;vX(t,e);var r=Ih(t,t===vt?Nt:0);if(r===0)n!==null&&D2(n),t.callbackNode=null,t.callbackPriority=0;else if(e=r&-r,t.callbackPriority!==e){if(n!=null&&D2(n),e===1)t.tag===0?bW(Ak.bind(null,t)):BO(Ak.bind(null,t)),hW(function(){(be&6)===0&&No()}),n=null;else{switch(xO(r)){case 1:n=k1;break;case 4:n=bO;break;case 16:n=Nh;break;case 536870912:n=vO;break;default:n=Nh}n=jC(n,XC.bind(null,t))}t.callbackPriority=e,t.callbackNode=n}}function XC(t,e){if(_f=-1,$f=0,(be&6)!==0)throw Error(W(327));var n=t.callbackNode;if(Ra()&&t.callbackNode!==n)return null;var r=Ih(t,t===vt?Nt:0);if(r===0)return null;if((r&30)!==0||(r&t.expiredLanes)!==0||e)e=Jh(t,r);else{e=r;var i=be;be|=2;var o=RC();(vt!==t||Nt!==e)&&(ci=null,cl=ot()+500,ms(t,e));do try{WW();break}catch(a){WC(t,a)}while(1);L1(),Kh.current=o,be=i,lt!==null?e=0:(vt=null,Nt=0,e=pt)}if(e!==0){if(e===2&&(i=Xb(t),i!==0&&(r=i,e=dv(t,i))),e===1)throw n=xu,ms(t,0),Ki(t,r),dn(t,ot()),n;if(e===6)Ki(t,r);else{if(i=t.current.alternate,(r&30)===0&&!ZW(i)&&(e=Jh(t,r),e===2&&(o=Xb(t),o!==0&&(r=o,e=dv(t,o))),e===1))throw n=xu,ms(t,0),Ki(t,r),dn(t,ot()),n;switch(t.finishedWork=i,t.finishedLanes=r,e){case 0:case 1:throw Error(W(345));case 2:Ko(t,rn,ci);break;case 3:if(Ki(t,r),(r&130023424)===r&&(e=J1+500-ot(),10<e)){if(Ih(t,0)!==0)break;if(i=t.suspendedLanes,(i&r)!==r){Qt(),t.pingedLanes|=t.suspendedLanes&i;break}t.timeoutHandle=Bb(Ko.bind(null,t,rn,ci),e);break}Ko(t,rn,ci);break;case 4:if(Ki(t,r),(r&4194240)===r)break;for(e=t.eventTimes,i=-1;0<r;){var s=31-mr(r);o=1<<s,s=e[s],s>i&&(i=s),r&=~o}if(r=i,r=ot()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*LW(r/1960))-r,10<r){t.timeoutHandle=Bb(Ko.bind(null,t,rn,ci),r);break}Ko(t,rn,ci);break;case 5:Ko(t,rn,ci);break;default:throw Error(W(329))}}}return dn(t,ot()),t.callbackNode===n?XC.bind(null,t):null}function dv(t,e){var n=Lc;return t.current.memoizedState.isDehydrated&&(ms(t,e).flags|=256),t=Jh(t,e),t!==2&&(e=rn,rn=n,e!==null&&fv(e)),t}function fv(t){rn===null?rn=t:rn.push.apply(rn,t)}function ZW(t){for(var e=t;;){if(e.flags&16384){var n=e.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var r=0;r<n.length;r++){var i=n[r],o=i.getSnapshot;i=i.value;try{if(!xr(o(),i))return!1}catch{return!1}}}if(n=e.child,e.subtreeFlags&16384&&n!==null)n.return=e,e=n;else{if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function Ki(t,e){for(e&=~q1,e&=~hm,t.suspendedLanes|=e,t.pingedLanes&=~e,t=t.expirationTimes;0<e;){var n=31-mr(e),r=1<<n;t[n]=-1,e&=~r}}function Ak(t){if((be&6)!==0)throw Error(W(327));Ra();var e=Ih(t,0);if((e&1)===0)return dn(t,ot()),null;var n=Jh(t,e);if(t.tag!==0&&n===2){var r=Xb(t);r!==0&&(e=r,n=dv(t,r))}if(n===1)throw n=xu,ms(t,0),Ki(t,e),dn(t,ot()),n;if(n===6)throw Error(W(345));return t.finishedWork=t.current.alternate,t.finishedLanes=e,Ko(t,rn,ci),dn(t,ot()),null}function Q1(t,e){var n=be;be|=1;try{return t(e)}finally{be=n,be===0&&(cl=ot()+500,cm&&No())}}function Vs(t){_i!==null&&_i.tag===0&&(be&6)===0&&Ra();var e=be;be|=1;var n=Jn.transition,r=Oe;try{if(Jn.transition=null,Oe=1,t)return t()}finally{Oe=r,Jn.transition=n,be=e,(be&6)===0&&No()}}function _1(){Sn=Ca.current,We(Ca)}function ms(t,e){t.finishedWork=null,t.finishedLanes=0;var n=t.timeoutHandle;if(n!==-1&&(t.timeoutHandle=-1,fW(n)),lt!==null)for(n=lt.return;n!==null;){var r=n;switch(I1(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&Xh();break;case 3:al(),We(cn),We(Gt),H1();break;case 5:F1(r);break;case 4:al();break;case 13:We(qe);break;case 19:We(qe);break;case 10:Z1(r.type._context);break;case 22:case 23:_1()}n=n.return}if(vt=t,lt=t=go(t.current,null),Nt=Sn=e,pt=0,xu=null,q1=hm=zs=0,rn=Lc=null,os!==null){for(e=0;e<os.length;e++)if(n=os[e],r=n.interleaved,r!==null){n.interleaved=null;var i=r.next,o=n.pending;if(o!==null){var s=o.next;o.next=i,r.next=s}n.pending=r}os=null}return t}function WC(t,e){do{var n=lt;try{if(L1(),qf.current=Yh,Bh){for(var r=Qe.memoizedState;r!==null;){var i=r.queue;i!==null&&(i.pending=null),r=r.next}Bh=!1}if(Ts=0,bt=ft=Qe=null,Mc=!1,bu=0,U1.current=null,n===null||n.return===null){pt=1,xu=e,lt=null;break}e:{var o=t,s=n.return,a=n,l=e;if(e=Nt,a.flags|=32768,l!==null&&typeof l=="object"&&typeof l.then=="function"){var c=l,u=a,d=u.tag;if((u.mode&1)===0&&(d===0||d===11||d===15)){var f=u.alternate;f?(u.updateQueue=f.updateQueue,u.memoizedState=f.memoizedState,u.lanes=f.lanes):(u.updateQueue=null,u.memoizedState=null)}var h=Sk(s);if(h!==null){h.flags&=-257,kk(h,s,a,o,e),h.mode&1&&xk(o,c,e),e=h,l=c;var p=e.updateQueue;if(p===null){var m=new Set;m.add(l),e.updateQueue=m}else p.add(l);break e}else{if((e&1)===0){xk(o,c,e),$1();break e}l=Error(W(426))}}else if(je&&a.mode&1){var v=Sk(s);if(v!==null){(v.flags&65536)===0&&(v.flags|=256),kk(v,s,a,o,e),M1(ll(l,a));break e}}o=l=ll(l,a),pt!==4&&(pt=2),Lc===null?Lc=[o]:Lc.push(o),o=s;do{switch(o.tag){case 3:o.flags|=65536,e&=-e,o.lanes|=e;var g=SC(o,l,e);hk(o,g);break e;case 1:a=l;var b=o.type,y=o.stateNode;if((o.flags&128)===0&&(typeof b.getDerivedStateFromError=="function"||y!==null&&typeof y.componentDidCatch=="function"&&(po===null||!po.has(y)))){o.flags|=65536,e&=-e,o.lanes|=e;var x=kC(o,a,e);hk(o,x);break e}}o=o.return}while(o!==null)}HC(n)}catch(k){e=k,lt===n&&n!==null&&(lt=n=n.return);continue}break}while(1)}function RC(){var t=Kh.current;return Kh.current=Yh,t===null?Yh:t}function $1(){(pt===0||pt===3||pt===2)&&(pt=4),vt===null||(zs&268435455)===0&&(hm&268435455)===0||Ki(vt,Nt)}function Jh(t,e){var n=be;be|=2;var r=RC();(vt!==t||Nt!==e)&&(ci=null,ms(t,e));do try{XW();break}catch(i){WC(t,i)}while(1);if(L1(),be=n,Kh.current=r,lt!==null)throw Error(W(261));return vt=null,Nt=0,pt}function XW(){for(;lt!==null;)FC(lt)}function WW(){for(;lt!==null&&!cX();)FC(lt)}function FC(t){var e=GC(t.alternate,t,Sn);t.memoizedProps=t.pendingProps,e===null?HC(t):lt=e,U1.current=null}function HC(t){var e=t;do{var n=e.alternate;if(t=e.return,(e.flags&32768)===0){if(n=EW(n,e,Sn),n!==null){lt=n;return}}else{if(n=NW(n,e),n!==null){n.flags&=32767,lt=n;return}if(t!==null)t.flags|=32768,t.subtreeFlags=0,t.deletions=null;else{pt=6,lt=null;return}}if(e=e.sibling,e!==null){lt=e;return}lt=e=t}while(e!==null);pt===0&&(pt=5)}function Ko(t,e,n){var r=Oe,i=Jn.transition;try{Jn.transition=null,Oe=1,RW(t,e,n,r)}finally{Jn.transition=i,Oe=r}return null}function RW(t,e,n,r){do Ra();while(_i!==null);if((be&6)!==0)throw Error(W(327));n=t.finishedWork;var i=t.finishedLanes;if(n===null)return null;if(t.finishedWork=null,t.finishedLanes=0,n===t.current)throw Error(W(177));t.callbackNode=null,t.callbackPriority=0;var o=n.lanes|n.childLanes;if(yX(t,o),t===vt&&(lt=vt=null,Nt=0),(n.subtreeFlags&2064)===0&&(n.flags&2064)===0||Kd||(Kd=!0,jC(Nh,function(){return Ra(),null})),o=(n.flags&15990)!==0,(n.subtreeFlags&15990)!==0||o){o=Jn.transition,Jn.transition=null;var s=Oe;Oe=1;var a=be;be|=4,U1.current=null,MW(t,n),LC(n,t),oW(Gb),Mh=!!Db,Gb=Db=null,t.current=n,AW(n),uX(),be=a,Oe=s,Jn.transition=o}else t.current=n;if(Kd&&(Kd=!1,_i=t,qh=i),o=t.pendingLanes,o===0&&(po=null),hX(n.stateNode),dn(t,ot()),e!==null)for(r=t.onRecoverableError,n=0;n<e.length;n++)i=e[n],r(i.value,{componentStack:i.stack,digest:i.digest});if(Uh)throw Uh=!1,t=cv,cv=null,t;return(qh&1)!==0&&t.tag!==0&&Ra(),o=t.pendingLanes,(o&1)!==0?t===uv?Zc++:(Zc=0,uv=t):Zc=0,No(),null}function Ra(){if(_i!==null){var t=xO(qh),e=Jn.transition,n=Oe;try{if(Jn.transition=null,Oe=16>t?16:t,_i===null)var r=!1;else{if(t=_i,_i=null,qh=0,(be&6)!==0)throw Error(W(331));var i=be;for(be|=4,B=t.current;B!==null;){var o=B,s=o.child;if((B.flags&16)!==0){var a=o.deletions;if(a!==null){for(var l=0;l<a.length;l++){var c=a[l];for(B=c;B!==null;){var u=B;switch(u.tag){case 0:case 11:case 15:Ac(8,u,o)}var d=u.child;if(d!==null)d.return=u,B=d;else for(;B!==null;){u=B;var f=u.sibling,h=u.return;if(IC(u),u===c){B=null;break}if(f!==null){f.return=h,B=f;break}B=h}}}var p=o.alternate;if(p!==null){var m=p.child;if(m!==null){p.child=null;do{var v=m.sibling;m.sibling=null,m=v}while(m!==null)}}B=o}}if((o.subtreeFlags&2064)!==0&&s!==null)s.return=o,B=s;else e:for(;B!==null;){if(o=B,(o.flags&2048)!==0)switch(o.tag){case 0:case 11:case 15:Ac(9,o,o.return)}var g=o.sibling;if(g!==null){g.return=o.return,B=g;break e}B=o.return}}var b=t.current;for(B=b;B!==null;){s=B;var y=s.child;if((s.subtreeFlags&2064)!==0&&y!==null)y.return=s,B=y;else e:for(s=b;B!==null;){if(a=B,(a.flags&2048)!==0)try{switch(a.tag){case 0:case 11:case 15:fm(9,a)}}catch(k){$e(a,a.return,k)}if(a===s){B=null;break e}var x=a.sibling;if(x!==null){x.return=a.return,B=x;break e}B=a.return}}if(be=i,No(),Gr&&typeof Gr.onPostCommitFiberRoot=="function")try{Gr.onPostCommitFiberRoot(im,t)}catch{}r=!0}return r}finally{Oe=n,Jn.transition=e}}return!1}function Lk(t,e,n){e=ll(n,e),e=SC(t,e,1),t=ho(t,e,1),e=Qt(),t!==null&&(nd(t,1,e),dn(t,e))}function $e(t,e,n){if(t.tag===3)Lk(t,t,n);else for(;e!==null;){if(e.tag===3){Lk(e,t,n);break}else if(e.tag===1){var r=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof r.componentDidCatch=="function"&&(po===null||!po.has(r))){t=ll(n,t),t=kC(e,t,1),e=ho(e,t,1),t=Qt(),e!==null&&(nd(e,1,t),dn(e,t));break}}e=e.return}}function FW(t,e,n){var r=t.pingCache;r!==null&&r.delete(e),e=Qt(),t.pingedLanes|=t.suspendedLanes&n,vt===t&&(Nt&n)===n&&(pt===4||pt===3&&(Nt&130023424)===Nt&&500>ot()-J1?ms(t,0):q1|=n),dn(t,e)}function DC(t,e){e===0&&((t.mode&1)===0?e=1:(e=Xd,Xd<<=1,(Xd&130023424)===0&&(Xd=4194304)));var n=Qt();t=wi(t,e),t!==null&&(nd(t,e,n),dn(t,n))}function HW(t){var e=t.memoizedState,n=0;e!==null&&(n=e.retryLane),DC(t,n)}function DW(t,e){var n=0;switch(t.tag){case 13:var r=t.stateNode,i=t.memoizedState;i!==null&&(n=i.retryLane);break;case 19:r=t.stateNode;break;default:throw Error(W(314))}r!==null&&r.delete(e),DC(t,n)}var GC;GC=function(t,e,n){if(t!==null)if(t.memoizedProps!==e.pendingProps||cn.current)an=!0;else{if((t.lanes&n)===0&&(e.flags&128)===0)return an=!1,VW(t,e,n);an=(t.flags&131072)!==0}else an=!1,je&&(e.flags&1048576)!==0&&YO(e,Fh,e.index);switch(e.lanes=0,e.tag){case 2:var r=e.type;Qf(t,e),t=e.pendingProps;var i=il(e,Gt.current);Wa(e,n),i=G1(null,e,r,t,i,n);var o=j1();return e.flags|=1,typeof i=="object"&&i!==null&&typeof i.render=="function"&&i.$$typeof===void 0?(e.tag=1,e.memoizedState=null,e.updateQueue=null,un(r)?(o=!0,Wh(e)):o=!1,e.memoizedState=i.state!==null&&i.state!==void 0?i.state:null,W1(e),i.updater=um,e.stateNode=i,i._reactInternals=e,_b(e,r,t,n),e=tv(null,e,r,!0,o,n)):(e.tag=0,je&&o&&N1(e),Yt(null,e,i,n),e=e.child),e;case 16:r=e.elementType;e:{switch(Qf(t,e),t=e.pendingProps,i=r._init,r=i(r._payload),e.type=r,i=e.tag=jW(r),t=dr(r,t),i){case 0:e=ev(null,e,r,t,n);break e;case 1:e=Ok(null,e,r,t,n);break e;case 11:e=wk(null,e,r,t,n);break e;case 14:e=Pk(null,e,r,dr(r.type,t),n);break e}throw Error(W(306,r,""))}return e;case 0:return r=e.type,i=e.pendingProps,i=e.elementType===r?i:dr(r,i),ev(t,e,r,i,n);case 1:return r=e.type,i=e.pendingProps,i=e.elementType===r?i:dr(r,i),Ok(t,e,r,i,n);case 3:e:{if(CC(e),t===null)throw Error(W(387));r=e.pendingProps,o=e.memoizedState,i=o.element,JO(t,e),Gh(e,r,null,n);var s=e.memoizedState;if(r=s.element,o.isDehydrated)if(o={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},e.updateQueue.baseState=o,e.memoizedState=o,e.flags&256){i=ll(Error(W(423)),e),e=Ck(t,e,r,n,i);break e}else if(r!==i){i=ll(Error(W(424)),e),e=Ck(t,e,r,n,i);break e}else for(On=fo(e.stateNode.containerInfo.firstChild),Tn=e,je=!0,hr=null,n=eC(e,null,r,n),e.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(ol(),r===i){e=Pi(t,e,n);break e}Yt(t,e,r,n)}e=e.child}return e;case 5:return tC(e),t===null&&qb(e),r=e.type,i=e.pendingProps,o=t!==null?t.memoizedProps:null,s=i.children,jb(r,i)?s=null:o!==null&&jb(r,o)&&(e.flags|=32),OC(t,e),Yt(t,e,s,n),e.child;case 6:return t===null&&qb(e),null;case 13:return TC(t,e,n);case 4:return R1(e,e.stateNode.containerInfo),r=e.pendingProps,t===null?e.child=sl(e,null,r,n):Yt(t,e,r,n),e.child;case 11:return r=e.type,i=e.pendingProps,i=e.elementType===r?i:dr(r,i),wk(t,e,r,i,n);case 7:return Yt(t,e,e.pendingProps,n),e.child;case 8:return Yt(t,e,e.pendingProps.children,n),e.child;case 12:return Yt(t,e,e.pendingProps.children,n),e.child;case 10:e:{if(r=e.type._context,i=e.pendingProps,o=e.memoizedProps,s=i.value,Me(Hh,r._currentValue),r._currentValue=s,o!==null)if(xr(o.value,s)){if(o.children===i.children&&!cn.current){e=Pi(t,e,n);break e}}else for(o=e.child,o!==null&&(o.return=e);o!==null;){var a=o.dependencies;if(a!==null){s=o.child;for(var l=a.firstContext;l!==null;){if(l.context===r){if(o.tag===1){l=vi(-1,n&-n),l.tag=2;var c=o.updateQueue;if(c!==null){c=c.shared;var u=c.pending;u===null?l.next=l:(l.next=u.next,u.next=l),c.pending=l}}o.lanes|=n,l=o.alternate,l!==null&&(l.lanes|=n),Jb(o.return,n,e),a.lanes|=n;break}l=l.next}}else if(o.tag===10)s=o.type===e.type?null:o.child;else if(o.tag===18){if(s=o.return,s===null)throw Error(W(341));s.lanes|=n,a=s.alternate,a!==null&&(a.lanes|=n),Jb(s,n,e),s=o.sibling}else s=o.child;if(s!==null)s.return=o;else for(s=o;s!==null;){if(s===e){s=null;break}if(o=s.sibling,o!==null){o.return=s.return,s=o;break}s=s.return}o=s}Yt(t,e,i.children,n),e=e.child}return e;case 9:return i=e.type,r=e.pendingProps.children,Wa(e,n),i=_n(i),r=r(i),e.flags|=1,Yt(t,e,r,n),e.child;case 14:return r=e.type,i=dr(r,e.pendingProps),i=dr(r.type,i),Pk(t,e,r,i,n);case 15:return wC(t,e,e.type,e.pendingProps,n);case 17:return r=e.type,i=e.pendingProps,i=e.elementType===r?i:dr(r,i),Qf(t,e),e.tag=1,un(r)?(t=!0,Wh(e)):t=!1,Wa(e,n),_O(e,r,i),_b(e,r,i,n),tv(null,e,r,!0,t,n);case 19:return zC(t,e,n);case 22:return PC(t,e,n)}throw Error(W(156,e.tag))};function jC(t,e){return gO(t,e)}function GW(t,e,n,r){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Yn(t,e,n,r){return new GW(t,e,n,r)}function ex(t){return t=t.prototype,!(!t||!t.isReactComponent)}function jW(t){if(typeof t=="function")return ex(t)?1:0;if(t!=null){if(t=t.$$typeof,t===y1)return 11;if(t===x1)return 14}return 2}function go(t,e){var n=t.alternate;return n===null?(n=Yn(t.tag,e,t.key,t.mode),n.elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.type=t.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=t.flags&14680064,n.childLanes=t.childLanes,n.lanes=t.lanes,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function eh(t,e,n,r,i,o){var s=2;if(r=t,typeof t=="function")ex(t)&&(s=1);else if(typeof t=="string")s=5;else e:switch(t){case ga:return gs(n.children,i,o,e);case v1:s=8,i|=8;break;case kb:return t=Yn(12,n,e,i|2),t.elementType=kb,t.lanes=o,t;case wb:return t=Yn(13,n,e,i),t.elementType=wb,t.lanes=o,t;case Pb:return t=Yn(19,n,e,i),t.elementType=Pb,t.lanes=o,t;case $9:return pm(n,i,o,e);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case Q9:s=10;break e;case _9:s=9;break e;case y1:s=11;break e;case x1:s=14;break e;case Hi:s=16,r=null;break e}throw Error(W(130,t==null?t:typeof t,""))}return e=Yn(s,n,e,i),e.elementType=t,e.type=r,e.lanes=o,e}function gs(t,e,n,r){return t=Yn(7,t,r,e),t.lanes=n,t}function pm(t,e,n,r){return t=Yn(22,t,r,e),t.elementType=$9,t.lanes=n,t.stateNode={isHidden:!1},t}function t0(t,e,n){return t=Yn(6,t,null,e),t.lanes=n,t}function n0(t,e,n){return e=Yn(4,t.children!==null?t.children:[],t.key,e),e.lanes=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function BW(t,e,n,r,i){this.tag=e,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Zg(0),this.expirationTimes=Zg(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Zg(0),this.identifierPrefix=r,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function tx(t,e,n,r,i,o,s,a,l){return t=new BW(t,e,n,a,l),e===1?(e=1,o===!0&&(e|=8)):e=0,o=Yn(3,null,null,e),t.current=o,o.stateNode=t,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},W1(o),t}function YW(t,e,n){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:ma,key:r==null?null:""+r,children:t,containerInfo:e,implementation:n}}function BC(t){if(!t)return So;t=t._reactInternals;e:{if(Rs(t)!==t||t.tag!==1)throw Error(W(170));var e=t;do{switch(e.tag){case 3:e=e.stateNode.context;break e;case 1:if(un(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break e}}e=e.return}while(e!==null);throw Error(W(171))}if(t.tag===1){var n=t.type;if(un(n))return jO(t,n,e)}return e}function YC(t,e,n,r,i,o,s,a,l){return t=tx(n,r,!0,t,i,o,s,a,l),t.context=BC(null),n=t.current,r=Qt(),i=mo(n),o=vi(r,i),o.callback=e!=null?e:null,ho(n,o,i),t.current.lanes=i,nd(t,i,r),dn(t,r),t}function mm(t,e,n,r){var i=e.current,o=Qt(),s=mo(i);return n=BC(n),e.context===null?e.context=n:e.pendingContext=n,e=vi(o,s),e.payload={element:t},r=r===void 0?null:r,r!==null&&(e.callback=r),t=ho(i,e,s),t!==null&&(gr(t,i,s,o),Uf(t,i,s)),s}function Qh(t){if(t=t.current,!t.child)return null;switch(t.child.tag){case 5:return t.child.stateNode;default:return t.child.stateNode}}function Zk(t,e){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var n=t.retryLane;t.retryLane=n!==0&&n<e?n:e}}function nx(t,e){Zk(t,e),(t=t.alternate)&&Zk(t,e)}function KW(){return null}var KC=typeof reportError=="function"?reportError:function(t){console.error(t)};function rx(t){this._internalRoot=t}gm.prototype.render=rx.prototype.render=function(t){var e=this._internalRoot;if(e===null)throw Error(W(409));mm(t,e,null,null)};gm.prototype.unmount=rx.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var e=t.containerInfo;Vs(function(){mm(null,t,null,null)}),e[ki]=null}};function gm(t){this._internalRoot=t}gm.prototype.unstable_scheduleHydration=function(t){if(t){var e=wO();t={blockedOn:null,target:t,priority:e};for(var n=0;n<Yi.length&&e!==0&&e<Yi[n].priority;n++);Yi.splice(n,0,t),n===0&&OO(t)}};function ix(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}function bm(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11&&(t.nodeType!==8||t.nodeValue!==" react-mount-point-unstable "))}function Xk(){}function UW(t,e,n,r,i){if(i){if(typeof r=="function"){var o=r;r=function(){var c=Qh(s);o.call(c)}}var s=YC(e,r,t,0,null,!1,!1,"",Xk);return t._reactRootContainer=s,t[ki]=s.current,fu(t.nodeType===8?t.parentNode:t),Vs(),s}for(;i=t.lastChild;)t.removeChild(i);if(typeof r=="function"){var a=r;r=function(){var c=Qh(l);a.call(c)}}var l=tx(t,0,!1,null,null,!1,!1,"",Xk);return t._reactRootContainer=l,t[ki]=l.current,fu(t.nodeType===8?t.parentNode:t),Vs(function(){mm(e,l,n,r)}),l}function vm(t,e,n,r,i){var o=n._reactRootContainer;if(o){var s=o;if(typeof i=="function"){var a=i;i=function(){var l=Qh(s);a.call(l)}}mm(e,s,t,i)}else s=UW(n,e,t,i,r);return Qh(s)}SO=function(t){switch(t.tag){case 3:var e=t.stateNode;if(e.current.memoizedState.isDehydrated){var n=gc(e.pendingLanes);n!==0&&(w1(e,n|1),dn(e,ot()),(be&6)===0&&(cl=ot()+500,No()))}break;case 13:Vs(function(){var r=wi(t,1);if(r!==null){var i=Qt();gr(r,t,1,i)}}),nx(t,1)}};P1=function(t){if(t.tag===13){var e=wi(t,134217728);if(e!==null){var n=Qt();gr(e,t,134217728,n)}nx(t,134217728)}};kO=function(t){if(t.tag===13){var e=mo(t),n=wi(t,e);if(n!==null){var r=Qt();gr(n,t,e,r)}nx(t,e)}};wO=function(){return Oe};PO=function(t,e){var n=Oe;try{return Oe=t,e()}finally{Oe=n}};Ab=function(t,e,n){switch(e){case"input":if(Tb(t,n),e=n.name,n.type==="radio"&&e!=null){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var r=n[e];if(r!==t&&r.form===t.form){var i=lm(r);if(!i)throw Error(W(90));tO(r),Tb(r,i)}}}break;case"textarea":rO(t,n);break;case"select":e=n.value,e!=null&&Aa(t,!!n.multiple,e,!1)}};uO=Q1;dO=Vs;var qW={usingClientEntryPoint:!1,Events:[id,xa,lm,lO,cO,Q1]},ec={findFiberByHostInstance:is,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},JW={bundleType:ec.bundleType,version:ec.version,rendererPackageName:ec.rendererPackageName,rendererConfig:ec.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Ei.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return t=pO(t),t===null?null:t.stateNode},findFiberByHostInstance:ec.findFiberByHostInstance||KW,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Ud=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ud.isDisabled&&Ud.supportsFiber)try{im=Ud.inject(JW),Gr=Ud}catch{}}Mn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=qW;Mn.createPortal=function(t,e){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!ix(e))throw Error(W(200));return YW(t,e,null,n)};Mn.createRoot=function(t,e){if(!ix(t))throw Error(W(299));var n=!1,r="",i=KC;return e!=null&&(e.unstable_strictMode===!0&&(n=!0),e.identifierPrefix!==void 0&&(r=e.identifierPrefix),e.onRecoverableError!==void 0&&(i=e.onRecoverableError)),e=tx(t,1,!1,null,null,n,!1,r,i),t[ki]=e.current,fu(t.nodeType===8?t.parentNode:t),new rx(e)};Mn.findDOMNode=function(t){if(t==null)return null;if(t.nodeType===1)return t;var e=t._reactInternals;if(e===void 0)throw typeof t.render=="function"?Error(W(188)):(t=Object.keys(t).join(","),Error(W(268,t)));return t=pO(e),t=t===null?null:t.stateNode,t};Mn.flushSync=function(t){return Vs(t)};Mn.hydrate=function(t,e,n){if(!bm(e))throw Error(W(200));return vm(null,t,e,!0,n)};Mn.hydrateRoot=function(t,e,n){if(!ix(t))throw Error(W(405));var r=n!=null&&n.hydratedSources||null,i=!1,o="",s=KC;if(n!=null&&(n.unstable_strictMode===!0&&(i=!0),n.identifierPrefix!==void 0&&(o=n.identifierPrefix),n.onRecoverableError!==void 0&&(s=n.onRecoverableError)),e=YC(e,null,t,1,n!=null?n:null,i,!1,o,s),t[ki]=e.current,fu(t),r)for(t=0;t<r.length;t++)n=r[t],i=n._getVersion,i=i(n._source),e.mutableSourceEagerHydrationData==null?e.mutableSourceEagerHydrationData=[n,i]:e.mutableSourceEagerHydrationData.push(n,i);return new gm(e)};Mn.render=function(t,e,n){if(!bm(e))throw Error(W(200));return vm(null,t,e,!1,n)};Mn.unmountComponentAtNode=function(t){if(!bm(t))throw Error(W(40));return t._reactRootContainer?(Vs(function(){vm(null,null,t,!1,function(){t._reactRootContainer=null,t[ki]=null})}),!0):!1};Mn.unstable_batchedUpdates=Q1;Mn.unstable_renderSubtreeIntoContainer=function(t,e,n,r){if(!bm(n))throw Error(W(200));if(t==null||t._reactInternals===void 0)throw Error(W(38));return vm(t,e,n,!1,r)};Mn.version="18.2.0-next-9e3b772b8-20220608";(function(t){function e(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(n){console.error(n)}}e(),t.exports=Mn})(rm);var Wk=rm.exports;xb.createRoot=Wk.createRoot,xb.hydrateRoot=Wk.hydrateRoot;class Se{constructor(){}lineAt(e){if(e<0||e>this.length)throw new RangeError(`Invalid position ${e} in document of length ${this.length}`);return this.lineInner(e,!1,1,0)}line(e){if(e<1||e>this.lines)throw new RangeError(`Invalid line number ${e} in ${this.lines}-line document`);return this.lineInner(e,!0,1,0)}replace(e,n,r){let i=[];return this.decompose(0,e,i,2),r.length&&r.decompose(0,r.length,i,3),this.decompose(n,this.length,i,1),Xr.from(i,this.length-(n-e)+r.length)}append(e){return this.replace(this.length,this.length,e)}slice(e,n=this.length){let r=[];return this.decompose(e,n,r,0),Xr.from(r,n-e)}eq(e){if(e==this)return!0;if(e.length!=this.length||e.lines!=this.lines)return!1;let n=this.scanIdentical(e,1),r=this.length-this.scanIdentical(e,-1),i=new Xc(this),o=new Xc(e);for(let s=n,a=n;;){if(i.next(s),o.next(s),s=0,i.lineBreak!=o.lineBreak||i.done!=o.done||i.value!=o.value)return!1;if(a+=i.value.length,i.done||a>=r)return!0}}iter(e=1){return new Xc(this,e)}iterRange(e,n=this.length){return new UC(this,e,n)}iterLines(e,n){let r;if(e==null)r=this.iter();else{n==null&&(n=this.lines+1);let i=this.line(e).from;r=this.iterRange(i,Math.max(i,n==this.lines+1?this.length:n<=1?0:this.line(n-1).to))}return new qC(r)}toString(){return this.sliceString(0)}toJSON(){let e=[];return this.flatten(e),e}static of(e){if(e.length==0)throw new RangeError("A document must have at least one line");return e.length==1&&!e[0]?Se.empty:e.length<=32?new it(e):Xr.from(it.split(e,[]))}}class it extends Se{constructor(e,n=QW(e)){super(),this.text=e,this.length=n}get lines(){return this.text.length}get children(){return null}lineInner(e,n,r,i){for(let o=0;;o++){let s=this.text[o],a=i+s.length;if((n?r:a)>=e)return new _W(i,a,r,s);i=a+1,r++}}decompose(e,n,r,i){let o=e<=0&&n>=this.length?this:new it(Rk(this.text,e,n),Math.min(n,this.length)-Math.max(0,e));if(i&1){let s=r.pop(),a=th(o.text,s.text.slice(),0,o.length);if(a.length<=32)r.push(new it(a,s.length+o.length));else{let l=a.length>>1;r.push(new it(a.slice(0,l)),new it(a.slice(l)))}}else r.push(o)}replace(e,n,r){if(!(r instanceof it))return super.replace(e,n,r);let i=th(this.text,th(r.text,Rk(this.text,0,e)),n),o=this.length+r.length-(n-e);return i.length<=32?new it(i,o):Xr.from(it.split(i,[]),o)}sliceString(e,n=this.length,r=`
`){let i="";for(let o=0,s=0;o<=n&&s<this.text.length;s++){let a=this.text[s],l=o+a.length;o>e&&s&&(i+=r),e<l&&n>o&&(i+=a.slice(Math.max(0,e-o),n-o)),o=l+1}return i}flatten(e){for(let n of this.text)e.push(n)}scanIdentical(){return 0}static split(e,n){let r=[],i=-1;for(let o of e)r.push(o),i+=o.length+1,r.length==32&&(n.push(new it(r,i)),r=[],i=-1);return i>-1&&n.push(new it(r,i)),n}}class Xr extends Se{constructor(e,n){super(),this.children=e,this.length=n,this.lines=0;for(let r of e)this.lines+=r.lines}lineInner(e,n,r,i){for(let o=0;;o++){let s=this.children[o],a=i+s.length,l=r+s.lines-1;if((n?l:a)>=e)return s.lineInner(e,n,r,i);i=a+1,r=l+1}}decompose(e,n,r,i){for(let o=0,s=0;s<=n&&o<this.children.length;o++){let a=this.children[o],l=s+a.length;if(e<=l&&n>=s){let c=i&((s<=e?1:0)|(l>=n?2:0));s>=e&&l<=n&&!c?r.push(a):a.decompose(e-s,n-s,r,c)}s=l+1}}replace(e,n,r){if(r.lines<this.lines)for(let i=0,o=0;i<this.children.length;i++){let s=this.children[i],a=o+s.length;if(e>=o&&n<=a){let l=s.replace(e-o,n-o,r),c=this.lines-s.lines+l.lines;if(l.lines<c>>5-1&&l.lines>c>>5+1){let u=this.children.slice();return u[i]=l,new Xr(u,this.length-(n-e)+r.length)}return super.replace(o,a,l)}o=a+1}return super.replace(e,n,r)}sliceString(e,n=this.length,r=`
`){let i="";for(let o=0,s=0;o<this.children.length&&s<=n;o++){let a=this.children[o],l=s+a.length;s>e&&o&&(i+=r),e<l&&n>s&&(i+=a.sliceString(e-s,n-s,r)),s=l+1}return i}flatten(e){for(let n of this.children)n.flatten(e)}scanIdentical(e,n){if(!(e instanceof Xr))return 0;let r=0,[i,o,s,a]=n>0?[0,0,this.children.length,e.children.length]:[this.children.length-1,e.children.length-1,-1,-1];for(;;i+=n,o+=n){if(i==s||o==a)return r;let l=this.children[i],c=e.children[o];if(l!=c)return r+l.scanIdentical(c,n);r+=l.length+1}}static from(e,n=e.reduce((r,i)=>r+i.length+1,-1)){let r=0;for(let h of e)r+=h.lines;if(r<32){let h=[];for(let p of e)p.flatten(h);return new it(h,n)}let i=Math.max(32,r>>5),o=i<<1,s=i>>1,a=[],l=0,c=-1,u=[];function d(h){let p;if(h.lines>o&&h instanceof Xr)for(let m of h.children)d(m);else h.lines>s&&(l>s||!l)?(f(),a.push(h)):h instanceof it&&l&&(p=u[u.length-1])instanceof it&&h.lines+p.lines<=32?(l+=h.lines,c+=h.length+1,u[u.length-1]=new it(p.text.concat(h.text),p.length+1+h.length)):(l+h.lines>i&&f(),l+=h.lines,c+=h.length+1,u.push(h))}function f(){l!=0&&(a.push(u.length==1?u[0]:Xr.from(u,c)),c=-1,l=u.length=0)}for(let h of e)d(h);return f(),a.length==1?a[0]:new Xr(a,n)}}Se.empty=new it([""],0);function QW(t){let e=-1;for(let n of t)e+=n.length+1;return e}function th(t,e,n=0,r=1e9){for(let i=0,o=0,s=!0;o<t.length&&i<=r;o++){let a=t[o],l=i+a.length;l>=n&&(l>r&&(a=a.slice(0,r-i)),i<n&&(a=a.slice(n-i)),s?(e[e.length-1]+=a,s=!1):e.push(a)),i=l+1}return e}function Rk(t,e,n){return th(t,[""],e,n)}class Xc{constructor(e,n=1){this.dir=n,this.done=!1,this.lineBreak=!1,this.value="",this.nodes=[e],this.offsets=[n>0?1:(e instanceof it?e.text.length:e.children.length)<<1]}nextInner(e,n){for(this.done=this.lineBreak=!1;;){let r=this.nodes.length-1,i=this.nodes[r],o=this.offsets[r],s=o>>1,a=i instanceof it?i.text.length:i.children.length;if(s==(n>0?a:0)){if(r==0)return this.done=!0,this.value="",this;n>0&&this.offsets[r-1]++,this.nodes.pop(),this.offsets.pop()}else if((o&1)==(n>0?0:1)){if(this.offsets[r]+=n,e==0)return this.lineBreak=!0,this.value=`
`,this;e--}else if(i instanceof it){let l=i.text[s+(n<0?-1:0)];if(this.offsets[r]+=n,l.length>Math.max(0,e))return this.value=e==0?l:n>0?l.slice(e):l.slice(0,l.length-e),this;e-=l.length}else{let l=i.children[s+(n<0?-1:0)];e>l.length?(e-=l.length,this.offsets[r]+=n):(n<0&&this.offsets[r]--,this.nodes.push(l),this.offsets.push(n>0?1:(l instanceof it?l.text.length:l.children.length)<<1))}}}next(e=0){return e<0&&(this.nextInner(-e,-this.dir),e=this.value.length),this.nextInner(e,this.dir)}}class UC{constructor(e,n,r){this.value="",this.done=!1,this.cursor=new Xc(e,n>r?-1:1),this.pos=n>r?e.length:0,this.from=Math.min(n,r),this.to=Math.max(n,r)}nextInner(e,n){if(n<0?this.pos<=this.from:this.pos>=this.to)return this.value="",this.done=!0,this;e+=Math.max(0,n<0?this.pos-this.to:this.from-this.pos);let r=n<0?this.pos-this.from:this.to-this.pos;e>r&&(e=r),r-=e;let{value:i}=this.cursor.next(e);return this.pos+=(i.length+e)*n,this.value=i.length<=r?i:n<0?i.slice(i.length-r):i.slice(0,r),this.done=!this.value,this}next(e=0){return e<0?e=Math.max(e,this.from-this.pos):e>0&&(e=Math.min(e,this.to-this.pos)),this.nextInner(e,this.cursor.dir)}get lineBreak(){return this.cursor.lineBreak&&this.value!=""}}class qC{constructor(e){this.inner=e,this.afterBreak=!0,this.value="",this.done=!1}next(e=0){let{done:n,lineBreak:r,value:i}=this.inner.next(e);return n?(this.done=!0,this.value=""):r?this.afterBreak?this.value="":(this.afterBreak=!0,this.next()):(this.value=i,this.afterBreak=!1),this}get lineBreak(){return!1}}typeof Symbol<"u"&&(Se.prototype[Symbol.iterator]=function(){return this.iter()},Xc.prototype[Symbol.iterator]=UC.prototype[Symbol.iterator]=qC.prototype[Symbol.iterator]=function(){return this});class _W{constructor(e,n,r,i){this.from=e,this.to=n,this.number=r,this.text=i}get length(){return this.to-this.from}}let Fa="lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map(t=>t?parseInt(t,36):1);for(let t=1;t<Fa.length;t++)Fa[t]+=Fa[t-1];function $W(t){for(let e=1;e<Fa.length;e+=2)if(Fa[e]>t)return Fa[e-1]<=t;return!1}function Fk(t){return t>=127462&&t<=127487}const Hk=8205;function Ut(t,e,n=!0,r=!0){return(n?JC:eR)(t,e,r)}function JC(t,e,n){if(e==t.length)return e;e&&QC(t.charCodeAt(e))&&_C(t.charCodeAt(e-1))&&e--;let r=Tt(t,e);for(e+=wn(r);e<t.length;){let i=Tt(t,e);if(r==Hk||i==Hk||n&&$W(i))e+=wn(i),r=i;else if(Fk(i)){let o=0,s=e-2;for(;s>=0&&Fk(Tt(t,s));)o++,s-=2;if(o%2==0)break;e+=2}else break}return e}function eR(t,e,n){for(;e>0;){let r=JC(t,e-2,n);if(r<e)return r;e--}return 0}function QC(t){return t>=56320&&t<57344}function _C(t){return t>=55296&&t<56320}function Tt(t,e){let n=t.charCodeAt(e);if(!_C(n)||e+1==t.length)return n;let r=t.charCodeAt(e+1);return QC(r)?(n-55296<<10)+(r-56320)+65536:n}function ox(t){return t<=65535?String.fromCharCode(t):(t-=65536,String.fromCharCode((t>>10)+55296,(t&1023)+56320))}function wn(t){return t<65536?1:2}const hv=/\r\n?|\n/;var Kt=function(t){return t[t.Simple=0]="Simple",t[t.TrackDel=1]="TrackDel",t[t.TrackBefore=2]="TrackBefore",t[t.TrackAfter=3]="TrackAfter",t}(Kt||(Kt={}));class Br{constructor(e){this.sections=e}get length(){let e=0;for(let n=0;n<this.sections.length;n+=2)e+=this.sections[n];return e}get newLength(){let e=0;for(let n=0;n<this.sections.length;n+=2){let r=this.sections[n+1];e+=r<0?this.sections[n]:r}return e}get empty(){return this.sections.length==0||this.sections.length==2&&this.sections[1]<0}iterGaps(e){for(let n=0,r=0,i=0;n<this.sections.length;){let o=this.sections[n++],s=this.sections[n++];s<0?(e(r,i,o),i+=o):i+=s,r+=o}}iterChangedRanges(e,n=!1){pv(this,e,n)}get invertedDesc(){let e=[];for(let n=0;n<this.sections.length;){let r=this.sections[n++],i=this.sections[n++];i<0?e.push(r,i):e.push(i,r)}return new Br(e)}composeDesc(e){return this.empty?e:e.empty?this:$C(this,e)}mapDesc(e,n=!1){return e.empty?this:mv(this,e,n)}mapPos(e,n=-1,r=Kt.Simple){let i=0,o=0;for(let s=0;s<this.sections.length;){let a=this.sections[s++],l=this.sections[s++],c=i+a;if(l<0){if(c>e)return o+(e-i);o+=a}else{if(r!=Kt.Simple&&c>=e&&(r==Kt.TrackDel&&i<e&&c>e||r==Kt.TrackBefore&&i<e||r==Kt.TrackAfter&&c>e))return null;if(c>e||c==e&&n<0&&!a)return e==i||n<0?o:o+l;o+=l}i=c}if(e>i)throw new RangeError(`Position ${e} is out of range for changeset of length ${i}`);return o}touchesRange(e,n=e){for(let r=0,i=0;r<this.sections.length&&i<=n;){let o=this.sections[r++],s=this.sections[r++],a=i+o;if(s>=0&&i<=n&&a>=e)return i<e&&a>n?"cover":!0;i=a}return!1}toString(){let e="";for(let n=0;n<this.sections.length;){let r=this.sections[n++],i=this.sections[n++];e+=(e?" ":"")+r+(i>=0?":"+i:"")}return e}toJSON(){return this.sections}static fromJSON(e){if(!Array.isArray(e)||e.length%2||e.some(n=>typeof n!="number"))throw new RangeError("Invalid JSON representation of ChangeDesc");return new Br(e)}static create(e){return new Br(e)}}class ht extends Br{constructor(e,n){super(e),this.inserted=n}apply(e){if(this.length!=e.length)throw new RangeError("Applying change set to a document with the wrong length");return pv(this,(n,r,i,o,s)=>e=e.replace(i,i+(r-n),s),!1),e}mapDesc(e,n=!1){return mv(this,e,n,!0)}invert(e){let n=this.sections.slice(),r=[];for(let i=0,o=0;i<n.length;i+=2){let s=n[i],a=n[i+1];if(a>=0){n[i]=a,n[i+1]=s;let l=i>>1;for(;r.length<l;)r.push(Se.empty);r.push(s?e.slice(o,o+s):Se.empty)}o+=s}return new ht(n,r)}compose(e){return this.empty?e:e.empty?this:$C(this,e,!0)}map(e,n=!1){return e.empty?this:mv(this,e,n,!0)}iterChanges(e,n=!1){pv(this,e,n)}get desc(){return Br.create(this.sections)}filter(e){let n=[],r=[],i=[],o=new Su(this);e:for(let s=0,a=0;;){let l=s==e.length?1e9:e[s++];for(;a<l||a==l&&o.len==0;){if(o.done)break e;let u=Math.min(o.len,l-a);Rt(i,u,-1);let d=o.ins==-1?-1:o.off==0?o.ins:0;Rt(n,u,d),d>0&&$i(r,n,o.text),o.forward(u),a+=u}let c=e[s++];for(;a<c;){if(o.done)break e;let u=Math.min(o.len,c-a);Rt(n,u,-1),Rt(i,u,o.ins==-1?-1:o.off==0?o.ins:0),o.forward(u),a+=u}}return{changes:new ht(n,r),filtered:Br.create(i)}}toJSON(){let e=[];for(let n=0;n<this.sections.length;n+=2){let r=this.sections[n],i=this.sections[n+1];i<0?e.push(r):i==0?e.push([r]):e.push([r].concat(this.inserted[n>>1].toJSON()))}return e}static of(e,n,r){let i=[],o=[],s=0,a=null;function l(u=!1){if(!u&&!i.length)return;s<n&&Rt(i,n-s,-1);let d=new ht(i,o);a=a?a.compose(d.map(a)):d,i=[],o=[],s=0}function c(u){if(Array.isArray(u))for(let d of u)c(d);else if(u instanceof ht){if(u.length!=n)throw new RangeError(`Mismatched change set length (got ${u.length}, expected ${n})`);l(),a=a?a.compose(u.map(a)):u}else{let{from:d,to:f=d,insert:h}=u;if(d>f||d<0||f>n)throw new RangeError(`Invalid change range ${d} to ${f} (in doc of length ${n})`);let p=h?typeof h=="string"?Se.of(h.split(r||hv)):h:Se.empty,m=p.length;if(d==f&&m==0)return;d<s&&l(),d>s&&Rt(i,d-s,-1),Rt(i,f-d,m),$i(o,i,p),s=f}}return c(e),l(!a),a}static empty(e){return new ht(e?[e,-1]:[],[])}static fromJSON(e){if(!Array.isArray(e))throw new RangeError("Invalid JSON representation of ChangeSet");let n=[],r=[];for(let i=0;i<e.length;i++){let o=e[i];if(typeof o=="number")n.push(o,-1);else{if(!Array.isArray(o)||typeof o[0]!="number"||o.some((s,a)=>a&&typeof s!="string"))throw new RangeError("Invalid JSON representation of ChangeSet");if(o.length==1)n.push(o[0],0);else{for(;r.length<i;)r.push(Se.empty);r[i]=Se.of(o.slice(1)),n.push(o[0],r[i].length)}}}return new ht(n,r)}static createSet(e,n){return new ht(e,n)}}function Rt(t,e,n,r=!1){if(e==0&&n<=0)return;let i=t.length-2;i>=0&&n<=0&&n==t[i+1]?t[i]+=e:e==0&&t[i]==0?t[i+1]+=n:r?(t[i]+=e,t[i+1]+=n):t.push(e,n)}function $i(t,e,n){if(n.length==0)return;let r=e.length-2>>1;if(r<t.length)t[t.length-1]=t[t.length-1].append(n);else{for(;t.length<r;)t.push(Se.empty);t.push(n)}}function pv(t,e,n){let r=t.inserted;for(let i=0,o=0,s=0;s<t.sections.length;){let a=t.sections[s++],l=t.sections[s++];if(l<0)i+=a,o+=a;else{let c=i,u=o,d=Se.empty;for(;c+=a,u+=l,l&&r&&(d=d.append(r[s-2>>1])),!(n||s==t.sections.length||t.sections[s+1]<0);)a=t.sections[s++],l=t.sections[s++];e(i,c,o,u,d),i=c,o=u}}}function mv(t,e,n,r=!1){let i=[],o=r?[]:null,s=new Su(t),a=new Su(e);for(let l=-1;;)if(s.ins==-1&&a.ins==-1){let c=Math.min(s.len,a.len);Rt(i,c,-1),s.forward(c),a.forward(c)}else if(a.ins>=0&&(s.ins<0||l==s.i||s.off==0&&(a.len<s.len||a.len==s.len&&!n))){let c=a.len;for(Rt(i,a.ins,-1);c;){let u=Math.min(s.len,c);s.ins>=0&&l<s.i&&s.len<=u&&(Rt(i,0,s.ins),o&&$i(o,i,s.text),l=s.i),s.forward(u),c-=u}a.next()}else if(s.ins>=0){let c=0,u=s.len;for(;u;)if(a.ins==-1){let d=Math.min(u,a.len);c+=d,u-=d,a.forward(d)}else if(a.ins==0&&a.len<u)u-=a.len,a.next();else break;Rt(i,c,l<s.i?s.ins:0),o&&l<s.i&&$i(o,i,s.text),l=s.i,s.forward(s.len-u)}else{if(s.done&&a.done)return o?ht.createSet(i,o):Br.create(i);throw new Error("Mismatched change set lengths")}}function $C(t,e,n=!1){let r=[],i=n?[]:null,o=new Su(t),s=new Su(e);for(let a=!1;;){if(o.done&&s.done)return i?ht.createSet(r,i):Br.create(r);if(o.ins==0)Rt(r,o.len,0,a),o.next();else if(s.len==0&&!s.done)Rt(r,0,s.ins,a),i&&$i(i,r,s.text),s.next();else{if(o.done||s.done)throw new Error("Mismatched change set lengths");{let l=Math.min(o.len2,s.len),c=r.length;if(o.ins==-1){let u=s.ins==-1?-1:s.off?0:s.ins;Rt(r,l,u,a),i&&u&&$i(i,r,s.text)}else s.ins==-1?(Rt(r,o.off?0:o.len,l,a),i&&$i(i,r,o.textBit(l))):(Rt(r,o.off?0:o.len,s.off?0:s.ins,a),i&&!s.off&&$i(i,r,s.text));a=(o.ins>l||s.ins>=0&&s.len>l)&&(a||r.length>c),o.forward2(l),s.forward(l)}}}}class Su{constructor(e){this.set=e,this.i=0,this.next()}next(){let{sections:e}=this.set;this.i<e.length?(this.len=e[this.i++],this.ins=e[this.i++]):(this.len=0,this.ins=-2),this.off=0}get done(){return this.ins==-2}get len2(){return this.ins<0?this.len:this.ins}get text(){let{inserted:e}=this.set,n=this.i-2>>1;return n>=e.length?Se.empty:e[n]}textBit(e){let{inserted:n}=this.set,r=this.i-2>>1;return r>=n.length&&!e?Se.empty:n[r].slice(this.off,e==null?void 0:this.off+e)}forward(e){e==this.len?this.next():(this.len-=e,this.off+=e)}forward2(e){this.ins==-1?this.forward(e):e==this.ins?this.next():(this.ins-=e,this.off+=e)}}class as{constructor(e,n,r){this.from=e,this.to=n,this.flags=r}get anchor(){return this.flags&16?this.to:this.from}get head(){return this.flags&16?this.from:this.to}get empty(){return this.from==this.to}get assoc(){return this.flags&4?-1:this.flags&8?1:0}get bidiLevel(){let e=this.flags&3;return e==3?null:e}get goalColumn(){let e=this.flags>>5;return e==33554431?void 0:e}map(e,n=-1){let r,i;return this.empty?r=i=e.mapPos(this.from,n):(r=e.mapPos(this.from,1),i=e.mapPos(this.to,-1)),r==this.from&&i==this.to?this:new as(r,i,this.flags)}extend(e,n=e){if(e<=this.anchor&&n>=this.anchor)return A.range(e,n);let r=Math.abs(e-this.anchor)>Math.abs(n-this.anchor)?e:n;return A.range(this.anchor,r)}eq(e){return this.anchor==e.anchor&&this.head==e.head}toJSON(){return{anchor:this.anchor,head:this.head}}static fromJSON(e){if(!e||typeof e.anchor!="number"||typeof e.head!="number")throw new RangeError("Invalid JSON representation for SelectionRange");return A.range(e.anchor,e.head)}static create(e,n,r){return new as(e,n,r)}}class A{constructor(e,n){this.ranges=e,this.mainIndex=n}map(e,n=-1){return e.empty?this:A.create(this.ranges.map(r=>r.map(e,n)),this.mainIndex)}eq(e){if(this.ranges.length!=e.ranges.length||this.mainIndex!=e.mainIndex)return!1;for(let n=0;n<this.ranges.length;n++)if(!this.ranges[n].eq(e.ranges[n]))return!1;return!0}get main(){return this.ranges[this.mainIndex]}asSingle(){return this.ranges.length==1?this:new A([this.main],0)}addRange(e,n=!0){return A.create([e].concat(this.ranges),n?0:this.mainIndex+1)}replaceRange(e,n=this.mainIndex){let r=this.ranges.slice();return r[n]=e,A.create(r,this.mainIndex)}toJSON(){return{ranges:this.ranges.map(e=>e.toJSON()),main:this.mainIndex}}static fromJSON(e){if(!e||!Array.isArray(e.ranges)||typeof e.main!="number"||e.main>=e.ranges.length)throw new RangeError("Invalid JSON representation for EditorSelection");return new A(e.ranges.map(n=>as.fromJSON(n)),e.main)}static single(e,n=e){return new A([A.range(e,n)],0)}static create(e,n=0){if(e.length==0)throw new RangeError("A selection needs at least one range");for(let r=0,i=0;i<e.length;i++){let o=e[i];if(o.empty?o.from<=r:o.from<r)return A.normalized(e.slice(),n);r=o.to}return new A(e,n)}static cursor(e,n=0,r,i){return as.create(e,e,(n==0?0:n<0?4:8)|(r==null?3:Math.min(2,r))|(i!=null?i:33554431)<<5)}static range(e,n,r){let i=(r!=null?r:33554431)<<5;return n<e?as.create(n,e,16|i|8):as.create(e,n,i|(n>e?4:0))}static normalized(e,n=0){let r=e[n];e.sort((i,o)=>i.from-o.from),n=e.indexOf(r);for(let i=1;i<e.length;i++){let o=e[i],s=e[i-1];if(o.empty?o.from<=s.to:o.from<s.to){let a=s.from,l=Math.max(o.to,s.to);i<=n&&n--,e.splice(--i,2,o.anchor>o.head?A.range(l,a):A.range(a,l))}}return new A(e,n)}}function eT(t,e){for(let n of t.ranges)if(n.to>e)throw new RangeError("Selection points outside of document")}let sx=0;class ${constructor(e,n,r,i,o){this.combine=e,this.compareInput=n,this.compare=r,this.isStatic=i,this.id=sx++,this.default=e([]),this.extensions=typeof o=="function"?o(this):o}static define(e={}){return new $(e.combine||(n=>n),e.compareInput||((n,r)=>n===r),e.compare||(e.combine?(n,r)=>n===r:ax),!!e.static,e.enables)}of(e){return new nh([],this,0,e)}compute(e,n){if(this.isStatic)throw new Error("Can't compute a static facet");return new nh(e,this,1,n)}computeN(e,n){if(this.isStatic)throw new Error("Can't compute a static facet");return new nh(e,this,2,n)}from(e,n){return n||(n=r=>r),this.compute([e],r=>n(r.field(e)))}}function ax(t,e){return t==e||t.length==e.length&&t.every((n,r)=>n===e[r])}class nh{constructor(e,n,r,i){this.dependencies=e,this.facet=n,this.type=r,this.value=i,this.id=sx++}dynamicSlot(e){var n;let r=this.value,i=this.facet.compareInput,o=this.id,s=e[o]>>1,a=this.type==2,l=!1,c=!1,u=[];for(let d of this.dependencies)d=="doc"?l=!0:d=="selection"?c=!0:(((n=e[d.id])!==null&&n!==void 0?n:1)&1)==0&&u.push(e[d.id]);return{create(d){return d.values[s]=r(d),1},update(d,f){if(l&&f.docChanged||c&&(f.docChanged||f.selection)||gv(d,u)){let h=r(d);if(a?!Dk(h,d.values[s],i):!i(h,d.values[s]))return d.values[s]=h,1}return 0},reconfigure:(d,f)=>{let h,p=f.config.address[o];if(p!=null){let m=$h(f,p);if(this.dependencies.every(v=>v instanceof $?f.facet(v)===d.facet(v):v instanceof St?f.field(v,!1)==d.field(v,!1):!0)||(a?Dk(h=r(d),m,i):i(h=r(d),m)))return d.values[s]=m,0}else h=r(d);return d.values[s]=h,1}}}}function Dk(t,e,n){if(t.length!=e.length)return!1;for(let r=0;r<t.length;r++)if(!n(t[r],e[r]))return!1;return!0}function gv(t,e){let n=!1;for(let r of e)Wc(t,r)&1&&(n=!0);return n}function tR(t,e,n){let r=n.map(l=>t[l.id]),i=n.map(l=>l.type),o=r.filter(l=>!(l&1)),s=t[e.id]>>1;function a(l){let c=[];for(let u=0;u<r.length;u++){let d=$h(l,r[u]);if(i[u]==2)for(let f of d)c.push(f);else c.push(d)}return e.combine(c)}return{create(l){for(let c of r)Wc(l,c);return l.values[s]=a(l),1},update(l,c){if(!gv(l,o))return 0;let u=a(l);return e.compare(u,l.values[s])?0:(l.values[s]=u,1)},reconfigure(l,c){let u=gv(l,r),d=c.config.facets[e.id],f=c.facet(e);if(d&&!u&&ax(n,d))return l.values[s]=f,0;let h=a(l);return e.compare(h,f)?(l.values[s]=f,0):(l.values[s]=h,1)}}}const Gk=$.define({static:!0});class St{constructor(e,n,r,i,o){this.id=e,this.createF=n,this.updateF=r,this.compareF=i,this.spec=o,this.provides=void 0}static define(e){let n=new St(sx++,e.create,e.update,e.compare||((r,i)=>r===i),e);return e.provide&&(n.provides=e.provide(n)),n}create(e){let n=e.facet(Gk).find(r=>r.field==this);return((n==null?void 0:n.create)||this.createF)(e)}slot(e){let n=e[this.id]>>1;return{create:r=>(r.values[n]=this.create(r),1),update:(r,i)=>{let o=r.values[n],s=this.updateF(o,i);return this.compareF(o,s)?0:(r.values[n]=s,1)},reconfigure:(r,i)=>i.config.address[this.id]!=null?(r.values[n]=i.field(this),0):(r.values[n]=this.create(r),1)}}init(e){return[this,Gk.of({field:this,create:e})]}get extension(){return this}}const _o={lowest:4,low:3,default:2,high:1,highest:0};function tc(t){return e=>new tT(e,t)}const Fs={highest:tc(_o.highest),high:tc(_o.high),default:tc(_o.default),low:tc(_o.low),lowest:tc(_o.lowest)};class tT{constructor(e,n){this.inner=e,this.prec=n}}class ym{of(e){return new bv(this,e)}reconfigure(e){return ym.reconfigure.of({compartment:this,extension:e})}get(e){return e.config.compartments.get(this)}}class bv{constructor(e,n){this.compartment=e,this.inner=n}}class _h{constructor(e,n,r,i,o,s){for(this.base=e,this.compartments=n,this.dynamicSlots=r,this.address=i,this.staticValues=o,this.facets=s,this.statusTemplate=[];this.statusTemplate.length<r.length;)this.statusTemplate.push(0)}staticFacet(e){let n=this.address[e.id];return n==null?e.default:this.staticValues[n>>1]}static resolve(e,n,r){let i=[],o=Object.create(null),s=new Map;for(let f of nR(e,n,s))f instanceof St?i.push(f):(o[f.facet.id]||(o[f.facet.id]=[])).push(f);let a=Object.create(null),l=[],c=[];for(let f of i)a[f.id]=c.length<<1,c.push(h=>f.slot(h));let u=r==null?void 0:r.config.facets;for(let f in o){let h=o[f],p=h[0].facet,m=u&&u[f]||[];if(h.every(v=>v.type==0))if(a[p.id]=l.length<<1|1,ax(m,h))l.push(r.facet(p));else{let v=p.combine(h.map(g=>g.value));l.push(r&&p.compare(v,r.facet(p))?r.facet(p):v)}else{for(let v of h)v.type==0?(a[v.id]=l.length<<1|1,l.push(v.value)):(a[v.id]=c.length<<1,c.push(g=>v.dynamicSlot(g)));a[p.id]=c.length<<1,c.push(v=>tR(v,p,h))}}let d=c.map(f=>f(a));return new _h(e,s,d,a,l,o)}}function nR(t,e,n){let r=[[],[],[],[],[]],i=new Map;function o(s,a){let l=i.get(s);if(l!=null){if(l<=a)return;let c=r[l].indexOf(s);c>-1&&r[l].splice(c,1),s instanceof bv&&n.delete(s.compartment)}if(i.set(s,a),Array.isArray(s))for(let c of s)o(c,a);else if(s instanceof bv){if(n.has(s.compartment))throw new RangeError("Duplicate use of compartment in extensions");let c=e.get(s.compartment)||s.inner;n.set(s.compartment,c),o(c,a)}else if(s instanceof tT)o(s.inner,s.prec);else if(s instanceof St)r[a].push(s),s.provides&&o(s.provides,a);else if(s instanceof nh)r[a].push(s),s.facet.extensions&&o(s.facet.extensions,_o.default);else{let c=s.extension;if(!c)throw new Error(`Unrecognized extension value in extension set (${s}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);o(c,a)}}return o(t,_o.default),r.reduce((s,a)=>s.concat(a))}function Wc(t,e){if(e&1)return 2;let n=e>>1,r=t.status[n];if(r==4)throw new Error("Cyclic dependency between fields and/or facets");if(r&2)return r;t.status[n]=4;let i=t.computeSlot(t,t.config.dynamicSlots[n]);return t.status[n]=2|i}function $h(t,e){return e&1?t.config.staticValues[e>>1]:t.values[e>>1]}const nT=$.define(),rT=$.define({combine:t=>t.some(e=>e),static:!0}),iT=$.define({combine:t=>t.length?t[0]:void 0,static:!0}),oT=$.define(),sT=$.define(),aT=$.define(),lT=$.define({combine:t=>t.length?t[0]:!1});class Io{constructor(e,n){this.type=e,this.value=n}static define(){return new rR}}class rR{of(e){return new Io(this,e)}}class iR{constructor(e){this.map=e}of(e){return new se(this,e)}}class se{constructor(e,n){this.type=e,this.value=n}map(e){let n=this.type.map(this.value,e);return n===void 0?void 0:n==this.value?this:new se(this.type,n)}is(e){return this.type==e}static define(e={}){return new iR(e.map||(n=>n))}static mapEffects(e,n){if(!e.length)return e;let r=[];for(let i of e){let o=i.map(n);o&&r.push(o)}return r}}se.reconfigure=se.define();se.appendConfig=se.define();class mt{constructor(e,n,r,i,o,s){this.startState=e,this.changes=n,this.selection=r,this.effects=i,this.annotations=o,this.scrollIntoView=s,this._doc=null,this._state=null,r&&eT(r,n.newLength),o.some(a=>a.type==mt.time)||(this.annotations=o.concat(mt.time.of(Date.now())))}static create(e,n,r,i,o,s){return new mt(e,n,r,i,o,s)}get newDoc(){return this._doc||(this._doc=this.changes.apply(this.startState.doc))}get newSelection(){return this.selection||this.startState.selection.map(this.changes)}get state(){return this._state||this.startState.applyTransaction(this),this._state}annotation(e){for(let n of this.annotations)if(n.type==e)return n.value}get docChanged(){return!this.changes.empty}get reconfigured(){return this.startState.config!=this.state.config}isUserEvent(e){let n=this.annotation(mt.userEvent);return!!(n&&(n==e||n.length>e.length&&n.slice(0,e.length)==e&&n[e.length]=="."))}}mt.time=Io.define();mt.userEvent=Io.define();mt.addToHistory=Io.define();mt.remote=Io.define();function oR(t,e){let n=[];for(let r=0,i=0;;){let o,s;if(r<t.length&&(i==e.length||e[i]>=t[r]))o=t[r++],s=t[r++];else if(i<e.length)o=e[i++],s=e[i++];else return n;!n.length||n[n.length-1]<o?n.push(o,s):n[n.length-1]<s&&(n[n.length-1]=s)}}function cT(t,e,n){var r;let i,o,s;return n?(i=e.changes,o=ht.empty(e.changes.length),s=t.changes.compose(e.changes)):(i=e.changes.map(t.changes),o=t.changes.mapDesc(e.changes,!0),s=t.changes.compose(i)),{changes:s,selection:e.selection?e.selection.map(o):(r=t.selection)===null||r===void 0?void 0:r.map(i),effects:se.mapEffects(t.effects,i).concat(se.mapEffects(e.effects,o)),annotations:t.annotations.length?t.annotations.concat(e.annotations):e.annotations,scrollIntoView:t.scrollIntoView||e.scrollIntoView}}function vv(t,e,n){let r=e.selection,i=Ha(e.annotations);return e.userEvent&&(i=i.concat(mt.userEvent.of(e.userEvent))),{changes:e.changes instanceof ht?e.changes:ht.of(e.changes||[],n,t.facet(iT)),selection:r&&(r instanceof A?r:A.single(r.anchor,r.head)),effects:Ha(e.effects),annotations:i,scrollIntoView:!!e.scrollIntoView}}function uT(t,e,n){let r=vv(t,e.length?e[0]:{},t.doc.length);e.length&&e[0].filter===!1&&(n=!1);for(let o=1;o<e.length;o++){e[o].filter===!1&&(n=!1);let s=!!e[o].sequential;r=cT(r,vv(t,e[o],s?r.changes.newLength:t.doc.length),s)}let i=mt.create(t,r.changes,r.selection,r.effects,r.annotations,r.scrollIntoView);return aR(n?sR(i):i)}function sR(t){let e=t.startState,n=!0;for(let i of e.facet(oT)){let o=i(t);if(o===!1){n=!1;break}Array.isArray(o)&&(n=n===!0?o:oR(n,o))}if(n!==!0){let i,o;if(n===!1)o=t.changes.invertedDesc,i=ht.empty(e.doc.length);else{let s=t.changes.filter(n);i=s.changes,o=s.filtered.mapDesc(s.changes).invertedDesc}t=mt.create(e,i,t.selection&&t.selection.map(o),se.mapEffects(t.effects,o),t.annotations,t.scrollIntoView)}let r=e.facet(sT);for(let i=r.length-1;i>=0;i--){let o=r[i](t);o instanceof mt?t=o:Array.isArray(o)&&o.length==1&&o[0]instanceof mt?t=o[0]:t=uT(e,Ha(o),!1)}return t}function aR(t){let e=t.startState,n=e.facet(aT),r=t;for(let i=n.length-1;i>=0;i--){let o=n[i](t);o&&Object.keys(o).length&&(r=cT(r,vv(e,o,t.changes.newLength),!0))}return r==t?t:mt.create(e,t.changes,t.selection,r.effects,r.annotations,r.scrollIntoView)}const lR=[];function Ha(t){return t==null?lR:Array.isArray(t)?t:[t]}var Be=function(t){return t[t.Word=0]="Word",t[t.Space=1]="Space",t[t.Other=2]="Other",t}(Be||(Be={}));const cR=/[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;let yv;try{yv=new RegExp("[\\p{Alphabetic}\\p{Number}_]","u")}catch{}function uR(t){if(yv)return yv.test(t);for(let e=0;e<t.length;e++){let n=t[e];if(/\w/.test(n)||n>"\x80"&&(n.toUpperCase()!=n.toLowerCase()||cR.test(n)))return!0}return!1}function dR(t){return e=>{if(!/\S/.test(e))return Be.Space;if(uR(e))return Be.Word;for(let n=0;n<t.length;n++)if(e.indexOf(t[n])>-1)return Be.Word;return Be.Other}}class pe{constructor(e,n,r,i,o,s){this.config=e,this.doc=n,this.selection=r,this.values=i,this.status=e.statusTemplate.slice(),this.computeSlot=o,s&&(s._state=this);for(let a=0;a<this.config.dynamicSlots.length;a++)Wc(this,a<<1);this.computeSlot=null}field(e,n=!0){let r=this.config.address[e.id];if(r==null){if(n)throw new RangeError("Field is not present in this state");return}return Wc(this,r),$h(this,r)}update(...e){return uT(this,e,!0)}applyTransaction(e){let n=this.config,{base:r,compartments:i}=n;for(let s of e.effects)s.is(ym.reconfigure)?(n&&(i=new Map,n.compartments.forEach((a,l)=>i.set(l,a)),n=null),i.set(s.value.compartment,s.value.extension)):s.is(se.reconfigure)?(n=null,r=s.value):s.is(se.appendConfig)&&(n=null,r=Ha(r).concat(s.value));let o;n?o=e.startState.values.slice():(n=_h.resolve(r,i,this),o=new pe(n,this.doc,this.selection,n.dynamicSlots.map(()=>null),(a,l)=>l.reconfigure(a,this),null).values),new pe(n,e.newDoc,e.newSelection,o,(s,a)=>a.update(s,e),e)}replaceSelection(e){return typeof e=="string"&&(e=this.toText(e)),this.changeByRange(n=>({changes:{from:n.from,to:n.to,insert:e},range:A.cursor(n.from+e.length)}))}changeByRange(e){let n=this.selection,r=e(n.ranges[0]),i=this.changes(r.changes),o=[r.range],s=Ha(r.effects);for(let a=1;a<n.ranges.length;a++){let l=e(n.ranges[a]),c=this.changes(l.changes),u=c.map(i);for(let f=0;f<a;f++)o[f]=o[f].map(u);let d=i.mapDesc(c,!0);o.push(l.range.map(d)),i=i.compose(u),s=se.mapEffects(s,u).concat(se.mapEffects(Ha(l.effects),d))}return{changes:i,selection:A.create(o,n.mainIndex),effects:s}}changes(e=[]){return e instanceof ht?e:ht.of(e,this.doc.length,this.facet(pe.lineSeparator))}toText(e){return Se.of(e.split(this.facet(pe.lineSeparator)||hv))}sliceDoc(e=0,n=this.doc.length){return this.doc.sliceString(e,n,this.lineBreak)}facet(e){let n=this.config.address[e.id];return n==null?e.default:(Wc(this,n),$h(this,n))}toJSON(e){let n={doc:this.sliceDoc(),selection:this.selection.toJSON()};if(e)for(let r in e){let i=e[r];i instanceof St&&this.config.address[i.id]!=null&&(n[r]=i.spec.toJSON(this.field(e[r]),this))}return n}static fromJSON(e,n={},r){if(!e||typeof e.doc!="string")throw new RangeError("Invalid JSON representation for EditorState");let i=[];if(r){for(let o in r)if(Object.prototype.hasOwnProperty.call(e,o)){let s=r[o],a=e[o];i.push(s.init(l=>s.spec.fromJSON(a,l)))}}return pe.create({doc:e.doc,selection:A.fromJSON(e.selection),extensions:n.extensions?i.concat([n.extensions]):i})}static create(e={}){let n=_h.resolve(e.extensions||[],new Map),r=e.doc instanceof Se?e.doc:Se.of((e.doc||"").split(n.staticFacet(pe.lineSeparator)||hv)),i=e.selection?e.selection instanceof A?e.selection:A.single(e.selection.anchor,e.selection.head):A.single(0);return eT(i,r.length),n.staticFacet(rT)||(i=i.asSingle()),new pe(n,r,i,n.dynamicSlots.map(()=>null),(o,s)=>s.create(o),null)}get tabSize(){return this.facet(pe.tabSize)}get lineBreak(){return this.facet(pe.lineSeparator)||`
`}get readOnly(){return this.facet(lT)}phrase(e,...n){for(let r of this.facet(pe.phrases))if(Object.prototype.hasOwnProperty.call(r,e)){e=r[e];break}return n.length&&(e=e.replace(/\$(\$|\d*)/g,(r,i)=>{if(i=="$")return"$";let o=+(i||1);return!o||o>n.length?r:n[o-1]})),e}languageDataAt(e,n,r=-1){let i=[];for(let o of this.facet(nT))for(let s of o(this,n,r))Object.prototype.hasOwnProperty.call(s,e)&&i.push(s[e]);return i}charCategorizer(e){return dR(this.languageDataAt("wordChars",e).join(""))}wordAt(e){let{text:n,from:r,length:i}=this.doc.lineAt(e),o=this.charCategorizer(e),s=e-r,a=e-r;for(;s>0;){let l=Ut(n,s,!1);if(o(n.slice(l,s))!=Be.Word)break;s=l}for(;a<i;){let l=Ut(n,a);if(o(n.slice(a,l))!=Be.Word)break;a=l}return s==a?null:A.range(s+r,a+r)}}pe.allowMultipleSelections=rT;pe.tabSize=$.define({combine:t=>t.length?t[0]:4});pe.lineSeparator=iT;pe.readOnly=lT;pe.phrases=$.define({compare(t,e){let n=Object.keys(t),r=Object.keys(e);return n.length==r.length&&n.every(i=>t[i]==e[i])}});pe.languageData=nT;pe.changeFilter=oT;pe.transactionFilter=sT;pe.transactionExtender=aT;ym.reconfigure=se.define();function ti(t,e,n={}){let r={};for(let i of t)for(let o of Object.keys(i)){let s=i[o],a=r[o];if(a===void 0)r[o]=s;else if(!(a===s||s===void 0))if(Object.hasOwnProperty.call(n,o))r[o]=n[o](a,s);else throw new Error("Config merge conflict for field "+o)}for(let i in e)r[i]===void 0&&(r[i]=e[i]);return r}class Es{eq(e){return this==e}range(e,n=e){return ku.create(e,n,this)}}Es.prototype.startSide=Es.prototype.endSide=0;Es.prototype.point=!1;Es.prototype.mapMode=Kt.TrackDel;class ku{constructor(e,n,r){this.from=e,this.to=n,this.value=r}static create(e,n,r){return new ku(e,n,r)}}function xv(t,e){return t.from-e.from||t.value.startSide-e.value.startSide}class lx{constructor(e,n,r,i){this.from=e,this.to=n,this.value=r,this.maxPoint=i}get length(){return this.to[this.to.length-1]}findIndex(e,n,r,i=0){let o=r?this.to:this.from;for(let s=i,a=o.length;;){if(s==a)return s;let l=s+a>>1,c=o[l]-e||(r?this.value[l].endSide:this.value[l].startSide)-n;if(l==s)return c>=0?s:a;c>=0?a=l:s=l+1}}between(e,n,r,i){for(let o=this.findIndex(n,-1e9,!0),s=this.findIndex(r,1e9,!1,o);o<s;o++)if(i(this.from[o]+e,this.to[o]+e,this.value[o])===!1)return!1}map(e,n){let r=[],i=[],o=[],s=-1,a=-1;for(let l=0;l<this.value.length;l++){let c=this.value[l],u=this.from[l]+e,d=this.to[l]+e,f,h;if(u==d){let p=n.mapPos(u,c.startSide,c.mapMode);if(p==null||(f=h=p,c.startSide!=c.endSide&&(h=n.mapPos(u,c.endSide),h<f)))continue}else if(f=n.mapPos(u,c.startSide),h=n.mapPos(d,c.endSide),f>h||f==h&&c.startSide>0&&c.endSide<=0)continue;(h-f||c.endSide-c.startSide)<0||(s<0&&(s=f),c.point&&(a=Math.max(a,h-f)),r.push(c),i.push(f-s),o.push(h-s))}return{mapped:r.length?new lx(i,o,r,a):null,pos:s}}}class Pe{constructor(e,n,r,i){this.chunkPos=e,this.chunk=n,this.nextLayer=r,this.maxPoint=i}static create(e,n,r,i){return new Pe(e,n,r,i)}get length(){let e=this.chunk.length-1;return e<0?0:Math.max(this.chunkEnd(e),this.nextLayer.length)}get size(){if(this.isEmpty)return 0;let e=this.nextLayer.size;for(let n of this.chunk)e+=n.value.length;return e}chunkEnd(e){return this.chunkPos[e]+this.chunk[e].length}update(e){let{add:n=[],sort:r=!1,filterFrom:i=0,filterTo:o=this.length}=e,s=e.filter;if(n.length==0&&!s)return this;if(r&&(n=n.slice().sort(xv)),this.isEmpty)return n.length?Pe.of(n):this;let a=new dT(this,null,-1).goto(0),l=0,c=[],u=new Oi;for(;a.value||l<n.length;)if(l<n.length&&(a.from-n[l].from||a.startSide-n[l].value.startSide)>=0){let d=n[l++];u.addInner(d.from,d.to,d.value)||c.push(d)}else a.rangeIndex==1&&a.chunkIndex<this.chunk.length&&(l==n.length||this.chunkEnd(a.chunkIndex)<n[l].from)&&(!s||i>this.chunkEnd(a.chunkIndex)||o<this.chunkPos[a.chunkIndex])&&u.addChunk(this.chunkPos[a.chunkIndex],this.chunk[a.chunkIndex])?a.nextChunk():((!s||i>a.to||o<a.from||s(a.from,a.to,a.value))&&(u.addInner(a.from,a.to,a.value)||c.push(ku.create(a.from,a.to,a.value))),a.next());return u.finishInner(this.nextLayer.isEmpty&&!c.length?Pe.empty:this.nextLayer.update({add:c,filter:s,filterFrom:i,filterTo:o}))}map(e){if(e.empty||this.isEmpty)return this;let n=[],r=[],i=-1;for(let s=0;s<this.chunk.length;s++){let a=this.chunkPos[s],l=this.chunk[s],c=e.touchesRange(a,a+l.length);if(c===!1)i=Math.max(i,l.maxPoint),n.push(l),r.push(e.mapPos(a));else if(c===!0){let{mapped:u,pos:d}=l.map(a,e);u&&(i=Math.max(i,u.maxPoint),n.push(u),r.push(d))}}let o=this.nextLayer.map(e);return n.length==0?o:new Pe(r,n,o||Pe.empty,i)}between(e,n,r){if(!this.isEmpty){for(let i=0;i<this.chunk.length;i++){let o=this.chunkPos[i],s=this.chunk[i];if(n>=o&&e<=o+s.length&&s.between(o,e-o,n-o,r)===!1)return}this.nextLayer.between(e,n,r)}}iter(e=0){return wu.from([this]).goto(e)}get isEmpty(){return this.nextLayer==this}static iter(e,n=0){return wu.from(e).goto(n)}static compare(e,n,r,i,o=-1){let s=e.filter(d=>d.maxPoint>0||!d.isEmpty&&d.maxPoint>=o),a=n.filter(d=>d.maxPoint>0||!d.isEmpty&&d.maxPoint>=o),l=jk(s,a,r),c=new nc(s,l,o),u=new nc(a,l,o);r.iterGaps((d,f,h)=>Bk(c,d,u,f,h,i)),r.empty&&r.length==0&&Bk(c,0,u,0,0,i)}static eq(e,n,r=0,i){i==null&&(i=1e9-1);let o=e.filter(u=>!u.isEmpty&&n.indexOf(u)<0),s=n.filter(u=>!u.isEmpty&&e.indexOf(u)<0);if(o.length!=s.length)return!1;if(!o.length)return!0;let a=jk(o,s),l=new nc(o,a,0).goto(r),c=new nc(s,a,0).goto(r);for(;;){if(l.to!=c.to||!Sv(l.active,c.active)||l.point&&(!c.point||!l.point.eq(c.point)))return!1;if(l.to>i)return!0;l.next(),c.next()}}static spans(e,n,r,i,o=-1){let s=new nc(e,null,o).goto(n),a=n,l=s.openStart;for(;;){let c=Math.min(s.to,r);if(s.point){let u=s.activeForPoint(s.to),d=s.pointFrom<n?u.length+1:Math.min(u.length,l);i.point(a,c,s.point,u,d,s.pointRank),l=Math.min(s.openEnd(c),u.length)}else c>a&&(i.span(a,c,s.active,l),l=s.openEnd(c));if(s.to>r)return l+(s.point&&s.to>r?1:0);a=s.to,s.next()}}static of(e,n=!1){let r=new Oi;for(let i of e instanceof ku?[e]:n?fR(e):e)r.add(i.from,i.to,i.value);return r.finish()}}Pe.empty=new Pe([],[],null,-1);function fR(t){if(t.length>1)for(let e=t[0],n=1;n<t.length;n++){let r=t[n];if(xv(e,r)>0)return t.slice().sort(xv);e=r}return t}Pe.empty.nextLayer=Pe.empty;class Oi{constructor(){this.chunks=[],this.chunkPos=[],this.chunkStart=-1,this.last=null,this.lastFrom=-1e9,this.lastTo=-1e9,this.from=[],this.to=[],this.value=[],this.maxPoint=-1,this.setMaxPoint=-1,this.nextLayer=null}finishChunk(e){this.chunks.push(new lx(this.from,this.to,this.value,this.maxPoint)),this.chunkPos.push(this.chunkStart),this.chunkStart=-1,this.setMaxPoint=Math.max(this.setMaxPoint,this.maxPoint),this.maxPoint=-1,e&&(this.from=[],this.to=[],this.value=[])}add(e,n,r){this.addInner(e,n,r)||(this.nextLayer||(this.nextLayer=new Oi)).add(e,n,r)}addInner(e,n,r){let i=e-this.lastTo||r.startSide-this.last.endSide;if(i<=0&&(e-this.lastFrom||r.startSide-this.last.startSide)<0)throw new Error("Ranges must be added sorted by `from` position and `startSide`");return i<0?!1:(this.from.length==250&&this.finishChunk(!0),this.chunkStart<0&&(this.chunkStart=e),this.from.push(e-this.chunkStart),this.to.push(n-this.chunkStart),this.last=r,this.lastFrom=e,this.lastTo=n,this.value.push(r),r.point&&(this.maxPoint=Math.max(this.maxPoint,n-e)),!0)}addChunk(e,n){if((e-this.lastTo||n.value[0].startSide-this.last.endSide)<0)return!1;this.from.length&&this.finishChunk(!0),this.setMaxPoint=Math.max(this.setMaxPoint,n.maxPoint),this.chunks.push(n),this.chunkPos.push(e);let r=n.value.length-1;return this.last=n.value[r],this.lastFrom=n.from[r]+e,this.lastTo=n.to[r]+e,!0}finish(){return this.finishInner(Pe.empty)}finishInner(e){if(this.from.length&&this.finishChunk(!1),this.chunks.length==0)return e;let n=Pe.create(this.chunkPos,this.chunks,this.nextLayer?this.nextLayer.finishInner(e):e,this.setMaxPoint);return this.from=null,n}}function jk(t,e,n){let r=new Map;for(let o of t)for(let s=0;s<o.chunk.length;s++)o.chunk[s].maxPoint<=0&&r.set(o.chunk[s],o.chunkPos[s]);let i=new Set;for(let o of e)for(let s=0;s<o.chunk.length;s++){let a=r.get(o.chunk[s]);a!=null&&(n?n.mapPos(a):a)==o.chunkPos[s]&&!(n!=null&&n.touchesRange(a,a+o.chunk[s].length))&&i.add(o.chunk[s])}return i}class dT{constructor(e,n,r,i=0){this.layer=e,this.skip=n,this.minPoint=r,this.rank=i}get startSide(){return this.value?this.value.startSide:0}get endSide(){return this.value?this.value.endSide:0}goto(e,n=-1e9){return this.chunkIndex=this.rangeIndex=0,this.gotoInner(e,n,!1),this}gotoInner(e,n,r){for(;this.chunkIndex<this.layer.chunk.length;){let i=this.layer.chunk[this.chunkIndex];if(!(this.skip&&this.skip.has(i)||this.layer.chunkEnd(this.chunkIndex)<e||i.maxPoint<this.minPoint))break;this.chunkIndex++,r=!1}if(this.chunkIndex<this.layer.chunk.length){let i=this.layer.chunk[this.chunkIndex].findIndex(e-this.layer.chunkPos[this.chunkIndex],n,!0);(!r||this.rangeIndex<i)&&this.setRangeIndex(i)}this.next()}forward(e,n){(this.to-e||this.endSide-n)<0&&this.gotoInner(e,n,!0)}next(){for(;;)if(this.chunkIndex==this.layer.chunk.length){this.from=this.to=1e9,this.value=null;break}else{let e=this.layer.chunkPos[this.chunkIndex],n=this.layer.chunk[this.chunkIndex],r=e+n.from[this.rangeIndex];if(this.from=r,this.to=e+n.to[this.rangeIndex],this.value=n.value[this.rangeIndex],this.setRangeIndex(this.rangeIndex+1),this.minPoint<0||this.value.point&&this.to-this.from>=this.minPoint)break}}setRangeIndex(e){if(e==this.layer.chunk[this.chunkIndex].value.length){if(this.chunkIndex++,this.skip)for(;this.chunkIndex<this.layer.chunk.length&&this.skip.has(this.layer.chunk[this.chunkIndex]);)this.chunkIndex++;this.rangeIndex=0}else this.rangeIndex=e}nextChunk(){this.chunkIndex++,this.rangeIndex=0,this.next()}compare(e){return this.from-e.from||this.startSide-e.startSide||this.rank-e.rank||this.to-e.to||this.endSide-e.endSide}}class wu{constructor(e){this.heap=e}static from(e,n=null,r=-1){let i=[];for(let o=0;o<e.length;o++)for(let s=e[o];!s.isEmpty;s=s.nextLayer)s.maxPoint>=r&&i.push(new dT(s,n,r,o));return i.length==1?i[0]:new wu(i)}get startSide(){return this.value?this.value.startSide:0}goto(e,n=-1e9){for(let r of this.heap)r.goto(e,n);for(let r=this.heap.length>>1;r>=0;r--)r0(this.heap,r);return this.next(),this}forward(e,n){for(let r of this.heap)r.forward(e,n);for(let r=this.heap.length>>1;r>=0;r--)r0(this.heap,r);(this.to-e||this.value.endSide-n)<0&&this.next()}next(){if(this.heap.length==0)this.from=this.to=1e9,this.value=null,this.rank=-1;else{let e=this.heap[0];this.from=e.from,this.to=e.to,this.value=e.value,this.rank=e.rank,e.value&&e.next(),r0(this.heap,0)}}}function r0(t,e){for(let n=t[e];;){let r=(e<<1)+1;if(r>=t.length)break;let i=t[r];if(r+1<t.length&&i.compare(t[r+1])>=0&&(i=t[r+1],r++),n.compare(i)<0)break;t[r]=n,t[e]=i,e=r}}class nc{constructor(e,n,r){this.minPoint=r,this.active=[],this.activeTo=[],this.activeRank=[],this.minActive=-1,this.point=null,this.pointFrom=0,this.pointRank=0,this.to=-1e9,this.endSide=0,this.openStart=-1,this.cursor=wu.from(e,n,r)}goto(e,n=-1e9){return this.cursor.goto(e,n),this.active.length=this.activeTo.length=this.activeRank.length=0,this.minActive=-1,this.to=e,this.endSide=n,this.openStart=-1,this.next(),this}forward(e,n){for(;this.minActive>-1&&(this.activeTo[this.minActive]-e||this.active[this.minActive].endSide-n)<0;)this.removeActive(this.minActive);this.cursor.forward(e,n)}removeActive(e){qd(this.active,e),qd(this.activeTo,e),qd(this.activeRank,e),this.minActive=Yk(this.active,this.activeTo)}addActive(e){let n=0,{value:r,to:i,rank:o}=this.cursor;for(;n<this.activeRank.length&&this.activeRank[n]<=o;)n++;Jd(this.active,n,r),Jd(this.activeTo,n,i),Jd(this.activeRank,n,o),e&&Jd(e,n,this.cursor.from),this.minActive=Yk(this.active,this.activeTo)}next(){let e=this.to,n=this.point;this.point=null;let r=this.openStart<0?[]:null;for(;;){let i=this.minActive;if(i>-1&&(this.activeTo[i]-this.cursor.from||this.active[i].endSide-this.cursor.startSide)<0){if(this.activeTo[i]>e){this.to=this.activeTo[i],this.endSide=this.active[i].endSide;break}this.removeActive(i),r&&qd(r,i)}else if(this.cursor.value)if(this.cursor.from>e){this.to=this.cursor.from,this.endSide=this.cursor.startSide;break}else{let o=this.cursor.value;if(!o.point)this.addActive(r),this.cursor.next();else if(n&&this.cursor.to==this.to&&this.cursor.from<this.cursor.to)this.cursor.next();else{this.point=o,this.pointFrom=this.cursor.from,this.pointRank=this.cursor.rank,this.to=this.cursor.to,this.endSide=o.endSide,this.cursor.next(),this.forward(this.to,this.endSide);break}}else{this.to=this.endSide=1e9;break}}if(r){this.openStart=0;for(let i=r.length-1;i>=0&&r[i]<e;i--)this.openStart++}}activeForPoint(e){if(!this.active.length)return this.active;let n=[];for(let r=this.active.length-1;r>=0&&!(this.activeRank[r]<this.pointRank);r--)(this.activeTo[r]>e||this.activeTo[r]==e&&this.active[r].endSide>=this.point.endSide)&&n.push(this.active[r]);return n.reverse()}openEnd(e){let n=0;for(let r=this.activeTo.length-1;r>=0&&this.activeTo[r]>e;r--)n++;return n}}function Bk(t,e,n,r,i,o){t.goto(e),n.goto(r);let s=r+i,a=r,l=r-e;for(;;){let c=t.to+l-n.to||t.endSide-n.endSide,u=c<0?t.to+l:n.to,d=Math.min(u,s);if(t.point||n.point?t.point&&n.point&&(t.point==n.point||t.point.eq(n.point))&&Sv(t.activeForPoint(t.to+l),n.activeForPoint(n.to))||o.comparePoint(a,d,t.point,n.point):d>a&&!Sv(t.active,n.active)&&o.compareRange(a,d,t.active,n.active),u>s)break;a=u,c<=0&&t.next(),c>=0&&n.next()}}function Sv(t,e){if(t.length!=e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!=e[n]&&!t[n].eq(e[n]))return!1;return!0}function qd(t,e){for(let n=e,r=t.length-1;n<r;n++)t[n]=t[n+1];t.pop()}function Jd(t,e,n){for(let r=t.length-1;r>=e;r--)t[r+1]=t[r];t[e]=n}function Yk(t,e){let n=-1,r=1e9;for(let i=0;i<e.length;i++)(e[i]-r||t[i].endSide-t[n].endSide)<0&&(n=i,r=e[i]);return n}function sd(t,e,n=t.length){let r=0;for(let i=0;i<n;)t.charCodeAt(i)==9?(r+=e-r%e,i++):(r++,i=Ut(t,i));return r}function kv(t,e,n,r){for(let i=0,o=0;;){if(o>=e)return i;if(i==t.length)break;o+=t.charCodeAt(i)==9?n-o%n:1,i=Ut(t,i)}return r===!0?-1:t.length}const wv="\u037C",Kk=typeof Symbol>"u"?"__"+wv:Symbol.for(wv),Pv=typeof Symbol>"u"?"__styleSet"+Math.floor(Math.random()*1e8):Symbol("styleSet"),Uk=typeof globalThis<"u"?globalThis:typeof window<"u"?window:{};class ko{constructor(e,n){this.rules=[];let{finish:r}=n||{};function i(s){return/^@/.test(s)?[s]:s.split(/,\s*/)}function o(s,a,l,c){let u=[],d=/^@(\w+)\b/.exec(s[0]),f=d&&d[1]=="keyframes";if(d&&a==null)return l.push(s[0]+";");for(let h in a){let p=a[h];if(/&/.test(h))o(h.split(/,\s*/).map(m=>s.map(v=>m.replace(/&/,v))).reduce((m,v)=>m.concat(v)),p,l);else if(p&&typeof p=="object"){if(!d)throw new RangeError("The value of a property ("+h+") should be a primitive value.");o(i(h),p,u,f)}else p!=null&&u.push(h.replace(/_.*/,"").replace(/[A-Z]/g,m=>"-"+m.toLowerCase())+": "+p+";")}(u.length||f)&&l.push((r&&!d&&!c?s.map(r):s).join(", ")+" {"+u.join(" ")+"}")}for(let s in e)o(i(s),e[s],this.rules)}getRules(){return this.rules.join(`
`)}static newName(){let e=Uk[Kk]||1;return Uk[Kk]=e+1,wv+e.toString(36)}static mount(e,n){(e[Pv]||new hR(e)).mount(Array.isArray(n)?n:[n])}}let Qd=null;class hR{constructor(e){if(!e.head&&e.adoptedStyleSheets&&typeof CSSStyleSheet<"u"){if(Qd)return e.adoptedStyleSheets=[Qd.sheet].concat(e.adoptedStyleSheets),e[Pv]=Qd;this.sheet=new CSSStyleSheet,e.adoptedStyleSheets=[this.sheet].concat(e.adoptedStyleSheets),Qd=this}else{this.styleTag=(e.ownerDocument||e).createElement("style");let n=e.head||e;n.insertBefore(this.styleTag,n.firstChild)}this.modules=[],e[Pv]=this}mount(e){let n=this.sheet,r=0,i=0;for(let o=0;o<e.length;o++){let s=e[o],a=this.modules.indexOf(s);if(a<i&&a>-1&&(this.modules.splice(a,1),i--,a=-1),a==-1){if(this.modules.splice(i++,0,s),n)for(let l=0;l<s.rules.length;l++)n.insertRule(s.rules[l],r++)}else{for(;i<a;)r+=this.modules[i++].rules.length;r+=s.rules.length,i++}}if(!n){let o="";for(let s=0;s<this.modules.length;s++)o+=this.modules[s].getRules()+`
`;this.styleTag.textContent=o}}}var wo={8:"Backspace",9:"Tab",10:"Enter",12:"NumLock",13:"Enter",16:"Shift",17:"Control",18:"Alt",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",44:"PrintScreen",45:"Insert",46:"Delete",59:";",61:"=",91:"Meta",92:"Meta",106:"*",107:"+",108:",",109:"-",110:".",111:"/",144:"NumLock",145:"ScrollLock",160:"Shift",161:"Shift",162:"Control",163:"Control",164:"Alt",165:"Alt",173:"-",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},Pu={48:")",49:"!",50:"@",51:"#",52:"$",53:"%",54:"^",55:"&",56:"*",57:"(",59:":",61:"+",173:"_",186:":",187:"+",188:"<",189:"_",190:">",191:"?",192:"~",219:"{",220:"|",221:"}",222:'"'},qk=typeof navigator<"u"&&/Chrome\/(\d+)/.exec(navigator.userAgent);typeof navigator<"u"&&/Gecko\/\d+/.test(navigator.userAgent);var pR=typeof navigator<"u"&&/Mac/.test(navigator.platform),mR=typeof navigator<"u"&&/MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent),gR=pR||qk&&+qk[1]<57;for(var zt=0;zt<10;zt++)wo[48+zt]=wo[96+zt]=String(zt);for(var zt=1;zt<=24;zt++)wo[zt+111]="F"+zt;for(var zt=65;zt<=90;zt++)wo[zt]=String.fromCharCode(zt+32),Pu[zt]=String.fromCharCode(zt);for(var i0 in wo)Pu.hasOwnProperty(i0)||(Pu[i0]=wo[i0]);function bR(t){var e=gR&&(t.ctrlKey||t.altKey||t.metaKey)||mR&&t.shiftKey&&t.key&&t.key.length==1||t.key=="Unidentified",n=!e&&t.key||(t.shiftKey?Pu:wo)[t.keyCode]||t.key||"Unidentified";return n=="Esc"&&(n="Escape"),n=="Del"&&(n="Delete"),n=="Left"&&(n="ArrowLeft"),n=="Up"&&(n="ArrowUp"),n=="Right"&&(n="ArrowRight"),n=="Down"&&(n="ArrowDown"),n}function ep(t){let e;return t.nodeType==11?e=t.getSelection?t:t.ownerDocument:e=t,e.getSelection()}function ul(t,e){return e?t==e||t.contains(e.nodeType!=1?e.parentNode:e):!1}function vR(t){let e=t.activeElement;for(;e&&e.shadowRoot;)e=e.shadowRoot.activeElement;return e}function rh(t,e){if(!e.anchorNode)return!1;try{return ul(t,e.anchorNode)}catch{return!1}}function Ou(t){return t.nodeType==3?dl(t,0,t.nodeValue.length).getClientRects():t.nodeType==1?t.getClientRects():[]}function tp(t,e,n,r){return n?Jk(t,e,n,r,-1)||Jk(t,e,n,r,1):!1}function np(t){for(var e=0;;e++)if(t=t.previousSibling,!t)return e}function Jk(t,e,n,r,i){for(;;){if(t==n&&e==r)return!0;if(e==(i<0?0:Cu(t))){if(t.nodeName=="DIV")return!1;let o=t.parentNode;if(!o||o.nodeType!=1)return!1;e=np(t)+(i<0?0:1),t=o}else if(t.nodeType==1){if(t=t.childNodes[e+(i<0?-1:0)],t.nodeType==1&&t.contentEditable=="false")return!1;e=i<0?Cu(t):0}else return!1}}function Cu(t){return t.nodeType==3?t.nodeValue.length:t.childNodes.length}const fT={left:0,right:0,top:0,bottom:0};function cx(t,e){let n=e?t.left:t.right;return{left:n,right:n,top:t.top,bottom:t.bottom}}function yR(t){return{left:0,right:t.innerWidth,top:0,bottom:t.innerHeight}}function xR(t,e,n,r,i,o,s,a){let l=t.ownerDocument,c=l.defaultView||window;for(let u=t;u;)if(u.nodeType==1){let d,f=u==l.body;if(f)d=yR(c);else{if(u.scrollHeight<=u.clientHeight&&u.scrollWidth<=u.clientWidth){u=u.assignedSlot||u.parentNode;continue}let m=u.getBoundingClientRect();d={left:m.left,right:m.left+u.clientWidth,top:m.top,bottom:m.top+u.clientHeight}}let h=0,p=0;if(i=="nearest")e.top<d.top?(p=-(d.top-e.top+s),n>0&&e.bottom>d.bottom+p&&(p=e.bottom-d.bottom+p+s)):e.bottom>d.bottom&&(p=e.bottom-d.bottom+s,n<0&&e.top-p<d.top&&(p=-(d.top+p-e.top+s)));else{let m=e.bottom-e.top,v=d.bottom-d.top;p=(i=="center"&&m<=v?e.top+m/2-v/2:i=="start"||i=="center"&&n<0?e.top-s:e.bottom-v+s)-d.top}if(r=="nearest"?e.left<d.left?(h=-(d.left-e.left+o),n>0&&e.right>d.right+h&&(h=e.right-d.right+h+o)):e.right>d.right&&(h=e.right-d.right+o,n<0&&e.left<d.left+h&&(h=-(d.left+h-e.left+o))):h=(r=="center"?e.left+(e.right-e.left)/2-(d.right-d.left)/2:r=="start"==a?e.left-o:e.right-(d.right-d.left)+o)-d.left,h||p)if(f)c.scrollBy(h,p);else{let m=0,v=0;if(p){let g=u.scrollTop;u.scrollTop+=p,v=u.scrollTop-g}if(h){let g=u.scrollLeft;u.scrollLeft+=h,m=u.scrollLeft-g}e={left:e.left-m,top:e.top-v,right:e.right-m,bottom:e.bottom-v},m&&Math.abs(m-h)<1&&(r="nearest"),v&&Math.abs(v-p)<1&&(i="nearest")}if(f)break;u=u.assignedSlot||u.parentNode}else if(u.nodeType==11)u=u.host;else break}class SR{constructor(){this.anchorNode=null,this.anchorOffset=0,this.focusNode=null,this.focusOffset=0}eq(e){return this.anchorNode==e.anchorNode&&this.anchorOffset==e.anchorOffset&&this.focusNode==e.focusNode&&this.focusOffset==e.focusOffset}setRange(e){this.set(e.anchorNode,e.anchorOffset,e.focusNode,e.focusOffset)}set(e,n,r,i){this.anchorNode=e,this.anchorOffset=n,this.focusNode=r,this.focusOffset=i}}let ra=null;function hT(t){if(t.setActive)return t.setActive();if(ra)return t.focus(ra);let e=[];for(let n=t;n&&(e.push(n,n.scrollTop,n.scrollLeft),n!=n.ownerDocument);n=n.parentNode);if(t.focus(ra==null?{get preventScroll(){return ra={preventScroll:!0},!0}}:void 0),!ra){ra=!1;for(let n=0;n<e.length;){let r=e[n++],i=e[n++],o=e[n++];r.scrollTop!=i&&(r.scrollTop=i),r.scrollLeft!=o&&(r.scrollLeft=o)}}}let Qk;function dl(t,e,n=e){let r=Qk||(Qk=document.createRange());return r.setEnd(t,n),r.setStart(t,e),r}function Da(t,e,n){let r={key:e,code:e,keyCode:n,which:n,cancelable:!0},i=new KeyboardEvent("keydown",r);i.synthetic=!0,t.dispatchEvent(i);let o=new KeyboardEvent("keyup",r);return o.synthetic=!0,t.dispatchEvent(o),i.defaultPrevented||o.defaultPrevented}function kR(t){for(;t;){if(t&&(t.nodeType==9||t.nodeType==11&&t.host))return t;t=t.assignedSlot||t.parentNode}return null}function pT(t){for(;t.attributes.length;)t.removeAttributeNode(t.attributes[0])}function wR(t,e){let n=e.focusNode,r=e.focusOffset;if(!n||e.anchorNode!=n||e.anchorOffset!=r)return!1;for(;;)if(r){if(n.nodeType!=1)return!1;let i=n.childNodes[r-1];i.contentEditable=="false"?r--:(n=i,r=Cu(n))}else{if(n==t)return!0;r=np(n),n=n.parentNode}}class Dt{constructor(e,n,r=!0){this.node=e,this.offset=n,this.precise=r}static before(e,n){return new Dt(e.parentNode,np(e),n)}static after(e,n){return new Dt(e.parentNode,np(e)+1,n)}}const ux=[];class Re{constructor(){this.parent=null,this.dom=null,this.dirty=2}get editorView(){if(!this.parent)throw new Error("Accessing view in orphan content view");return this.parent.editorView}get overrideDOMText(){return null}get posAtStart(){return this.parent?this.parent.posBefore(this):0}get posAtEnd(){return this.posAtStart+this.length}posBefore(e){let n=this.posAtStart;for(let r of this.children){if(r==e)return n;n+=r.length+r.breakAfter}throw new RangeError("Invalid child in posBefore")}posAfter(e){return this.posBefore(e)+e.length}coordsAt(e,n){return null}sync(e){if(this.dirty&2){let n=this.dom,r=null,i;for(let o of this.children){if(o.dirty){if(!o.dom&&(i=r?r.nextSibling:n.firstChild)){let s=Re.get(i);(!s||!s.parent&&s.canReuseDOM(o))&&o.reuseDOM(i)}o.sync(e),o.dirty=0}if(i=r?r.nextSibling:n.firstChild,e&&!e.written&&e.node==n&&i!=o.dom&&(e.written=!0),o.dom.parentNode==n)for(;i&&i!=o.dom;)i=_k(i);else n.insertBefore(o.dom,i);r=o.dom}for(i=r?r.nextSibling:n.firstChild,i&&e&&e.node==n&&(e.written=!0);i;)i=_k(i)}else if(this.dirty&1)for(let n of this.children)n.dirty&&(n.sync(e),n.dirty=0)}reuseDOM(e){}localPosFromDOM(e,n){let r;if(e==this.dom)r=this.dom.childNodes[n];else{let i=Cu(e)==0?0:n==0?-1:1;for(;;){let o=e.parentNode;if(o==this.dom)break;i==0&&o.firstChild!=o.lastChild&&(e==o.firstChild?i=-1:i=1),e=o}i<0?r=e:r=e.nextSibling}if(r==this.dom.firstChild)return 0;for(;r&&!Re.get(r);)r=r.nextSibling;if(!r)return this.length;for(let i=0,o=0;;i++){let s=this.children[i];if(s.dom==r)return o;o+=s.length+s.breakAfter}}domBoundsAround(e,n,r=0){let i=-1,o=-1,s=-1,a=-1;for(let l=0,c=r,u=r;l<this.children.length;l++){let d=this.children[l],f=c+d.length;if(c<e&&f>n)return d.domBoundsAround(e,n,c);if(f>=e&&i==-1&&(i=l,o=c),c>n&&d.dom.parentNode==this.dom){s=l,a=u;break}u=f,c=f+d.breakAfter}return{from:o,to:a<0?r+this.length:a,startDOM:(i?this.children[i-1].dom.nextSibling:null)||this.dom.firstChild,endDOM:s<this.children.length&&s>=0?this.children[s].dom:null}}markDirty(e=!1){this.dirty|=2,this.markParentsDirty(e)}markParentsDirty(e){for(let n=this.parent;n;n=n.parent){if(e&&(n.dirty|=2),n.dirty&1)return;n.dirty|=1,e=!1}}setParent(e){this.parent!=e&&(this.parent=e,this.dirty&&this.markParentsDirty(!0))}setDOM(e){this.dom&&(this.dom.cmView=null),this.dom=e,e.cmView=this}get rootView(){for(let e=this;;){let n=e.parent;if(!n)return e;e=n}}replaceChildren(e,n,r=ux){this.markDirty();for(let i=e;i<n;i++){let o=this.children[i];o.parent==this&&o.destroy()}this.children.splice(e,n-e,...r);for(let i=0;i<r.length;i++)r[i].setParent(this)}ignoreMutation(e){return!1}ignoreEvent(e){return!1}childCursor(e=this.length){return new mT(this.children,e,this.children.length)}childPos(e,n=1){return this.childCursor().findPos(e,n)}toString(){let e=this.constructor.name.replace("View","");return e+(this.children.length?"("+this.children.join()+")":this.length?"["+(e=="Text"?this.text:this.length)+"]":"")+(this.breakAfter?"#":"")}static get(e){return e.cmView}get isEditable(){return!0}merge(e,n,r,i,o,s){return!1}become(e){return!1}canReuseDOM(e){return e.constructor==this.constructor}getSide(){return 0}destroy(){this.parent=null}}Re.prototype.breakAfter=0;function _k(t){let e=t.nextSibling;return t.parentNode.removeChild(t),e}class mT{constructor(e,n,r){this.children=e,this.pos=n,this.i=r,this.off=0}findPos(e,n=1){for(;;){if(e>this.pos||e==this.pos&&(n>0||this.i==0||this.children[this.i-1].breakAfter))return this.off=e-this.pos,this;let r=this.children[--this.i];this.pos-=r.length+r.breakAfter}}}function gT(t,e,n,r,i,o,s,a,l){let{children:c}=t,u=c.length?c[e]:null,d=o.length?o[o.length-1]:null,f=d?d.breakAfter:s;if(!(e==r&&u&&!s&&!f&&o.length<2&&u.merge(n,i,o.length?d:null,n==0,a,l))){if(r<c.length){let h=c[r];h&&i<h.length?(e==r&&(h=h.split(i),i=0),!f&&d&&h.merge(0,i,d,!0,0,l)?o[o.length-1]=h:(i&&h.merge(0,i,null,!1,0,l),o.push(h))):h!=null&&h.breakAfter&&(d?d.breakAfter=1:s=1),r++}for(u&&(u.breakAfter=s,n>0&&(!s&&o.length&&u.merge(n,u.length,o[0],!1,a,0)?u.breakAfter=o.shift().breakAfter:(n<u.length||u.children.length&&u.children[u.children.length-1].length==0)&&u.merge(n,u.length,null,!1,a,0),e++));e<r&&o.length;)if(c[r-1].become(o[o.length-1]))r--,o.pop(),l=o.length?0:a;else if(c[e].become(o[0]))e++,o.shift(),a=o.length?0:l;else break;!o.length&&e&&r<c.length&&!c[e-1].breakAfter&&c[r].merge(0,0,c[e-1],!1,a,l)&&e--,(e<r||o.length)&&t.replaceChildren(e,r,o)}}function bT(t,e,n,r,i,o){let s=t.childCursor(),{i:a,off:l}=s.findPos(n,1),{i:c,off:u}=s.findPos(e,-1),d=e-n;for(let f of r)d+=f.length;t.length+=d,gT(t,c,u,a,l,r,0,i,o)}let Pn=typeof navigator<"u"?navigator:{userAgent:"",vendor:"",platform:""},Ov=typeof document<"u"?document:{documentElement:{style:{}}};const Cv=/Edge\/(\d+)/.exec(Pn.userAgent),vT=/MSIE \d/.test(Pn.userAgent),Tv=/Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(Pn.userAgent),xm=!!(vT||Tv||Cv),$k=!xm&&/gecko\/(\d+)/i.test(Pn.userAgent),o0=!xm&&/Chrome\/(\d+)/.exec(Pn.userAgent),ew="webkitFontSmoothing"in Ov.documentElement.style,yT=!xm&&/Apple Computer/.test(Pn.vendor),tw=yT&&(/Mobile\/\w+/.test(Pn.userAgent)||Pn.maxTouchPoints>2);var _={mac:tw||/Mac/.test(Pn.platform),windows:/Win/.test(Pn.platform),linux:/Linux|X11/.test(Pn.platform),ie:xm,ie_version:vT?Ov.documentMode||6:Tv?+Tv[1]:Cv?+Cv[1]:0,gecko:$k,gecko_version:$k?+(/Firefox\/(\d+)/.exec(Pn.userAgent)||[0,0])[1]:0,chrome:!!o0,chrome_version:o0?+o0[1]:0,ios:tw,android:/Android\b/.test(Pn.userAgent),webkit:ew,safari:yT,webkit_version:ew?+(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent)||[0,0])[1]:0,tabSize:Ov.documentElement.style.tabSize!=null?"tab-size":"-moz-tab-size"};const PR=256;class Po extends Re{constructor(e){super(),this.text=e}get length(){return this.text.length}createDOM(e){this.setDOM(e||document.createTextNode(this.text))}sync(e){this.dom||this.createDOM(),this.dom.nodeValue!=this.text&&(e&&e.node==this.dom&&(e.written=!0),this.dom.nodeValue=this.text)}reuseDOM(e){e.nodeType==3&&this.createDOM(e)}merge(e,n,r){return r&&(!(r instanceof Po)||this.length-(n-e)+r.length>PR)?!1:(this.text=this.text.slice(0,e)+(r?r.text:"")+this.text.slice(n),this.markDirty(),!0)}split(e){let n=new Po(this.text.slice(e));return this.text=this.text.slice(0,e),this.markDirty(),n}localPosFromDOM(e,n){return e==this.dom?n:n?this.text.length:0}domAtPos(e){return new Dt(this.dom,e)}domBoundsAround(e,n,r){return{from:r,to:r+this.length,startDOM:this.dom,endDOM:this.dom.nextSibling}}coordsAt(e,n){return zv(this.dom,e,n)}}class Qr extends Re{constructor(e,n=[],r=0){super(),this.mark=e,this.children=n,this.length=r;for(let i of n)i.setParent(this)}setAttrs(e){if(pT(e),this.mark.class&&(e.className=this.mark.class),this.mark.attrs)for(let n in this.mark.attrs)e.setAttribute(n,this.mark.attrs[n]);return e}reuseDOM(e){e.nodeName==this.mark.tagName.toUpperCase()&&(this.setDOM(e),this.dirty|=6)}sync(e){this.dom?this.dirty&4&&this.setAttrs(this.dom):this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))),super.sync(e)}merge(e,n,r,i,o,s){return r&&(!(r instanceof Qr&&r.mark.eq(this.mark))||e&&o<=0||n<this.length&&s<=0)?!1:(bT(this,e,n,r?r.children:[],o-1,s-1),this.markDirty(),!0)}split(e){let n=[],r=0,i=-1,o=0;for(let a of this.children){let l=r+a.length;l>e&&n.push(r<e?a.split(e-r):a),i<0&&r>=e&&(i=o),r=l,o++}let s=this.length-e;return this.length=e,i>-1&&(this.children.length=i,this.markDirty()),new Qr(this.mark,n,s)}domAtPos(e){return kT(this,e)}coordsAt(e,n){return PT(this,e,n)}}function zv(t,e,n){let r=t.nodeValue.length;e>r&&(e=r);let i=e,o=e,s=0;e==0&&n<0||e==r&&n>=0?_.chrome||_.gecko||(e?(i--,s=1):o<r&&(o++,s=-1)):n<0?i--:o<r&&o++;let a=dl(t,i,o).getClientRects();if(!a.length)return fT;let l=a[(s?s<0:n>=0)?0:a.length-1];return _.safari&&!s&&l.width==0&&(l=Array.prototype.find.call(a,c=>c.width)||l),s?cx(l,s<0):l||null}class eo extends Re{constructor(e,n,r){super(),this.widget=e,this.length=n,this.side=r,this.prevWidget=null}static create(e,n,r){return new(e.customView||eo)(e,n,r)}split(e){let n=eo.create(this.widget,this.length-e,this.side);return this.length-=e,n}sync(){(!this.dom||!this.widget.updateDOM(this.dom))&&(this.dom&&this.prevWidget&&this.prevWidget.destroy(this.dom),this.prevWidget=null,this.setDOM(this.widget.toDOM(this.editorView)),this.dom.contentEditable="false")}getSide(){return this.side}merge(e,n,r,i,o,s){return r&&(!(r instanceof eo)||!this.widget.compare(r.widget)||e>0&&o<=0||n<this.length&&s<=0)?!1:(this.length=e+(r?r.length:0)+(this.length-n),!0)}become(e){return e.length==this.length&&e instanceof eo&&e.side==this.side&&this.widget.constructor==e.widget.constructor?(this.widget.eq(e.widget)||this.markDirty(!0),this.dom&&!this.prevWidget&&(this.prevWidget=this.widget),this.widget=e.widget,!0):!1}ignoreMutation(){return!0}ignoreEvent(e){return this.widget.ignoreEvent(e)}get overrideDOMText(){if(this.length==0)return Se.empty;let e=this;for(;e.parent;)e=e.parent;let n=e.editorView,r=n&&n.state.doc,i=this.posAtStart;return r?r.slice(i,i+this.length):Se.empty}domAtPos(e){return e==0?Dt.before(this.dom):Dt.after(this.dom,e==this.length)}domBoundsAround(){return null}coordsAt(e,n){let r=this.dom.getClientRects(),i=null;if(!r.length)return fT;for(let o=e>0?r.length-1:0;i=r[o],!(e>0?o==0:o==r.length-1||i.top<i.bottom);o+=e>0?-1:1);return this.length?i:cx(i,this.side>0)}get isEditable(){return!1}destroy(){super.destroy(),this.dom&&this.widget.destroy(this.dom)}}class xT extends eo{domAtPos(e){let{topView:n,text:r}=this.widget;return n?Vv(e,0,n,r,(i,o)=>i.domAtPos(o),i=>new Dt(r,Math.min(i,r.nodeValue.length))):new Dt(r,Math.min(e,r.nodeValue.length))}sync(){this.setDOM(this.widget.toDOM())}localPosFromDOM(e,n){let{topView:r,text:i}=this.widget;return r?ST(e,n,r,i):Math.min(n,this.length)}ignoreMutation(){return!1}get overrideDOMText(){return null}coordsAt(e,n){let{topView:r,text:i}=this.widget;return r?Vv(e,n,r,i,(o,s,a)=>o.coordsAt(s,a),(o,s)=>zv(i,o,s)):zv(i,e,n)}destroy(){var e;super.destroy(),(e=this.widget.topView)===null||e===void 0||e.destroy()}get isEditable(){return!0}canReuseDOM(){return!0}}function Vv(t,e,n,r,i,o){if(n instanceof Qr){for(let s=n.dom.firstChild;s;s=s.nextSibling){let a=Re.get(s);if(!a)return o(t,e);let l=ul(s,r),c=a.length+(l?r.nodeValue.length:0);if(t<c||t==c&&a.getSide()<=0)return l?Vv(t,e,a,r,i,o):i(a,t,e);t-=c}return i(n,n.length,-1)}else return n.dom==r?o(t,e):i(n,t,e)}function ST(t,e,n,r){if(n instanceof Qr)for(let i of n.children){let o=0,s=ul(i.dom,r);if(ul(i.dom,t))return o+(s?ST(t,e,i,r):i.localPosFromDOM(t,e));o+=s?r.nodeValue.length:i.length}else if(n.dom==r)return Math.min(e,r.nodeValue.length);return n.localPosFromDOM(t,e)}class fl extends Re{constructor(e){super(),this.side=e}get length(){return 0}merge(){return!1}become(e){return e instanceof fl&&e.side==this.side}split(){return new fl(this.side)}sync(){if(!this.dom){let e=document.createElement("img");e.className="cm-widgetBuffer",e.setAttribute("aria-hidden","true"),this.setDOM(e)}}getSide(){return this.side}domAtPos(e){return Dt.before(this.dom)}localPosFromDOM(){return 0}domBoundsAround(){return null}coordsAt(e){let n=this.dom.getBoundingClientRect(),r=OR(this,this.side>0?-1:1);return r&&r.top<n.bottom&&r.bottom>n.top?{left:n.left,right:n.right,top:r.top,bottom:r.bottom}:n}get overrideDOMText(){return Se.empty}}Po.prototype.children=eo.prototype.children=fl.prototype.children=ux;function OR(t,e){let n=t.parent,r=n?n.children.indexOf(t):-1;for(;n&&r>=0;)if(e<0?r>0:r<n.children.length){let i=n.children[r+e];if(i instanceof Po){let o=i.coordsAt(e<0?i.length:0,e);if(o)return o}r+=e}else if(n instanceof Qr&&n.parent)r=n.parent.children.indexOf(n)+(e<0?0:1),n=n.parent;else{let i=n.dom.lastChild;if(i&&i.nodeName=="BR")return i.getClientRects()[0];break}}function kT(t,e){let n=t.dom,{children:r}=t,i=0;for(let o=0;i<r.length;i++){let s=r[i],a=o+s.length;if(!(a==o&&s.getSide()<=0)){if(e>o&&e<a&&s.dom.parentNode==n)return s.domAtPos(e-o);if(e<=o)break;o=a}}for(let o=i;o>0;o--){let s=r[o-1];if(s.dom.parentNode==n)return s.domAtPos(s.length)}for(let o=i;o<r.length;o++){let s=r[o];if(s.dom.parentNode==n)return s.domAtPos(0)}return new Dt(n,0)}function wT(t,e,n){let r,{children:i}=t;n>0&&e instanceof Qr&&i.length&&(r=i[i.length-1])instanceof Qr&&r.mark.eq(e.mark)?wT(r,e.children[0],n-1):(i.push(e),e.setParent(t)),t.length+=e.length}function PT(t,e,n){let r=null,i=-1,o=null,s=-1;function a(c,u){for(let d=0,f=0;d<c.children.length&&f<=u;d++){let h=c.children[d],p=f+h.length;p>=u&&(h.children.length?a(h,u-f):!o&&(p>u||f==p&&h.getSide()>0)?(o=h,s=u-f):(f<u||f==p&&h.getSide()<0)&&(r=h,i=u-f)),f=p}}a(t,e);let l=(n<0?r:o)||r||o;return l?l.coordsAt(Math.max(0,l==r?i:s),n):CR(t)}function CR(t){let e=t.dom.lastChild;if(!e)return t.dom.getBoundingClientRect();let n=Ou(e);return n[n.length-1]||null}function Ev(t,e){for(let n in t)n=="class"&&e.class?e.class+=" "+t.class:n=="style"&&e.style?e.style+=";"+t.style:e[n]=t[n];return e}function dx(t,e){if(t==e)return!0;if(!t||!e)return!1;let n=Object.keys(t),r=Object.keys(e);if(n.length!=r.length)return!1;for(let i of n)if(r.indexOf(i)==-1||t[i]!==e[i])return!1;return!0}function Nv(t,e,n){let r=null;if(e)for(let i in e)n&&i in n||t.removeAttribute(r=i);if(n)for(let i in n)e&&e[i]==n[i]||t.setAttribute(r=i,n[i]);return!!r}class Ni{eq(e){return!1}updateDOM(e){return!1}compare(e){return this==e||this.constructor==e.constructor&&this.eq(e)}get estimatedHeight(){return-1}ignoreEvent(e){return!0}get customView(){return null}destroy(e){}}var Ae=function(t){return t[t.Text=0]="Text",t[t.WidgetBefore=1]="WidgetBefore",t[t.WidgetAfter=2]="WidgetAfter",t[t.WidgetRange=3]="WidgetRange",t}(Ae||(Ae={}));class G extends Es{constructor(e,n,r,i){super(),this.startSide=e,this.endSide=n,this.widget=r,this.spec=i}get heightRelevant(){return!1}static mark(e){return new Sm(e)}static widget(e){let n=e.side||0,r=!!e.block;return n+=r?n>0?3e8:-4e8:n>0?1e8:-1e8,new Ns(e,n,n,r,e.widget||null,!1)}static replace(e){let n=!!e.block,r,i;if(e.isBlockGap)r=-5e8,i=4e8;else{let{start:o,end:s}=OT(e,n);r=(o?n?-3e8:-1:5e8)-1,i=(s?n?2e8:1:-6e8)+1}return new Ns(e,r,i,n,e.widget||null,!0)}static line(e){return new ad(e)}static set(e,n=!1){return Pe.of(e,n)}hasHeight(){return this.widget?this.widget.estimatedHeight>-1:!1}}G.none=Pe.empty;class Sm extends G{constructor(e){let{start:n,end:r}=OT(e);super(n?-1:5e8,r?1:-6e8,null,e),this.tagName=e.tagName||"span",this.class=e.class||"",this.attrs=e.attributes||null}eq(e){return this==e||e instanceof Sm&&this.tagName==e.tagName&&this.class==e.class&&dx(this.attrs,e.attrs)}range(e,n=e){if(e>=n)throw new RangeError("Mark decorations may not be empty");return super.range(e,n)}}Sm.prototype.point=!1;class ad extends G{constructor(e){super(-2e8,-2e8,null,e)}eq(e){return e instanceof ad&&dx(this.spec.attributes,e.spec.attributes)}range(e,n=e){if(n!=e)throw new RangeError("Line decoration ranges must be zero-length");return super.range(e,n)}}ad.prototype.mapMode=Kt.TrackBefore;ad.prototype.point=!0;class Ns extends G{constructor(e,n,r,i,o,s){super(n,r,o,e),this.block=i,this.isReplace=s,this.mapMode=i?n<=0?Kt.TrackBefore:Kt.TrackAfter:Kt.TrackDel}get type(){return this.startSide<this.endSide?Ae.WidgetRange:this.startSide<=0?Ae.WidgetBefore:Ae.WidgetAfter}get heightRelevant(){return this.block||!!this.widget&&this.widget.estimatedHeight>=5}eq(e){return e instanceof Ns&&TR(this.widget,e.widget)&&this.block==e.block&&this.startSide==e.startSide&&this.endSide==e.endSide}range(e,n=e){if(this.isReplace&&(e>n||e==n&&this.startSide>0&&this.endSide<=0))throw new RangeError("Invalid range for replacement decoration");if(!this.isReplace&&n!=e)throw new RangeError("Widget decorations can only have zero-length ranges");return super.range(e,n)}}Ns.prototype.point=!0;function OT(t,e=!1){let{inclusiveStart:n,inclusiveEnd:r}=t;return n==null&&(n=t.inclusive),r==null&&(r=t.inclusive),{start:n!=null?n:e,end:r!=null?r:e}}function TR(t,e){return t==e||!!(t&&e&&t.compare(e))}function Iv(t,e,n,r=0){let i=n.length-1;i>=0&&n[i]+r>=t?n[i]=Math.max(n[i],e):n.push(t,e)}class qt extends Re{constructor(){super(...arguments),this.children=[],this.length=0,this.prevAttrs=void 0,this.attrs=null,this.breakAfter=0}merge(e,n,r,i,o,s){if(r){if(!(r instanceof qt))return!1;this.dom||r.transferDOM(this)}return i&&this.setDeco(r?r.attrs:null),bT(this,e,n,r?r.children:[],o,s),!0}split(e){let n=new qt;if(n.breakAfter=this.breakAfter,this.length==0)return n;let{i:r,off:i}=this.childPos(e);i&&(n.append(this.children[r].split(i),0),this.children[r].merge(i,this.children[r].length,null,!1,0,0),r++);for(let o=r;o<this.children.length;o++)n.append(this.children[o],0);for(;r>0&&this.children[r-1].length==0;)this.children[--r].destroy();return this.children.length=r,this.markDirty(),this.length=e,n}transferDOM(e){!this.dom||(this.markDirty(),e.setDOM(this.dom),e.prevAttrs=this.prevAttrs===void 0?this.attrs:this.prevAttrs,this.prevAttrs=void 0,this.dom=null)}setDeco(e){dx(this.attrs,e)||(this.dom&&(this.prevAttrs=this.attrs,this.markDirty()),this.attrs=e)}append(e,n){wT(this,e,n)}addLineDeco(e){let n=e.spec.attributes,r=e.spec.class;n&&(this.attrs=Ev(n,this.attrs||{})),r&&(this.attrs=Ev({class:r},this.attrs||{}))}domAtPos(e){return kT(this,e)}reuseDOM(e){e.nodeName=="DIV"&&(this.setDOM(e),this.dirty|=6)}sync(e){var n;this.dom?this.dirty&4&&(pT(this.dom),this.dom.className="cm-line",this.prevAttrs=this.attrs?null:void 0):(this.setDOM(document.createElement("div")),this.dom.className="cm-line",this.prevAttrs=this.attrs?null:void 0),this.prevAttrs!==void 0&&(Nv(this.dom,this.prevAttrs,this.attrs),this.dom.classList.add("cm-line"),this.prevAttrs=void 0),super.sync(e);let r=this.dom.lastChild;for(;r&&Re.get(r)instanceof Qr;)r=r.lastChild;if(!r||!this.length||r.nodeName!="BR"&&((n=Re.get(r))===null||n===void 0?void 0:n.isEditable)==!1&&(!_.ios||!this.children.some(i=>i instanceof Po))){let i=document.createElement("BR");i.cmIgnore=!0,this.dom.appendChild(i)}}measureTextSize(){if(this.children.length==0||this.length>20)return null;let e=0;for(let n of this.children){if(!(n instanceof Po)||/[^ -~]/.test(n.text))return null;let r=Ou(n.dom);if(r.length!=1)return null;e+=r[0].width}return e?{lineHeight:this.dom.getBoundingClientRect().height,charWidth:e/this.length}:null}coordsAt(e,n){return PT(this,e,n)}become(e){return!1}get type(){return Ae.Text}static find(e,n){for(let r=0,i=0;r<e.children.length;r++){let o=e.children[r],s=i+o.length;if(s>=n){if(o instanceof qt)return o;if(s>n)break}i=s+o.breakAfter}return null}}class bs extends Re{constructor(e,n,r){super(),this.widget=e,this.length=n,this.type=r,this.breakAfter=0,this.prevWidget=null}merge(e,n,r,i,o,s){return r&&(!(r instanceof bs)||!this.widget.compare(r.widget)||e>0&&o<=0||n<this.length&&s<=0)?!1:(this.length=e+(r?r.length:0)+(this.length-n),!0)}domAtPos(e){return e==0?Dt.before(this.dom):Dt.after(this.dom,e==this.length)}split(e){let n=this.length-e;this.length=e;let r=new bs(this.widget,n,this.type);return r.breakAfter=this.breakAfter,r}get children(){return ux}sync(){(!this.dom||!this.widget.updateDOM(this.dom))&&(this.dom&&this.prevWidget&&this.prevWidget.destroy(this.dom),this.prevWidget=null,this.setDOM(this.widget.toDOM(this.editorView)),this.dom.contentEditable="false")}get overrideDOMText(){return this.parent?this.parent.view.state.doc.slice(this.posAtStart,this.posAtEnd):Se.empty}domBoundsAround(){return null}become(e){return e instanceof bs&&e.type==this.type&&e.widget.constructor==this.widget.constructor?(e.widget.eq(this.widget)||this.markDirty(!0),this.dom&&!this.prevWidget&&(this.prevWidget=this.widget),this.widget=e.widget,this.length=e.length,this.breakAfter=e.breakAfter,!0):!1}ignoreMutation(){return!0}ignoreEvent(e){return this.widget.ignoreEvent(e)}destroy(){super.destroy(),this.dom&&this.widget.destroy(this.dom)}}class fx{constructor(e,n,r,i){this.doc=e,this.pos=n,this.end=r,this.disallowBlockEffectsFor=i,this.content=[],this.curLine=null,this.breakAtStart=0,this.pendingBuffer=0,this.atCursorPos=!0,this.openStart=-1,this.openEnd=-1,this.text="",this.textOff=0,this.cursor=e.iter(),this.skip=n}posCovered(){if(this.content.length==0)return!this.breakAtStart&&this.doc.lineAt(this.pos).from!=this.pos;let e=this.content[this.content.length-1];return!e.breakAfter&&!(e instanceof bs&&e.type==Ae.WidgetBefore)}getLine(){return this.curLine||(this.content.push(this.curLine=new qt),this.atCursorPos=!0),this.curLine}flushBuffer(e){this.pendingBuffer&&(this.curLine.append(_d(new fl(-1),e),e.length),this.pendingBuffer=0)}addBlockWidget(e){this.flushBuffer([]),this.curLine=null,this.content.push(e)}finish(e){e?this.pendingBuffer=0:this.flushBuffer([]),this.posCovered()||this.getLine()}buildText(e,n,r){for(;e>0;){if(this.textOff==this.text.length){let{value:o,lineBreak:s,done:a}=this.cursor.next(this.skip);if(this.skip=0,a)throw new Error("Ran out of text content when drawing inline views");if(s){this.posCovered()||this.getLine(),this.content.length?this.content[this.content.length-1].breakAfter=1:this.breakAtStart=1,this.flushBuffer([]),this.curLine=null,e--;continue}else this.text=o,this.textOff=0}let i=Math.min(this.text.length-this.textOff,e,512);this.flushBuffer(n.slice(n.length-r)),this.getLine().append(_d(new Po(this.text.slice(this.textOff,this.textOff+i)),n),r),this.atCursorPos=!0,this.textOff+=i,e-=i,r=0}}span(e,n,r,i){this.buildText(n-e,r,i),this.pos=n,this.openStart<0&&(this.openStart=i)}point(e,n,r,i,o,s){if(this.disallowBlockEffectsFor[s]&&r instanceof Ns){if(r.block)throw new RangeError("Block decorations may not be specified via plugins");if(n>this.doc.lineAt(this.pos).to)throw new RangeError("Decorations that replace line breaks may not be specified via plugins")}let a=n-e;if(r instanceof Ns)if(r.block){let{type:l}=r;l==Ae.WidgetAfter&&!this.posCovered()&&this.getLine(),this.addBlockWidget(new bs(r.widget||new nw("div"),a,l))}else{let l=eo.create(r.widget||new nw("span"),a,a?0:r.startSide),c=this.atCursorPos&&!l.isEditable&&o<=i.length&&(e<n||r.startSide>0),u=!l.isEditable&&(e<n||r.startSide<=0),d=this.getLine();this.pendingBuffer==2&&!c&&(this.pendingBuffer=0),this.flushBuffer(i),c&&(d.append(_d(new fl(1),i),o),o=i.length+Math.max(0,o-i.length)),d.append(_d(l,i),o),this.atCursorPos=u,this.pendingBuffer=u?e<n?1:2:0}else this.doc.lineAt(this.pos).from==this.pos&&this.getLine().addLineDeco(r);a&&(this.textOff+a<=this.text.length?this.textOff+=a:(this.skip+=a-(this.text.length-this.textOff),this.text="",this.textOff=0),this.pos=n),this.openStart<0&&(this.openStart=o)}static build(e,n,r,i,o){let s=new fx(e,n,r,o);return s.openEnd=Pe.spans(i,n,r,s),s.openStart<0&&(s.openStart=s.openEnd),s.finish(s.openEnd),s}}function _d(t,e){for(let n of e)t=new Qr(n,[t],t.length);return t}class nw extends Ni{constructor(e){super(),this.tag=e}eq(e){return e.tag==this.tag}toDOM(){return document.createElement(this.tag)}updateDOM(e){return e.nodeName.toLowerCase()==this.tag}}const CT=$.define(),TT=$.define(),zT=$.define(),VT=$.define(),Mv=$.define(),ET=$.define(),NT=$.define({combine:t=>t.some(e=>e)}),IT=$.define({combine:t=>t.some(e=>e)});class rp{constructor(e,n="nearest",r="nearest",i=5,o=5){this.range=e,this.y=n,this.x=r,this.yMargin=i,this.xMargin=o}map(e){return e.empty?this:new rp(this.range.map(e),this.y,this.x,this.yMargin,this.xMargin)}}const rw=se.define({map:(t,e)=>t.map(e)});function zn(t,e,n){let r=t.facet(VT);r.length?r[0](e):window.onerror?window.onerror(String(e),n,void 0,void 0,e):n?console.error(n+":",e):console.error(e)}const km=$.define({combine:t=>t.length?t[0]:!0});let zR=0;const vc=$.define();class nt{constructor(e,n,r,i){this.id=e,this.create=n,this.domEventHandlers=r,this.extension=i(this)}static define(e,n){const{eventHandlers:r,provide:i,decorations:o}=n||{};return new nt(zR++,e,r,s=>{let a=[vc.of(s)];return o&&a.push(Tu.of(l=>{let c=l.plugin(s);return c?o(c):G.none})),i&&a.push(i(s)),a})}static fromClass(e,n){return nt.define(r=>new e(r),n)}}class s0{constructor(e){this.spec=e,this.mustUpdate=null,this.value=null}update(e){if(this.value){if(this.mustUpdate){let n=this.mustUpdate;if(this.mustUpdate=null,this.value.update)try{this.value.update(n)}catch(r){if(zn(n.state,r,"CodeMirror plugin crashed"),this.value.destroy)try{this.value.destroy()}catch{}this.deactivate()}}}else if(this.spec)try{this.value=this.spec.create(e)}catch(n){zn(e.state,n,"CodeMirror plugin crashed"),this.deactivate()}return this}destroy(e){var n;if(!((n=this.value)===null||n===void 0)&&n.destroy)try{this.value.destroy()}catch(r){zn(e.state,r,"CodeMirror plugin crashed")}}deactivate(){this.spec=this.value=null}}const MT=$.define(),hx=$.define(),Tu=$.define(),AT=$.define(),LT=$.define(),yc=$.define();class Yr{constructor(e,n,r,i){this.fromA=e,this.toA=n,this.fromB=r,this.toB=i}join(e){return new Yr(Math.min(this.fromA,e.fromA),Math.max(this.toA,e.toA),Math.min(this.fromB,e.fromB),Math.max(this.toB,e.toB))}addToSet(e){let n=e.length,r=this;for(;n>0;n--){let i=e[n-1];if(!(i.fromA>r.toA)){if(i.toA<r.fromA)break;r=r.join(i),e.splice(n-1,1)}}return e.splice(n,0,r),e}static extendWithRanges(e,n){if(n.length==0)return e;let r=[];for(let i=0,o=0,s=0,a=0;;i++){let l=i==e.length?null:e[i],c=s-a,u=l?l.fromB:1e9;for(;o<n.length&&n[o]<u;){let d=n[o],f=n[o+1],h=Math.max(a,d),p=Math.min(u,f);if(h<=p&&new Yr(h+c,p+c,h,p).addToSet(r),f>u)break;o+=2}if(!l)return r;new Yr(l.fromA,l.toA,l.fromB,l.toB).addToSet(r),s=l.toA,a=l.toB}}}class ip{constructor(e,n,r){this.view=e,this.state=n,this.transactions=r,this.flags=0,this.startState=e.state,this.changes=ht.empty(this.startState.doc.length);for(let s of r)this.changes=this.changes.compose(s.changes);let i=[];this.changes.iterChangedRanges((s,a,l,c)=>i.push(new Yr(s,a,l,c))),this.changedRanges=i;let o=e.hasFocus;o!=e.inputState.notifiedFocused&&(e.inputState.notifiedFocused=o,this.flags|=1)}static create(e,n,r){return new ip(e,n,r)}get viewportChanged(){return(this.flags&4)>0}get heightChanged(){return(this.flags&2)>0}get geometryChanged(){return this.docChanged||(this.flags&10)>0}get focusChanged(){return(this.flags&1)>0}get docChanged(){return!this.changes.empty}get selectionSet(){return this.transactions.some(e=>e.selection)}get empty(){return this.flags==0&&this.transactions.length==0}}var Je=function(t){return t[t.LTR=0]="LTR",t[t.RTL=1]="RTL",t}(Je||(Je={}));const Av=Je.LTR,VR=Je.RTL;function ZT(t){let e=[];for(let n=0;n<t.length;n++)e.push(1<<+t[n]);return e}const ER=ZT("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"),NR=ZT("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"),Lv=Object.create(null),Cr=[];for(let t of["()","[]","{}"]){let e=t.charCodeAt(0),n=t.charCodeAt(1);Lv[e]=n,Lv[n]=-e}function IR(t){return t<=247?ER[t]:1424<=t&&t<=1524?2:1536<=t&&t<=1785?NR[t-1536]:1774<=t&&t<=2220?4:8192<=t&&t<=8203?256:64336<=t&&t<=65023?4:t==8204?256:1}const MR=/[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/;class Ga{constructor(e,n,r){this.from=e,this.to=n,this.level=r}get dir(){return this.level%2?VR:Av}side(e,n){return this.dir==n==e?this.to:this.from}static find(e,n,r,i){let o=-1;for(let s=0;s<e.length;s++){let a=e[s];if(a.from<=n&&a.to>=n){if(a.level==r)return s;(o<0||(i!=0?i<0?a.from<n:a.to>n:e[o].level>a.level))&&(o=s)}}if(o<0)throw new RangeError("Index out of range");return o}}const Ue=[];function AR(t,e){let n=t.length,r=e==Av?1:2,i=e==Av?2:1;if(!t||r==1&&!MR.test(t))return XT(n);for(let s=0,a=r,l=r;s<n;s++){let c=IR(t.charCodeAt(s));c==512?c=a:c==8&&l==4&&(c=16),Ue[s]=c==4?2:c,c&7&&(l=c),a=c}for(let s=0,a=r,l=r;s<n;s++){let c=Ue[s];if(c==128)s<n-1&&a==Ue[s+1]&&a&24?c=Ue[s]=a:Ue[s]=256;else if(c==64){let u=s+1;for(;u<n&&Ue[u]==64;)u++;let d=s&&a==8||u<n&&Ue[u]==8?l==1?1:8:256;for(let f=s;f<u;f++)Ue[f]=d;s=u-1}else c==8&&l==1&&(Ue[s]=1);a=c,c&7&&(l=c)}for(let s=0,a=0,l=0,c,u,d;s<n;s++)if(u=Lv[c=t.charCodeAt(s)])if(u<0){for(let f=a-3;f>=0;f-=3)if(Cr[f+1]==-u){let h=Cr[f+2],p=h&2?r:h&4?h&1?i:r:0;p&&(Ue[s]=Ue[Cr[f]]=p),a=f;break}}else{if(Cr.length==189)break;Cr[a++]=s,Cr[a++]=c,Cr[a++]=l}else if((d=Ue[s])==2||d==1){let f=d==r;l=f?0:1;for(let h=a-3;h>=0;h-=3){let p=Cr[h+2];if(p&2)break;if(f)Cr[h+2]|=2;else{if(p&4)break;Cr[h+2]|=4}}}for(let s=0;s<n;s++)if(Ue[s]==256){let a=s+1;for(;a<n&&Ue[a]==256;)a++;let l=(s?Ue[s-1]:r)==1,c=(a<n?Ue[a]:r)==1,u=l==c?l?1:2:r;for(let d=s;d<a;d++)Ue[d]=u;s=a-1}let o=[];if(r==1)for(let s=0;s<n;){let a=s,l=Ue[s++]!=1;for(;s<n&&l==(Ue[s]!=1);)s++;if(l)for(let c=s;c>a;){let u=c,d=Ue[--c]!=2;for(;c>a&&d==(Ue[c-1]!=2);)c--;o.push(new Ga(c,u,d?2:1))}else o.push(new Ga(a,s,0))}else for(let s=0;s<n;){let a=s,l=Ue[s++]==2;for(;s<n&&l==(Ue[s]==2);)s++;o.push(new Ga(a,s,l?1:2))}return o}function XT(t){return[new Ga(0,t,0)]}let WT="";function LR(t,e,n,r,i){var o;let s=r.head-t.from,a=-1;if(s==0){if(!i||!t.length)return null;e[0].level!=n&&(s=e[0].side(!1,n),a=0)}else if(s==t.length){if(i)return null;let f=e[e.length-1];f.level!=n&&(s=f.side(!0,n),a=e.length-1)}a<0&&(a=Ga.find(e,s,(o=r.bidiLevel)!==null&&o!==void 0?o:-1,r.assoc));let l=e[a];s==l.side(i,n)&&(l=e[a+=i?1:-1],s=l.side(!i,n));let c=i==(l.dir==n),u=Ut(t.text,s,c);if(WT=t.text.slice(Math.min(s,u),Math.max(s,u)),u!=l.side(i,n))return A.cursor(u+t.from,c?-1:1,l.level);let d=a==(i?e.length-1:0)?null:e[a+(i?1:-1)];return!d&&l.level!=n?A.cursor(i?t.to:t.from,i?-1:1,n):d&&d.level<l.level?A.cursor(d.side(!i,n)+t.from,i?1:-1,d.level):A.cursor(u+t.from,i?-1:1,l.level)}const to="\uFFFF";class RT{constructor(e,n){this.points=e,this.text="",this.lineSeparator=n.facet(pe.lineSeparator)}append(e){this.text+=e}lineBreak(){this.text+=to}readRange(e,n){if(!e)return this;let r=e.parentNode;for(let i=e;;){this.findPointBefore(r,i),this.readNode(i);let o=i.nextSibling;if(o==n)break;let s=Re.get(i),a=Re.get(o);(s&&a?s.breakAfter:(s?s.breakAfter:iw(i))||iw(o)&&(i.nodeName!="BR"||i.cmIgnore))&&this.lineBreak(),i=o}return this.findPointBefore(r,n),this}readTextNode(e){let n=e.nodeValue;for(let r of this.points)r.node==e&&(r.pos=this.text.length+Math.min(r.offset,n.length));for(let r=0,i=this.lineSeparator?null:/\r\n?|\n/g;;){let o=-1,s=1,a;if(this.lineSeparator?(o=n.indexOf(this.lineSeparator,r),s=this.lineSeparator.length):(a=i.exec(n))&&(o=a.index,s=a[0].length),this.append(n.slice(r,o<0?n.length:o)),o<0)break;if(this.lineBreak(),s>1)for(let l of this.points)l.node==e&&l.pos>this.text.length&&(l.pos-=s-1);r=o+s}}readNode(e){if(e.cmIgnore)return;let n=Re.get(e),r=n&&n.overrideDOMText;if(r!=null){this.findPointInside(e,r.length);for(let i=r.iter();!i.next().done;)i.lineBreak?this.lineBreak():this.append(i.value)}else e.nodeType==3?this.readTextNode(e):e.nodeName=="BR"?e.nextSibling&&this.lineBreak():e.nodeType==1&&this.readRange(e.firstChild,null)}findPointBefore(e,n){for(let r of this.points)r.node==e&&e.childNodes[r.offset]==n&&(r.pos=this.text.length)}findPointInside(e,n){for(let r of this.points)(e.nodeType==3?r.node==e:e.contains(r.node))&&(r.pos=this.text.length+Math.min(n,r.offset))}}function iw(t){return t.nodeType==1&&/^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(t.nodeName)}class ow{constructor(e,n){this.node=e,this.offset=n,this.pos=-1}}class sw extends Re{constructor(e){super(),this.view=e,this.compositionDeco=G.none,this.decorations=[],this.dynamicDecorationMap=[],this.minWidth=0,this.minWidthFrom=0,this.minWidthTo=0,this.impreciseAnchor=null,this.impreciseHead=null,this.forceSelection=!1,this.lastUpdate=Date.now(),this.setDOM(e.contentDOM),this.children=[new qt],this.children[0].setParent(this),this.updateDeco(),this.updateInner([new Yr(0,0,0,e.state.doc.length)],0)}get editorView(){return this.view}get length(){return this.view.state.doc.length}update(e){let n=e.changedRanges;this.minWidth>0&&n.length&&(n.every(({fromA:s,toA:a})=>a<this.minWidthFrom||s>this.minWidthTo)?(this.minWidthFrom=e.changes.mapPos(this.minWidthFrom,1),this.minWidthTo=e.changes.mapPos(this.minWidthTo,1)):this.minWidth=this.minWidthFrom=this.minWidthTo=0),this.view.inputState.composing<0?this.compositionDeco=G.none:(e.transactions.length||this.dirty)&&(this.compositionDeco=XR(this.view,e.changes)),(_.ie||_.chrome)&&!this.compositionDeco.size&&e&&e.state.doc.lines!=e.startState.doc.lines&&(this.forceSelection=!0);let r=this.decorations,i=this.updateDeco(),o=HR(r,i,e.changes);return n=Yr.extendWithRanges(n,o),this.dirty==0&&n.length==0?!1:(this.updateInner(n,e.startState.doc.length),e.transactions.length&&(this.lastUpdate=Date.now()),!0)}updateInner(e,n){this.view.viewState.mustMeasureContent=!0,this.updateChildren(e,n);let{observer:r}=this.view;r.ignore(()=>{this.dom.style.height=this.view.viewState.contentHeight+"px",this.dom.style.flexBasis=this.minWidth?this.minWidth+"px":"";let o=_.chrome||_.ios?{node:r.selectionRange.focusNode,written:!1}:void 0;this.sync(o),this.dirty=0,o&&(o.written||r.selectionRange.focusNode!=o.node)&&(this.forceSelection=!0),this.dom.style.height=""});let i=[];if(this.view.viewport.from||this.view.viewport.to<this.view.state.doc.length)for(let o of this.children)o instanceof bs&&o.widget instanceof aw&&i.push(o.dom);r.updateGaps(i)}updateChildren(e,n){let r=this.childCursor(n);for(let i=e.length-1;;i--){let o=i>=0?e[i]:null;if(!o)break;let{fromA:s,toA:a,fromB:l,toB:c}=o,{content:u,breakAtStart:d,openStart:f,openEnd:h}=fx.build(this.view.state.doc,l,c,this.decorations,this.dynamicDecorationMap),{i:p,off:m}=r.findPos(a,1),{i:v,off:g}=r.findPos(s,-1);gT(this,v,g,p,m,u,d,f,h)}}updateSelection(e=!1,n=!1){if((e||!this.view.observer.selectionRange.focusNode)&&this.view.observer.readSelectionRange(),!(n||this.mayControlSelection()))return;let r=this.forceSelection;this.forceSelection=!1;let i=this.view.state.selection.main,o=this.domAtPos(i.anchor),s=i.empty?o:this.domAtPos(i.head);if(_.gecko&&i.empty&&ZR(o)){let l=document.createTextNode("");this.view.observer.ignore(()=>o.node.insertBefore(l,o.node.childNodes[o.offset]||null)),o=s=new Dt(l,0),r=!0}let a=this.view.observer.selectionRange;(r||!a.focusNode||!tp(o.node,o.offset,a.anchorNode,a.anchorOffset)||!tp(s.node,s.offset,a.focusNode,a.focusOffset))&&(this.view.observer.ignore(()=>{_.android&&_.chrome&&this.dom.contains(a.focusNode)&&DR(a.focusNode,this.dom)&&(this.dom.blur(),this.dom.focus({preventScroll:!0}));let l=ep(this.view.root);if(l)if(i.empty){if(_.gecko){let c=RR(o.node,o.offset);if(c&&c!=3){let u=HT(o.node,o.offset,c==1?1:-1);u&&(o=new Dt(u,c==1?0:u.nodeValue.length))}}l.collapse(o.node,o.offset),i.bidiLevel!=null&&a.cursorBidiLevel!=null&&(a.cursorBidiLevel=i.bidiLevel)}else if(l.extend){l.collapse(o.node,o.offset);try{l.extend(s.node,s.offset)}catch{}}else{let c=document.createRange();i.anchor>i.head&&([o,s]=[s,o]),c.setEnd(s.node,s.offset),c.setStart(o.node,o.offset),l.removeAllRanges(),l.addRange(c)}}),this.view.observer.setSelectionRange(o,s)),this.impreciseAnchor=o.precise?null:new Dt(a.anchorNode,a.anchorOffset),this.impreciseHead=s.precise?null:new Dt(a.focusNode,a.focusOffset)}enforceCursorAssoc(){if(this.compositionDeco.size)return;let{view:e}=this,n=e.state.selection.main,r=ep(e.root),{anchorNode:i,anchorOffset:o}=e.observer.selectionRange;if(!r||!n.empty||!n.assoc||!r.modify)return;let s=qt.find(this,n.head);if(!s)return;let a=s.posAtStart;if(n.head==a||n.head==a+s.length)return;let l=this.coordsAt(n.head,-1),c=this.coordsAt(n.head,1);if(!l||!c||l.bottom>c.top)return;let u=this.domAtPos(n.head+n.assoc);r.collapse(u.node,u.offset),r.modify("move",n.assoc<0?"forward":"backward","lineboundary"),e.observer.readSelectionRange();let d=e.observer.selectionRange;e.docView.posFromDOM(d.anchorNode,d.anchorOffset)!=n.from&&r.collapse(i,o)}mayControlSelection(){let e=this.view.root.activeElement;return e==this.dom||rh(this.dom,this.view.observer.selectionRange)&&!(e&&this.dom.contains(e))}nearest(e){for(let n=e;n;){let r=Re.get(n);if(r&&r.rootView==this)return r;n=n.parentNode}return null}posFromDOM(e,n){let r=this.nearest(e);if(!r)throw new RangeError("Trying to find position for a DOM position outside of the document");return r.localPosFromDOM(e,n)+r.posAtStart}domAtPos(e){let{i:n,off:r}=this.childCursor().findPos(e,-1);for(;n<this.children.length-1;){let i=this.children[n];if(r<i.length||i instanceof qt)break;n++,r=0}return this.children[n].domAtPos(r)}coordsAt(e,n){for(let r=this.length,i=this.children.length-1;;i--){let o=this.children[i],s=r-o.breakAfter-o.length;if(e>s||e==s&&o.type!=Ae.WidgetBefore&&o.type!=Ae.WidgetAfter&&(!i||n==2||this.children[i-1].breakAfter||this.children[i-1].type==Ae.WidgetBefore&&n>-2))return o.coordsAt(e-s,n);r=s}}measureVisibleLineHeights(e){let n=[],{from:r,to:i}=e,o=this.view.contentDOM.clientWidth,s=o>Math.max(this.view.scrollDOM.clientWidth,this.minWidth)+1,a=-1,l=this.view.textDirection==Je.LTR;for(let c=0,u=0;u<this.children.length;u++){let d=this.children[u],f=c+d.length;if(f>i)break;if(c>=r){let h=d.dom.getBoundingClientRect();if(n.push(h.height),s){let p=d.dom.lastChild,m=p?Ou(p):[];if(m.length){let v=m[m.length-1],g=l?v.right-h.left:h.right-v.left;g>a&&(a=g,this.minWidth=o,this.minWidthFrom=c,this.minWidthTo=f)}}}c=f+d.breakAfter}return n}textDirectionAt(e){let{i:n}=this.childPos(e,1);return getComputedStyle(this.children[n].dom).direction=="rtl"?Je.RTL:Je.LTR}measureTextSize(){for(let i of this.children)if(i instanceof qt){let o=i.measureTextSize();if(o)return o}let e=document.createElement("div"),n,r;return e.className="cm-line",e.style.width="99999px",e.textContent="abc def ghi jkl mno pqr stu",this.view.observer.ignore(()=>{this.dom.appendChild(e);let i=Ou(e.firstChild)[0];n=e.getBoundingClientRect().height,r=i?i.width/27:7,e.remove()}),{lineHeight:n,charWidth:r}}childCursor(e=this.length){let n=this.children.length;return n&&(e-=this.children[--n].length),new mT(this.children,e,n)}computeBlockGapDeco(){let e=[],n=this.view.viewState;for(let r=0,i=0;;i++){let o=i==n.viewports.length?null:n.viewports[i],s=o?o.from-1:this.length;if(s>r){let a=n.lineBlockAt(s).bottom-n.lineBlockAt(r).top;e.push(G.replace({widget:new aw(a),block:!0,inclusive:!0,isBlockGap:!0}).range(r,s))}if(!o)break;r=o.to+1}return G.set(e)}updateDeco(){let e=this.view.state.facet(Tu).map((n,r)=>(this.dynamicDecorationMap[r]=typeof n=="function")?n(this.view):n);for(let n=e.length;n<e.length+3;n++)this.dynamicDecorationMap[n]=!1;return this.decorations=[...e,this.compositionDeco,this.computeBlockGapDeco(),this.view.viewState.lineGapDeco]}scrollIntoView(e){let{range:n}=e,r=this.coordsAt(n.head,n.empty?n.assoc:n.head>n.anchor?-1:1),i;if(!r)return;!n.empty&&(i=this.coordsAt(n.anchor,n.anchor>n.head?-1:1))&&(r={left:Math.min(r.left,i.left),top:Math.min(r.top,i.top),right:Math.max(r.right,i.right),bottom:Math.max(r.bottom,i.bottom)});let o=0,s=0,a=0,l=0;for(let u of this.view.state.facet(LT).map(d=>d(this.view)))if(u){let{left:d,right:f,top:h,bottom:p}=u;d!=null&&(o=Math.max(o,d)),f!=null&&(s=Math.max(s,f)),h!=null&&(a=Math.max(a,h)),p!=null&&(l=Math.max(l,p))}let c={left:r.left-o,top:r.top-a,right:r.right+s,bottom:r.bottom+l};xR(this.view.scrollDOM,c,n.head<n.anchor?-1:1,e.x,e.y,e.xMargin,e.yMargin,this.view.textDirection==Je.LTR)}}function ZR(t){return t.node.nodeType==1&&t.node.firstChild&&(t.offset==0||t.node.childNodes[t.offset-1].contentEditable=="false")&&(t.offset==t.node.childNodes.length||t.node.childNodes[t.offset].contentEditable=="false")}class aw extends Ni{constructor(e){super(),this.height=e}toDOM(){let e=document.createElement("div");return this.updateDOM(e),e}eq(e){return e.height==this.height}updateDOM(e){return e.style.height=this.height+"px",!0}get estimatedHeight(){return this.height}}function FT(t){let e=t.observer.selectionRange,n=e.focusNode&&HT(e.focusNode,e.focusOffset,0);if(!n)return null;let r=t.docView.nearest(n);if(!r)return null;if(r instanceof qt){let i=n;for(;i.parentNode!=r.dom;)i=i.parentNode;let o=i.previousSibling;for(;o&&!Re.get(o);)o=o.previousSibling;let s=o?Re.get(o).posAtEnd:r.posAtStart;return{from:s,to:s,node:i,text:n}}else{for(;;){let{parent:o}=r;if(!o)return null;if(o instanceof qt)break;r=o}let i=r.posAtStart;return{from:i,to:i+r.length,node:r.dom,text:n}}}function XR(t,e){let n=FT(t);if(!n)return G.none;let{from:r,to:i,node:o,text:s}=n,a=e.mapPos(r,1),l=Math.max(a,e.mapPos(i,-1)),{state:c}=t,u=o.nodeType==3?o.nodeValue:new RT([],c).readRange(o.firstChild,null).text;if(l-a<u.length)if(c.doc.sliceString(a,Math.min(c.doc.length,a+u.length),to)==u)l=a+u.length;else if(c.doc.sliceString(Math.max(0,l-u.length),l,to)==u)a=l-u.length;else return G.none;else if(c.doc.sliceString(a,l,to)!=u)return G.none;let d=Re.get(o);return d instanceof xT?d=d.widget.topView:d&&(d.parent=null),G.set(G.replace({widget:new WR(o,s,d),inclusive:!0}).range(a,l))}class WR extends Ni{constructor(e,n,r){super(),this.top=e,this.text=n,this.topView=r}eq(e){return this.top==e.top&&this.text==e.text}toDOM(){return this.top}ignoreEvent(){return!1}get customView(){return xT}}function HT(t,e,n){for(;;){if(t.nodeType==3)return t;if(t.nodeType==1&&e>0&&n<=0)t=t.childNodes[e-1],e=Cu(t);else if(t.nodeType==1&&e<t.childNodes.length&&n>=0)t=t.childNodes[e],e=0;else return null}}function RR(t,e){return t.nodeType!=1?0:(e&&t.childNodes[e-1].contentEditable=="false"?1:0)|(e<t.childNodes.length&&t.childNodes[e].contentEditable=="false"?2:0)}class FR{constructor(){this.changes=[]}compareRange(e,n){Iv(e,n,this.changes)}comparePoint(e,n){Iv(e,n,this.changes)}}function HR(t,e,n){let r=new FR;return Pe.compare(t,e,n,r),r.changes}function DR(t,e){for(let n=t;n&&n!=e;n=n.assignedSlot||n.parentNode)if(n.nodeType==1&&n.contentEditable=="false")return!0;return!1}function GR(t,e,n=1){let r=t.charCategorizer(e),i=t.doc.lineAt(e),o=e-i.from;if(i.length==0)return A.cursor(e);o==0?n=1:o==i.length&&(n=-1);let s=o,a=o;n<0?s=Ut(i.text,o,!1):a=Ut(i.text,o);let l=r(i.text.slice(s,a));for(;s>0;){let c=Ut(i.text,s,!1);if(r(i.text.slice(c,s))!=l)break;s=c}for(;a<i.length;){let c=Ut(i.text,a);if(r(i.text.slice(a,c))!=l)break;a=c}return A.range(s+i.from,a+i.from)}function jR(t,e){return e.left>t?e.left-t:Math.max(0,t-e.right)}function BR(t,e){return e.top>t?e.top-t:Math.max(0,t-e.bottom)}function a0(t,e){return t.top<e.bottom-1&&t.bottom>e.top+1}function lw(t,e){return e<t.top?{top:e,left:t.left,right:t.right,bottom:t.bottom}:t}function cw(t,e){return e>t.bottom?{top:t.top,left:t.left,right:t.right,bottom:e}:t}function Zv(t,e,n){let r,i,o,s,a=!1,l,c,u,d;for(let p=t.firstChild;p;p=p.nextSibling){let m=Ou(p);for(let v=0;v<m.length;v++){let g=m[v];i&&a0(i,g)&&(g=lw(cw(g,i.bottom),i.top));let b=jR(e,g),y=BR(n,g);if(b==0&&y==0)return p.nodeType==3?uw(p,e,n):Zv(p,e,n);(!r||s>y||s==y&&o>b)&&(r=p,i=g,o=b,s=y,a=!b||(b>0?v<m.length-1:v>0)),b==0?n>g.bottom&&(!u||u.bottom<g.bottom)?(l=p,u=g):n<g.top&&(!d||d.top>g.top)&&(c=p,d=g):u&&a0(u,g)?u=cw(u,g.bottom):d&&a0(d,g)&&(d=lw(d,g.top))}}if(u&&u.bottom>=n?(r=l,i=u):d&&d.top<=n&&(r=c,i=d),!r)return{node:t,offset:0};let f=Math.max(i.left,Math.min(i.right,e));if(r.nodeType==3)return uw(r,f,n);if(a&&r.contentEditable!="false")return Zv(r,f,n);let h=Array.prototype.indexOf.call(t.childNodes,r)+(e>=(i.left+i.right)/2?1:0);return{node:t,offset:h}}function uw(t,e,n){let r=t.nodeValue.length,i=-1,o=1e9,s=0;for(let a=0;a<r;a++){let l=dl(t,a,a+1).getClientRects();for(let c=0;c<l.length;c++){let u=l[c];if(u.top==u.bottom)continue;s||(s=e-u.left);let d=(u.top>n?u.top-n:n-u.bottom)-1;if(u.left-1<=e&&u.right+1>=e&&d<o){let f=e>=(u.left+u.right)/2,h=f;if((_.chrome||_.gecko)&&dl(t,a).getBoundingClientRect().left==u.right&&(h=!f),d<=0)return{node:t,offset:a+(h?1:0)};i=a+(h?1:0),o=d}}}return{node:t,offset:i>-1?i:s>0?t.nodeValue.length:0}}function DT(t,{x:e,y:n},r,i=-1){var o;let s=t.contentDOM.getBoundingClientRect(),a=s.top+t.viewState.paddingTop,l,{docHeight:c}=t.viewState,u=n-a;if(u<0)return 0;if(u>c)return t.state.doc.length;for(let g=t.defaultLineHeight/2,b=!1;l=t.elementAtHeight(u),l.type!=Ae.Text;)for(;u=i>0?l.bottom+g:l.top-g,!(u>=0&&u<=c);){if(b)return r?null:0;b=!0,i=-i}n=a+u;let d=l.from;if(d<t.viewport.from)return t.viewport.from==0?0:r?null:dw(t,s,l,e,n);if(d>t.viewport.to)return t.viewport.to==t.state.doc.length?t.state.doc.length:r?null:dw(t,s,l,e,n);let f=t.dom.ownerDocument,h=t.root.elementFromPoint?t.root:f,p=h.elementFromPoint(e,n);p&&!t.contentDOM.contains(p)&&(p=null),p||(e=Math.max(s.left+1,Math.min(s.right-1,e)),p=h.elementFromPoint(e,n),p&&!t.contentDOM.contains(p)&&(p=null));let m,v=-1;if(p&&((o=t.docView.nearest(p))===null||o===void 0?void 0:o.isEditable)!=!1){if(f.caretPositionFromPoint){let g=f.caretPositionFromPoint(e,n);g&&({offsetNode:m,offset:v}=g)}else if(f.caretRangeFromPoint){let g=f.caretRangeFromPoint(e,n);g&&({startContainer:m,startOffset:v}=g,(!t.contentDOM.contains(m)||_.safari&&YR(m,v,e)||_.chrome&&KR(m,v,e))&&(m=void 0))}}if(!m||!t.docView.dom.contains(m)){let g=qt.find(t.docView,d);if(!g)return u>l.top+l.height/2?l.to:l.from;({node:m,offset:v}=Zv(g.dom,e,n))}return t.docView.posFromDOM(m,v)}function dw(t,e,n,r,i){let o=Math.round((r-e.left)*t.defaultCharacterWidth);if(t.lineWrapping&&n.height>t.defaultLineHeight*1.5){let a=Math.floor((i-n.top)/t.defaultLineHeight);o+=a*t.viewState.heightOracle.lineLength}let s=t.state.sliceDoc(n.from,n.to);return n.from+kv(s,o,t.state.tabSize)}function YR(t,e,n){let r;if(t.nodeType!=3||e!=(r=t.nodeValue.length))return!1;for(let i=t.nextSibling;i;i=i.nextSibling)if(i.nodeType!=1||i.nodeName!="BR")return!1;return dl(t,r-1,r).getBoundingClientRect().left>n}function KR(t,e,n){if(e!=0)return!1;for(let i=t;;){let o=i.parentNode;if(!o||o.nodeType!=1||o.firstChild!=i)return!1;if(o.classList.contains("cm-line"))break;i=o}let r=t.nodeType==1?t.getBoundingClientRect():dl(t,0,Math.max(t.nodeValue.length,1)).getBoundingClientRect();return n-r.left>5}function UR(t,e,n,r){let i=t.state.doc.lineAt(e.head),o=!r||!t.lineWrapping?null:t.coordsAtPos(e.assoc<0&&e.head>i.from?e.head-1:e.head);if(o){let l=t.dom.getBoundingClientRect(),c=t.textDirectionAt(i.from),u=t.posAtCoords({x:n==(c==Je.LTR)?l.right-1:l.left+1,y:(o.top+o.bottom)/2});if(u!=null)return A.cursor(u,n?-1:1)}let s=qt.find(t.docView,e.head),a=s?n?s.posAtEnd:s.posAtStart:n?i.to:i.from;return A.cursor(a,n?-1:1)}function fw(t,e,n,r){let i=t.state.doc.lineAt(e.head),o=t.bidiSpans(i),s=t.textDirectionAt(i.from);for(let a=e,l=null;;){let c=LR(i,o,s,a,n),u=WT;if(!c){if(i.number==(n?t.state.doc.lines:1))return a;u=`
`,i=t.state.doc.line(i.number+(n?1:-1)),o=t.bidiSpans(i),c=A.cursor(n?i.from:i.to)}if(l){if(!l(u))return a}else{if(!r)return c;l=r(u)}a=c}}function qR(t,e,n){let r=t.state.charCategorizer(e),i=r(n);return o=>{let s=r(o);return i==Be.Space&&(i=s),i==s}}function JR(t,e,n,r){let i=e.head,o=n?1:-1;if(i==(n?t.state.doc.length:0))return A.cursor(i,e.assoc);let s=e.goalColumn,a,l=t.contentDOM.getBoundingClientRect(),c=t.coordsAtPos(i),u=t.documentTop;if(c)s==null&&(s=c.left-l.left),a=o<0?c.top:c.bottom;else{let h=t.viewState.lineBlockAt(i);s==null&&(s=Math.min(l.right-l.left,t.defaultCharacterWidth*(i-h.from))),a=(o<0?h.top:h.bottom)+u}let d=l.left+s,f=r!=null?r:t.defaultLineHeight>>1;for(let h=0;;h+=10){let p=a+(f+h)*o,m=DT(t,{x:d,y:p},!1,o);if(p<l.top||p>l.bottom||(o<0?m<i:m>i))return A.cursor(m,e.assoc,void 0,s)}}function l0(t,e,n){let r=t.state.facet(AT).map(i=>i(t));for(;;){let i=!1;for(let o of r)o.between(n.from-1,n.from+1,(s,a,l)=>{n.from>s&&n.from<a&&(n=e.head>n.from?A.cursor(s,1):A.cursor(a,-1),i=!0)});if(!i)return n}}class QR{constructor(e){this.lastKeyCode=0,this.lastKeyTime=0,this.lastTouchTime=0,this.lastFocusTime=0,this.lastScrollTop=0,this.lastScrollLeft=0,this.chromeScrollHack=-1,this.pendingIOSKey=void 0,this.lastSelectionOrigin=null,this.lastSelectionTime=0,this.lastEscPress=0,this.lastContextMenu=0,this.scrollHandlers=[],this.registeredEvents=[],this.customHandlers=[],this.composing=-1,this.compositionFirstChange=null,this.compositionEndedAt=0,this.mouseSelection=null;for(let n in yt){let r=yt[n];e.contentDOM.addEventListener(n,i=>{!hw(e,i)||this.ignoreDuringComposition(i)||n=="keydown"&&this.keydown(e,i)||(this.mustFlushObserver(i)&&e.observer.forceFlush(),this.runCustomHandlers(n,e,i)?i.preventDefault():r(e,i))},Xv[n]),this.registeredEvents.push(n)}_.chrome&&_.chrome_version==102&&e.scrollDOM.addEventListener("wheel",()=>{this.chromeScrollHack<0?e.contentDOM.style.pointerEvents="none":window.clearTimeout(this.chromeScrollHack),this.chromeScrollHack=setTimeout(()=>{this.chromeScrollHack=-1,e.contentDOM.style.pointerEvents=""},100)},{passive:!0}),this.notifiedFocused=e.hasFocus,_.safari&&e.contentDOM.addEventListener("input",()=>null)}setSelectionOrigin(e){this.lastSelectionOrigin=e,this.lastSelectionTime=Date.now()}ensureHandlers(e,n){var r;let i;this.customHandlers=[];for(let o of n)if(i=(r=o.update(e).spec)===null||r===void 0?void 0:r.domEventHandlers){this.customHandlers.push({plugin:o.value,handlers:i});for(let s in i)this.registeredEvents.indexOf(s)<0&&s!="scroll"&&(this.registeredEvents.push(s),e.contentDOM.addEventListener(s,a=>{!hw(e,a)||this.runCustomHandlers(s,e,a)&&a.preventDefault()}))}}runCustomHandlers(e,n,r){for(let i of this.customHandlers){let o=i.handlers[e];if(o)try{if(o.call(i.plugin,r,n)||r.defaultPrevented)return!0}catch(s){zn(n.state,s)}}return!1}runScrollHandlers(e,n){this.lastScrollTop=e.scrollDOM.scrollTop,this.lastScrollLeft=e.scrollDOM.scrollLeft;for(let r of this.customHandlers){let i=r.handlers.scroll;if(i)try{i.call(r.plugin,n,e)}catch(o){zn(e.state,o)}}}keydown(e,n){if(this.lastKeyCode=n.keyCode,this.lastKeyTime=Date.now(),n.keyCode==9&&Date.now()<this.lastEscPress+2e3)return!0;if(_.android&&_.chrome&&!n.synthetic&&(n.keyCode==13||n.keyCode==8))return e.observer.delayAndroidKey(n.key,n.keyCode),!0;let r;return _.ios&&!n.synthetic&&!n.altKey&&!n.metaKey&&((r=GT.find(i=>i.keyCode==n.keyCode))&&!n.ctrlKey||_R.indexOf(n.key)>-1&&n.ctrlKey&&!n.shiftKey)?(this.pendingIOSKey=r||n,setTimeout(()=>this.flushIOSKey(e),250),!0):!1}flushIOSKey(e){let n=this.pendingIOSKey;return n?(this.pendingIOSKey=void 0,Da(e.contentDOM,n.key,n.keyCode)):!1}ignoreDuringComposition(e){return/^key/.test(e.type)?this.composing>0?!0:_.safari&&!_.ios&&Date.now()-this.compositionEndedAt<100?(this.compositionEndedAt=0,!0):!1:!1}mustFlushObserver(e){return e.type=="keydown"&&e.keyCode!=229}startMouseSelection(e){this.mouseSelection&&this.mouseSelection.destroy(),this.mouseSelection=e}update(e){this.mouseSelection&&this.mouseSelection.update(e),e.transactions.length&&(this.lastKeyCode=this.lastSelectionTime=0)}destroy(){this.mouseSelection&&this.mouseSelection.destroy()}}const GT=[{key:"Backspace",keyCode:8,inputType:"deleteContentBackward"},{key:"Enter",keyCode:13,inputType:"insertParagraph"},{key:"Delete",keyCode:46,inputType:"deleteContentForward"}],_R="dthko",jT=[16,17,18,20,91,92,224,225];class $R{constructor(e,n,r,i){this.view=e,this.style=r,this.mustSelect=i,this.lastEvent=n;let o=e.contentDOM.ownerDocument;o.addEventListener("mousemove",this.move=this.move.bind(this)),o.addEventListener("mouseup",this.up=this.up.bind(this)),this.extend=n.shiftKey,this.multiple=e.state.facet(pe.allowMultipleSelections)&&eF(e,n),this.dragMove=tF(e,n),this.dragging=nF(e,n)&&UT(n)==1?null:!1,this.dragging===!1&&(n.preventDefault(),this.select(n))}move(e){if(e.buttons==0)return this.destroy();this.dragging===!1&&this.select(this.lastEvent=e)}up(e){this.dragging==null&&this.select(this.lastEvent),this.dragging||e.preventDefault(),this.destroy()}destroy(){let e=this.view.contentDOM.ownerDocument;e.removeEventListener("mousemove",this.move),e.removeEventListener("mouseup",this.up),this.view.inputState.mouseSelection=null}select(e){let n=this.style.get(e,this.extend,this.multiple);(this.mustSelect||!n.eq(this.view.state.selection)||n.main.assoc!=this.view.state.selection.main.assoc)&&this.view.dispatch({selection:n,userEvent:"select.pointer",scrollIntoView:!0}),this.mustSelect=!1}update(e){e.docChanged&&this.dragging&&(this.dragging=this.dragging.map(e.changes)),this.style.update(e)&&setTimeout(()=>this.select(this.lastEvent),20)}}function eF(t,e){let n=t.state.facet(CT);return n.length?n[0](e):_.mac?e.metaKey:e.ctrlKey}function tF(t,e){let n=t.state.facet(TT);return n.length?n[0](e):_.mac?!e.altKey:!e.ctrlKey}function nF(t,e){let{main:n}=t.state.selection;if(n.empty)return!1;let r=ep(t.root);if(!r||r.rangeCount==0)return!0;let i=r.getRangeAt(0).getClientRects();for(let o=0;o<i.length;o++){let s=i[o];if(s.left<=e.clientX&&s.right>=e.clientX&&s.top<=e.clientY&&s.bottom>=e.clientY)return!0}return!1}function hw(t,e){if(!e.bubbles)return!0;if(e.defaultPrevented)return!1;for(let n=e.target,r;n!=t.contentDOM;n=n.parentNode)if(!n||n.nodeType==11||(r=Re.get(n))&&r.ignoreEvent(e))return!1;return!0}const yt=Object.create(null),Xv=Object.create(null),BT=_.ie&&_.ie_version<15||_.ios&&_.webkit_version<604;function rF(t){let e=t.dom.parentNode;if(!e)return;let n=e.appendChild(document.createElement("textarea"));n.style.cssText="position: fixed; left: -10000px; top: 10px",n.focus(),setTimeout(()=>{t.focus(),n.remove(),YT(t,n.value)},50)}function YT(t,e){let{state:n}=t,r,i=1,o=n.toText(e),s=o.lines==n.selection.ranges.length;if(Wv!=null&&n.selection.ranges.every(l=>l.empty)&&Wv==o.toString()){let l=-1;r=n.changeByRange(c=>{let u=n.doc.lineAt(c.from);if(u.from==l)return{range:c};l=u.from;let d=n.toText((s?o.line(i++).text:e)+n.lineBreak);return{changes:{from:u.from,insert:d},range:A.cursor(c.from+d.length)}})}else s?r=n.changeByRange(l=>{let c=o.line(i++);return{changes:{from:l.from,to:l.to,insert:c.text},range:A.cursor(l.from+c.length)}}):r=n.replaceSelection(o);t.dispatch(r,{userEvent:"input.paste",scrollIntoView:!0})}yt.keydown=(t,e)=>{t.inputState.setSelectionOrigin("select"),e.keyCode==27?t.inputState.lastEscPress=Date.now():jT.indexOf(e.keyCode)<0&&(t.inputState.lastEscPress=0)};yt.touchstart=(t,e)=>{t.inputState.lastTouchTime=Date.now(),t.inputState.setSelectionOrigin("select.pointer")};yt.touchmove=t=>{t.inputState.setSelectionOrigin("select.pointer")};Xv.touchstart=Xv.touchmove={passive:!0};yt.mousedown=(t,e)=>{if(t.observer.flush(),t.inputState.lastTouchTime>Date.now()-2e3)return;let n=null;for(let r of t.state.facet(zT))if(n=r(t,e),n)break;if(!n&&e.button==0&&(n=sF(t,e)),n){let r=t.root.activeElement!=t.contentDOM;r&&t.observer.ignore(()=>hT(t.contentDOM)),t.inputState.startMouseSelection(new $R(t,e,n,r))}};function pw(t,e,n,r){if(r==1)return A.cursor(e,n);if(r==2)return GR(t.state,e,n);{let i=qt.find(t.docView,e),o=t.state.doc.lineAt(i?i.posAtEnd:e),s=i?i.posAtStart:o.from,a=i?i.posAtEnd:o.to;return a<t.state.doc.length&&a==o.to&&a++,A.range(s,a)}}let KT=(t,e)=>t>=e.top&&t<=e.bottom,mw=(t,e,n)=>KT(e,n)&&t>=n.left&&t<=n.right;function iF(t,e,n,r){let i=qt.find(t.docView,e);if(!i)return 1;let o=e-i.posAtStart;if(o==0)return 1;if(o==i.length)return-1;let s=i.coordsAt(o,-1);if(s&&mw(n,r,s))return-1;let a=i.coordsAt(o,1);return a&&mw(n,r,a)?1:s&&KT(r,s)?-1:1}function gw(t,e){let n=t.posAtCoords({x:e.clientX,y:e.clientY},!1);return{pos:n,bias:iF(t,n,e.clientX,e.clientY)}}const oF=_.ie&&_.ie_version<=11;let bw=null,vw=0,yw=0;function UT(t){if(!oF)return t.detail;let e=bw,n=yw;return bw=t,yw=Date.now(),vw=!e||n>Date.now()-400&&Math.abs(e.clientX-t.clientX)<2&&Math.abs(e.clientY-t.clientY)<2?(vw+1)%3:1}function sF(t,e){let n=gw(t,e),r=UT(e),i=t.state.selection,o=n,s=e;return{update(a){a.docChanged&&(n.pos=a.changes.mapPos(n.pos),i=i.map(a.changes),s=null)},get(a,l,c){let u;s&&a.clientX==s.clientX&&a.clientY==s.clientY?u=o:(u=o=gw(t,a),s=a);let d=pw(t,u.pos,u.bias,r);if(n.pos!=u.pos&&!l){let f=pw(t,n.pos,n.bias,r),h=Math.min(f.from,d.from),p=Math.max(f.to,d.to);d=h<d.from?A.range(h,p):A.range(p,h)}return l?i.replaceRange(i.main.extend(d.from,d.to)):c&&i.ranges.length>1&&i.ranges.some(f=>f.eq(d))?aF(i,d):c?i.addRange(d):A.create([d])}}}function aF(t,e){for(let n=0;;n++)if(t.ranges[n].eq(e))return A.create(t.ranges.slice(0,n).concat(t.ranges.slice(n+1)),t.mainIndex==n?0:t.mainIndex-(t.mainIndex>n?1:0))}yt.dragstart=(t,e)=>{let{selection:{main:n}}=t.state,{mouseSelection:r}=t.inputState;r&&(r.dragging=n),e.dataTransfer&&(e.dataTransfer.setData("Text",t.state.sliceDoc(n.from,n.to)),e.dataTransfer.effectAllowed="copyMove")};function xw(t,e,n,r){if(!n)return;let i=t.posAtCoords({x:e.clientX,y:e.clientY},!1);e.preventDefault();let{mouseSelection:o}=t.inputState,s=r&&o&&o.dragging&&o.dragMove?{from:o.dragging.from,to:o.dragging.to}:null,a={from:i,insert:n},l=t.state.changes(s?[s,a]:a);t.focus(),t.dispatch({changes:l,selection:{anchor:l.mapPos(i,-1),head:l.mapPos(i,1)},userEvent:s?"move.drop":"input.drop"})}yt.drop=(t,e)=>{if(!e.dataTransfer)return;if(t.state.readOnly)return e.preventDefault();let n=e.dataTransfer.files;if(n&&n.length){e.preventDefault();let r=Array(n.length),i=0,o=()=>{++i==n.length&&xw(t,e,r.filter(s=>s!=null).join(t.state.lineBreak),!1)};for(let s=0;s<n.length;s++){let a=new FileReader;a.onerror=o,a.onload=()=>{/[\x00-\x08\x0e-\x1f]{2}/.test(a.result)||(r[s]=a.result),o()},a.readAsText(n[s])}}else xw(t,e,e.dataTransfer.getData("Text"),!0)};yt.paste=(t,e)=>{if(t.state.readOnly)return e.preventDefault();t.observer.flush();let n=BT?null:e.clipboardData;n?(YT(t,n.getData("text/plain")),e.preventDefault()):rF(t)};function lF(t,e){let n=t.dom.parentNode;if(!n)return;let r=n.appendChild(document.createElement("textarea"));r.style.cssText="position: fixed; left: -10000px; top: 10px",r.value=e,r.focus(),r.selectionEnd=e.length,r.selectionStart=0,setTimeout(()=>{r.remove(),t.focus()},50)}function cF(t){let e=[],n=[],r=!1;for(let i of t.selection.ranges)i.empty||(e.push(t.sliceDoc(i.from,i.to)),n.push(i));if(!e.length){let i=-1;for(let{from:o}of t.selection.ranges){let s=t.doc.lineAt(o);s.number>i&&(e.push(s.text),n.push({from:s.from,to:Math.min(t.doc.length,s.to+1)})),i=s.number}r=!0}return{text:e.join(t.lineBreak),ranges:n,linewise:r}}let Wv=null;yt.copy=yt.cut=(t,e)=>{let{text:n,ranges:r,linewise:i}=cF(t.state);if(!n&&!i)return;Wv=i?n:null;let o=BT?null:e.clipboardData;o?(e.preventDefault(),o.clearData(),o.setData("text/plain",n)):lF(t,n),e.type=="cut"&&!t.state.readOnly&&t.dispatch({changes:r,scrollIntoView:!0,userEvent:"delete.cut"})};function qT(t){setTimeout(()=>{t.hasFocus!=t.inputState.notifiedFocused&&t.update([])},10)}yt.focus=t=>{t.inputState.lastFocusTime=Date.now(),!t.scrollDOM.scrollTop&&(t.inputState.lastScrollTop||t.inputState.lastScrollLeft)&&(t.scrollDOM.scrollTop=t.inputState.lastScrollTop,t.scrollDOM.scrollLeft=t.inputState.lastScrollLeft),qT(t)};yt.blur=t=>{t.observer.clearSelectionRange(),qT(t)};yt.compositionstart=yt.compositionupdate=t=>{t.inputState.compositionFirstChange==null&&(t.inputState.compositionFirstChange=!0),t.inputState.composing<0&&(t.inputState.composing=0)};yt.compositionend=t=>{t.inputState.composing=-1,t.inputState.compositionEndedAt=Date.now(),t.inputState.compositionFirstChange=null,_.chrome&&_.android&&t.observer.flushSoon(),setTimeout(()=>{t.inputState.composing<0&&t.docView.compositionDeco.size&&t.update([])},50)};yt.contextmenu=t=>{t.inputState.lastContextMenu=Date.now()};yt.beforeinput=(t,e)=>{var n;let r;if(_.chrome&&_.android&&(r=GT.find(i=>i.inputType==e.inputType))&&(t.observer.delayAndroidKey(r.key,r.keyCode),r.key=="Backspace"||r.key=="Delete")){let i=((n=window.visualViewport)===null||n===void 0?void 0:n.height)||0;setTimeout(()=>{var o;(((o=window.visualViewport)===null||o===void 0?void 0:o.height)||0)>i+10&&t.hasFocus&&(t.contentDOM.blur(),t.focus())},100)}};const Sw=["pre-wrap","normal","pre-line","break-spaces"];class uF{constructor(e){this.lineWrapping=e,this.doc=Se.empty,this.heightSamples={},this.lineHeight=14,this.charWidth=7,this.lineLength=30,this.heightChanged=!1}heightForGap(e,n){let r=this.doc.lineAt(n).number-this.doc.lineAt(e).number+1;return this.lineWrapping&&(r+=Math.ceil((n-e-r*this.lineLength*.5)/this.lineLength)),this.lineHeight*r}heightForLine(e){return this.lineWrapping?(1+Math.max(0,Math.ceil((e-this.lineLength)/(this.lineLength-5))))*this.lineHeight:this.lineHeight}setDoc(e){return this.doc=e,this}mustRefreshForWrapping(e){return Sw.indexOf(e)>-1!=this.lineWrapping}mustRefreshForHeights(e){let n=!1;for(let r=0;r<e.length;r++){let i=e[r];i<0?r++:this.heightSamples[Math.floor(i*10)]||(n=!0,this.heightSamples[Math.floor(i*10)]=!0)}return n}refresh(e,n,r,i,o){let s=Sw.indexOf(e)>-1,a=Math.round(n)!=Math.round(this.lineHeight)||this.lineWrapping!=s;if(this.lineWrapping=s,this.lineHeight=n,this.charWidth=r,this.lineLength=i,a){this.heightSamples={};for(let l=0;l<o.length;l++){let c=o[l];c<0?l++:this.heightSamples[Math.floor(c*10)]=!0}}return a}}class dF{constructor(e,n){this.from=e,this.heights=n,this.index=0}get more(){return this.index<this.heights.length}}class no{constructor(e,n,r,i,o){this.from=e,this.length=n,this.top=r,this.height=i,this.type=o}get to(){return this.from+this.length}get bottom(){return this.top+this.height}join(e){let n=(Array.isArray(this.type)?this.type:[this]).concat(Array.isArray(e.type)?e.type:[e]);return new no(this.from,this.length+e.length,this.top,this.height+e.height,n)}}var Xe=function(t){return t[t.ByPos=0]="ByPos",t[t.ByHeight=1]="ByHeight",t[t.ByPosNoHeight=2]="ByPosNoHeight",t}(Xe||(Xe={}));const ih=.001;class _t{constructor(e,n,r=2){this.length=e,this.height=n,this.flags=r}get outdated(){return(this.flags&2)>0}set outdated(e){this.flags=(e?2:0)|this.flags&-3}setHeight(e,n){this.height!=n&&(Math.abs(this.height-n)>ih&&(e.heightChanged=!0),this.height=n)}replace(e,n,r){return _t.of(r)}decomposeLeft(e,n){n.push(this)}decomposeRight(e,n){n.push(this)}applyChanges(e,n,r,i){let o=this;for(let s=i.length-1;s>=0;s--){let{fromA:a,toA:l,fromB:c,toB:u}=i[s],d=o.lineAt(a,Xe.ByPosNoHeight,n,0,0),f=d.to>=l?d:o.lineAt(l,Xe.ByPosNoHeight,n,0,0);for(u+=f.to-l,l=f.to;s>0&&d.from<=i[s-1].toA;)a=i[s-1].fromA,c=i[s-1].fromB,s--,a<d.from&&(d=o.lineAt(a,Xe.ByPosNoHeight,n,0,0));c+=d.from-a,a=d.from;let h=px.build(r,e,c,u);o=o.replace(a,l,h)}return o.updateHeight(r,0)}static empty(){return new kn(0,0)}static of(e){if(e.length==1)return e[0];let n=0,r=e.length,i=0,o=0;for(;;)if(n==r)if(i>o*2){let a=e[n-1];a.break?e.splice(--n,1,a.left,null,a.right):e.splice(--n,1,a.left,a.right),r+=1+a.break,i-=a.size}else if(o>i*2){let a=e[r];a.break?e.splice(r,1,a.left,null,a.right):e.splice(r,1,a.left,a.right),r+=2+a.break,o-=a.size}else break;else if(i<o){let a=e[n++];a&&(i+=a.size)}else{let a=e[--r];a&&(o+=a.size)}let s=0;return e[n-1]==null?(s=1,n--):e[n]==null&&(s=1,r++),new fF(_t.of(e.slice(0,n)),s,_t.of(e.slice(r)))}}_t.prototype.size=1;class JT extends _t{constructor(e,n,r){super(e,n),this.type=r}blockAt(e,n,r,i){return new no(i,this.length,r,this.height,this.type)}lineAt(e,n,r,i,o){return this.blockAt(0,r,i,o)}forEachLine(e,n,r,i,o,s){e<=o+this.length&&n>=o&&s(this.blockAt(0,r,i,o))}updateHeight(e,n=0,r=!1,i){return i&&i.from<=n&&i.more&&this.setHeight(e,i.heights[i.index++]),this.outdated=!1,this}toString(){return`block(${this.length})`}}class kn extends JT{constructor(e,n){super(e,n,Ae.Text),this.collapsed=0,this.widgetHeight=0}replace(e,n,r){let i=r[0];return r.length==1&&(i instanceof kn||i instanceof Ot&&i.flags&4)&&Math.abs(this.length-i.length)<10?(i instanceof Ot?i=new kn(i.length,this.height):i.height=this.height,this.outdated||(i.outdated=!1),i):_t.of(r)}updateHeight(e,n=0,r=!1,i){return i&&i.from<=n&&i.more?this.setHeight(e,i.heights[i.index++]):(r||this.outdated)&&this.setHeight(e,Math.max(this.widgetHeight,e.heightForLine(this.length-this.collapsed))),this.outdated=!1,this}toString(){return`line(${this.length}${this.collapsed?-this.collapsed:""}${this.widgetHeight?":"+this.widgetHeight:""})`}}class Ot extends _t{constructor(e){super(e,0)}lines(e,n){let r=e.lineAt(n).number,i=e.lineAt(n+this.length).number;return{firstLine:r,lastLine:i,lineHeight:this.height/(i-r+1)}}blockAt(e,n,r,i){let{firstLine:o,lastLine:s,lineHeight:a}=this.lines(n,i),l=Math.max(0,Math.min(s-o,Math.floor((e-r)/a))),{from:c,length:u}=n.line(o+l);return new no(c,u,r+a*l,a,Ae.Text)}lineAt(e,n,r,i,o){if(n==Xe.ByHeight)return this.blockAt(e,r,i,o);if(n==Xe.ByPosNoHeight){let{from:d,to:f}=r.lineAt(e);return new no(d,f-d,0,0,Ae.Text)}let{firstLine:s,lineHeight:a}=this.lines(r,o),{from:l,length:c,number:u}=r.lineAt(e);return new no(l,c,i+a*(u-s),a,Ae.Text)}forEachLine(e,n,r,i,o,s){let{firstLine:a,lineHeight:l}=this.lines(r,o);for(let c=Math.max(e,o),u=Math.min(o+this.length,n);c<=u;){let d=r.lineAt(c);c==e&&(i+=l*(d.number-a)),s(new no(d.from,d.length,i,l,Ae.Text)),i+=l,c=d.to+1}}replace(e,n,r){let i=this.length-n;if(i>0){let o=r[r.length-1];o instanceof Ot?r[r.length-1]=new Ot(o.length+i):r.push(null,new Ot(i-1))}if(e>0){let o=r[0];o instanceof Ot?r[0]=new Ot(e+o.length):r.unshift(new Ot(e-1),null)}return _t.of(r)}decomposeLeft(e,n){n.push(new Ot(e-1),null)}decomposeRight(e,n){n.push(null,new Ot(this.length-e-1))}updateHeight(e,n=0,r=!1,i){let o=n+this.length;if(i&&i.from<=n+this.length&&i.more){let s=[],a=Math.max(n,i.from),l=-1,c=e.heightChanged;for(i.from>n&&s.push(new Ot(i.from-n-1).updateHeight(e,n));a<=o&&i.more;){let d=e.doc.lineAt(a).length;s.length&&s.push(null);let f=i.heights[i.index++];l==-1?l=f:Math.abs(f-l)>=ih&&(l=-2);let h=new kn(d,f);h.outdated=!1,s.push(h),a+=d+1}a<=o&&s.push(null,new Ot(o-a).updateHeight(e,a));let u=_t.of(s);return e.heightChanged=c||l<0||Math.abs(u.height-this.height)>=ih||Math.abs(l-this.lines(e.doc,n).lineHeight)>=ih,u}else(r||this.outdated)&&(this.setHeight(e,e.heightForGap(n,n+this.length)),this.outdated=!1);return this}toString(){return`gap(${this.length})`}}class fF extends _t{constructor(e,n,r){super(e.length+n+r.length,e.height+r.height,n|(e.outdated||r.outdated?2:0)),this.left=e,this.right=r,this.size=e.size+r.size}get break(){return this.flags&1}blockAt(e,n,r,i){let o=r+this.left.height;return e<o?this.left.blockAt(e,n,r,i):this.right.blockAt(e,n,o,i+this.left.length+this.break)}lineAt(e,n,r,i,o){let s=i+this.left.height,a=o+this.left.length+this.break,l=n==Xe.ByHeight?e<s:e<a,c=l?this.left.lineAt(e,n,r,i,o):this.right.lineAt(e,n,r,s,a);if(this.break||(l?c.to<a:c.from>a))return c;let u=n==Xe.ByPosNoHeight?Xe.ByPosNoHeight:Xe.ByPos;return l?c.join(this.right.lineAt(a,u,r,s,a)):this.left.lineAt(a,u,r,i,o).join(c)}forEachLine(e,n,r,i,o,s){let a=i+this.left.height,l=o+this.left.length+this.break;if(this.break)e<l&&this.left.forEachLine(e,n,r,i,o,s),n>=l&&this.right.forEachLine(e,n,r,a,l,s);else{let c=this.lineAt(l,Xe.ByPos,r,i,o);e<c.from&&this.left.forEachLine(e,c.from-1,r,i,o,s),c.to>=e&&c.from<=n&&s(c),n>c.to&&this.right.forEachLine(c.to+1,n,r,a,l,s)}}replace(e,n,r){let i=this.left.length+this.break;if(n<i)return this.balanced(this.left.replace(e,n,r),this.right);if(e>this.left.length)return this.balanced(this.left,this.right.replace(e-i,n-i,r));let o=[];e>0&&this.decomposeLeft(e,o);let s=o.length;for(let a of r)o.push(a);if(e>0&&kw(o,s-1),n<this.length){let a=o.length;this.decomposeRight(n,o),kw(o,a)}return _t.of(o)}decomposeLeft(e,n){let r=this.left.length;if(e<=r)return this.left.decomposeLeft(e,n);n.push(this.left),this.break&&(r++,e>=r&&n.push(null)),e>r&&this.right.decomposeLeft(e-r,n)}decomposeRight(e,n){let r=this.left.length,i=r+this.break;if(e>=i)return this.right.decomposeRight(e-i,n);e<r&&this.left.decomposeRight(e,n),this.break&&e<i&&n.push(null),n.push(this.right)}balanced(e,n){return e.size>2*n.size||n.size>2*e.size?_t.of(this.break?[e,null,n]:[e,n]):(this.left=e,this.right=n,this.height=e.height+n.height,this.outdated=e.outdated||n.outdated,this.size=e.size+n.size,this.length=e.length+this.break+n.length,this)}updateHeight(e,n=0,r=!1,i){let{left:o,right:s}=this,a=n+o.length+this.break,l=null;return i&&i.from<=n+o.length&&i.more?l=o=o.updateHeight(e,n,r,i):o.updateHeight(e,n,r),i&&i.from<=a+s.length&&i.more?l=s=s.updateHeight(e,a,r,i):s.updateHeight(e,a,r),l?this.balanced(o,s):(this.height=this.left.height+this.right.height,this.outdated=!1,this)}toString(){return this.left+(this.break?" ":"-")+this.right}}function kw(t,e){let n,r;t[e]==null&&(n=t[e-1])instanceof Ot&&(r=t[e+1])instanceof Ot&&t.splice(e-1,3,new Ot(n.length+1+r.length))}const hF=5;class px{constructor(e,n){this.pos=e,this.oracle=n,this.nodes=[],this.lineStart=-1,this.lineEnd=-1,this.covering=null,this.writtenTo=e}get isCovered(){return this.covering&&this.nodes[this.nodes.length-1]==this.covering}span(e,n){if(this.lineStart>-1){let r=Math.min(n,this.lineEnd),i=this.nodes[this.nodes.length-1];i instanceof kn?i.length+=r-this.pos:(r>this.pos||!this.isCovered)&&this.nodes.push(new kn(r-this.pos,-1)),this.writtenTo=r,n>r&&(this.nodes.push(null),this.writtenTo++,this.lineStart=-1)}this.pos=n}point(e,n,r){if(e<n||r.heightRelevant){let i=r.widget?r.widget.estimatedHeight:0;i<0&&(i=this.oracle.lineHeight);let o=n-e;r.block?this.addBlock(new JT(o,i,r.type)):(o||i>=hF)&&this.addLineDeco(i,o)}else n>e&&this.span(e,n);this.lineEnd>-1&&this.lineEnd<this.pos&&(this.lineEnd=this.oracle.doc.lineAt(this.pos).to)}enterLine(){if(this.lineStart>-1)return;let{from:e,to:n}=this.oracle.doc.lineAt(this.pos);this.lineStart=e,this.lineEnd=n,this.writtenTo<e&&((this.writtenTo<e-1||this.nodes[this.nodes.length-1]==null)&&this.nodes.push(this.blankContent(this.writtenTo,e-1)),this.nodes.push(null)),this.pos>e&&this.nodes.push(new kn(this.pos-e,-1)),this.writtenTo=this.pos}blankContent(e,n){let r=new Ot(n-e);return this.oracle.doc.lineAt(e).to==n&&(r.flags|=4),r}ensureLine(){this.enterLine();let e=this.nodes.length?this.nodes[this.nodes.length-1]:null;if(e instanceof kn)return e;let n=new kn(0,-1);return this.nodes.push(n),n}addBlock(e){this.enterLine(),e.type==Ae.WidgetAfter&&!this.isCovered&&this.ensureLine(),this.nodes.push(e),this.writtenTo=this.pos=this.pos+e.length,e.type!=Ae.WidgetBefore&&(this.covering=e)}addLineDeco(e,n){let r=this.ensureLine();r.length+=n,r.collapsed+=n,r.widgetHeight=Math.max(r.widgetHeight,e),this.writtenTo=this.pos=this.pos+n}finish(e){let n=this.nodes.length==0?null:this.nodes[this.nodes.length-1];this.lineStart>-1&&!(n instanceof kn)&&!this.isCovered?this.nodes.push(new kn(0,-1)):(this.writtenTo<this.pos||n==null)&&this.nodes.push(this.blankContent(this.writtenTo,this.pos));let r=e;for(let i of this.nodes)i instanceof kn&&i.updateHeight(this.oracle,r),r+=i?i.length:1;return this.nodes}static build(e,n,r,i){let o=new px(r,e);return Pe.spans(n,r,i,o,0),o.finish(r)}}function pF(t,e,n){let r=new mF;return Pe.compare(t,e,n,r,0),r.changes}class mF{constructor(){this.changes=[]}compareRange(){}comparePoint(e,n,r,i){(e<n||r&&r.heightRelevant||i&&i.heightRelevant)&&Iv(e,n,this.changes,5)}}function gF(t,e){let n=t.getBoundingClientRect(),r=t.ownerDocument,i=r.defaultView||window,o=Math.max(0,n.left),s=Math.min(i.innerWidth,n.right),a=Math.max(0,n.top),l=Math.min(i.innerHeight,n.bottom);for(let c=t.parentNode;c&&c!=r.body;)if(c.nodeType==1){let u=c,d=window.getComputedStyle(u);if((u.scrollHeight>u.clientHeight||u.scrollWidth>u.clientWidth)&&d.overflow!="visible"){let f=u.getBoundingClientRect();o=Math.max(o,f.left),s=Math.min(s,f.right),a=Math.max(a,f.top),l=c==t.parentNode?f.bottom:Math.min(l,f.bottom)}c=d.position=="absolute"||d.position=="fixed"?u.offsetParent:u.parentNode}else if(c.nodeType==11)c=c.host;else break;return{left:o-n.left,right:Math.max(o,s)-n.left,top:a-(n.top+e),bottom:Math.max(a,l)-(n.top+e)}}function bF(t,e){let n=t.getBoundingClientRect();return{left:0,right:n.right-n.left,top:e,bottom:n.bottom-(n.top+e)}}class c0{constructor(e,n,r){this.from=e,this.to=n,this.size=r}static same(e,n){if(e.length!=n.length)return!1;for(let r=0;r<e.length;r++){let i=e[r],o=n[r];if(i.from!=o.from||i.to!=o.to||i.size!=o.size)return!1}return!0}draw(e){return G.replace({widget:new vF(this.size,e)}).range(this.from,this.to)}}class vF extends Ni{constructor(e,n){super(),this.size=e,this.vertical=n}eq(e){return e.size==this.size&&e.vertical==this.vertical}toDOM(){let e=document.createElement("div");return this.vertical?e.style.height=this.size+"px":(e.style.width=this.size+"px",e.style.height="2px",e.style.display="inline-block"),e}get estimatedHeight(){return this.vertical?this.size:-1}}class ww{constructor(e){this.state=e,this.pixelViewport={left:0,right:window.innerWidth,top:0,bottom:0},this.inView=!0,this.paddingTop=0,this.paddingBottom=0,this.contentDOMWidth=0,this.contentDOMHeight=0,this.editorHeight=0,this.editorWidth=0,this.scaler=Pw,this.scrollTarget=null,this.printing=!1,this.mustMeasureContent=!0,this.defaultTextDirection=Je.LTR,this.visibleRanges=[],this.mustEnforceCursorAssoc=!1;let n=e.facet(hx).some(r=>typeof r!="function"&&r.class=="cm-lineWrapping");this.heightOracle=new uF(n),this.stateDeco=e.facet(Tu).filter(r=>typeof r!="function"),this.heightMap=_t.empty().applyChanges(this.stateDeco,Se.empty,this.heightOracle.setDoc(e.doc),[new Yr(0,0,0,e.doc.length)]),this.viewport=this.getViewport(0,null),this.updateViewportLines(),this.updateForViewport(),this.lineGaps=this.ensureLineGaps([]),this.lineGapDeco=G.set(this.lineGaps.map(r=>r.draw(!1))),this.computeVisibleRanges()}updateForViewport(){let e=[this.viewport],{main:n}=this.state.selection;for(let r=0;r<=1;r++){let i=r?n.head:n.anchor;if(!e.some(({from:o,to:s})=>i>=o&&i<=s)){let{from:o,to:s}=this.lineBlockAt(i);e.push(new $d(o,s))}}this.viewports=e.sort((r,i)=>r.from-i.from),this.scaler=this.heightMap.height<=7e6?Pw:new SF(this.heightOracle.doc,this.heightMap,this.viewports)}updateViewportLines(){this.viewportLines=[],this.heightMap.forEachLine(this.viewport.from,this.viewport.to,this.state.doc,0,0,e=>{this.viewportLines.push(this.scaler.scale==1?e:xc(e,this.scaler))})}update(e,n=null){this.state=e.state;let r=this.stateDeco;this.stateDeco=this.state.facet(Tu).filter(c=>typeof c!="function");let i=e.changedRanges,o=Yr.extendWithRanges(i,pF(r,this.stateDeco,e?e.changes:ht.empty(this.state.doc.length))),s=this.heightMap.height;this.heightMap=this.heightMap.applyChanges(this.stateDeco,e.startState.doc,this.heightOracle.setDoc(this.state.doc),o),this.heightMap.height!=s&&(e.flags|=2);let a=o.length?this.mapViewport(this.viewport,e.changes):this.viewport;(n&&(n.range.head<a.from||n.range.head>a.to)||!this.viewportIsAppropriate(a))&&(a=this.getViewport(0,n));let l=!e.changes.empty||e.flags&2||a.from!=this.viewport.from||a.to!=this.viewport.to;this.viewport=a,this.updateForViewport(),l&&this.updateViewportLines(),(this.lineGaps.length||this.viewport.to-this.viewport.from>2e3<<1)&&this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps,e.changes))),e.flags|=this.computeVisibleRanges(),n&&(this.scrollTarget=n),!this.mustEnforceCursorAssoc&&e.selectionSet&&e.view.lineWrapping&&e.state.selection.main.empty&&e.state.selection.main.assoc&&!e.state.facet(IT)&&(this.mustEnforceCursorAssoc=!0)}measure(e){let n=e.contentDOM,r=window.getComputedStyle(n),i=this.heightOracle,o=r.whiteSpace;this.defaultTextDirection=r.direction=="rtl"?Je.RTL:Je.LTR;let s=this.heightOracle.mustRefreshForWrapping(o),a=s||this.mustMeasureContent||this.contentDOMHeight!=n.clientHeight;this.contentDOMHeight=n.clientHeight,this.mustMeasureContent=!1;let l=0,c=0,u=parseInt(r.paddingTop)||0,d=parseInt(r.paddingBottom)||0;(this.paddingTop!=u||this.paddingBottom!=d)&&(this.paddingTop=u,this.paddingBottom=d,l|=10),this.editorWidth!=e.scrollDOM.clientWidth&&(i.lineWrapping&&(a=!0),this.editorWidth=e.scrollDOM.clientWidth,l|=8);let f=(this.printing?bF:gF)(n,this.paddingTop),h=f.top-this.pixelViewport.top,p=f.bottom-this.pixelViewport.bottom;this.pixelViewport=f;let m=this.pixelViewport.bottom>this.pixelViewport.top&&this.pixelViewport.right>this.pixelViewport.left;if(m!=this.inView&&(this.inView=m,m&&(a=!0)),!this.inView&&!this.scrollTarget)return 0;let v=n.clientWidth;if((this.contentDOMWidth!=v||this.editorHeight!=e.scrollDOM.clientHeight)&&(this.contentDOMWidth=v,this.editorHeight=e.scrollDOM.clientHeight,l|=8),a){let b=e.docView.measureVisibleLineHeights(this.viewport);if(i.mustRefreshForHeights(b)&&(s=!0),s||i.lineWrapping&&Math.abs(v-this.contentDOMWidth)>i.charWidth){let{lineHeight:y,charWidth:x}=e.docView.measureTextSize();s=y>0&&i.refresh(o,y,x,v/x,b),s&&(e.docView.minWidth=0,l|=8)}h>0&&p>0?c=Math.max(h,p):h<0&&p<0&&(c=Math.min(h,p)),i.heightChanged=!1;for(let y of this.viewports){let x=y.from==this.viewport.from?b:e.docView.measureVisibleLineHeights(y);this.heightMap=(s?_t.empty().applyChanges(this.stateDeco,Se.empty,this.heightOracle,[new Yr(0,0,0,e.state.doc.length)]):this.heightMap).updateHeight(i,0,s,new dF(y.from,x))}i.heightChanged&&(l|=2)}let g=!this.viewportIsAppropriate(this.viewport,c)||this.scrollTarget&&(this.scrollTarget.range.head<this.viewport.from||this.scrollTarget.range.head>this.viewport.to);return g&&(this.viewport=this.getViewport(c,this.scrollTarget)),this.updateForViewport(),(l&2||g)&&this.updateViewportLines(),(this.lineGaps.length||this.viewport.to-this.viewport.from>2e3<<1)&&this.updateLineGaps(this.ensureLineGaps(s?[]:this.lineGaps,e)),l|=this.computeVisibleRanges(),this.mustEnforceCursorAssoc&&(this.mustEnforceCursorAssoc=!1,e.docView.enforceCursorAssoc()),l}get visibleTop(){return this.scaler.fromDOM(this.pixelViewport.top)}get visibleBottom(){return this.scaler.fromDOM(this.pixelViewport.bottom)}getViewport(e,n){let r=.5-Math.max(-.5,Math.min(.5,e/1e3/2)),i=this.heightMap,o=this.state.doc,{visibleTop:s,visibleBottom:a}=this,l=new $d(i.lineAt(s-r*1e3,Xe.ByHeight,o,0,0).from,i.lineAt(a+(1-r)*1e3,Xe.ByHeight,o,0,0).to);if(n){let{head:c}=n.range;if(c<l.from||c>l.to){let u=Math.min(this.editorHeight,this.pixelViewport.bottom-this.pixelViewport.top),d=i.lineAt(c,Xe.ByPos,o,0,0),f;n.y=="center"?f=(d.top+d.bottom)/2-u/2:n.y=="start"||n.y=="nearest"&&c<l.from?f=d.top:f=d.bottom-u,l=new $d(i.lineAt(f-1e3/2,Xe.ByHeight,o,0,0).from,i.lineAt(f+u+1e3/2,Xe.ByHeight,o,0,0).to)}}return l}mapViewport(e,n){let r=n.mapPos(e.from,-1),i=n.mapPos(e.to,1);return new $d(this.heightMap.lineAt(r,Xe.ByPos,this.state.doc,0,0).from,this.heightMap.lineAt(i,Xe.ByPos,this.state.doc,0,0).to)}viewportIsAppropriate({from:e,to:n},r=0){if(!this.inView)return!0;let{top:i}=this.heightMap.lineAt(e,Xe.ByPos,this.state.doc,0,0),{bottom:o}=this.heightMap.lineAt(n,Xe.ByPos,this.state.doc,0,0),{visibleTop:s,visibleBottom:a}=this;return(e==0||i<=s-Math.max(10,Math.min(-r,250)))&&(n==this.state.doc.length||o>=a+Math.max(10,Math.min(r,250)))&&i>s-2*1e3&&o<a+2*1e3}mapLineGaps(e,n){if(!e.length||n.empty)return e;let r=[];for(let i of e)n.touchesRange(i.from,i.to)||r.push(new c0(n.mapPos(i.from),n.mapPos(i.to),i.size));return r}ensureLineGaps(e,n){let r=this.heightOracle.lineWrapping,i=r?1e4:2e3,o=i>>1,s=i<<1;if(this.defaultTextDirection!=Je.LTR&&!r)return[];let a=[],l=(c,u,d,f)=>{if(u-c<o)return;let h=this.state.selection.main,p=[h.from];h.empty||p.push(h.to);for(let v of p)if(v>c&&v<u){l(c,v-10,d,f),l(v+10,u,d,f);return}let m=xF(e,v=>v.from>=d.from&&v.to<=d.to&&Math.abs(v.from-c)<o&&Math.abs(v.to-u)<o&&!p.some(g=>v.from<g&&v.to>g));if(!m){if(u<d.to&&n&&r&&n.visibleRanges.some(v=>v.from<=u&&v.to>=u)){let v=n.moveToLineBoundary(A.cursor(u),!1,!0).head;v>c&&(u=v)}m=new c0(c,u,this.gapSize(d,c,u,f))}a.push(m)};for(let c of this.viewportLines){if(c.length<s)continue;let u=yF(c.from,c.to,this.stateDeco);if(u.total<s)continue;let d=this.scrollTarget?this.scrollTarget.range.head:null,f,h;if(r){let p=i/this.heightOracle.lineLength*this.heightOracle.lineHeight,m,v;if(d!=null){let g=tf(u,d),b=((this.visibleBottom-this.visibleTop)/2+p)/c.height;m=g-b,v=g+b}else m=(this.visibleTop-c.top-p)/c.height,v=(this.visibleBottom-c.top+p)/c.height;f=ef(u,m),h=ef(u,v)}else{let p=u.total*this.heightOracle.charWidth,m=i*this.heightOracle.charWidth,v,g;if(d!=null){let b=tf(u,d),y=((this.pixelViewport.right-this.pixelViewport.left)/2+m)/p;v=b-y,g=b+y}else v=(this.pixelViewport.left-m)/p,g=(this.pixelViewport.right+m)/p;f=ef(u,v),h=ef(u,g)}f>c.from&&l(c.from,f,c,u),h<c.to&&l(h,c.to,c,u)}return a}gapSize(e,n,r,i){let o=tf(i,r)-tf(i,n);return this.heightOracle.lineWrapping?e.height*o:i.total*this.heightOracle.charWidth*o}updateLineGaps(e){c0.same(e,this.lineGaps)||(this.lineGaps=e,this.lineGapDeco=G.set(e.map(n=>n.draw(this.heightOracle.lineWrapping))))}computeVisibleRanges(){let e=this.stateDeco;this.lineGaps.length&&(e=e.concat(this.lineGapDeco));let n=[];Pe.spans(e,this.viewport.from,this.viewport.to,{span(i,o){n.push({from:i,to:o})},point(){}},20);let r=n.length!=this.visibleRanges.length||this.visibleRanges.some((i,o)=>i.from!=n[o].from||i.to!=n[o].to);return this.visibleRanges=n,r?4:0}lineBlockAt(e){return e>=this.viewport.from&&e<=this.viewport.to&&this.viewportLines.find(n=>n.from<=e&&n.to>=e)||xc(this.heightMap.lineAt(e,Xe.ByPos,this.state.doc,0,0),this.scaler)}lineBlockAtHeight(e){return xc(this.heightMap.lineAt(this.scaler.fromDOM(e),Xe.ByHeight,this.state.doc,0,0),this.scaler)}elementAtHeight(e){return xc(this.heightMap.blockAt(this.scaler.fromDOM(e),this.state.doc,0,0),this.scaler)}get docHeight(){return this.scaler.toDOM(this.heightMap.height)}get contentHeight(){return this.docHeight+this.paddingTop+this.paddingBottom}}class $d{constructor(e,n){this.from=e,this.to=n}}function yF(t,e,n){let r=[],i=t,o=0;return Pe.spans(n,t,e,{span(){},point(s,a){s>i&&(r.push({from:i,to:s}),o+=s-i),i=a}},20),i<e&&(r.push({from:i,to:e}),o+=e-i),{total:o,ranges:r}}function ef({total:t,ranges:e},n){if(n<=0)return e[0].from;if(n>=1)return e[e.length-1].to;let r=Math.floor(t*n);for(let i=0;;i++){let{from:o,to:s}=e[i],a=s-o;if(r<=a)return o+r;r-=a}}function tf(t,e){let n=0;for(let{from:r,to:i}of t.ranges){if(e<=i){n+=e-r;break}n+=i-r}return n/t.total}function xF(t,e){for(let n of t)if(e(n))return n}const Pw={toDOM(t){return t},fromDOM(t){return t},scale:1};class SF{constructor(e,n,r){let i=0,o=0,s=0;this.viewports=r.map(({from:a,to:l})=>{let c=n.lineAt(a,Xe.ByPos,e,0,0).top,u=n.lineAt(l,Xe.ByPos,e,0,0).bottom;return i+=u-c,{from:a,to:l,top:c,bottom:u,domTop:0,domBottom:0}}),this.scale=(7e6-i)/(n.height-i);for(let a of this.viewports)a.domTop=s+(a.top-o)*this.scale,s=a.domBottom=a.domTop+(a.bottom-a.top),o=a.bottom}toDOM(e){for(let n=0,r=0,i=0;;n++){let o=n<this.viewports.length?this.viewports[n]:null;if(!o||e<o.top)return i+(e-r)*this.scale;if(e<=o.bottom)return o.domTop+(e-o.top);r=o.bottom,i=o.domBottom}}fromDOM(e){for(let n=0,r=0,i=0;;n++){let o=n<this.viewports.length?this.viewports[n]:null;if(!o||e<o.domTop)return r+(e-i)/this.scale;if(e<=o.domBottom)return o.top+(e-o.domTop);r=o.bottom,i=o.domBottom}}}function xc(t,e){if(e.scale==1)return t;let n=e.toDOM(t.top),r=e.toDOM(t.bottom);return new no(t.from,t.length,n,r-n,Array.isArray(t.type)?t.type.map(i=>xc(i,e)):t.type)}const nf=$.define({combine:t=>t.join(" ")}),Rv=$.define({combine:t=>t.indexOf(!0)>-1}),Fv=ko.newName(),QT=ko.newName(),_T=ko.newName(),$T={"&light":"."+QT,"&dark":"."+_T};function Hv(t,e,n){return new ko(e,{finish(r){return/&/.test(r)?r.replace(/&\w*/,i=>{if(i=="&")return t;if(!n||!n[i])throw new RangeError(`Unsupported selector: ${i}`);return n[i]}):t+" "+r}})}const kF=Hv("."+Fv,{"&.cm-editor":{position:"relative !important",boxSizing:"border-box","&.cm-focused":{outline:"1px dotted #212121"},display:"flex !important",flexDirection:"column"},".cm-scroller":{display:"flex !important",alignItems:"flex-start !important",fontFamily:"monospace",lineHeight:1.4,height:"100%",overflowX:"auto",position:"relative",zIndex:0},".cm-content":{margin:0,flexGrow:2,flexShrink:0,minHeight:"100%",display:"block",whiteSpace:"pre",wordWrap:"normal",boxSizing:"border-box",padding:"4px 0",outline:"none","&[contenteditable=true]":{WebkitUserModify:"read-write-plaintext-only"}},".cm-lineWrapping":{whiteSpace_fallback:"pre-wrap",whiteSpace:"break-spaces",wordBreak:"break-word",overflowWrap:"anywhere",flexShrink:1},"&light .cm-content":{caretColor:"black"},"&dark .cm-content":{caretColor:"white"},".cm-line":{display:"block",padding:"0 2px 0 6px"},".cm-layer":{contain:"size style","& > *":{position:"absolute"}},"&light .cm-selectionBackground":{background:"#d9d9d9"},"&dark .cm-selectionBackground":{background:"#222"},"&light.cm-focused .cm-selectionBackground":{background:"#d7d4f0"},"&dark.cm-focused .cm-selectionBackground":{background:"#233"},".cm-cursorLayer":{pointerEvents:"none"},"&.cm-focused .cm-cursorLayer":{animation:"steps(1) cm-blink 1.2s infinite"},"@keyframes cm-blink":{"0%":{},"50%":{opacity:0},"100%":{}},"@keyframes cm-blink2":{"0%":{},"50%":{opacity:0},"100%":{}},".cm-cursor, .cm-dropCursor":{borderLeft:"1.2px solid black",marginLeft:"-0.6px",pointerEvents:"none"},".cm-cursor":{display:"none"},"&dark .cm-cursor":{borderLeftColor:"#444"},"&.cm-focused .cm-cursor":{display:"block"},"&light .cm-activeLine":{backgroundColor:"#cceeff44"},"&dark .cm-activeLine":{backgroundColor:"#99eeff33"},"&light .cm-specialChar":{color:"red"},"&dark .cm-specialChar":{color:"#f78"},".cm-gutters":{flexShrink:0,display:"flex",height:"100%",boxSizing:"border-box",left:0,zIndex:200},"&light .cm-gutters":{backgroundColor:"#f5f5f5",color:"#6c6c6c",borderRight:"1px solid #ddd"},"&dark .cm-gutters":{backgroundColor:"#333338",color:"#ccc"},".cm-gutter":{display:"flex !important",flexDirection:"column",flexShrink:0,boxSizing:"border-box",minHeight:"100%",overflow:"hidden"},".cm-gutterElement":{boxSizing:"border-box"},".cm-lineNumbers .cm-gutterElement":{padding:"0 3px 0 5px",minWidth:"20px",textAlign:"right",whiteSpace:"nowrap"},"&light .cm-activeLineGutter":{backgroundColor:"#e2f2ff"},"&dark .cm-activeLineGutter":{backgroundColor:"#222227"},".cm-panels":{boxSizing:"border-box",position:"sticky",left:0,right:0},"&light .cm-panels":{backgroundColor:"#f5f5f5",color:"black"},"&light .cm-panels-top":{borderBottom:"1px solid #ddd"},"&light .cm-panels-bottom":{borderTop:"1px solid #ddd"},"&dark .cm-panels":{backgroundColor:"#333338",color:"white"},".cm-tab":{display:"inline-block",overflow:"hidden",verticalAlign:"bottom"},".cm-widgetBuffer":{verticalAlign:"text-top",height:"1em",width:0,display:"inline"},".cm-placeholder":{color:"#888",display:"inline-block",verticalAlign:"top"},".cm-button":{verticalAlign:"middle",color:"inherit",fontSize:"70%",padding:".2em 1em",borderRadius:"1px"},"&light .cm-button":{backgroundImage:"linear-gradient(#eff1f5, #d9d9df)",border:"1px solid #888","&:active":{backgroundImage:"linear-gradient(#b4b4b4, #d0d3d6)"}},"&dark .cm-button":{backgroundImage:"linear-gradient(#393939, #111)",border:"1px solid #888","&:active":{backgroundImage:"linear-gradient(#111, #333)"}},".cm-textfield":{verticalAlign:"middle",color:"inherit",fontSize:"70%",border:"1px solid silver",padding:".2em .5em"},"&light .cm-textfield":{backgroundColor:"white"},"&dark .cm-textfield":{border:"1px solid #555",backgroundColor:"inherit"}},$T);class wF{constructor(e,n,r,i){this.typeOver=i,this.bounds=null,this.text="";let{impreciseHead:o,impreciseAnchor:s}=e.docView;if(e.state.readOnly&&n>-1)this.newSel=null;else if(n>-1&&(this.bounds=e.docView.domBoundsAround(n,r,0))){let a=o||s?[]:OF(e),l=new RT(a,e.state);l.readRange(this.bounds.startDOM,this.bounds.endDOM),this.text=l.text,this.newSel=CF(a,this.bounds.from)}else{let a=e.observer.selectionRange,l=o&&o.node==a.focusNode&&o.offset==a.focusOffset||!ul(e.contentDOM,a.focusNode)?e.state.selection.main.head:e.docView.posFromDOM(a.focusNode,a.focusOffset),c=s&&s.node==a.anchorNode&&s.offset==a.anchorOffset||!ul(e.contentDOM,a.anchorNode)?e.state.selection.main.anchor:e.docView.posFromDOM(a.anchorNode,a.anchorOffset);this.newSel=A.single(c,l)}}}function ez(t,e){let n,{newSel:r}=e,i=t.state.selection.main;if(e.bounds){let{from:o,to:s}=e.bounds,a=i.from,l=null;(t.inputState.lastKeyCode===8&&t.inputState.lastKeyTime>Date.now()-100||_.android&&e.text.length<s-o)&&(a=i.to,l="end");let c=PF(t.state.doc.sliceString(o,s,to),e.text,a-o,l);c&&(_.chrome&&t.inputState.lastKeyCode==13&&c.toB==c.from+2&&e.text.slice(c.from,c.toB)==to+to&&c.toB--,n={from:o+c.from,to:o+c.toA,insert:Se.of(e.text.slice(c.from,c.toB).split(to))})}else r&&(!t.hasFocus||!t.state.facet(km)||r.main.eq(i))&&(r=null);if(!n&&!r)return!1;if(!n&&e.typeOver&&!i.empty&&r&&r.main.empty?n={from:i.from,to:i.to,insert:t.state.doc.slice(i.from,i.to)}:n&&n.from>=i.from&&n.to<=i.to&&(n.from!=i.from||n.to!=i.to)&&i.to-i.from-(n.to-n.from)<=4?n={from:i.from,to:i.to,insert:t.state.doc.slice(i.from,n.from).append(n.insert).append(t.state.doc.slice(n.to,i.to))}:(_.mac||_.android)&&n&&n.from==n.to&&n.from==i.head-1&&/^\. ?$/.test(n.insert.toString())?(r&&n.insert.length==2&&(r=A.single(r.main.anchor-1,r.main.head-1)),n={from:i.from,to:i.to,insert:Se.of([" "])}):_.chrome&&n&&n.from==n.to&&n.from==i.head&&n.insert.toString()==`
 `&&t.lineWrapping&&(r&&(r=A.single(r.main.anchor-1,r.main.head-1)),n={from:i.from,to:i.to,insert:Se.of([" "])}),n){let o=t.state;if(_.ios&&t.inputState.flushIOSKey(t)||_.android&&(n.from==i.from&&n.to==i.to&&n.insert.length==1&&n.insert.lines==2&&Da(t.contentDOM,"Enter",13)||n.from==i.from-1&&n.to==i.to&&n.insert.length==0&&Da(t.contentDOM,"Backspace",8)||n.from==i.from&&n.to==i.to+1&&n.insert.length==0&&Da(t.contentDOM,"Delete",46)))return!0;let s=n.insert.toString();if(t.state.facet(ET).some(c=>c(t,n.from,n.to,s)))return!0;t.inputState.composing>=0&&t.inputState.composing++;let a;if(n.from>=i.from&&n.to<=i.to&&n.to-n.from>=(i.to-i.from)/3&&(!r||r.main.empty&&r.main.from==n.from+n.insert.length)&&t.inputState.composing<0){let c=i.from<n.from?o.sliceDoc(i.from,n.from):"",u=i.to>n.to?o.sliceDoc(n.to,i.to):"";a=o.replaceSelection(t.state.toText(c+n.insert.sliceString(0,void 0,t.state.lineBreak)+u))}else{let c=o.changes(n),u=r&&!o.selection.main.eq(r.main)&&r.main.to<=c.newLength?r.main:void 0;if(o.selection.ranges.length>1&&t.inputState.composing>=0&&n.to<=i.to&&n.to>=i.to-10){let d=t.state.sliceDoc(n.from,n.to),f=FT(t)||t.state.doc.lineAt(i.head),h=i.to-n.to,p=i.to-i.from;a=o.changeByRange(m=>{if(m.from==i.from&&m.to==i.to)return{changes:c,range:u||m.map(c)};let v=m.to-h,g=v-d.length;if(m.to-m.from!=p||t.state.sliceDoc(g,v)!=d||f&&m.to>=f.from&&m.from<=f.to)return{range:m};let b=o.changes({from:g,to:v,insert:n.insert}),y=m.to-i.to;return{changes:b,range:u?A.range(Math.max(0,u.anchor+y),Math.max(0,u.head+y)):m.map(b)}})}else a={changes:c,selection:u&&o.selection.replaceRange(u)}}let l="input.type";return t.composing&&(l+=".compose",t.inputState.compositionFirstChange&&(l+=".start",t.inputState.compositionFirstChange=!1)),t.dispatch(a,{scrollIntoView:!0,userEvent:l}),!0}else if(r&&!r.main.eq(i)){let o=!1,s="select";return t.inputState.lastSelectionTime>Date.now()-50&&(t.inputState.lastSelectionOrigin=="select"&&(o=!0),s=t.inputState.lastSelectionOrigin),t.dispatch({selection:r,scrollIntoView:o,userEvent:s}),!0}else return!1}function PF(t,e,n,r){let i=Math.min(t.length,e.length),o=0;for(;o<i&&t.charCodeAt(o)==e.charCodeAt(o);)o++;if(o==i&&t.length==e.length)return null;let s=t.length,a=e.length;for(;s>0&&a>0&&t.charCodeAt(s-1)==e.charCodeAt(a-1);)s--,a--;if(r=="end"){let l=Math.max(0,o-Math.min(s,a));n-=s+l-o}if(s<o&&t.length<e.length){let l=n<=o&&n>=s?o-n:0;o-=l,a=o+(a-s),s=o}else if(a<o){let l=n<=o&&n>=a?o-n:0;o-=l,s=o+(s-a),a=o}return{from:o,toA:s,toB:a}}function OF(t){let e=[];if(t.root.activeElement!=t.contentDOM)return e;let{anchorNode:n,anchorOffset:r,focusNode:i,focusOffset:o}=t.observer.selectionRange;return n&&(e.push(new ow(n,r)),(i!=n||o!=r)&&e.push(new ow(i,o))),e}function CF(t,e){if(t.length==0)return null;let n=t[0].pos,r=t.length==2?t[1].pos:n;return n>-1&&r>-1?A.single(n+e,r+e):null}const TF={childList:!0,characterData:!0,subtree:!0,attributes:!0,characterDataOldValue:!0},u0=_.ie&&_.ie_version<=11;class zF{constructor(e){this.view=e,this.active=!1,this.selectionRange=new SR,this.selectionChanged=!1,this.delayedFlush=-1,this.resizeTimeout=-1,this.queue=[],this.delayedAndroidKey=null,this.flushingAndroidKey=-1,this.lastChange=0,this.scrollTargets=[],this.intersection=null,this.resize=null,this.intersecting=!1,this.gapIntersection=null,this.gaps=[],this.parentCheck=-1,this.dom=e.contentDOM,this.observer=new MutationObserver(n=>{for(let r of n)this.queue.push(r);(_.ie&&_.ie_version<=11||_.ios&&e.composing)&&n.some(r=>r.type=="childList"&&r.removedNodes.length||r.type=="characterData"&&r.oldValue.length>r.target.nodeValue.length)?this.flushSoon():this.flush()}),u0&&(this.onCharData=n=>{this.queue.push({target:n.target,type:"characterData",oldValue:n.prevValue}),this.flushSoon()}),this.onSelectionChange=this.onSelectionChange.bind(this),this.onResize=this.onResize.bind(this),this.onPrint=this.onPrint.bind(this),this.onScroll=this.onScroll.bind(this),typeof ResizeObserver=="function"&&(this.resize=new ResizeObserver(()=>{var n;((n=this.view.docView)===null||n===void 0?void 0:n.lastUpdate)<Date.now()-75&&this.onResize()}),this.resize.observe(e.scrollDOM)),this.addWindowListeners(this.win=e.win),this.start(),typeof IntersectionObserver=="function"&&(this.intersection=new IntersectionObserver(n=>{this.parentCheck<0&&(this.parentCheck=setTimeout(this.listenForScroll.bind(this),1e3)),n.length>0&&n[n.length-1].intersectionRatio>0!=this.intersecting&&(this.intersecting=!this.intersecting,this.intersecting!=this.view.inView&&this.onScrollChanged(document.createEvent("Event")))},{}),this.intersection.observe(this.dom),this.gapIntersection=new IntersectionObserver(n=>{n.length>0&&n[n.length-1].intersectionRatio>0&&this.onScrollChanged(document.createEvent("Event"))},{})),this.listenForScroll(),this.readSelectionRange()}onScrollChanged(e){this.view.inputState.runScrollHandlers(this.view,e),this.intersecting&&this.view.measure()}onScroll(e){this.intersecting&&this.flush(!1),this.onScrollChanged(e)}onResize(){this.resizeTimeout<0&&(this.resizeTimeout=setTimeout(()=>{this.resizeTimeout=-1,this.view.requestMeasure()},50))}onPrint(){this.view.viewState.printing=!0,this.view.measure(),setTimeout(()=>{this.view.viewState.printing=!1,this.view.requestMeasure()},500)}updateGaps(e){if(this.gapIntersection&&(e.length!=this.gaps.length||this.gaps.some((n,r)=>n!=e[r]))){this.gapIntersection.disconnect();for(let n of e)this.gapIntersection.observe(n);this.gaps=e}}onSelectionChange(e){let n=this.selectionChanged;if(!this.readSelectionRange()||this.delayedAndroidKey)return;let{view:r}=this,i=this.selectionRange;if(r.state.facet(km)?r.root.activeElement!=this.dom:!rh(r.dom,i))return;let o=i.anchorNode&&r.docView.nearest(i.anchorNode);if(o&&o.ignoreEvent(e)){n||(this.selectionChanged=!1);return}(_.ie&&_.ie_version<=11||_.android&&_.chrome)&&!r.state.selection.main.empty&&i.focusNode&&tp(i.focusNode,i.focusOffset,i.anchorNode,i.anchorOffset)?this.flushSoon():this.flush(!1)}readSelectionRange(){let{view:e}=this,n=_.safari&&e.root.nodeType==11&&vR(this.dom.ownerDocument)==this.dom&&VF(this.view)||ep(e.root);if(!n||this.selectionRange.eq(n))return!1;let r=rh(this.dom,n);return r&&!this.selectionChanged&&e.inputState.lastFocusTime>Date.now()-200&&e.inputState.lastTouchTime<Date.now()-300&&wR(this.dom,n)?(this.view.inputState.lastFocusTime=0,e.docView.updateSelection(),!1):(this.selectionRange.setRange(n),r&&(this.selectionChanged=!0),!0)}setSelectionRange(e,n){this.selectionRange.set(e.node,e.offset,n.node,n.offset),this.selectionChanged=!1}clearSelectionRange(){this.selectionRange.set(null,0,null,0)}listenForScroll(){this.parentCheck=-1;let e=0,n=null;for(let r=this.dom;r;)if(r.nodeType==1)!n&&e<this.scrollTargets.length&&this.scrollTargets[e]==r?e++:n||(n=this.scrollTargets.slice(0,e)),n&&n.push(r),r=r.assignedSlot||r.parentNode;else if(r.nodeType==11)r=r.host;else break;if(e<this.scrollTargets.length&&!n&&(n=this.scrollTargets.slice(0,e)),n){for(let r of this.scrollTargets)r.removeEventListener("scroll",this.onScroll);for(let r of this.scrollTargets=n)r.addEventListener("scroll",this.onScroll)}}ignore(e){if(!this.active)return e();try{return this.stop(),e()}finally{this.start(),this.clear()}}start(){this.active||(this.observer.observe(this.dom,TF),u0&&this.dom.addEventListener("DOMCharacterDataModified",this.onCharData),this.active=!0)}stop(){!this.active||(this.active=!1,this.observer.disconnect(),u0&&this.dom.removeEventListener("DOMCharacterDataModified",this.onCharData))}clear(){this.processRecords(),this.queue.length=0,this.selectionChanged=!1}delayAndroidKey(e,n){var r;if(!this.delayedAndroidKey){let i=()=>{let o=this.delayedAndroidKey;o&&(this.clearDelayedAndroidKey(),!this.flush()&&o.force&&Da(this.dom,o.key,o.keyCode))};this.flushingAndroidKey=this.view.win.requestAnimationFrame(i)}(!this.delayedAndroidKey||e=="Enter")&&(this.delayedAndroidKey={key:e,keyCode:n,force:this.lastChange<Date.now()-50||!!(!((r=this.delayedAndroidKey)===null||r===void 0)&&r.force)})}clearDelayedAndroidKey(){this.win.cancelAnimationFrame(this.flushingAndroidKey),this.delayedAndroidKey=null,this.flushingAndroidKey=-1}flushSoon(){this.delayedFlush<0&&(this.delayedFlush=this.view.win.requestAnimationFrame(()=>{this.delayedFlush=-1,this.flush()}))}forceFlush(){this.delayedFlush>=0&&(this.view.win.cancelAnimationFrame(this.delayedFlush),this.delayedFlush=-1),this.flush()}processRecords(){let e=this.queue;for(let o of this.observer.takeRecords())e.push(o);e.length&&(this.queue=[]);let n=-1,r=-1,i=!1;for(let o of e){let s=this.readMutation(o);!s||(s.typeOver&&(i=!0),n==-1?{from:n,to:r}=s:(n=Math.min(s.from,n),r=Math.max(s.to,r)))}return{from:n,to:r,typeOver:i}}readChange(){let{from:e,to:n,typeOver:r}=this.processRecords(),i=this.selectionChanged&&rh(this.dom,this.selectionRange);return e<0&&!i?null:(e>-1&&(this.lastChange=Date.now()),this.view.inputState.lastFocusTime=0,this.selectionChanged=!1,new wF(this.view,e,n,r))}flush(e=!0){if(this.delayedFlush>=0||this.delayedAndroidKey)return!1;e&&this.readSelectionRange();let n=this.readChange();if(!n)return!1;let r=this.view.state,i=ez(this.view,n);return this.view.state==r&&this.view.update([]),i}readMutation(e){let n=this.view.docView.nearest(e.target);if(!n||n.ignoreMutation(e))return null;if(n.markDirty(e.type=="attributes"),e.type=="attributes"&&(n.dirty|=4),e.type=="childList"){let r=Ow(n,e.previousSibling||e.target.previousSibling,-1),i=Ow(n,e.nextSibling||e.target.nextSibling,1);return{from:r?n.posAfter(r):n.posAtStart,to:i?n.posBefore(i):n.posAtEnd,typeOver:!1}}else return e.type=="characterData"?{from:n.posAtStart,to:n.posAtEnd,typeOver:e.target.nodeValue==e.oldValue}:null}setWindow(e){e!=this.win&&(this.removeWindowListeners(this.win),this.win=e,this.addWindowListeners(this.win))}addWindowListeners(e){e.addEventListener("resize",this.onResize),e.addEventListener("beforeprint",this.onPrint),e.addEventListener("scroll",this.onScroll),e.document.addEventListener("selectionchange",this.onSelectionChange)}removeWindowListeners(e){e.removeEventListener("scroll",this.onScroll),e.removeEventListener("resize",this.onResize),e.removeEventListener("beforeprint",this.onPrint),e.document.removeEventListener("selectionchange",this.onSelectionChange)}destroy(){var e,n,r;this.stop(),(e=this.intersection)===null||e===void 0||e.disconnect(),(n=this.gapIntersection)===null||n===void 0||n.disconnect(),(r=this.resize)===null||r===void 0||r.disconnect();for(let i of this.scrollTargets)i.removeEventListener("scroll",this.onScroll);this.removeWindowListeners(this.win),clearTimeout(this.parentCheck),clearTimeout(this.resizeTimeout),this.win.cancelAnimationFrame(this.delayedFlush),this.win.cancelAnimationFrame(this.flushingAndroidKey)}}function Ow(t,e,n){for(;e;){let r=Re.get(e);if(r&&r.parent==t)return r;let i=e.parentNode;e=i!=t.dom?i:n>0?e.nextSibling:e.previousSibling}return null}function VF(t){let e=null;function n(l){l.preventDefault(),l.stopImmediatePropagation(),e=l.getTargetRanges()[0]}if(t.contentDOM.addEventListener("beforeinput",n,!0),t.dom.ownerDocument.execCommand("indent"),t.contentDOM.removeEventListener("beforeinput",n,!0),!e)return null;let r=e.startContainer,i=e.startOffset,o=e.endContainer,s=e.endOffset,a=t.docView.domAtPos(t.state.selection.main.anchor);return tp(a.node,a.offset,o,s)&&([r,i,o,s]=[o,s,r,i]),{anchorNode:r,anchorOffset:i,focusNode:o,focusOffset:s}}class U{constructor(e={}){this.plugins=[],this.pluginMap=new Map,this.editorAttrs={},this.contentAttrs={},this.bidiCache=[],this.destroyed=!1,this.updateState=2,this.measureScheduled=-1,this.measureRequests=[],this.contentDOM=document.createElement("div"),this.scrollDOM=document.createElement("div"),this.scrollDOM.tabIndex=-1,this.scrollDOM.className="cm-scroller",this.scrollDOM.appendChild(this.contentDOM),this.announceDOM=document.createElement("div"),this.announceDOM.style.cssText="position: absolute; top: -10000px",this.announceDOM.setAttribute("aria-live","polite"),this.dom=document.createElement("div"),this.dom.appendChild(this.announceDOM),this.dom.appendChild(this.scrollDOM),this._dispatch=e.dispatch||(n=>this.update([n])),this.dispatch=this.dispatch.bind(this),this._root=e.root||kR(e.parent)||document,this.viewState=new ww(e.state||pe.create(e)),this.plugins=this.state.facet(vc).map(n=>new s0(n));for(let n of this.plugins)n.update(this);this.observer=new zF(this),this.inputState=new QR(this),this.inputState.ensureHandlers(this,this.plugins),this.docView=new sw(this),this.mountStyles(),this.updateAttrs(),this.updateState=0,this.requestMeasure(),e.parent&&e.parent.appendChild(this.dom)}get state(){return this.viewState.state}get viewport(){return this.viewState.viewport}get visibleRanges(){return this.viewState.visibleRanges}get inView(){return this.viewState.inView}get composing(){return this.inputState.composing>0}get compositionStarted(){return this.inputState.composing>=0}get root(){return this._root}get win(){return this.dom.ownerDocument.defaultView||window}dispatch(...e){this._dispatch(e.length==1&&e[0]instanceof mt?e[0]:this.state.update(...e))}update(e){if(this.updateState!=0)throw new Error("Calls to EditorView.update are not allowed while an update is in progress");let n=!1,r=!1,i,o=this.state;for(let c of e){if(c.startState!=o)throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");o=c.state}if(this.destroyed){this.viewState.state=o;return}let s=this.observer.delayedAndroidKey,a=null;if(s?(this.observer.clearDelayedAndroidKey(),a=this.observer.readChange(),(a&&!this.state.doc.eq(o.doc)||!this.state.selection.eq(o.selection))&&(a=null)):this.observer.clear(),o.facet(pe.phrases)!=this.state.facet(pe.phrases))return this.setState(o);i=ip.create(this,o,e);let l=this.viewState.scrollTarget;try{this.updateState=2;for(let c of e){if(l&&(l=l.map(c.changes)),c.scrollIntoView){let{main:u}=c.state.selection;l=new rp(u.empty?u:A.cursor(u.head,u.head>u.anchor?-1:1))}for(let u of c.effects)u.is(rw)&&(l=u.value)}this.viewState.update(i,l),this.bidiCache=op.update(this.bidiCache,i.changes),i.empty||(this.updatePlugins(i),this.inputState.update(i)),n=this.docView.update(i),this.state.facet(yc)!=this.styleModules&&this.mountStyles(),r=this.updateAttrs(),this.showAnnouncements(e),this.docView.updateSelection(n,e.some(c=>c.isUserEvent("select.pointer")))}finally{this.updateState=0}if(i.startState.facet(nf)!=i.state.facet(nf)&&(this.viewState.mustMeasureContent=!0),(n||r||l||this.viewState.mustEnforceCursorAssoc||this.viewState.mustMeasureContent)&&this.requestMeasure(),!i.empty)for(let c of this.state.facet(Mv))c(i);a&&!ez(this,a)&&s.force&&Da(this.contentDOM,s.key,s.keyCode)}setState(e){if(this.updateState!=0)throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");if(this.destroyed){this.viewState.state=e;return}this.updateState=2;let n=this.hasFocus;try{for(let r of this.plugins)r.destroy(this);this.viewState=new ww(e),this.plugins=e.facet(vc).map(r=>new s0(r)),this.pluginMap.clear();for(let r of this.plugins)r.update(this);this.docView=new sw(this),this.inputState.ensureHandlers(this,this.plugins),this.mountStyles(),this.updateAttrs(),this.bidiCache=[]}finally{this.updateState=0}n&&this.focus(),this.requestMeasure()}updatePlugins(e){let n=e.startState.facet(vc),r=e.state.facet(vc);if(n!=r){let i=[];for(let o of r){let s=n.indexOf(o);if(s<0)i.push(new s0(o));else{let a=this.plugins[s];a.mustUpdate=e,i.push(a)}}for(let o of this.plugins)o.mustUpdate!=e&&o.destroy(this);this.plugins=i,this.pluginMap.clear(),this.inputState.ensureHandlers(this,this.plugins)}else for(let i of this.plugins)i.mustUpdate=e;for(let i=0;i<this.plugins.length;i++)this.plugins[i].update(this)}measure(e=!0){if(this.destroyed)return;this.measureScheduled>-1&&cancelAnimationFrame(this.measureScheduled),this.measureScheduled=0,e&&this.observer.forceFlush();let n=null,{scrollHeight:r,scrollTop:i,clientHeight:o}=this.scrollDOM,s=i>r-o-4?r:i;try{for(let a=0;;a++){this.updateState=1;let l=this.viewport,c=this.viewState.lineBlockAtHeight(s),u=this.viewState.measure(this);if(!u&&!this.measureRequests.length&&this.viewState.scrollTarget==null)break;if(a>5){console.warn(this.measureRequests.length?"Measure loop restarted more than 5 times":"Viewport failed to stabilize");break}let d=[];u&4||([this.measureRequests,d]=[d,this.measureRequests]);let f=d.map(v=>{try{return v.read(this)}catch(g){return zn(this.state,g),Cw}}),h=ip.create(this,this.state,[]),p=!1,m=!1;h.flags|=u,n?n.flags|=u:n=h,this.updateState=2,h.empty||(this.updatePlugins(h),this.inputState.update(h),this.updateAttrs(),p=this.docView.update(h));for(let v=0;v<d.length;v++)if(f[v]!=Cw)try{let g=d[v];g.write&&g.write(f[v],this)}catch(g){zn(this.state,g)}if(this.viewState.editorHeight)if(this.viewState.scrollTarget)this.docView.scrollIntoView(this.viewState.scrollTarget),this.viewState.scrollTarget=null,m=!0;else{let v=this.viewState.lineBlockAt(c.from).top-c.top;(v>1||v<-1)&&(this.scrollDOM.scrollTop+=v,m=!0)}if(p&&this.docView.updateSelection(!0),this.viewport.from==l.from&&this.viewport.to==l.to&&!m&&this.measureRequests.length==0)break}}finally{this.updateState=0,this.measureScheduled=-1}if(n&&!n.empty)for(let a of this.state.facet(Mv))a(n)}get themeClasses(){return Fv+" "+(this.state.facet(Rv)?_T:QT)+" "+this.state.facet(nf)}updateAttrs(){let e=Tw(this,MT,{class:"cm-editor"+(this.hasFocus?" cm-focused ":" ")+this.themeClasses}),n={spellcheck:"false",autocorrect:"off",autocapitalize:"off",translate:"no",contenteditable:this.state.facet(km)?"true":"false",class:"cm-content",style:`${_.tabSize}: ${this.state.tabSize}`,role:"textbox","aria-multiline":"true"};this.state.readOnly&&(n["aria-readonly"]="true"),Tw(this,hx,n);let r=this.observer.ignore(()=>{let i=Nv(this.contentDOM,this.contentAttrs,n),o=Nv(this.dom,this.editorAttrs,e);return i||o});return this.editorAttrs=e,this.contentAttrs=n,r}showAnnouncements(e){let n=!0;for(let r of e)for(let i of r.effects)if(i.is(U.announce)){n&&(this.announceDOM.textContent=""),n=!1;let o=this.announceDOM.appendChild(document.createElement("div"));o.textContent=i.value}}mountStyles(){this.styleModules=this.state.facet(yc),ko.mount(this.root,this.styleModules.concat(kF).reverse())}readMeasured(){if(this.updateState==2)throw new Error("Reading the editor layout isn't allowed during an update");this.updateState==0&&this.measureScheduled>-1&&this.measure(!1)}requestMeasure(e){if(this.measureScheduled<0&&(this.measureScheduled=this.win.requestAnimationFrame(()=>this.measure())),e){if(e.key!=null){for(let n=0;n<this.measureRequests.length;n++)if(this.measureRequests[n].key===e.key){this.measureRequests[n]=e;return}}this.measureRequests.push(e)}}plugin(e){let n=this.pluginMap.get(e);return(n===void 0||n&&n.spec!=e)&&this.pluginMap.set(e,n=this.plugins.find(r=>r.spec==e)||null),n&&n.update(this).value}get documentTop(){return this.contentDOM.getBoundingClientRect().top+this.viewState.paddingTop}get documentPadding(){return{top:this.viewState.paddingTop,bottom:this.viewState.paddingBottom}}elementAtHeight(e){return this.readMeasured(),this.viewState.elementAtHeight(e)}lineBlockAtHeight(e){return this.readMeasured(),this.viewState.lineBlockAtHeight(e)}get viewportLineBlocks(){return this.viewState.viewportLines}lineBlockAt(e){return this.viewState.lineBlockAt(e)}get contentHeight(){return this.viewState.contentHeight}moveByChar(e,n,r){return l0(this,e,fw(this,e,n,r))}moveByGroup(e,n){return l0(this,e,fw(this,e,n,r=>qR(this,e.head,r)))}moveToLineBoundary(e,n,r=!0){return UR(this,e,n,r)}moveVertically(e,n,r){return l0(this,e,JR(this,e,n,r))}domAtPos(e){return this.docView.domAtPos(e)}posAtDOM(e,n=0){return this.docView.posFromDOM(e,n)}posAtCoords(e,n=!0){return this.readMeasured(),DT(this,e,n)}coordsAtPos(e,n=1){this.readMeasured();let r=this.docView.coordsAt(e,n);if(!r||r.left==r.right)return r;let i=this.state.doc.lineAt(e),o=this.bidiSpans(i),s=o[Ga.find(o,e-i.from,-1,n)];return cx(r,s.dir==Je.LTR==n>0)}get defaultCharacterWidth(){return this.viewState.heightOracle.charWidth}get defaultLineHeight(){return this.viewState.heightOracle.lineHeight}get textDirection(){return this.viewState.defaultTextDirection}textDirectionAt(e){return!this.state.facet(NT)||e<this.viewport.from||e>this.viewport.to?this.textDirection:(this.readMeasured(),this.docView.textDirectionAt(e))}get lineWrapping(){return this.viewState.heightOracle.lineWrapping}bidiSpans(e){if(e.length>EF)return XT(e.length);let n=this.textDirectionAt(e.from);for(let i of this.bidiCache)if(i.from==e.from&&i.dir==n)return i.order;let r=AR(e.text,n);return this.bidiCache.push(new op(e.from,e.to,n,r)),r}get hasFocus(){var e;return(this.dom.ownerDocument.hasFocus()||_.safari&&((e=this.inputState)===null||e===void 0?void 0:e.lastContextMenu)>Date.now()-3e4)&&this.root.activeElement==this.contentDOM}focus(){this.observer.ignore(()=>{hT(this.contentDOM),this.docView.updateSelection()})}setRoot(e){this._root!=e&&(this._root=e,this.observer.setWindow((e.nodeType==9?e:e.ownerDocument).defaultView||window),this.mountStyles())}destroy(){for(let e of this.plugins)e.destroy(this);this.plugins=[],this.inputState.destroy(),this.dom.remove(),this.observer.destroy(),this.measureScheduled>-1&&cancelAnimationFrame(this.measureScheduled),this.destroyed=!0}static scrollIntoView(e,n={}){return rw.of(new rp(typeof e=="number"?A.cursor(e):e,n.y,n.x,n.yMargin,n.xMargin))}static domEventHandlers(e){return nt.define(()=>({}),{eventHandlers:e})}static theme(e,n){let r=ko.newName(),i=[nf.of(r),yc.of(Hv(`.${r}`,e))];return n&&n.dark&&i.push(Rv.of(!0)),i}static baseTheme(e){return Fs.lowest(yc.of(Hv("."+Fv,e,$T)))}static findFromDOM(e){var n;let r=e.querySelector(".cm-content"),i=r&&Re.get(r)||Re.get(e);return((n=i==null?void 0:i.rootView)===null||n===void 0?void 0:n.view)||null}}U.styleModule=yc;U.inputHandler=ET;U.perLineTextDirection=NT;U.exceptionSink=VT;U.updateListener=Mv;U.editable=km;U.mouseSelectionStyle=zT;U.dragMovesSelection=TT;U.clickAddsSelectionRange=CT;U.decorations=Tu;U.atomicRanges=AT;U.scrollMargins=LT;U.darkTheme=Rv;U.contentAttributes=hx;U.editorAttributes=MT;U.lineWrapping=U.contentAttributes.of({class:"cm-lineWrapping"});U.announce=se.define();const EF=4096,Cw={};class op{constructor(e,n,r,i){this.from=e,this.to=n,this.dir=r,this.order=i}static update(e,n){if(n.empty)return e;let r=[],i=e.length?e[e.length-1].dir:Je.LTR;for(let o=Math.max(0,e.length-10);o<e.length;o++){let s=e[o];s.dir==i&&!n.touchesRange(s.from,s.to)&&r.push(new op(n.mapPos(s.from,1),n.mapPos(s.to,-1),s.dir,s.order))}return r}}function Tw(t,e,n){for(let r=t.state.facet(e),i=r.length-1;i>=0;i--){let o=r[i],s=typeof o=="function"?o(t):o;s&&Ev(s,n)}return n}const NF=_.mac?"mac":_.windows?"win":_.linux?"linux":"key";function IF(t,e){const n=t.split(/-(?!$)/);let r=n[n.length-1];r=="Space"&&(r=" ");let i,o,s,a;for(let l=0;l<n.length-1;++l){const c=n[l];if(/^(cmd|meta|m)$/i.test(c))a=!0;else if(/^a(lt)?$/i.test(c))i=!0;else if(/^(c|ctrl|control)$/i.test(c))o=!0;else if(/^s(hift)?$/i.test(c))s=!0;else if(/^mod$/i.test(c))e=="mac"?a=!0:o=!0;else throw new Error("Unrecognized modifier name: "+c)}return i&&(r="Alt-"+r),o&&(r="Ctrl-"+r),a&&(r="Meta-"+r),s&&(r="Shift-"+r),r}function rf(t,e,n){return e.altKey&&(t="Alt-"+t),e.ctrlKey&&(t="Ctrl-"+t),e.metaKey&&(t="Meta-"+t),n!==!1&&e.shiftKey&&(t="Shift-"+t),t}const MF=Fs.default(U.domEventHandlers({keydown(t,e){return nz(tz(e.state),t,e,"editor")}})),ld=$.define({enables:MF}),zw=new WeakMap;function tz(t){let e=t.facet(ld),n=zw.get(e);return n||zw.set(e,n=ZF(e.reduce((r,i)=>r.concat(i),[]))),n}function AF(t,e,n){return nz(tz(t.state),e,t,n)}let Ui=null;const LF=4e3;function ZF(t,e=NF){let n=Object.create(null),r=Object.create(null),i=(s,a)=>{let l=r[s];if(l==null)r[s]=a;else if(l!=a)throw new Error("Key binding "+s+" is used both as a regular binding and as a multi-stroke prefix")},o=(s,a,l,c)=>{var u,d;let f=n[s]||(n[s]=Object.create(null)),h=a.split(/ (?!$)/).map(v=>IF(v,e));for(let v=1;v<h.length;v++){let g=h.slice(0,v).join(" ");i(g,!0),f[g]||(f[g]={preventDefault:!0,run:[b=>{let y=Ui={view:b,prefix:g,scope:s};return setTimeout(()=>{Ui==y&&(Ui=null)},LF),!0}]})}let p=h.join(" ");i(p,!1);let m=f[p]||(f[p]={preventDefault:!1,run:((d=(u=f._any)===null||u===void 0?void 0:u.run)===null||d===void 0?void 0:d.slice())||[]});l&&m.run.push(l),c&&(m.preventDefault=!0)};for(let s of t){let a=s.scope?s.scope.split(" "):["editor"];if(s.any)for(let c of a){let u=n[c]||(n[c]=Object.create(null));u._any||(u._any={preventDefault:!1,run:[]});for(let d in u)u[d].run.push(s.any)}let l=s[e]||s.key;if(!!l)for(let c of a)o(c,l,s.run,s.preventDefault),s.shift&&o(c,"Shift-"+l,s.shift,s.preventDefault)}return n}function nz(t,e,n,r){let i=bR(e),o=Tt(i,0),s=wn(o)==i.length&&i!=" ",a="",l=!1;Ui&&Ui.view==n&&Ui.scope==r&&(a=Ui.prefix+" ",(l=jT.indexOf(e.keyCode)<0)&&(Ui=null));let c=new Set,u=p=>{if(p){for(let m of p.run)if(!c.has(m)&&(c.add(m),m(n,e)))return!0;p.preventDefault&&(l=!0)}return!1},d=t[r],f,h;if(d){if(u(d[a+rf(i,e,!s)]))return!0;if(s&&(e.altKey||e.metaKey||e.ctrlKey)&&(f=wo[e.keyCode])&&f!=i){if(u(d[a+rf(f,e,!0)]))return!0;if(e.shiftKey&&(h=Pu[e.keyCode])!=i&&h!=f&&u(d[a+rf(h,e,!1)]))return!0}else if(s&&e.shiftKey&&u(d[a+rf(i,e,!0)]))return!0;if(u(d._any))return!0}return l}class rz{constructor(e,n,r,i,o){this.className=e,this.left=n,this.top=r,this.width=i,this.height=o}draw(){let e=document.createElement("div");return e.className=this.className,this.adjust(e),e}update(e,n){return n.className!=this.className?!1:(this.adjust(e),!0)}adjust(e){e.style.left=this.left+"px",e.style.top=this.top+"px",this.width>=0&&(e.style.width=this.width+"px"),e.style.height=this.height+"px"}eq(e){return this.left==e.left&&this.top==e.top&&this.width==e.width&&this.height==e.height&&this.className==e.className}}function XF(t,e){return t.constructor==e.constructor&&t.eq(e)}class WF{constructor(e,n){this.view=e,this.layer=n,this.drawn=[],this.measureReq={read:this.measure.bind(this),write:this.draw.bind(this)},this.dom=e.scrollDOM.appendChild(document.createElement("div")),this.dom.classList.add("cm-layer"),n.above&&this.dom.classList.add("cm-layer-above"),n.class&&this.dom.classList.add(n.class),this.dom.setAttribute("aria-hidden","true"),this.setOrder(e.state),e.requestMeasure(this.measureReq),n.mount&&n.mount(this.dom,e)}update(e){e.startState.facet(oh)!=e.state.facet(oh)&&this.setOrder(e.state),(this.layer.update(e,this.dom)||e.geometryChanged)&&e.view.requestMeasure(this.measureReq)}setOrder(e){let n=0,r=e.facet(oh);for(;n<r.length&&r[n]!=this.layer;)n++;this.dom.style.zIndex=String((this.layer.above?150:-1)-n)}measure(){return this.layer.markers(this.view)}draw(e){if(e.length!=this.drawn.length||e.some((n,r)=>!XF(n,this.drawn[r]))){let n=this.dom.firstChild,r=0;for(let i of e)i.update&&n&&i.constructor&&this.drawn[r].constructor&&i.update(n,this.drawn[r])?(n=n.nextSibling,r++):this.dom.insertBefore(i.draw(),n);for(;n;){let i=n.nextSibling;n.remove(),n=i}this.drawn=e}}destroy(){this.dom.remove()}}const oh=$.define();function iz(t){return[nt.define(e=>new WF(e,t)),oh.of(t)]}const oz=!_.ios,zu=$.define({combine(t){return ti(t,{cursorBlinkRate:1200,drawRangeCursor:!0},{cursorBlinkRate:(e,n)=>Math.min(e,n),drawRangeCursor:(e,n)=>e||n})}});function RF(t={}){return[zu.of(t),FF,HF,DF,IT.of(!0)]}function sz(t){return t.startState.facet(zu)!=t.startState.facet(zu)}const FF=iz({above:!0,markers(t){let{state:e}=t,n=e.facet(zu),r=[];for(let i of e.selection.ranges){let o=i==e.selection.main;if(i.empty?!o||oz:n.drawRangeCursor){let s=jF(t,i,o);s&&r.push(s)}}return r},update(t,e){t.transactions.some(r=>r.scrollIntoView)&&(e.style.animationName=e.style.animationName=="cm-blink"?"cm-blink2":"cm-blink");let n=sz(t);return n&&Vw(t.state,e),t.docChanged||t.selectionSet||n},mount(t,e){Vw(e.state,t)},class:"cm-cursorLayer"});function Vw(t,e){e.style.animationDuration=t.facet(zu).cursorBlinkRate+"ms"}const HF=iz({above:!1,markers(t){return t.state.selection.ranges.map(e=>e.empty?[]:GF(t,e)).reduce((e,n)=>e.concat(n))},update(t,e){return t.docChanged||t.selectionSet||t.viewportChanged||sz(t)},class:"cm-selectionLayer"}),az={".cm-line":{"& ::selection":{backgroundColor:"transparent !important"},"&::selection":{backgroundColor:"transparent !important"}}};oz&&(az[".cm-line"].caretColor="transparent !important");const DF=Fs.highest(U.theme(az));function lz(t){let e=t.scrollDOM.getBoundingClientRect();return{left:(t.textDirection==Je.LTR?e.left:e.right-t.scrollDOM.clientWidth)-t.scrollDOM.scrollLeft,top:e.top-t.scrollDOM.scrollTop}}function Ew(t,e,n){let r=A.cursor(e);return{from:Math.max(n.from,t.moveToLineBoundary(r,!1,!0).from),to:Math.min(n.to,t.moveToLineBoundary(r,!0,!0).from),type:Ae.Text}}function Nw(t,e){let n=t.lineBlockAt(e);if(Array.isArray(n.type)){for(let r of n.type)if(r.to>e||r.to==e&&(r.to==n.to||r.type==Ae.Text))return r}return n}function GF(t,e){if(e.to<=t.viewport.from||e.from>=t.viewport.to)return[];let n=Math.max(e.from,t.viewport.from),r=Math.min(e.to,t.viewport.to),i=t.textDirection==Je.LTR,o=t.contentDOM,s=o.getBoundingClientRect(),a=lz(t),l=window.getComputedStyle(o.firstChild),c=s.left+parseInt(l.paddingLeft)+Math.min(0,parseInt(l.textIndent)),u=s.right-parseInt(l.paddingRight),d=Nw(t,n),f=Nw(t,r),h=d.type==Ae.Text?d:null,p=f.type==Ae.Text?f:null;if(t.lineWrapping&&(h&&(h=Ew(t,n,h)),p&&(p=Ew(t,r,p))),h&&p&&h.from==p.from)return v(g(e.from,e.to,h));{let y=h?g(e.from,null,h):b(d,!1),x=p?g(null,e.to,p):b(f,!0),k=[];return(h||d).to<(p||f).from-1?k.push(m(c,y.bottom,u,x.top)):y.bottom<x.top&&t.elementAtHeight((y.bottom+x.top)/2).type==Ae.Text&&(y.bottom=x.top=(y.bottom+x.top)/2),v(y).concat(k).concat(v(x))}function m(y,x,k,P){return new rz("cm-selectionBackground",y-a.left,x-a.top-.01,k-y,P-x+.01)}function v({top:y,bottom:x,horizontal:k}){let P=[];for(let O=0;O<k.length;O+=2)P.push(m(k[O],y,k[O+1],x));return P}function g(y,x,k){let P=1e9,O=-1e9,z=[];function I(Y,Q,ae,oe,D){let ee=t.coordsAtPos(Y,Y==k.to?-2:2),L=t.coordsAtPos(ae,ae==k.from?2:-2);P=Math.min(ee.top,L.top,P),O=Math.max(ee.bottom,L.bottom,O),D==Je.LTR?z.push(i&&Q?c:ee.left,i&&oe?u:L.right):z.push(!i&&oe?c:L.left,!i&&Q?u:ee.right)}let E=y!=null?y:k.from,X=x!=null?x:k.to;for(let Y of t.visibleRanges)if(Y.to>E&&Y.from<X)for(let Q=Math.max(Y.from,E),ae=Math.min(Y.to,X);;){let oe=t.state.doc.lineAt(Q);for(let D of t.bidiSpans(oe)){let ee=D.from+oe.from,L=D.to+oe.from;if(ee>=ae)break;L>Q&&I(Math.max(ee,Q),y==null&&ee<=E,Math.min(L,ae),x==null&&L>=X,D.dir)}if(Q=oe.to+1,Q>=ae)break}return z.length==0&&I(E,y==null,X,x==null,t.textDirection),{top:P,bottom:O,horizontal:z}}function b(y,x){let k=s.top+(x?y.top:y.bottom);return{top:k,bottom:k,horizontal:[]}}}function jF(t,e,n){let r=t.coordsAtPos(e.head,e.assoc||1);if(!r)return null;let i=lz(t);return new rz(n?"cm-cursor cm-cursor-primary":"cm-cursor cm-cursor-secondary",r.left-i.left,r.top-i.top,-1,r.bottom-r.top)}const cz=se.define({map(t,e){return t==null?null:e.mapPos(t)}}),Sc=St.define({create(){return null},update(t,e){return t!=null&&(t=e.changes.mapPos(t)),e.effects.reduce((n,r)=>r.is(cz)?r.value:n,t)}}),BF=nt.fromClass(class{constructor(t){this.view=t,this.cursor=null,this.measureReq={read:this.readPos.bind(this),write:this.drawCursor.bind(this)}}update(t){var e;let n=t.state.field(Sc);n==null?this.cursor!=null&&((e=this.cursor)===null||e===void 0||e.remove(),this.cursor=null):(this.cursor||(this.cursor=this.view.scrollDOM.appendChild(document.createElement("div")),this.cursor.className="cm-dropCursor"),(t.startState.field(Sc)!=n||t.docChanged||t.geometryChanged)&&this.view.requestMeasure(this.measureReq))}readPos(){let t=this.view.state.field(Sc),e=t!=null&&this.view.coordsAtPos(t);if(!e)return null;let n=this.view.scrollDOM.getBoundingClientRect();return{left:e.left-n.left+this.view.scrollDOM.scrollLeft,top:e.top-n.top+this.view.scrollDOM.scrollTop,height:e.bottom-e.top}}drawCursor(t){this.cursor&&(t?(this.cursor.style.left=t.left+"px",this.cursor.style.top=t.top+"px",this.cursor.style.height=t.height+"px"):this.cursor.style.left="-100000px")}destroy(){this.cursor&&this.cursor.remove()}setDropPos(t){this.view.state.field(Sc)!=t&&this.view.dispatch({effects:cz.of(t)})}},{eventHandlers:{dragover(t){this.setDropPos(this.view.posAtCoords({x:t.clientX,y:t.clientY}))},dragleave(t){(t.target==this.view.contentDOM||!this.view.contentDOM.contains(t.relatedTarget))&&this.setDropPos(null)},dragend(){this.setDropPos(null)},drop(){this.setDropPos(null)}}});function YF(){return[Sc,BF]}function Iw(t,e,n,r,i){e.lastIndex=0;for(let o=t.iterRange(n,r),s=n,a;!o.next().done;s+=o.value.length)if(!o.lineBreak)for(;a=e.exec(o.value);)i(s+a.index,a)}function KF(t,e){let n=t.visibleRanges;if(n.length==1&&n[0].from==t.viewport.from&&n[0].to==t.viewport.to)return n;let r=[];for(let{from:i,to:o}of n)i=Math.max(t.state.doc.lineAt(i).from,i-e),o=Math.min(t.state.doc.lineAt(o).to,o+e),r.length&&r[r.length-1].to>=i?r[r.length-1].to=o:r.push({from:i,to:o});return r}class UF{constructor(e){const{regexp:n,decoration:r,decorate:i,boundary:o,maxLength:s=1e3}=e;if(!n.global)throw new RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");if(this.regexp=n,i)this.addMatch=(a,l,c,u)=>i(u,c,c+a[0].length,a,l);else if(typeof r=="function")this.addMatch=(a,l,c,u)=>{let d=r(a,l,c);d&&u(c,c+a[0].length,d)};else if(r)this.addMatch=(a,l,c,u)=>u(c,c+a[0].length,r);else throw new RangeError("Either 'decorate' or 'decoration' should be provided to MatchDecorator");this.boundary=o,this.maxLength=s}createDeco(e){let n=new Oi,r=n.add.bind(n);for(let{from:i,to:o}of KF(e,this.maxLength))Iw(e.state.doc,this.regexp,i,o,(s,a)=>this.addMatch(a,e,s,r));return n.finish()}updateDeco(e,n){let r=1e9,i=-1;return e.docChanged&&e.changes.iterChanges((o,s,a,l)=>{l>e.view.viewport.from&&a<e.view.viewport.to&&(r=Math.min(a,r),i=Math.max(l,i))}),e.viewportChanged||i-r>1e3?this.createDeco(e.view):i>-1?this.updateRange(e.view,n.map(e.changes),r,i):n}updateRange(e,n,r,i){for(let o of e.visibleRanges){let s=Math.max(o.from,r),a=Math.min(o.to,i);if(a>s){let l=e.state.doc.lineAt(s),c=l.to<a?e.state.doc.lineAt(a):l,u=Math.max(o.from,l.from),d=Math.min(o.to,c.to);if(this.boundary){for(;s>l.from;s--)if(this.boundary.test(l.text[s-1-l.from])){u=s;break}for(;a<c.to;a++)if(this.boundary.test(c.text[a-c.from])){d=a;break}}let f=[],h,p=(m,v,g)=>f.push(g.range(m,v));if(l==c)for(this.regexp.lastIndex=u-l.from;(h=this.regexp.exec(l.text))&&h.index<d-l.from;)this.addMatch(h,e,h.index+l.from,p);else Iw(e.state.doc,this.regexp,u,d,(m,v)=>this.addMatch(v,e,m,p));n=n.update({filterFrom:u,filterTo:d,filter:(m,v)=>m<u||v>d,add:f})}}return n}}const Dv=/x/.unicode!=null?"gu":"g",qF=new RegExp(`[\0-\b
-\x7F-\x9F\xAD\u061C\u200B\u200E\u200F\u2028\u2029\u202D\u202E\u2066\u2067\u2069\uFEFF\uFFF9-\uFFFC]`,Dv),JF={0:"null",7:"bell",8:"backspace",10:"newline",11:"vertical tab",13:"carriage return",27:"escape",8203:"zero width space",8204:"zero width non-joiner",8205:"zero width joiner",8206:"left-to-right mark",8207:"right-to-left mark",8232:"line separator",8237:"left-to-right override",8238:"right-to-left override",8294:"left-to-right isolate",8295:"right-to-left isolate",8297:"pop directional isolate",8233:"paragraph separator",65279:"zero width no-break space",65532:"object replacement"};let d0=null;function QF(){var t;if(d0==null&&typeof document<"u"&&document.body){let e=document.body.style;d0=((t=e.tabSize)!==null&&t!==void 0?t:e.MozTabSize)!=null}return d0||!1}const sh=$.define({combine(t){let e=ti(t,{render:null,specialChars:qF,addSpecialChars:null});return(e.replaceTabs=!QF())&&(e.specialChars=new RegExp("	|"+e.specialChars.source,Dv)),e.addSpecialChars&&(e.specialChars=new RegExp(e.specialChars.source+"|"+e.addSpecialChars.source,Dv)),e}});function _F(t={}){return[sh.of(t),$F()]}let Mw=null;function $F(){return Mw||(Mw=nt.fromClass(class{constructor(t){this.view=t,this.decorations=G.none,this.decorationCache=Object.create(null),this.decorator=this.makeDecorator(t.state.facet(sh)),this.decorations=this.decorator.createDeco(t)}makeDecorator(t){return new UF({regexp:t.specialChars,decoration:(e,n,r)=>{let{doc:i}=n.state,o=Tt(e[0],0);if(o==9){let s=i.lineAt(r),a=n.state.tabSize,l=sd(s.text,a,r-s.from);return G.replace({widget:new r7((a-l%a)*this.view.defaultCharacterWidth)})}return this.decorationCache[o]||(this.decorationCache[o]=G.replace({widget:new n7(t,o)}))},boundary:t.replaceTabs?void 0:/[^]/})}update(t){let e=t.state.facet(sh);t.startState.facet(sh)!=e?(this.decorator=this.makeDecorator(e),this.decorations=this.decorator.createDeco(t.view)):this.decorations=this.decorator.updateDeco(t,this.decorations)}},{decorations:t=>t.decorations}))}const e7="\u2022";function t7(t){return t>=32?e7:t==10?"\u2424":String.fromCharCode(9216+t)}class n7 extends Ni{constructor(e,n){super(),this.options=e,this.code=n}eq(e){return e.code==this.code}toDOM(e){let n=t7(this.code),r=e.state.phrase("Control character")+" "+(JF[this.code]||"0x"+this.code.toString(16)),i=this.options.render&&this.options.render(this.code,r,n);if(i)return i;let o=document.createElement("span");return o.textContent=n,o.title=r,o.setAttribute("aria-label",r),o.className="cm-specialChar",o}ignoreEvent(){return!1}}class r7 extends Ni{constructor(e){super(),this.width=e}eq(e){return e.width==this.width}toDOM(){let e=document.createElement("span");return e.textContent="	",e.className="cm-tab",e.style.width=this.width+"px",e}ignoreEvent(){return!1}}function i7(){return s7}const o7=G.line({class:"cm-activeLine"}),s7=nt.fromClass(class{constructor(t){this.decorations=this.getDeco(t)}update(t){(t.docChanged||t.selectionSet)&&(this.decorations=this.getDeco(t.view))}getDeco(t){let e=-1,n=[];for(let r of t.state.selection.ranges){let i=t.lineBlockAt(r.head);i.from>e&&(n.push(o7.range(i.from)),e=i.from)}return G.set(n)}},{decorations:t=>t.decorations});class a7 extends Ni{constructor(e){super(),this.content=e}toDOM(){let e=document.createElement("span");return e.className="cm-placeholder",e.style.pointerEvents="none",e.appendChild(typeof this.content=="string"?document.createTextNode(this.content):this.content),typeof this.content=="string"?e.setAttribute("aria-label","placeholder "+this.content):e.setAttribute("aria-hidden","true"),e}ignoreEvent(){return!1}}function l7(t){return nt.fromClass(class{constructor(e){this.view=e,this.placeholder=G.set([G.widget({widget:new a7(t),side:1}).range(0)])}get decorations(){return this.view.state.doc.length?G.none:this.placeholder}},{decorations:e=>e.decorations})}const Gv=2e3;function c7(t,e,n){let r=Math.min(e.line,n.line),i=Math.max(e.line,n.line),o=[];if(e.off>Gv||n.off>Gv||e.col<0||n.col<0){let s=Math.min(e.off,n.off),a=Math.max(e.off,n.off);for(let l=r;l<=i;l++){let c=t.doc.line(l);c.length<=a&&o.push(A.range(c.from+s,c.to+a))}}else{let s=Math.min(e.col,n.col),a=Math.max(e.col,n.col);for(let l=r;l<=i;l++){let c=t.doc.line(l),u=kv(c.text,s,t.tabSize,!0);if(u<0)o.push(A.cursor(c.to));else{let d=kv(c.text,a,t.tabSize);o.push(A.range(c.from+u,c.from+d))}}}return o}function u7(t,e){let n=t.coordsAtPos(t.viewport.from);return n?Math.round(Math.abs((n.left-e)/t.defaultCharacterWidth)):-1}function Aw(t,e){let n=t.posAtCoords({x:e.clientX,y:e.clientY},!1),r=t.state.doc.lineAt(n),i=n-r.from,o=i>Gv?-1:i==r.length?u7(t,e.clientX):sd(r.text,t.state.tabSize,n-r.from);return{line:r.number,col:o,off:i}}function d7(t,e){let n=Aw(t,e),r=t.state.selection;return n?{update(i){if(i.docChanged){let o=i.changes.mapPos(i.startState.doc.line(n.line).from),s=i.state.doc.lineAt(o);n={line:s.number,col:n.col,off:Math.min(n.off,s.length)},r=r.map(i.changes)}},get(i,o,s){let a=Aw(t,i);if(!a)return r;let l=c7(t.state,n,a);return l.length?s?A.create(l.concat(r.ranges)):A.create(l):r}}:null}function f7(t){let e=(t==null?void 0:t.eventFilter)||(n=>n.altKey&&n.button==0);return U.mouseSelectionStyle.of((n,r)=>e(r)?d7(n,r):null)}const h7={Alt:[18,t=>t.altKey],Control:[17,t=>t.ctrlKey],Shift:[16,t=>t.shiftKey],Meta:[91,t=>t.metaKey]},p7={style:"cursor: crosshair"};function m7(t={}){let[e,n]=h7[t.key||"Alt"],r=nt.fromClass(class{constructor(i){this.view=i,this.isDown=!1}set(i){this.isDown!=i&&(this.isDown=i,this.view.update([]))}},{eventHandlers:{keydown(i){this.set(i.keyCode==e||n(i))},keyup(i){(i.keyCode==e||!n(i))&&this.set(!1)},mousemove(i){this.set(n(i))}}});return[r,U.contentAttributes.of(i=>{var o;return!((o=i.plugin(r))===null||o===void 0)&&o.isDown?p7:null})]}const of="-10000px";class uz{constructor(e,n,r){this.facet=n,this.createTooltipView=r,this.input=e.state.facet(n),this.tooltips=this.input.filter(i=>i),this.tooltipViews=this.tooltips.map(r)}update(e){var n;let r=e.state.facet(this.facet),i=r.filter(s=>s);if(r===this.input){for(let s of this.tooltipViews)s.update&&s.update(e);return!1}let o=[];for(let s=0;s<i.length;s++){let a=i[s],l=-1;if(!!a){for(let c=0;c<this.tooltips.length;c++){let u=this.tooltips[c];u&&u.create==a.create&&(l=c)}if(l<0)o[s]=this.createTooltipView(a);else{let c=o[s]=this.tooltipViews[l];c.update&&c.update(e)}}}for(let s of this.tooltipViews)o.indexOf(s)<0&&(s.dom.remove(),(n=s.destroy)===null||n===void 0||n.call(s));return this.input=r,this.tooltips=i,this.tooltipViews=o,!0}}function g7(t){let{win:e}=t;return{top:0,left:0,bottom:e.innerHeight,right:e.innerWidth}}const f0=$.define({combine:t=>{var e,n,r;return{position:_.ios?"absolute":((e=t.find(i=>i.position))===null||e===void 0?void 0:e.position)||"fixed",parent:((n=t.find(i=>i.parent))===null||n===void 0?void 0:n.parent)||null,tooltipSpace:((r=t.find(i=>i.tooltipSpace))===null||r===void 0?void 0:r.tooltipSpace)||g7}}}),dz=nt.fromClass(class{constructor(t){this.view=t,this.inView=!0,this.lastTransaction=0,this.measureTimeout=-1;let e=t.state.facet(f0);this.position=e.position,this.parent=e.parent,this.classes=t.themeClasses,this.createContainer(),this.measureReq={read:this.readMeasure.bind(this),write:this.writeMeasure.bind(this),key:this},this.manager=new uz(t,mx,n=>this.createTooltip(n)),this.intersectionObserver=typeof IntersectionObserver=="function"?new IntersectionObserver(n=>{Date.now()>this.lastTransaction-50&&n.length>0&&n[n.length-1].intersectionRatio<1&&this.measureSoon()},{threshold:[1]}):null,this.observeIntersection(),t.win.addEventListener("resize",this.measureSoon=this.measureSoon.bind(this)),this.maybeMeasure()}createContainer(){this.parent?(this.container=document.createElement("div"),this.container.style.position="relative",this.container.className=this.view.themeClasses,this.parent.appendChild(this.container)):this.container=this.view.dom}observeIntersection(){if(this.intersectionObserver){this.intersectionObserver.disconnect();for(let t of this.manager.tooltipViews)this.intersectionObserver.observe(t.dom)}}measureSoon(){this.measureTimeout<0&&(this.measureTimeout=setTimeout(()=>{this.measureTimeout=-1,this.maybeMeasure()},50))}update(t){t.transactions.length&&(this.lastTransaction=Date.now());let e=this.manager.update(t);e&&this.observeIntersection();let n=e||t.geometryChanged,r=t.state.facet(f0);if(r.position!=this.position){this.position=r.position;for(let i of this.manager.tooltipViews)i.dom.style.position=this.position;n=!0}if(r.parent!=this.parent){this.parent&&this.container.remove(),this.parent=r.parent,this.createContainer();for(let i of this.manager.tooltipViews)this.container.appendChild(i.dom);n=!0}else this.parent&&this.view.themeClasses!=this.classes&&(this.classes=this.container.className=this.view.themeClasses);n&&this.maybeMeasure()}createTooltip(t){let e=t.create(this.view);if(e.dom.classList.add("cm-tooltip"),t.arrow&&!e.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")){let n=document.createElement("div");n.className="cm-tooltip-arrow",e.dom.appendChild(n)}return e.dom.style.position=this.position,e.dom.style.top=of,this.container.appendChild(e.dom),e.mount&&e.mount(this.view),e}destroy(){var t,e;this.view.win.removeEventListener("resize",this.measureSoon);for(let n of this.manager.tooltipViews)n.dom.remove(),(t=n.destroy)===null||t===void 0||t.call(n);(e=this.intersectionObserver)===null||e===void 0||e.disconnect(),clearTimeout(this.measureTimeout)}readMeasure(){let t=this.view.dom.getBoundingClientRect();return{editor:t,parent:this.parent?this.container.getBoundingClientRect():t,pos:this.manager.tooltips.map((e,n)=>{let r=this.manager.tooltipViews[n];return r.getCoords?r.getCoords(e.pos):this.view.coordsAtPos(e.pos)}),size:this.manager.tooltipViews.map(({dom:e})=>e.getBoundingClientRect()),space:this.view.state.facet(f0).tooltipSpace(this.view)}}writeMeasure(t){let{editor:e,space:n}=t,r=[];for(let i=0;i<this.manager.tooltips.length;i++){let o=this.manager.tooltips[i],s=this.manager.tooltipViews[i],{dom:a}=s,l=t.pos[i],c=t.size[i];if(!l||l.bottom<=Math.max(e.top,n.top)||l.top>=Math.min(e.bottom,n.bottom)||l.right<Math.max(e.left,n.left)-.1||l.left>Math.min(e.right,n.right)+.1){a.style.top=of;continue}let u=o.arrow?s.dom.querySelector(".cm-tooltip-arrow"):null,d=u?7:0,f=c.right-c.left,h=c.bottom-c.top,p=s.offset||v7,m=this.view.textDirection==Je.LTR,v=c.width>n.right-n.left?m?n.left:n.right-c.width:m?Math.min(l.left-(u?14:0)+p.x,n.right-f):Math.max(n.left,l.left-f+(u?14:0)-p.x),g=!!o.above;!o.strictSide&&(g?l.top-(c.bottom-c.top)-p.y<n.top:l.bottom+(c.bottom-c.top)+p.y>n.bottom)&&g==n.bottom-l.bottom>l.top-n.top&&(g=!g);let b=(g?l.top-n.top:n.bottom-l.bottom)-d;if(b<h&&s.resize!==!1){if(b<this.view.defaultLineHeight){a.style.top=of;continue}a.style.height=(h=b)+"px"}else a.style.height&&(a.style.height="");let y=g?l.top-h-d-p.y:l.bottom+d+p.y,x=v+f;if(s.overlap!==!0)for(let k of r)k.left<x&&k.right>v&&k.top<y+h&&k.bottom>y&&(y=g?k.top-h-2-d:k.bottom+d+2);this.position=="absolute"?(a.style.top=y-t.parent.top+"px",a.style.left=v-t.parent.left+"px"):(a.style.top=y+"px",a.style.left=v+"px"),u&&(u.style.left=`${l.left+(m?p.x:-p.x)-(v+14-7)}px`),s.overlap!==!0&&r.push({left:v,top:y,right:x,bottom:y+h}),a.classList.toggle("cm-tooltip-above",g),a.classList.toggle("cm-tooltip-below",!g),s.positioned&&s.positioned(t.space)}}maybeMeasure(){if(this.manager.tooltips.length&&(this.view.inView&&this.view.requestMeasure(this.measureReq),this.inView!=this.view.inView&&(this.inView=this.view.inView,!this.inView)))for(let t of this.manager.tooltipViews)t.dom.style.top=of}},{eventHandlers:{scroll(){this.maybeMeasure()}}}),b7=U.baseTheme({".cm-tooltip":{zIndex:100,boxSizing:"border-box"},"&light .cm-tooltip":{border:"1px solid #bbb",backgroundColor:"#f5f5f5"},"&light .cm-tooltip-section:not(:first-child)":{borderTop:"1px solid #bbb"},"&dark .cm-tooltip":{backgroundColor:"#333338",color:"white"},".cm-tooltip-arrow":{height:`${7}px`,width:`${7*2}px`,position:"absolute",zIndex:-1,overflow:"hidden","&:before, &:after":{content:"''",position:"absolute",width:0,height:0,borderLeft:`${7}px solid transparent`,borderRight:`${7}px solid transparent`},".cm-tooltip-above &":{bottom:`-${7}px`,"&:before":{borderTop:`${7}px solid #bbb`},"&:after":{borderTop:`${7}px solid #f5f5f5`,bottom:"1px"}},".cm-tooltip-below &":{top:`-${7}px`,"&:before":{borderBottom:`${7}px solid #bbb`},"&:after":{borderBottom:`${7}px solid #f5f5f5`,top:"1px"}}},"&dark .cm-tooltip .cm-tooltip-arrow":{"&:before":{borderTopColor:"#333338",borderBottomColor:"#333338"},"&:after":{borderTopColor:"transparent",borderBottomColor:"transparent"}}}),v7={x:0,y:0},mx=$.define({enables:[dz,b7]}),sp=$.define();class gx{constructor(e){this.view=e,this.mounted=!1,this.dom=document.createElement("div"),this.dom.classList.add("cm-tooltip-hover"),this.manager=new uz(e,sp,n=>this.createHostedView(n))}static create(e){return new gx(e)}createHostedView(e){let n=e.create(this.view);return n.dom.classList.add("cm-tooltip-section"),this.dom.appendChild(n.dom),this.mounted&&n.mount&&n.mount(this.view),n}mount(e){for(let n of this.manager.tooltipViews)n.mount&&n.mount(e);this.mounted=!0}positioned(e){for(let n of this.manager.tooltipViews)n.positioned&&n.positioned(e)}update(e){this.manager.update(e)}}const y7=mx.compute([sp],t=>{let e=t.facet(sp).filter(n=>n);return e.length===0?null:{pos:Math.min(...e.map(n=>n.pos)),end:Math.max(...e.filter(n=>n.end!=null).map(n=>n.end)),create:gx.create,above:e[0].above,arrow:e.some(n=>n.arrow)}});class x7{constructor(e,n,r,i,o){this.view=e,this.source=n,this.field=r,this.setHover=i,this.hoverTime=o,this.hoverTimeout=-1,this.restartTimeout=-1,this.pending=null,this.lastMove={x:0,y:0,target:e.dom,time:0},this.checkHover=this.checkHover.bind(this),e.dom.addEventListener("mouseleave",this.mouseleave=this.mouseleave.bind(this)),e.dom.addEventListener("mousemove",this.mousemove=this.mousemove.bind(this))}update(){this.pending&&(this.pending=null,clearTimeout(this.restartTimeout),this.restartTimeout=setTimeout(()=>this.startHover(),20))}get active(){return this.view.state.field(this.field)}checkHover(){if(this.hoverTimeout=-1,this.active)return;let e=Date.now()-this.lastMove.time;e<this.hoverTime?this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime-e):this.startHover()}startHover(){clearTimeout(this.restartTimeout);let{lastMove:e}=this,n=this.view.contentDOM.contains(e.target)?this.view.posAtCoords(e):null;if(n==null)return;let r=this.view.coordsAtPos(n);if(r==null||e.y<r.top||e.y>r.bottom||e.x<r.left-this.view.defaultCharacterWidth||e.x>r.right+this.view.defaultCharacterWidth)return;let i=this.view.bidiSpans(this.view.state.doc.lineAt(n)).find(a=>a.from<=n&&a.to>=n),o=i&&i.dir==Je.RTL?-1:1,s=this.source(this.view,n,e.x<r.left?-o:o);if(s!=null&&s.then){let a=this.pending={pos:n};s.then(l=>{this.pending==a&&(this.pending=null,l&&this.view.dispatch({effects:this.setHover.of(l)}))},l=>zn(this.view.state,l,"hover tooltip"))}else s&&this.view.dispatch({effects:this.setHover.of(s)})}mousemove(e){var n;this.lastMove={x:e.clientX,y:e.clientY,target:e.target,time:Date.now()},this.hoverTimeout<0&&(this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime));let r=this.active;if(r&&!Lw(this.lastMove.target)||this.pending){let{pos:i}=r||this.pending,o=(n=r==null?void 0:r.end)!==null&&n!==void 0?n:i;(i==o?this.view.posAtCoords(this.lastMove)!=i:!S7(this.view,i,o,e.clientX,e.clientY,6))&&(this.view.dispatch({effects:this.setHover.of(null)}),this.pending=null)}}mouseleave(e){clearTimeout(this.hoverTimeout),this.hoverTimeout=-1,this.active&&!Lw(e.relatedTarget)&&this.view.dispatch({effects:this.setHover.of(null)})}destroy(){clearTimeout(this.hoverTimeout),this.view.dom.removeEventListener("mouseleave",this.mouseleave),this.view.dom.removeEventListener("mousemove",this.mousemove)}}function Lw(t){for(let e=t;e;e=e.parentNode)if(e.nodeType==1&&e.classList.contains("cm-tooltip"))return!0;return!1}function S7(t,e,n,r,i,o){let s=document.createRange(),a=t.domAtPos(e),l=t.domAtPos(n);s.setEnd(l.node,l.offset),s.setStart(a.node,a.offset);let c=s.getClientRects();s.detach();for(let u=0;u<c.length;u++){let d=c[u];if(Math.max(d.top-i,i-d.bottom,d.left-r,r-d.right)<=o)return!0}return!1}function k7(t,e={}){let n=se.define(),r=St.define({create(){return null},update(i,o){if(i&&(e.hideOnChange&&(o.docChanged||o.selection)||e.hideOn&&e.hideOn(o,i)))return null;if(i&&o.docChanged){let s=o.changes.mapPos(i.pos,-1,Kt.TrackDel);if(s==null)return null;let a=Object.assign(Object.create(null),i);a.pos=s,i.end!=null&&(a.end=o.changes.mapPos(i.end)),i=a}for(let s of o.effects)s.is(n)&&(i=s.value),s.is(P7)&&(i=null);return i},provide:i=>sp.from(i)});return[r,nt.define(i=>new x7(i,t,r,n,e.hoverTime||300)),y7]}function w7(t,e){let n=t.plugin(dz);if(!n)return null;let r=n.manager.tooltips.indexOf(e);return r<0?null:n.manager.tooltipViews[r]}const P7=se.define(),Zw=$.define({combine(t){let e,n;for(let r of t)e=e||r.topContainer,n=n||r.bottomContainer;return{topContainer:e,bottomContainer:n}}});function Vu(t,e){let n=t.plugin(fz),r=n?n.specs.indexOf(e):-1;return r>-1?n.panels[r]:null}const fz=nt.fromClass(class{constructor(t){this.input=t.state.facet(hl),this.specs=this.input.filter(n=>n),this.panels=this.specs.map(n=>n(t));let e=t.state.facet(Zw);this.top=new sf(t,!0,e.topContainer),this.bottom=new sf(t,!1,e.bottomContainer),this.top.sync(this.panels.filter(n=>n.top)),this.bottom.sync(this.panels.filter(n=>!n.top));for(let n of this.panels)n.dom.classList.add("cm-panel"),n.mount&&n.mount()}update(t){let e=t.state.facet(Zw);this.top.container!=e.topContainer&&(this.top.sync([]),this.top=new sf(t.view,!0,e.topContainer)),this.bottom.container!=e.bottomContainer&&(this.bottom.sync([]),this.bottom=new sf(t.view,!1,e.bottomContainer)),this.top.syncClasses(),this.bottom.syncClasses();let n=t.state.facet(hl);if(n!=this.input){let r=n.filter(l=>l),i=[],o=[],s=[],a=[];for(let l of r){let c=this.specs.indexOf(l),u;c<0?(u=l(t.view),a.push(u)):(u=this.panels[c],u.update&&u.update(t)),i.push(u),(u.top?o:s).push(u)}this.specs=r,this.panels=i,this.top.sync(o),this.bottom.sync(s);for(let l of a)l.dom.classList.add("cm-panel"),l.mount&&l.mount()}else for(let r of this.panels)r.update&&r.update(t)}destroy(){this.top.sync([]),this.bottom.sync([])}},{provide:t=>U.scrollMargins.of(e=>{let n=e.plugin(t);return n&&{top:n.top.scrollMargin(),bottom:n.bottom.scrollMargin()}})});class sf{constructor(e,n,r){this.view=e,this.top=n,this.container=r,this.dom=void 0,this.classes="",this.panels=[],this.syncClasses()}sync(e){for(let n of this.panels)n.destroy&&e.indexOf(n)<0&&n.destroy();this.panels=e,this.syncDOM()}syncDOM(){if(this.panels.length==0){this.dom&&(this.dom.remove(),this.dom=void 0);return}if(!this.dom){this.dom=document.createElement("div"),this.dom.className=this.top?"cm-panels cm-panels-top":"cm-panels cm-panels-bottom",this.dom.style[this.top?"top":"bottom"]="0";let n=this.container||this.view.dom;n.insertBefore(this.dom,this.top?n.firstChild:null)}let e=this.dom.firstChild;for(let n of this.panels)if(n.dom.parentNode==this.dom){for(;e!=n.dom;)e=Xw(e);e=e.nextSibling}else this.dom.insertBefore(n.dom,e);for(;e;)e=Xw(e)}scrollMargin(){return!this.dom||this.container?0:Math.max(0,this.top?this.dom.getBoundingClientRect().bottom-Math.max(0,this.view.scrollDOM.getBoundingClientRect().top):Math.min(innerHeight,this.view.scrollDOM.getBoundingClientRect().bottom)-this.dom.getBoundingClientRect().top)}syncClasses(){if(!(!this.container||this.classes==this.view.themeClasses)){for(let e of this.classes.split(" "))e&&this.container.classList.remove(e);for(let e of(this.classes=this.view.themeClasses).split(" "))e&&this.container.classList.add(e)}}}function Xw(t){let e=t.nextSibling;return t.remove(),e}const hl=$.define({enables:fz});class Ci extends Es{compare(e){return this==e||this.constructor==e.constructor&&this.eq(e)}eq(e){return!1}destroy(e){}}Ci.prototype.elementClass="";Ci.prototype.toDOM=void 0;Ci.prototype.mapMode=Kt.TrackBefore;Ci.prototype.startSide=Ci.prototype.endSide=-1;Ci.prototype.point=!0;const ah=$.define(),O7={class:"",renderEmptyElements:!1,elementStyle:"",markers:()=>Pe.empty,lineMarker:()=>null,lineMarkerChange:null,initialSpacer:null,updateSpacer:null,domEventHandlers:{}},Rc=$.define();function C7(t){return[hz(),Rc.of(Object.assign(Object.assign({},O7),t))]}const jv=$.define({combine:t=>t.some(e=>e)});function hz(t){let e=[T7];return t&&t.fixed===!1&&e.push(jv.of(!0)),e}const T7=nt.fromClass(class{constructor(t){this.view=t,this.prevViewport=t.viewport,this.dom=document.createElement("div"),this.dom.className="cm-gutters",this.dom.setAttribute("aria-hidden","true"),this.dom.style.minHeight=this.view.contentHeight+"px",this.gutters=t.state.facet(Rc).map(e=>new Rw(t,e));for(let e of this.gutters)this.dom.appendChild(e.dom);this.fixed=!t.state.facet(jv),this.fixed&&(this.dom.style.position="sticky"),this.syncGutters(!1),t.scrollDOM.insertBefore(this.dom,t.contentDOM)}update(t){if(this.updateGutters(t)){let e=this.prevViewport,n=t.view.viewport,r=Math.min(e.to,n.to)-Math.max(e.from,n.from);this.syncGutters(r<(n.to-n.from)*.8)}t.geometryChanged&&(this.dom.style.minHeight=this.view.contentHeight+"px"),this.view.state.facet(jv)!=!this.fixed&&(this.fixed=!this.fixed,this.dom.style.position=this.fixed?"sticky":""),this.prevViewport=t.view.viewport}syncGutters(t){let e=this.dom.nextSibling;t&&this.dom.remove();let n=Pe.iter(this.view.state.facet(ah),this.view.viewport.from),r=[],i=this.gutters.map(o=>new z7(o,this.view.viewport,-this.view.documentPadding.top));for(let o of this.view.viewportLineBlocks){let s;if(Array.isArray(o.type)){for(let a of o.type)if(a.type==Ae.Text){s=a;break}}else s=o.type==Ae.Text?o:void 0;if(!!s){r.length&&(r=[]),pz(n,r,o.from);for(let a of i)a.line(this.view,s,r)}}for(let o of i)o.finish();t&&this.view.scrollDOM.insertBefore(this.dom,e)}updateGutters(t){let e=t.startState.facet(Rc),n=t.state.facet(Rc),r=t.docChanged||t.heightChanged||t.viewportChanged||!Pe.eq(t.startState.facet(ah),t.state.facet(ah),t.view.viewport.from,t.view.viewport.to);if(e==n)for(let i of this.gutters)i.update(t)&&(r=!0);else{r=!0;let i=[];for(let o of n){let s=e.indexOf(o);s<0?i.push(new Rw(this.view,o)):(this.gutters[s].update(t),i.push(this.gutters[s]))}for(let o of this.gutters)o.dom.remove(),i.indexOf(o)<0&&o.destroy();for(let o of i)this.dom.appendChild(o.dom);this.gutters=i}return r}destroy(){for(let t of this.gutters)t.destroy();this.dom.remove()}},{provide:t=>U.scrollMargins.of(e=>{let n=e.plugin(t);return!n||n.gutters.length==0||!n.fixed?null:e.textDirection==Je.LTR?{left:n.dom.offsetWidth}:{right:n.dom.offsetWidth}})});function Ww(t){return Array.isArray(t)?t:[t]}function pz(t,e,n){for(;t.value&&t.from<=n;)t.from==n&&e.push(t.value),t.next()}class z7{constructor(e,n,r){this.gutter=e,this.height=r,this.localMarkers=[],this.i=0,this.cursor=Pe.iter(e.markers,n.from)}line(e,n,r){this.localMarkers.length&&(this.localMarkers=[]),pz(this.cursor,this.localMarkers,n.from);let i=r.length?this.localMarkers.concat(r):this.localMarkers,o=this.gutter.config.lineMarker(e,n,i);o&&i.unshift(o);let s=this.gutter;if(i.length==0&&!s.config.renderEmptyElements)return;let a=n.top-this.height;if(this.i==s.elements.length){let l=new mz(e,n.height,a,i);s.elements.push(l),s.dom.appendChild(l.dom)}else s.elements[this.i].update(e,n.height,a,i);this.height=n.bottom,this.i++}finish(){let e=this.gutter;for(;e.elements.length>this.i;){let n=e.elements.pop();e.dom.removeChild(n.dom),n.destroy()}}}class Rw{constructor(e,n){this.view=e,this.config=n,this.elements=[],this.spacer=null,this.dom=document.createElement("div"),this.dom.className="cm-gutter"+(this.config.class?" "+this.config.class:"");for(let r in n.domEventHandlers)this.dom.addEventListener(r,i=>{let o=e.lineBlockAtHeight(i.clientY-e.documentTop);n.domEventHandlers[r](e,o,i)&&i.preventDefault()});this.markers=Ww(n.markers(e)),n.initialSpacer&&(this.spacer=new mz(e,0,0,[n.initialSpacer(e)]),this.dom.appendChild(this.spacer.dom),this.spacer.dom.style.cssText+="visibility: hidden; pointer-events: none")}update(e){let n=this.markers;if(this.markers=Ww(this.config.markers(e.view)),this.spacer&&this.config.updateSpacer){let i=this.config.updateSpacer(this.spacer.markers[0],e);i!=this.spacer.markers[0]&&this.spacer.update(e.view,0,0,[i])}let r=e.view.viewport;return!Pe.eq(this.markers,n,r.from,r.to)||(this.config.lineMarkerChange?this.config.lineMarkerChange(e):!1)}destroy(){for(let e of this.elements)e.destroy()}}class mz{constructor(e,n,r,i){this.height=-1,this.above=0,this.markers=[],this.dom=document.createElement("div"),this.dom.className="cm-gutterElement",this.update(e,n,r,i)}update(e,n,r,i){this.height!=n&&(this.dom.style.height=(this.height=n)+"px"),this.above!=r&&(this.dom.style.marginTop=(this.above=r)?r+"px":""),V7(this.markers,i)||this.setMarkers(e,i)}setMarkers(e,n){let r="cm-gutterElement",i=this.dom.firstChild;for(let o=0,s=0;;){let a=s,l=o<n.length?n[o++]:null,c=!1;if(l){let u=l.elementClass;u&&(r+=" "+u);for(let d=s;d<this.markers.length;d++)if(this.markers[d].compare(l)){a=d,c=!0;break}}else a=this.markers.length;for(;s<a;){let u=this.markers[s++];if(u.toDOM){u.destroy(i);let d=i.nextSibling;i.remove(),i=d}}if(!l)break;l.toDOM&&(c?i=i.nextSibling:this.dom.insertBefore(l.toDOM(e),i)),c&&s++}this.dom.className=r,this.markers=n}destroy(){this.setMarkers(null,[])}}function V7(t,e){if(t.length!=e.length)return!1;for(let n=0;n<t.length;n++)if(!t[n].compare(e[n]))return!1;return!0}const E7=$.define(),Ta=$.define({combine(t){return ti(t,{formatNumber:String,domEventHandlers:{}},{domEventHandlers(e,n){let r=Object.assign({},e);for(let i in n){let o=r[i],s=n[i];r[i]=o?(a,l,c)=>o(a,l,c)||s(a,l,c):s}return r}})}});class h0 extends Ci{constructor(e){super(),this.number=e}eq(e){return this.number==e.number}toDOM(){return document.createTextNode(this.number)}}function p0(t,e){return t.state.facet(Ta).formatNumber(e,t.state)}const N7=Rc.compute([Ta],t=>({class:"cm-lineNumbers",renderEmptyElements:!1,markers(e){return e.state.facet(E7)},lineMarker(e,n,r){return r.some(i=>i.toDOM)?null:new h0(p0(e,e.state.doc.lineAt(n.from).number))},lineMarkerChange:e=>e.startState.facet(Ta)!=e.state.facet(Ta),initialSpacer(e){return new h0(p0(e,Fw(e.state.doc.lines)))},updateSpacer(e,n){let r=p0(n.view,Fw(n.view.state.doc.lines));return r==e.number?e:new h0(r)},domEventHandlers:t.facet(Ta).domEventHandlers}));function I7(t={}){return[Ta.of(t),hz(),N7]}function Fw(t){let e=9;for(;e<t;)e=e*10+9;return e}const M7=new class extends Ci{constructor(){super(...arguments),this.elementClass="cm-activeLineGutter"}},A7=ah.compute(["selection"],t=>{let e=[],n=-1;for(let r of t.selection.ranges){let i=t.doc.lineAt(r.head).from;i>n&&(n=i,e.push(M7.range(i)))}return Pe.of(e)});function L7(){return A7}const gz=1024;let Z7=0;class m0{constructor(e,n){this.from=e,this.to=n}}class de{constructor(e={}){this.id=Z7++,this.perNode=!!e.perNode,this.deserialize=e.deserialize||(()=>{throw new Error("This node type doesn't define a deserialize function")})}add(e){if(this.perNode)throw new RangeError("Can't add per-node props to node types");return typeof e!="function"&&(e=pn.match(e)),n=>{let r=e(n);return r===void 0?null:[this,r]}}}de.closedBy=new de({deserialize:t=>t.split(" ")});de.openedBy=new de({deserialize:t=>t.split(" ")});de.group=new de({deserialize:t=>t.split(" ")});de.contextHash=new de({perNode:!0});de.lookAhead=new de({perNode:!0});de.mounted=new de({perNode:!0});const X7=Object.create(null);class pn{constructor(e,n,r,i=0){this.name=e,this.props=n,this.id=r,this.flags=i}static define(e){let n=e.props&&e.props.length?Object.create(null):X7,r=(e.top?1:0)|(e.skipped?2:0)|(e.error?4:0)|(e.name==null?8:0),i=new pn(e.name||"",n,e.id,r);if(e.props){for(let o of e.props)if(Array.isArray(o)||(o=o(i)),o){if(o[0].perNode)throw new RangeError("Can't store a per-node prop on a node type");n[o[0].id]=o[1]}}return i}prop(e){return this.props[e.id]}get isTop(){return(this.flags&1)>0}get isSkipped(){return(this.flags&2)>0}get isError(){return(this.flags&4)>0}get isAnonymous(){return(this.flags&8)>0}is(e){if(typeof e=="string"){if(this.name==e)return!0;let n=this.prop(de.group);return n?n.indexOf(e)>-1:!1}return this.id==e}static match(e){let n=Object.create(null);for(let r in e)for(let i of r.split(" "))n[i]=e[r];return r=>{for(let i=r.prop(de.group),o=-1;o<(i?i.length:0);o++){let s=n[o<0?r.name:i[o]];if(s)return s}}}}pn.none=new pn("",Object.create(null),0,8);class bx{constructor(e){this.types=e;for(let n=0;n<e.length;n++)if(e[n].id!=n)throw new RangeError("Node type ids should correspond to array positions when creating a node set")}extend(...e){let n=[];for(let r of this.types){let i=null;for(let o of e){let s=o(r);s&&(i||(i=Object.assign({},r.props)),i[s[0].id]=s[1])}n.push(i?new pn(r.name,i,r.id,r.flags):r)}return new bx(n)}}const af=new WeakMap,Hw=new WeakMap;var Vt;(function(t){t[t.ExcludeBuffers=1]="ExcludeBuffers",t[t.IncludeAnonymous=2]="IncludeAnonymous",t[t.IgnoreMounts=4]="IgnoreMounts",t[t.IgnoreOverlays=8]="IgnoreOverlays"})(Vt||(Vt={}));class ct{constructor(e,n,r,i,o){if(this.type=e,this.children=n,this.positions=r,this.length=i,this.props=null,o&&o.length){this.props=Object.create(null);for(let[s,a]of o)this.props[typeof s=="number"?s:s.id]=a}}toString(){let e=this.prop(de.mounted);if(e&&!e.overlay)return e.tree.toString();let n="";for(let r of this.children){let i=r.toString();i&&(n&&(n+=","),n+=i)}return this.type.name?(/\W/.test(this.type.name)&&!this.type.isError?JSON.stringify(this.type.name):this.type.name)+(n.length?"("+n+")":""):n}cursor(e=0){return new cp(this.topNode,e)}cursorAt(e,n=0,r=0){let i=af.get(this)||this.topNode,o=new cp(i);return o.moveTo(e,n),af.set(this,o._tree),o}get topNode(){return new yi(this,0,0,null)}resolve(e,n=0){let r=pl(af.get(this)||this.topNode,e,n,!1);return af.set(this,r),r}resolveInner(e,n=0){let r=pl(Hw.get(this)||this.topNode,e,n,!0);return Hw.set(this,r),r}iterate(e){let{enter:n,leave:r,from:i=0,to:o=this.length}=e;for(let s=this.cursor((e.mode||0)|Vt.IncludeAnonymous);;){let a=!1;if(s.from<=o&&s.to>=i&&(s.type.isAnonymous||n(s)!==!1)){if(s.firstChild())continue;a=!0}for(;a&&r&&!s.type.isAnonymous&&r(s),!s.nextSibling();){if(!s.parent())return;a=!0}}}prop(e){return e.perNode?this.props?this.props[e.id]:void 0:this.type.prop(e)}get propValues(){let e=[];if(this.props)for(let n in this.props)e.push([+n,this.props[n]]);return e}balance(e={}){return this.children.length<=8?this:xx(pn.none,this.children,this.positions,0,this.children.length,0,this.length,(n,r,i)=>new ct(this.type,n,r,i,this.propValues),e.makeTree||((n,r,i)=>new ct(pn.none,n,r,i)))}static build(e){return R7(e)}}ct.empty=new ct(pn.none,[],[],0);class vx{constructor(e,n){this.buffer=e,this.index=n}get id(){return this.buffer[this.index-4]}get start(){return this.buffer[this.index-3]}get end(){return this.buffer[this.index-2]}get size(){return this.buffer[this.index-1]}get pos(){return this.index}next(){this.index-=4}fork(){return new vx(this.buffer,this.index)}}class Hs{constructor(e,n,r){this.buffer=e,this.length=n,this.set=r}get type(){return pn.none}toString(){let e=[];for(let n=0;n<this.buffer.length;)e.push(this.childString(n)),n=this.buffer[n+3];return e.join(",")}childString(e){let n=this.buffer[e],r=this.buffer[e+3],i=this.set.types[n],o=i.name;if(/\W/.test(o)&&!i.isError&&(o=JSON.stringify(o)),e+=4,r==e)return o;let s=[];for(;e<r;)s.push(this.childString(e)),e=this.buffer[e+3];return o+"("+s.join(",")+")"}findChild(e,n,r,i,o){let{buffer:s}=this,a=-1;for(let l=e;l!=n&&!(bz(o,i,s[l+1],s[l+2])&&(a=l,r>0));l=s[l+3]);return a}slice(e,n,r){let i=this.buffer,o=new Uint16Array(n-e),s=0;for(let a=e,l=0;a<n;){o[l++]=i[a++],o[l++]=i[a++]-r;let c=o[l++]=i[a++]-r;o[l++]=i[a++]-e,s=Math.max(s,c)}return new Hs(o,s,this.set)}}function bz(t,e,n,r){switch(t){case-2:return n<e;case-1:return r>=e&&n<e;case 0:return n<e&&r>e;case 1:return n<=e&&r>e;case 2:return r>e;case 4:return!0}}function vz(t,e){let n=t.childBefore(e);for(;n;){let r=n.lastChild;if(!r||r.to!=n.to)break;r.type.isError&&r.from==r.to?(t=n,n=r.prevSibling):n=r}return t}function pl(t,e,n,r){for(var i;t.from==t.to||(n<1?t.from>=e:t.from>e)||(n>-1?t.to<=e:t.to<e);){let s=!r&&t instanceof yi&&t.index<0?null:t.parent;if(!s)return t;t=s}let o=r?0:Vt.IgnoreOverlays;if(r)for(let s=t,a=s.parent;a;s=a,a=s.parent)s instanceof yi&&s.index<0&&((i=a.enter(e,n,o))===null||i===void 0?void 0:i.from)!=s.from&&(t=a);for(;;){let s=t.enter(e,n,o);if(!s)return t;t=s}}class yi{constructor(e,n,r,i){this._tree=e,this.from=n,this.index=r,this._parent=i}get type(){return this._tree.type}get name(){return this._tree.type.name}get to(){return this.from+this._tree.length}nextChild(e,n,r,i,o=0){for(let s=this;;){for(let{children:a,positions:l}=s._tree,c=n>0?a.length:-1;e!=c;e+=n){let u=a[e],d=l[e]+s.from;if(!!bz(i,r,d,d+u.length)){if(u instanceof Hs){if(o&Vt.ExcludeBuffers)continue;let f=u.findChild(0,u.buffer.length,n,r-d,i);if(f>-1)return new ro(new W7(s,u,e,d),null,f)}else if(o&Vt.IncludeAnonymous||!u.type.isAnonymous||yx(u)){let f;if(!(o&Vt.IgnoreMounts)&&u.props&&(f=u.prop(de.mounted))&&!f.overlay)return new yi(f.tree,d,e,s);let h=new yi(u,d,e,s);return o&Vt.IncludeAnonymous||!h.type.isAnonymous?h:h.nextChild(n<0?u.children.length-1:0,n,r,i)}}}if(o&Vt.IncludeAnonymous||!s.type.isAnonymous||(s.index>=0?e=s.index+n:e=n<0?-1:s._parent._tree.children.length,s=s._parent,!s))return null}}get firstChild(){return this.nextChild(0,1,0,4)}get lastChild(){return this.nextChild(this._tree.children.length-1,-1,0,4)}childAfter(e){return this.nextChild(0,1,e,2)}childBefore(e){return this.nextChild(this._tree.children.length-1,-1,e,-2)}enter(e,n,r=0){let i;if(!(r&Vt.IgnoreOverlays)&&(i=this._tree.prop(de.mounted))&&i.overlay){let o=e-this.from;for(let{from:s,to:a}of i.overlay)if((n>0?s<=o:s<o)&&(n<0?a>=o:a>o))return new yi(i.tree,i.overlay[0].from+this.from,-1,this)}return this.nextChild(0,1,e,n,r)}nextSignificantParent(){let e=this;for(;e.type.isAnonymous&&e._parent;)e=e._parent;return e}get parent(){return this._parent?this._parent.nextSignificantParent():null}get nextSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index+1,1,0,4):null}get prevSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index-1,-1,0,4):null}cursor(e=0){return new cp(this,e)}get tree(){return this._tree}toTree(){return this._tree}resolve(e,n=0){return pl(this,e,n,!1)}resolveInner(e,n=0){return pl(this,e,n,!0)}enterUnfinishedNodesBefore(e){return vz(this,e)}getChild(e,n=null,r=null){let i=ap(this,e,n,r);return i.length?i[0]:null}getChildren(e,n=null,r=null){return ap(this,e,n,r)}toString(){return this._tree.toString()}get node(){return this}matchContext(e){return lp(this,e)}}function ap(t,e,n,r){let i=t.cursor(),o=[];if(!i.firstChild())return o;if(n!=null){for(;!i.type.is(n);)if(!i.nextSibling())return o}for(;;){if(r!=null&&i.type.is(r))return o;if(i.type.is(e)&&o.push(i.node),!i.nextSibling())return r==null?o:[]}}function lp(t,e,n=e.length-1){for(let r=t.parent;n>=0;r=r.parent){if(!r)return!1;if(!r.type.isAnonymous){if(e[n]&&e[n]!=r.name)return!1;n--}}return!0}class W7{constructor(e,n,r,i){this.parent=e,this.buffer=n,this.index=r,this.start=i}}class ro{get name(){return this.type.name}get from(){return this.context.start+this.context.buffer.buffer[this.index+1]}get to(){return this.context.start+this.context.buffer.buffer[this.index+2]}constructor(e,n,r){this.context=e,this._parent=n,this.index=r,this.type=e.buffer.set.types[e.buffer.buffer[r]]}child(e,n,r){let{buffer:i}=this.context,o=i.findChild(this.index+4,i.buffer[this.index+3],e,n-this.context.start,r);return o<0?null:new ro(this.context,this,o)}get firstChild(){return this.child(1,0,4)}get lastChild(){return this.child(-1,0,4)}childAfter(e){return this.child(1,e,2)}childBefore(e){return this.child(-1,e,-2)}enter(e,n,r=0){if(r&Vt.ExcludeBuffers)return null;let{buffer:i}=this.context,o=i.findChild(this.index+4,i.buffer[this.index+3],n>0?1:-1,e-this.context.start,n);return o<0?null:new ro(this.context,this,o)}get parent(){return this._parent||this.context.parent.nextSignificantParent()}externalSibling(e){return this._parent?null:this.context.parent.nextChild(this.context.index+e,e,0,4)}get nextSibling(){let{buffer:e}=this.context,n=e.buffer[this.index+3];return n<(this._parent?e.buffer[this._parent.index+3]:e.buffer.length)?new ro(this.context,this._parent,n):this.externalSibling(1)}get prevSibling(){let{buffer:e}=this.context,n=this._parent?this._parent.index+4:0;return this.index==n?this.externalSibling(-1):new ro(this.context,this._parent,e.findChild(n,this.index,-1,0,4))}cursor(e=0){return new cp(this,e)}get tree(){return null}toTree(){let e=[],n=[],{buffer:r}=this.context,i=this.index+4,o=r.buffer[this.index+3];if(o>i){let s=r.buffer[this.index+1];e.push(r.slice(i,o,s)),n.push(0)}return new ct(this.type,e,n,this.to-this.from)}resolve(e,n=0){return pl(this,e,n,!1)}resolveInner(e,n=0){return pl(this,e,n,!0)}enterUnfinishedNodesBefore(e){return vz(this,e)}toString(){return this.context.buffer.childString(this.index)}getChild(e,n=null,r=null){let i=ap(this,e,n,r);return i.length?i[0]:null}getChildren(e,n=null,r=null){return ap(this,e,n,r)}get node(){return this}matchContext(e){return lp(this,e)}}class cp{get name(){return this.type.name}constructor(e,n=0){if(this.mode=n,this.buffer=null,this.stack=[],this.index=0,this.bufferNode=null,e instanceof yi)this.yieldNode(e);else{this._tree=e.context.parent,this.buffer=e.context;for(let r=e._parent;r;r=r._parent)this.stack.unshift(r.index);this.bufferNode=e,this.yieldBuf(e.index)}}yieldNode(e){return e?(this._tree=e,this.type=e.type,this.from=e.from,this.to=e.to,!0):!1}yieldBuf(e,n){this.index=e;let{start:r,buffer:i}=this.buffer;return this.type=n||i.set.types[i.buffer[e]],this.from=r+i.buffer[e+1],this.to=r+i.buffer[e+2],!0}yield(e){return e?e instanceof yi?(this.buffer=null,this.yieldNode(e)):(this.buffer=e.context,this.yieldBuf(e.index,e.type)):!1}toString(){return this.buffer?this.buffer.buffer.childString(this.index):this._tree.toString()}enterChild(e,n,r){if(!this.buffer)return this.yield(this._tree.nextChild(e<0?this._tree._tree.children.length-1:0,e,n,r,this.mode));let{buffer:i}=this.buffer,o=i.findChild(this.index+4,i.buffer[this.index+3],e,n-this.buffer.start,r);return o<0?!1:(this.stack.push(this.index),this.yieldBuf(o))}firstChild(){return this.enterChild(1,0,4)}lastChild(){return this.enterChild(-1,0,4)}childAfter(e){return this.enterChild(1,e,2)}childBefore(e){return this.enterChild(-1,e,-2)}enter(e,n,r=this.mode){return this.buffer?r&Vt.ExcludeBuffers?!1:this.enterChild(1,e,n):this.yield(this._tree.enter(e,n,r))}parent(){if(!this.buffer)return this.yieldNode(this.mode&Vt.IncludeAnonymous?this._tree._parent:this._tree.parent);if(this.stack.length)return this.yieldBuf(this.stack.pop());let e=this.mode&Vt.IncludeAnonymous?this.buffer.parent:this.buffer.parent.nextSignificantParent();return this.buffer=null,this.yieldNode(e)}sibling(e){if(!this.buffer)return this._tree._parent?this.yield(this._tree.index<0?null:this._tree._parent.nextChild(this._tree.index+e,e,0,4,this.mode)):!1;let{buffer:n}=this.buffer,r=this.stack.length-1;if(e<0){let i=r<0?0:this.stack[r]+4;if(this.index!=i)return this.yieldBuf(n.findChild(i,this.index,-1,0,4))}else{let i=n.buffer[this.index+3];if(i<(r<0?n.buffer.length:n.buffer[this.stack[r]+3]))return this.yieldBuf(i)}return r<0?this.yield(this.buffer.parent.nextChild(this.buffer.index+e,e,0,4,this.mode)):!1}nextSibling(){return this.sibling(1)}prevSibling(){return this.sibling(-1)}atLastNode(e){let n,r,{buffer:i}=this;if(i){if(e>0){if(this.index<i.buffer.buffer.length)return!1}else for(let o=0;o<this.index;o++)if(i.buffer.buffer[o+3]<this.index)return!1;({index:n,parent:r}=i)}else({index:n,_parent:r}=this._tree);for(;r;{index:n,_parent:r}=r)if(n>-1)for(let o=n+e,s=e<0?-1:r._tree.children.length;o!=s;o+=e){let a=r._tree.children[o];if(this.mode&Vt.IncludeAnonymous||a instanceof Hs||!a.type.isAnonymous||yx(a))return!1}return!0}move(e,n){if(n&&this.enterChild(e,0,4))return!0;for(;;){if(this.sibling(e))return!0;if(this.atLastNode(e)||!this.parent())return!1}}next(e=!0){return this.move(1,e)}prev(e=!0){return this.move(-1,e)}moveTo(e,n=0){for(;(this.from==this.to||(n<1?this.from>=e:this.from>e)||(n>-1?this.to<=e:this.to<e))&&this.parent(););for(;this.enterChild(1,e,n););return this}get node(){if(!this.buffer)return this._tree;let e=this.bufferNode,n=null,r=0;if(e&&e.context==this.buffer){e:for(let i=this.index,o=this.stack.length;o>=0;){for(let s=e;s;s=s._parent)if(s.index==i){if(i==this.index)return s;n=s,r=o+1;break e}i=this.stack[--o]}}for(let i=r;i<this.stack.length;i++)n=new ro(this.buffer,n,this.stack[i]);return this.bufferNode=new ro(this.buffer,n,this.index)}get tree(){return this.buffer?null:this._tree._tree}iterate(e,n){for(let r=0;;){let i=!1;if(this.type.isAnonymous||e(this)!==!1){if(this.firstChild()){r++;continue}this.type.isAnonymous||(i=!0)}for(;i&&n&&n(this),i=this.type.isAnonymous,!this.nextSibling();){if(!r)return;this.parent(),r--,i=!0}}}matchContext(e){if(!this.buffer)return lp(this.node,e);let{buffer:n}=this.buffer,{types:r}=n.set;for(let i=e.length-1,o=this.stack.length-1;i>=0;o--){if(o<0)return lp(this.node,e,i);let s=r[n.buffer[this.stack[o]]];if(!s.isAnonymous){if(e[i]&&e[i]!=s.name)return!1;i--}}return!0}}function yx(t){return t.children.some(e=>e instanceof Hs||!e.type.isAnonymous||yx(e))}function R7(t){var e;let{buffer:n,nodeSet:r,maxBufferLength:i=gz,reused:o=[],minRepeatType:s=r.types.length}=t,a=Array.isArray(n)?new vx(n,n.length):n,l=r.types,c=0,u=0;function d(x,k,P,O,z){let{id:I,start:E,end:X,size:Y}=a,Q=u;for(;Y<0;)if(a.next(),Y==-1){let L=o[I];P.push(L),O.push(E-x);return}else if(Y==-3){c=I;return}else if(Y==-4){u=I;return}else throw new RangeError(`Unrecognized record size: ${Y}`);let ae=l[I],oe,D,ee=E-x;if(X-E<=i&&(D=m(a.pos-k,z))){let L=new Uint16Array(D.size-D.skip),H=a.pos-D.size,q=L.length;for(;a.pos>H;)q=v(D.start,L,q);oe=new Hs(L,X-D.start,r),ee=D.start-x}else{let L=a.pos-Y;a.next();let H=[],q=[],le=I>=s?I:-1,ue=0,re=X;for(;a.pos>L;)le>=0&&a.id==le&&a.size>=0?(a.end<=re-i&&(h(H,q,E,ue,a.end,re,le,Q),ue=H.length,re=a.end),a.next()):d(E,L,H,q,le);if(le>=0&&ue>0&&ue<H.length&&h(H,q,E,ue,E,re,le,Q),H.reverse(),q.reverse(),le>-1&&ue>0){let Te=f(ae);oe=xx(ae,H,q,0,H.length,0,X-E,Te,Te)}else oe=p(ae,H,q,X-E,Q-X)}P.push(oe),O.push(ee)}function f(x){return(k,P,O)=>{let z=0,I=k.length-1,E,X;if(I>=0&&(E=k[I])instanceof ct){if(!I&&E.type==x&&E.length==O)return E;(X=E.prop(de.lookAhead))&&(z=P[I]+E.length+X)}return p(x,k,P,O,z)}}function h(x,k,P,O,z,I,E,X){let Y=[],Q=[];for(;x.length>O;)Y.push(x.pop()),Q.push(k.pop()+P-z);x.push(p(r.types[E],Y,Q,I-z,X-I)),k.push(z-P)}function p(x,k,P,O,z=0,I){if(c){let E=[de.contextHash,c];I=I?[E].concat(I):[E]}if(z>25){let E=[de.lookAhead,z];I=I?[E].concat(I):[E]}return new ct(x,k,P,O,I)}function m(x,k){let P=a.fork(),O=0,z=0,I=0,E=P.end-i,X={size:0,start:0,skip:0};e:for(let Y=P.pos-x;P.pos>Y;){let Q=P.size;if(P.id==k&&Q>=0){X.size=O,X.start=z,X.skip=I,I+=4,O+=4,P.next();continue}let ae=P.pos-Q;if(Q<0||ae<Y||P.start<E)break;let oe=P.id>=s?4:0,D=P.start;for(P.next();P.pos>ae;){if(P.size<0)if(P.size==-3)oe+=4;else break e;else P.id>=s&&(oe+=4);P.next()}z=D,O+=Q,I+=oe}return(k<0||O==x)&&(X.size=O,X.start=z,X.skip=I),X.size>4?X:void 0}function v(x,k,P){let{id:O,start:z,end:I,size:E}=a;if(a.next(),E>=0&&O<s){let X=P;if(E>4){let Y=a.pos-(E-4);for(;a.pos>Y;)P=v(x,k,P)}k[--P]=X,k[--P]=I-x,k[--P]=z-x,k[--P]=O}else E==-3?c=O:E==-4&&(u=O);return P}let g=[],b=[];for(;a.pos>0;)d(t.start||0,t.bufferStart||0,g,b,-1);let y=(e=t.length)!==null&&e!==void 0?e:g.length?b[0]+g[0].length:0;return new ct(l[t.topID],g.reverse(),b.reverse(),y)}const Dw=new WeakMap;function lh(t,e){if(!t.isAnonymous||e instanceof Hs||e.type!=t)return 1;let n=Dw.get(e);if(n==null){n=1;for(let r of e.children){if(r.type!=t||!(r instanceof ct)){n=1;break}n+=lh(t,r)}Dw.set(e,n)}return n}function xx(t,e,n,r,i,o,s,a,l){let c=0;for(let p=r;p<i;p++)c+=lh(t,e[p]);let u=Math.ceil(c*1.5/8),d=[],f=[];function h(p,m,v,g,b){for(let y=v;y<g;){let x=y,k=m[y],P=lh(t,p[y]);for(y++;y<g;y++){let O=lh(t,p[y]);if(P+O>=u)break;P+=O}if(y==x+1){if(P>u){let O=p[x];h(O.children,O.positions,0,O.children.length,m[x]+b);continue}d.push(p[x])}else{let O=m[y-1]+p[y-1].length-k;d.push(xx(t,p,m,x,y,k,O,null,l))}f.push(k+b-o)}}return h(e,n,r,i,0),(a||l)(d,f,s)}class vs{constructor(e,n,r,i,o=!1,s=!1){this.from=e,this.to=n,this.tree=r,this.offset=i,this.open=(o?1:0)|(s?2:0)}get openStart(){return(this.open&1)>0}get openEnd(){return(this.open&2)>0}static addTree(e,n=[],r=!1){let i=[new vs(0,e.length,e,0,!1,r)];for(let o of n)o.to>e.length&&i.push(o);return i}static applyChanges(e,n,r=128){if(!n.length)return e;let i=[],o=1,s=e.length?e[0]:null;for(let a=0,l=0,c=0;;a++){let u=a<n.length?n[a]:null,d=u?u.fromA:1e9;if(d-l>=r)for(;s&&s.from<d;){let f=s;if(l>=f.from||d<=f.to||c){let h=Math.max(f.from,l)-c,p=Math.min(f.to,d)-c;f=h>=p?null:new vs(h,p,f.tree,f.offset+c,a>0,!!u)}if(f&&i.push(f),s.to>d)break;s=o<e.length?e[o++]:null}if(!u)break;l=u.toA,c=u.toA-u.toB}return i}}class yz{startParse(e,n,r){return typeof e=="string"&&(e=new F7(e)),r=r?r.length?r.map(i=>new m0(i.from,i.to)):[new m0(0,0)]:[new m0(0,e.length)],this.createParse(e,n||[],r)}parse(e,n,r){let i=this.startParse(e,n,r);for(;;){let o=i.advance();if(o)return o}}}class F7{constructor(e){this.string=e}get length(){return this.string.length}chunk(e){return this.string.slice(e)}get lineChunks(){return!1}read(e,n){return this.string.slice(e,n)}}new de({perNode:!0});let H7=0;class Ht{constructor(e,n,r){this.set=e,this.base=n,this.modified=r,this.id=H7++}static define(e){if(e!=null&&e.base)throw new Error("Can not derive from a modified tag");let n=new Ht([],null,[]);if(n.set.push(n),e)for(let r of e.set)n.set.push(r);return n}static defineModifier(){let e=new up;return n=>n.modified.indexOf(e)>-1?n:up.get(n.base||n,n.modified.concat(e).sort((r,i)=>r.id-i.id))}}let D7=0;class up{constructor(){this.instances=[],this.id=D7++}static get(e,n){if(!n.length)return e;let r=n[0].instances.find(a=>a.base==e&&G7(n,a.modified));if(r)return r;let i=[],o=new Ht(i,e,n);for(let a of n)a.instances.push(o);let s=j7(n);for(let a of e.set)if(!a.modified.length)for(let l of s)i.push(up.get(a,l));return o}}function G7(t,e){return t.length==e.length&&t.every((n,r)=>n==e[r])}function j7(t){let e=[[]];for(let n=0;n<t.length;n++)for(let r=0,i=e.length;r<i;r++)e.push(e[r].concat(t[n]));return e.sort((n,r)=>r.length-n.length)}function xz(t){let e=Object.create(null);for(let n in t){let r=t[n];Array.isArray(r)||(r=[r]);for(let i of n.split(" "))if(i){let o=[],s=2,a=i;for(let d=0;;){if(a=="..."&&d>0&&d+3==i.length){s=1;break}let f=/^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(a);if(!f)throw new RangeError("Invalid path: "+i);if(o.push(f[0]=="*"?"":f[0][0]=='"'?JSON.parse(f[0]):f[0]),d+=f[0].length,d==i.length)break;let h=i[d++];if(d==i.length&&h=="!"){s=0;break}if(h!="/")throw new RangeError("Invalid path: "+i);a=i.slice(d)}let l=o.length-1,c=o[l];if(!c)throw new RangeError("Invalid path: "+i);let u=new dp(r,s,l>0?o.slice(0,l):null);e[c]=u.sort(e[c])}}return Sz.add(e)}const Sz=new de;class dp{constructor(e,n,r,i){this.tags=e,this.mode=n,this.context=r,this.next=i}get opaque(){return this.mode==0}get inherit(){return this.mode==1}sort(e){return!e||e.depth<this.depth?(this.next=e,this):(e.next=this.sort(e.next),e)}get depth(){return this.context?this.context.length:0}}dp.empty=new dp([],2,null);function kz(t,e){let n=Object.create(null);for(let o of t)if(!Array.isArray(o.tag))n[o.tag.id]=o.class;else for(let s of o.tag)n[s.id]=o.class;let{scope:r,all:i=null}=e||{};return{style:o=>{let s=i;for(let a of o)for(let l of a.set){let c=n[l.id];if(c){s=s?s+" "+c:c;break}}return s},scope:r}}function B7(t,e){let n=null;for(let r of t){let i=r.style(e);i&&(n=n?n+" "+i:i)}return n}function Y7(t,e,n,r=0,i=t.length){let o=new K7(r,Array.isArray(e)?e:[e],n);o.highlightRange(t.cursor(),r,i,"",o.highlighters),o.flush(i)}class K7{constructor(e,n,r){this.at=e,this.highlighters=n,this.span=r,this.class=""}startSpan(e,n){n!=this.class&&(this.flush(e),e>this.at&&(this.at=e),this.class=n)}flush(e){e>this.at&&this.class&&this.span(this.at,e,this.class)}highlightRange(e,n,r,i,o){let{type:s,from:a,to:l}=e;if(a>=r||l<=n)return;s.isTop&&(o=this.highlighters.filter(h=>!h.scope||h.scope(s)));let c=i,u=U7(e)||dp.empty,d=B7(o,u.tags);if(d&&(c&&(c+=" "),c+=d,u.mode==1&&(i+=(i?" ":"")+d)),this.startSpan(e.from,c),u.opaque)return;let f=e.tree&&e.tree.prop(de.mounted);if(f&&f.overlay){let h=e.node.enter(f.overlay[0].from+a,1),p=this.highlighters.filter(v=>!v.scope||v.scope(f.tree.type)),m=e.firstChild();for(let v=0,g=a;;v++){let b=v<f.overlay.length?f.overlay[v]:null,y=b?b.from+a:l,x=Math.max(n,g),k=Math.min(r,y);if(x<k&&m)for(;e.from<k&&(this.highlightRange(e,x,k,i,o),this.startSpan(Math.min(k,e.to),c),!(e.to>=y||!e.nextSibling())););if(!b||y>r)break;g=b.to+a,g>n&&(this.highlightRange(h.cursor(),Math.max(n,b.from+a),Math.min(r,g),i,p),this.startSpan(g,c))}m&&e.parent()}else if(e.firstChild()){do if(!(e.to<=n)){if(e.from>=r)break;this.highlightRange(e,n,r,i,o),this.startSpan(Math.min(r,e.to),c)}while(e.nextSibling());e.parent()}}}function U7(t){let e=t.type.prop(Sz);for(;e&&e.context&&!t.matchContext(e.context);)e=e.next;return e||null}const F=Ht.define,lf=F(),Gi=F(),Gw=F(Gi),jw=F(Gi),ji=F(),cf=F(ji),g0=F(ji),Er=F(),Go=F(Er),Tr=F(),zr=F(),Bv=F(),rc=F(Bv),uf=F(),V={comment:lf,lineComment:F(lf),blockComment:F(lf),docComment:F(lf),name:Gi,variableName:F(Gi),typeName:Gw,tagName:F(Gw),propertyName:jw,attributeName:F(jw),className:F(Gi),labelName:F(Gi),namespace:F(Gi),macroName:F(Gi),literal:ji,string:cf,docString:F(cf),character:F(cf),attributeValue:F(cf),number:g0,integer:F(g0),float:F(g0),bool:F(ji),regexp:F(ji),escape:F(ji),color:F(ji),url:F(ji),keyword:Tr,self:F(Tr),null:F(Tr),atom:F(Tr),unit:F(Tr),modifier:F(Tr),operatorKeyword:F(Tr),controlKeyword:F(Tr),definitionKeyword:F(Tr),moduleKeyword:F(Tr),operator:zr,derefOperator:F(zr),arithmeticOperator:F(zr),logicOperator:F(zr),bitwiseOperator:F(zr),compareOperator:F(zr),updateOperator:F(zr),definitionOperator:F(zr),typeOperator:F(zr),controlOperator:F(zr),punctuation:Bv,separator:F(Bv),bracket:rc,angleBracket:F(rc),squareBracket:F(rc),paren:F(rc),brace:F(rc),content:Er,heading:Go,heading1:F(Go),heading2:F(Go),heading3:F(Go),heading4:F(Go),heading5:F(Go),heading6:F(Go),contentSeparator:F(Er),list:F(Er),quote:F(Er),emphasis:F(Er),strong:F(Er),link:F(Er),monospace:F(Er),strikethrough:F(Er),inserted:F(),deleted:F(),changed:F(),invalid:F(),meta:uf,documentMeta:F(uf),annotation:F(uf),processingInstruction:F(uf),definition:Ht.defineModifier(),constant:Ht.defineModifier(),function:Ht.defineModifier(),standard:Ht.defineModifier(),local:Ht.defineModifier(),special:Ht.defineModifier()};kz([{tag:V.link,class:"tok-link"},{tag:V.heading,class:"tok-heading"},{tag:V.emphasis,class:"tok-emphasis"},{tag:V.strong,class:"tok-strong"},{tag:V.keyword,class:"tok-keyword"},{tag:V.atom,class:"tok-atom"},{tag:V.bool,class:"tok-bool"},{tag:V.url,class:"tok-url"},{tag:V.labelName,class:"tok-labelName"},{tag:V.inserted,class:"tok-inserted"},{tag:V.deleted,class:"tok-deleted"},{tag:V.literal,class:"tok-literal"},{tag:V.string,class:"tok-string"},{tag:V.number,class:"tok-number"},{tag:[V.regexp,V.escape,V.special(V.string)],class:"tok-string2"},{tag:V.variableName,class:"tok-variableName"},{tag:V.local(V.variableName),class:"tok-variableName tok-local"},{tag:V.definition(V.variableName),class:"tok-variableName tok-definition"},{tag:V.special(V.variableName),class:"tok-variableName2"},{tag:V.definition(V.propertyName),class:"tok-propertyName tok-definition"},{tag:V.typeName,class:"tok-typeName"},{tag:V.namespace,class:"tok-namespace"},{tag:V.className,class:"tok-className"},{tag:V.macroName,class:"tok-macroName"},{tag:V.propertyName,class:"tok-propertyName"},{tag:V.operator,class:"tok-operator"},{tag:V.comment,class:"tok-comment"},{tag:V.meta,class:"tok-meta"},{tag:V.invalid,class:"tok-invalid"},{tag:V.punctuation,class:"tok-punctuation"}]);var b0;const Eu=new de;function q7(t){return $.define({combine:t?e=>e.concat(t):void 0})}class Kn{constructor(e,n,r=[],i=""){this.data=e,this.name=i,pe.prototype.hasOwnProperty("tree")||Object.defineProperty(pe.prototype,"tree",{get(){return xt(this)}}),this.parser=n,this.extension=[Oo.of(this),pe.languageData.of((o,s,a)=>o.facet(Bw(o,s,a)))].concat(r)}isActiveAt(e,n,r=-1){return Bw(e,n,r)==this.data}findRegions(e){let n=e.facet(Oo);if((n==null?void 0:n.data)==this.data)return[{from:0,to:e.doc.length}];if(!n||!n.allowsNesting)return[];let r=[],i=(o,s)=>{if(o.prop(Eu)==this.data){r.push({from:s,to:s+o.length});return}let a=o.prop(de.mounted);if(a){if(a.tree.prop(Eu)==this.data){if(a.overlay)for(let l of a.overlay)r.push({from:l.from+s,to:l.to+s});else r.push({from:s,to:s+o.length});return}else if(a.overlay){let l=r.length;if(i(a.tree,a.overlay[0].from+s),r.length>l)return}}for(let l=0;l<o.children.length;l++){let c=o.children[l];c instanceof ct&&i(c,o.positions[l]+s)}};return i(xt(e),0),r}get allowsNesting(){return!0}}Kn.setState=se.define();function Bw(t,e,n){let r=t.facet(Oo);if(!r)return null;let i=r.data;if(r.allowsNesting)for(let o=xt(t).topNode;o;o=o.enter(e,n,Vt.ExcludeBuffers))i=o.type.prop(Eu)||i;return i}class fp extends Kn{constructor(e,n,r){super(e,n,[],r),this.parser=n}static define(e){let n=q7(e.languageData);return new fp(n,e.parser.configure({props:[Eu.add(r=>r.isTop?n:void 0)]}),e.name)}configure(e,n){return new fp(this.data,this.parser.configure(e),n||this.name)}get allowsNesting(){return this.parser.hasWrappers()}}function xt(t){let e=t.field(Kn.state,!1);return e?e.tree:ct.empty}function J7(t,e=t.doc.length){var n;return((n=t.field(Kn.state,!1))===null||n===void 0?void 0:n.context.isDone(e))||!1}class Q7{constructor(e,n=e.length){this.doc=e,this.length=n,this.cursorPos=0,this.string="",this.cursor=e.iter()}syncTo(e){return this.string=this.cursor.next(e-this.cursorPos).value,this.cursorPos=e+this.string.length,this.cursorPos-this.string.length}chunk(e){return this.syncTo(e),this.string}get lineChunks(){return!0}read(e,n){let r=this.cursorPos-this.string.length;return e<r||n>=this.cursorPos?this.doc.sliceString(e,n):this.string.slice(e-r,n-r)}}let ic=null;class hp{constructor(e,n,r=[],i,o,s,a,l){this.parser=e,this.state=n,this.fragments=r,this.tree=i,this.treeLen=o,this.viewport=s,this.skipped=a,this.scheduleOn=l,this.parse=null,this.tempSkipped=[]}static create(e,n,r){return new hp(e,n,[],ct.empty,0,r,[],null)}startParse(){return this.parser.startParse(new Q7(this.state.doc),this.fragments)}work(e,n){return n!=null&&n>=this.state.doc.length&&(n=void 0),this.tree!=ct.empty&&this.isDone(n!=null?n:this.state.doc.length)?(this.takeTree(),!0):this.withContext(()=>{var r;if(typeof e=="number"){let i=Date.now()+e;e=()=>Date.now()>i}for(this.parse||(this.parse=this.startParse()),n!=null&&(this.parse.stoppedAt==null||this.parse.stoppedAt>n)&&n<this.state.doc.length&&this.parse.stopAt(n);;){let i=this.parse.advance();if(i)if(this.fragments=this.withoutTempSkipped(vs.addTree(i,this.fragments,this.parse.stoppedAt!=null)),this.treeLen=(r=this.parse.stoppedAt)!==null&&r!==void 0?r:this.state.doc.length,this.tree=i,this.parse=null,this.treeLen<(n!=null?n:this.state.doc.length))this.parse=this.startParse();else return!0;if(e())return!1}})}takeTree(){let e,n;this.parse&&(e=this.parse.parsedPos)>=this.treeLen&&((this.parse.stoppedAt==null||this.parse.stoppedAt>e)&&this.parse.stopAt(e),this.withContext(()=>{for(;!(n=this.parse.advance()););}),this.treeLen=e,this.tree=n,this.fragments=this.withoutTempSkipped(vs.addTree(this.tree,this.fragments,!0)),this.parse=null)}withContext(e){let n=ic;ic=this;try{return e()}finally{ic=n}}withoutTempSkipped(e){for(let n;n=this.tempSkipped.pop();)e=Yw(e,n.from,n.to);return e}changes(e,n){let{fragments:r,tree:i,treeLen:o,viewport:s,skipped:a}=this;if(this.takeTree(),!e.empty){let l=[];if(e.iterChangedRanges((c,u,d,f)=>l.push({fromA:c,toA:u,fromB:d,toB:f})),r=vs.applyChanges(r,l),i=ct.empty,o=0,s={from:e.mapPos(s.from,-1),to:e.mapPos(s.to,1)},this.skipped.length){a=[];for(let c of this.skipped){let u=e.mapPos(c.from,1),d=e.mapPos(c.to,-1);u<d&&a.push({from:u,to:d})}}}return new hp(this.parser,n,r,i,o,s,a,this.scheduleOn)}updateViewport(e){if(this.viewport.from==e.from&&this.viewport.to==e.to)return!1;this.viewport=e;let n=this.skipped.length;for(let r=0;r<this.skipped.length;r++){let{from:i,to:o}=this.skipped[r];i<e.to&&o>e.from&&(this.fragments=Yw(this.fragments,i,o),this.skipped.splice(r--,1))}return this.skipped.length>=n?!1:(this.reset(),!0)}reset(){this.parse&&(this.takeTree(),this.parse=null)}skipUntilInView(e,n){this.skipped.push({from:e,to:n})}static getSkippingParser(e){return new class extends yz{createParse(n,r,i){let o=i[0].from,s=i[i.length-1].to;return{parsedPos:o,advance(){let l=ic;if(l){for(let c of i)l.tempSkipped.push(c);e&&(l.scheduleOn=l.scheduleOn?Promise.all([l.scheduleOn,e]):e)}return this.parsedPos=s,new ct(pn.none,[],[],s-o)},stoppedAt:null,stopAt(){}}}}}isDone(e){e=Math.min(e,this.state.doc.length);let n=this.fragments;return this.treeLen>=e&&n.length&&n[0].from==0&&n[0].to>=e}static get(){return ic}}function Yw(t,e,n){return vs.applyChanges(t,[{fromA:e,toA:n,fromB:e,toB:n}])}class ml{constructor(e){this.context=e,this.tree=e.tree}apply(e){if(!e.docChanged&&this.tree==this.context.tree)return this;let n=this.context.changes(e.changes,e.state),r=this.context.treeLen==e.startState.doc.length?void 0:Math.max(e.changes.mapPos(this.context.treeLen),n.viewport.to);return n.work(20,r)||n.takeTree(),new ml(n)}static init(e){let n=Math.min(3e3,e.doc.length),r=hp.create(e.facet(Oo).parser,e,{from:0,to:n});return r.work(20,n)||r.takeTree(),new ml(r)}}Kn.state=St.define({create:ml.init,update(t,e){for(let n of e.effects)if(n.is(Kn.setState))return n.value;return e.startState.facet(Oo)!=e.state.facet(Oo)?ml.init(e.state):t.apply(e)}});let wz=t=>{let e=setTimeout(()=>t(),500);return()=>clearTimeout(e)};typeof requestIdleCallback<"u"&&(wz=t=>{let e=-1,n=setTimeout(()=>{e=requestIdleCallback(t,{timeout:500-100})},100);return()=>e<0?clearTimeout(n):cancelIdleCallback(e)});const v0=typeof navigator<"u"&&((b0=navigator.scheduling)===null||b0===void 0?void 0:b0.isInputPending)?()=>navigator.scheduling.isInputPending():null,_7=nt.fromClass(class{constructor(e){this.view=e,this.working=null,this.workScheduled=0,this.chunkEnd=-1,this.chunkBudget=-1,this.work=this.work.bind(this),this.scheduleWork()}update(e){let n=this.view.state.field(Kn.state).context;(n.updateViewport(e.view.viewport)||this.view.viewport.to>n.treeLen)&&this.scheduleWork(),e.docChanged&&(this.view.hasFocus&&(this.chunkBudget+=50),this.scheduleWork()),this.checkAsyncSchedule(n)}scheduleWork(){if(this.working)return;let{state:e}=this.view,n=e.field(Kn.state);(n.tree!=n.context.tree||!n.context.isDone(e.doc.length))&&(this.working=wz(this.work))}work(e){this.working=null;let n=Date.now();if(this.chunkEnd<n&&(this.chunkEnd<0||this.view.hasFocus)&&(this.chunkEnd=n+3e4,this.chunkBudget=3e3),this.chunkBudget<=0)return;let{state:r,viewport:{to:i}}=this.view,o=r.field(Kn.state);if(o.tree==o.context.tree&&o.context.isDone(i+1e5))return;let s=Date.now()+Math.min(this.chunkBudget,100,e&&!v0?Math.max(25,e.timeRemaining()-5):1e9),a=o.context.treeLen<i&&r.doc.length>i+1e3,l=o.context.work(()=>v0&&v0()||Date.now()>s,i+(a?0:1e5));this.chunkBudget-=Date.now()-n,(l||this.chunkBudget<=0)&&(o.context.takeTree(),this.view.dispatch({effects:Kn.setState.of(new ml(o.context))})),this.chunkBudget>0&&!(l&&!a)&&this.scheduleWork(),this.checkAsyncSchedule(o.context)}checkAsyncSchedule(e){e.scheduleOn&&(this.workScheduled++,e.scheduleOn.then(()=>this.scheduleWork()).catch(n=>zn(this.view.state,n)).then(()=>this.workScheduled--),e.scheduleOn=null)}destroy(){this.working&&this.working()}isWorking(){return!!(this.working||this.workScheduled>0)}},{eventHandlers:{focus(){this.scheduleWork()}}}),Oo=$.define({combine(t){return t.length?t[0]:null},enables:t=>[Kn.state,_7,U.contentAttributes.compute([t],e=>{let n=e.facet(t);return n&&n.name?{"data-language":n.name}:{}})]});class $7{constructor(e,n=[]){this.language=e,this.support=n,this.extension=[e,n]}}const eH=$.define(),cd=$.define({combine:t=>{if(!t.length)return"  ";if(!/^(?: +|\t+)$/.test(t[0]))throw new Error("Invalid indent unit: "+JSON.stringify(t[0]));return t[0]}});function pp(t){let e=t.facet(cd);return e.charCodeAt(0)==9?t.tabSize*e.length:e.length}function Nu(t,e){let n="",r=t.tabSize;if(t.facet(cd).charCodeAt(0)==9)for(;e>=r;)n+="	",e-=r;for(let i=0;i<e;i++)n+=" ";return n}function Sx(t,e){t instanceof pe&&(t=new wm(t));for(let r of t.state.facet(eH)){let i=r(t,e);if(i!==void 0)return i}let n=xt(t.state);return n?tH(t,n,e):null}class wm{constructor(e,n={}){this.state=e,this.options=n,this.unit=pp(e)}lineAt(e,n=1){let r=this.state.doc.lineAt(e),{simulateBreak:i,simulateDoubleBreak:o}=this.options;return i!=null&&i>=r.from&&i<=r.to?o&&i==e?{text:"",from:e}:(n<0?i<e:i<=e)?{text:r.text.slice(i-r.from),from:i}:{text:r.text.slice(0,i-r.from),from:r.from}:r}textAfterPos(e,n=1){if(this.options.simulateDoubleBreak&&e==this.options.simulateBreak)return"";let{text:r,from:i}=this.lineAt(e,n);return r.slice(e-i,Math.min(r.length,e+100-i))}column(e,n=1){let{text:r,from:i}=this.lineAt(e,n),o=this.countColumn(r,e-i),s=this.options.overrideIndentation?this.options.overrideIndentation(i):-1;return s>-1&&(o+=s-this.countColumn(r,r.search(/\S|$/))),o}countColumn(e,n=e.length){return sd(e,this.state.tabSize,n)}lineIndent(e,n=1){let{text:r,from:i}=this.lineAt(e,n),o=this.options.overrideIndentation;if(o){let s=o(i);if(s>-1)return s}return this.countColumn(r,r.search(/\S|$/))}get simulatedBreak(){return this.options.simulateBreak||null}}const Pz=new de;function tH(t,e,n){return Oz(e.resolveInner(n).enterUnfinishedNodesBefore(n),n,t)}function nH(t){return t.pos==t.options.simulateBreak&&t.options.simulateDoubleBreak}function rH(t){let e=t.type.prop(Pz);if(e)return e;let n=t.firstChild,r;if(n&&(r=n.type.prop(de.closedBy))){let i=t.lastChild,o=i&&r.indexOf(i.name)>-1;return s=>aH(s,!0,1,void 0,o&&!nH(s)?i.from:void 0)}return t.parent==null?iH:null}function Oz(t,e,n){for(;t;t=t.parent){let r=rH(t);if(r)return r(kx.create(n,e,t))}return null}function iH(){return 0}class kx extends wm{constructor(e,n,r){super(e.state,e.options),this.base=e,this.pos=n,this.node=r}static create(e,n,r){return new kx(e,n,r)}get textAfter(){return this.textAfterPos(this.pos)}get baseIndent(){let e=this.state.doc.lineAt(this.node.from);for(;;){let n=this.node.resolve(e.from);for(;n.parent&&n.parent.from==n.from;)n=n.parent;if(oH(n,this.node))break;e=this.state.doc.lineAt(n.from)}return this.lineIndent(e.from)}continue(){let e=this.node.parent;return e?Oz(e,this.pos,this.base):0}}function oH(t,e){for(let n=e;n;n=n.parent)if(t==n)return!0;return!1}function sH(t){let e=t.node,n=e.childAfter(e.from),r=e.lastChild;if(!n)return null;let i=t.options.simulateBreak,o=t.state.doc.lineAt(n.from),s=i==null||i<=o.from?o.to:Math.min(o.to,i);for(let a=n.to;;){let l=e.childAfter(a);if(!l||l==r)return null;if(!l.type.isSkipped)return l.from<s?n:null;a=l.to}}function aH(t,e,n,r,i){let o=t.textAfter,s=o.match(/^\s*/)[0].length,a=r&&o.slice(s,s+r.length)==r||i==t.pos+s,l=e?sH(t):null;return l?a?t.column(l.from):t.column(l.to):t.baseIndent+(a?0:t.unit*n)}const lH=200;function cH(){return pe.transactionFilter.of(t=>{if(!t.docChanged||!t.isUserEvent("input.type")&&!t.isUserEvent("input.complete"))return t;let e=t.startState.languageDataAt("indentOnInput",t.startState.selection.main.head);if(!e.length)return t;let n=t.newDoc,{head:r}=t.newSelection.main,i=n.lineAt(r);if(r>i.from+lH)return t;let o=n.sliceString(i.from,r);if(!e.some(c=>c.test(o)))return t;let{state:s}=t,a=-1,l=[];for(let{head:c}of s.selection.ranges){let u=s.doc.lineAt(c);if(u.from==a)continue;a=u.from;let d=Sx(s,u.from);if(d==null)continue;let f=/^\s*/.exec(u.text)[0],h=Nu(s,d);f!=h&&l.push({from:u.from,to:u.from+f.length,insert:h})}return l.length?[t,{changes:l,sequential:!0}]:t})}const uH=$.define(),Cz=new de;function Kw(t){let e=t.firstChild,n=t.lastChild;return e&&e.to<n.from?{from:e.to,to:n.type.isError?t.to:n.from}:null}function dH(t,e,n){let r=xt(t);if(r.length<n)return null;let i=r.resolveInner(n,1),o=null;for(let s=i;s;s=s.parent){if(s.to<=n||s.from>n)continue;if(o&&s.from<e)break;let a=s.type.prop(Cz);if(a&&(s.to<r.length-50||r.length==t.doc.length||!fH(s))){let l=a(s,t);l&&l.from<=n&&l.from>=e&&l.to>n&&(o=l)}}return o}function fH(t){let e=t.lastChild;return e&&e.to==t.to&&e.type.isError}function mp(t,e,n){for(let r of t.facet(uH)){let i=r(t,e,n);if(i)return i}return dH(t,e,n)}function Tz(t,e){let n=e.mapPos(t.from,1),r=e.mapPos(t.to,-1);return n>=r?void 0:{from:n,to:r}}const Pm=se.define({map:Tz}),ud=se.define({map:Tz});function zz(t){let e=[];for(let{head:n}of t.state.selection.ranges)e.some(r=>r.from<=n&&r.to>=n)||e.push(t.lineBlockAt(n));return e}const Is=St.define({create(){return G.none},update(t,e){t=t.map(e.changes);for(let n of e.effects)n.is(Pm)&&!hH(t,n.value.from,n.value.to)?t=t.update({add:[Uw.range(n.value.from,n.value.to)]}):n.is(ud)&&(t=t.update({filter:(r,i)=>n.value.from!=r||n.value.to!=i,filterFrom:n.value.from,filterTo:n.value.to}));if(e.selection){let n=!1,{head:r}=e.selection.main;t.between(r,r,(i,o)=>{i<r&&o>r&&(n=!0)}),n&&(t=t.update({filterFrom:r,filterTo:r,filter:(i,o)=>o<=r||i>=r}))}return t},provide:t=>U.decorations.from(t),toJSON(t,e){let n=[];return t.between(0,e.doc.length,(r,i)=>{n.push(r,i)}),n},fromJSON(t){if(!Array.isArray(t)||t.length%2)throw new RangeError("Invalid JSON for fold state");let e=[];for(let n=0;n<t.length;){let r=t[n++],i=t[n++];if(typeof r!="number"||typeof i!="number")throw new RangeError("Invalid JSON for fold state");e.push(Uw.range(r,i))}return G.set(e,!0)}});function gp(t,e,n){var r;let i=null;return(r=t.field(Is,!1))===null||r===void 0||r.between(e,n,(o,s)=>{(!i||i.from>o)&&(i={from:o,to:s})}),i}function hH(t,e,n){let r=!1;return t.between(e,e,(i,o)=>{i==e&&o==n&&(r=!0)}),r}function Vz(t,e){return t.field(Is,!1)?e:e.concat(se.appendConfig.of(Iz()))}const pH=t=>{for(let e of zz(t)){let n=mp(t.state,e.from,e.to);if(n)return t.dispatch({effects:Vz(t.state,[Pm.of(n),Ez(t,n)])}),!0}return!1},mH=t=>{if(!t.state.field(Is,!1))return!1;let e=[];for(let n of zz(t)){let r=gp(t.state,n.from,n.to);r&&e.push(ud.of(r),Ez(t,r,!1))}return e.length&&t.dispatch({effects:e}),e.length>0};function Ez(t,e,n=!0){let r=t.state.doc.lineAt(e.from).number,i=t.state.doc.lineAt(e.to).number;return U.announce.of(`${t.state.phrase(n?"Folded lines":"Unfolded lines")} ${r} ${t.state.phrase("to")} ${i}.`)}const gH=t=>{let{state:e}=t,n=[];for(let r=0;r<e.doc.length;){let i=t.lineBlockAt(r),o=mp(e,i.from,i.to);o&&n.push(Pm.of(o)),r=(o?t.lineBlockAt(o.to):i).to+1}return n.length&&t.dispatch({effects:Vz(t.state,n)}),!!n.length},bH=t=>{let e=t.state.field(Is,!1);if(!e||!e.size)return!1;let n=[];return e.between(0,t.state.doc.length,(r,i)=>{n.push(ud.of({from:r,to:i}))}),t.dispatch({effects:n}),!0},vH=[{key:"Ctrl-Shift-[",mac:"Cmd-Alt-[",run:pH},{key:"Ctrl-Shift-]",mac:"Cmd-Alt-]",run:mH},{key:"Ctrl-Alt-[",run:gH},{key:"Ctrl-Alt-]",run:bH}],yH={placeholderDOM:null,placeholderText:"\u2026"},Nz=$.define({combine(t){return ti(t,yH)}});function Iz(t){let e=[Is,kH];return t&&e.push(Nz.of(t)),e}const Uw=G.replace({widget:new class extends Ni{toDOM(t){let{state:e}=t,n=e.facet(Nz),r=o=>{let s=t.lineBlockAt(t.posAtDOM(o.target)),a=gp(t.state,s.from,s.to);a&&t.dispatch({effects:ud.of(a)}),o.preventDefault()};if(n.placeholderDOM)return n.placeholderDOM(t,r);let i=document.createElement("span");return i.textContent=n.placeholderText,i.setAttribute("aria-label",e.phrase("folded code")),i.title=e.phrase("unfold"),i.className="cm-foldPlaceholder",i.onclick=r,i}}}),xH={openText:"\u2304",closedText:"\u203A",markerDOM:null,domEventHandlers:{},foldingChanged:()=>!1};class y0 extends Ci{constructor(e,n){super(),this.config=e,this.open=n}eq(e){return this.config==e.config&&this.open==e.open}toDOM(e){if(this.config.markerDOM)return this.config.markerDOM(this.open);let n=document.createElement("span");return n.textContent=this.open?this.config.openText:this.config.closedText,n.title=e.state.phrase(this.open?"Fold line":"Unfold line"),n}}function SH(t={}){let e=Object.assign(Object.assign({},xH),t),n=new y0(e,!0),r=new y0(e,!1),i=nt.fromClass(class{constructor(s){this.from=s.viewport.from,this.markers=this.buildMarkers(s)}update(s){(s.docChanged||s.viewportChanged||s.startState.facet(Oo)!=s.state.facet(Oo)||s.startState.field(Is,!1)!=s.state.field(Is,!1)||xt(s.startState)!=xt(s.state)||e.foldingChanged(s))&&(this.markers=this.buildMarkers(s.view))}buildMarkers(s){let a=new Oi;for(let l of s.viewportLineBlocks){let c=gp(s.state,l.from,l.to)?r:mp(s.state,l.from,l.to)?n:null;c&&a.add(l.from,l.from,c)}return a.finish()}}),{domEventHandlers:o}=e;return[i,C7({class:"cm-foldGutter",markers(s){var a;return((a=s.plugin(i))===null||a===void 0?void 0:a.markers)||Pe.empty},initialSpacer(){return new y0(e,!1)},domEventHandlers:Object.assign(Object.assign({},o),{click:(s,a,l)=>{if(o.click&&o.click(s,a,l))return!0;let c=gp(s.state,a.from,a.to);if(c)return s.dispatch({effects:ud.of(c)}),!0;let u=mp(s.state,a.from,a.to);return u?(s.dispatch({effects:Pm.of(u)}),!0):!1}})}),Iz()]}const kH=U.baseTheme({".cm-foldPlaceholder":{backgroundColor:"#eee",border:"1px solid #ddd",color:"#888",borderRadius:".2em",margin:"0 1px",padding:"0 1px",cursor:"pointer"},".cm-foldGutter span":{padding:"0 1px",cursor:"pointer"}});class Nl{constructor(e,n){this.specs=e;let r;function i(a){let l=ko.newName();return(r||(r=Object.create(null)))["."+l]=a,l}const o=typeof n.all=="string"?n.all:n.all?i(n.all):void 0,s=n.scope;this.scope=s instanceof Kn?a=>a.prop(Eu)==s.data:s?a=>a==s:void 0,this.style=kz(e.map(a=>({tag:a.tag,class:a.class||i(Object.assign({},a,{tag:null}))})),{all:o}).style,this.module=r?new ko(r):null,this.themeType=n.themeType}static define(e,n){return new Nl(e,n||{})}}const Yv=$.define(),Mz=$.define({combine(t){return t.length?[t[0]]:null}});function x0(t){let e=t.facet(Yv);return e.length?e:t.facet(Mz)}function wx(t,e){let n=[PH],r;return t instanceof Nl&&(t.module&&n.push(U.styleModule.of(t.module)),r=t.themeType),e!=null&&e.fallback?n.push(Mz.of(t)):r?n.push(Yv.computeN([U.darkTheme],i=>i.facet(U.darkTheme)==(r=="dark")?[t]:[])):n.push(Yv.of(t)),n}class wH{constructor(e){this.markCache=Object.create(null),this.tree=xt(e.state),this.decorations=this.buildDeco(e,x0(e.state))}update(e){let n=xt(e.state),r=x0(e.state),i=r!=x0(e.startState);n.length<e.view.viewport.to&&!i&&n.type==this.tree.type?this.decorations=this.decorations.map(e.changes):(n!=this.tree||e.viewportChanged||i)&&(this.tree=n,this.decorations=this.buildDeco(e.view,r))}buildDeco(e,n){if(!n||!this.tree.length)return G.none;let r=new Oi;for(let{from:i,to:o}of e.visibleRanges)Y7(this.tree,n,(s,a,l)=>{r.add(s,a,this.markCache[l]||(this.markCache[l]=G.mark({class:l})))},i,o);return r.finish()}}const PH=Fs.high(nt.fromClass(wH,{decorations:t=>t.decorations})),OH=Nl.define([{tag:V.meta,color:"#7a757a"},{tag:V.link,textDecoration:"underline"},{tag:V.heading,textDecoration:"underline",fontWeight:"bold"},{tag:V.emphasis,fontStyle:"italic"},{tag:V.strong,fontWeight:"bold"},{tag:V.strikethrough,textDecoration:"line-through"},{tag:V.keyword,color:"#708"},{tag:[V.atom,V.bool,V.url,V.contentSeparator,V.labelName],color:"#219"},{tag:[V.literal,V.inserted],color:"#164"},{tag:[V.string,V.deleted],color:"#a11"},{tag:[V.regexp,V.escape,V.special(V.string)],color:"#e40"},{tag:V.definition(V.variableName),color:"#00f"},{tag:V.local(V.variableName),color:"#30a"},{tag:[V.typeName,V.namespace],color:"#085"},{tag:V.className,color:"#167"},{tag:[V.special(V.variableName),V.macroName],color:"#256"},{tag:V.definition(V.propertyName),color:"#00c"},{tag:V.comment,color:"#940"},{tag:V.invalid,color:"#f00"}]),CH=U.baseTheme({"&.cm-focused .cm-matchingBracket":{backgroundColor:"#328c8252"},"&.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bb555544"}}),Az=1e4,Lz="()[]{}",Zz=$.define({combine(t){return ti(t,{afterCursor:!0,brackets:Lz,maxScanDistance:Az,renderMatch:VH})}}),TH=G.mark({class:"cm-matchingBracket"}),zH=G.mark({class:"cm-nonmatchingBracket"});function VH(t){let e=[],n=t.matched?TH:zH;return e.push(n.range(t.start.from,t.start.to)),t.end&&e.push(n.range(t.end.from,t.end.to)),e}const EH=St.define({create(){return G.none},update(t,e){if(!e.docChanged&&!e.selection)return t;let n=[],r=e.state.facet(Zz);for(let i of e.state.selection.ranges){if(!i.empty)continue;let o=Rr(e.state,i.head,-1,r)||i.head>0&&Rr(e.state,i.head-1,1,r)||r.afterCursor&&(Rr(e.state,i.head,1,r)||i.head<e.state.doc.length&&Rr(e.state,i.head+1,-1,r));o&&(n=n.concat(r.renderMatch(o,e.state)))}return G.set(n,!0)},provide:t=>U.decorations.from(t)}),NH=[EH,CH];function IH(t={}){return[Zz.of(t),NH]}function Kv(t,e,n){let r=t.prop(e<0?de.openedBy:de.closedBy);if(r)return r;if(t.name.length==1){let i=n.indexOf(t.name);if(i>-1&&i%2==(e<0?1:0))return[n[i+e]]}return null}function Rr(t,e,n,r={}){let i=r.maxScanDistance||Az,o=r.brackets||Lz,s=xt(t),a=s.resolveInner(e,n);for(let l=a;l;l=l.parent){let c=Kv(l.type,n,o);if(c&&l.from<l.to)return MH(t,e,n,l,c,o)}return AH(t,e,n,s,a.type,i,o)}function MH(t,e,n,r,i,o){let s=r.parent,a={from:r.from,to:r.to},l=0,c=s==null?void 0:s.cursor();if(c&&(n<0?c.childBefore(r.from):c.childAfter(r.to)))do if(n<0?c.to<=r.from:c.from>=r.to){if(l==0&&i.indexOf(c.type.name)>-1&&c.from<c.to)return{start:a,end:{from:c.from,to:c.to},matched:!0};if(Kv(c.type,n,o))l++;else if(Kv(c.type,-n,o)){if(l==0)return{start:a,end:c.from==c.to?void 0:{from:c.from,to:c.to},matched:!1};l--}}while(n<0?c.prevSibling():c.nextSibling());return{start:a,matched:!1}}function AH(t,e,n,r,i,o,s){let a=n<0?t.sliceDoc(e-1,e):t.sliceDoc(e,e+1),l=s.indexOf(a);if(l<0||l%2==0!=n>0)return null;let c={from:n<0?e-1:e,to:n>0?e+1:e},u=t.doc.iterRange(e,n>0?t.doc.length:0),d=0;for(let f=0;!u.next().done&&f<=o;){let h=u.value;n<0&&(f+=h.length);let p=e+f*n;for(let m=n>0?0:h.length-1,v=n>0?h.length:-1;m!=v;m+=n){let g=s.indexOf(h[m]);if(!(g<0||r.resolveInner(p+m,1).type!=i))if(g%2==0==n>0)d++;else{if(d==1)return{start:c,end:{from:p+m,to:p+m+1},matched:g>>1==l>>1};d--}}n>0&&(f+=h.length)}return u.done?{start:c,matched:!1}:null}const LH=Object.create(null),qw=[pn.none],Jw=[],ZH=Object.create(null);for(let[t,e]of[["variable","variableName"],["variable-2","variableName.special"],["string-2","string.special"],["def","variableName.definition"],["tag","tagName"],["attribute","attributeName"],["type","typeName"],["builtin","variableName.standard"],["qualifier","modifier"],["error","invalid"],["header","heading"],["property","propertyName"]])ZH[t]=XH(LH,e);function S0(t,e){Jw.indexOf(t)>-1||(Jw.push(t),console.warn(e))}function XH(t,e){let n=null;for(let o of e.split(".")){let s=t[o]||V[o];s?typeof s=="function"?n?n=s(n):S0(o,`Modifier ${o} used at start of tag`):n?S0(o,`Tag ${o} used as modifier`):n=s:S0(o,`Unknown highlighting tag ${o}`)}if(!n)return 0;let r=e.replace(/ /g,"_"),i=pn.define({id:qw.length,name:r,props:[xz({[r]:n})]});return qw.push(i),i.id}const kc=t=>{let e=Ox(t.state);return e.line?WH(t):e.block?FH(t):!1};function Px(t,e){return({state:n,dispatch:r})=>{if(n.readOnly)return!1;let i=t(e,n);return i?(r(n.update(i)),!0):!1}}const WH=Px(GH,0),RH=Px(Xz,0),FH=Px((t,e)=>Xz(t,e,DH(e)),0);function Ox(t,e=t.selection.main.head){let n=t.languageDataAt("commentTokens",e);return n.length?n[0]:{}}const oc=50;function HH(t,{open:e,close:n},r,i){let o=t.sliceDoc(r-oc,r),s=t.sliceDoc(i,i+oc),a=/\s*$/.exec(o)[0].length,l=/^\s*/.exec(s)[0].length,c=o.length-a;if(o.slice(c-e.length,c)==e&&s.slice(l,l+n.length)==n)return{open:{pos:r-a,margin:a&&1},close:{pos:i+l,margin:l&&1}};let u,d;i-r<=2*oc?u=d=t.sliceDoc(r,i):(u=t.sliceDoc(r,r+oc),d=t.sliceDoc(i-oc,i));let f=/^\s*/.exec(u)[0].length,h=/\s*$/.exec(d)[0].length,p=d.length-h-n.length;return u.slice(f,f+e.length)==e&&d.slice(p,p+n.length)==n?{open:{pos:r+f+e.length,margin:/\s/.test(u.charAt(f+e.length))?1:0},close:{pos:i-h-n.length,margin:/\s/.test(d.charAt(p-1))?1:0}}:null}function DH(t){let e=[];for(let n of t.selection.ranges){let r=t.doc.lineAt(n.from),i=n.to<=r.to?r:t.doc.lineAt(n.to),o=e.length-1;o>=0&&e[o].to>r.from?e[o].to=i.to:e.push({from:r.from,to:i.to})}return e}function Xz(t,e,n=e.selection.ranges){let r=n.map(o=>Ox(e,o.from).block);if(!r.every(o=>o))return null;let i=n.map((o,s)=>HH(e,r[s],o.from,o.to));if(t!=2&&!i.every(o=>o))return{changes:e.changes(n.map((o,s)=>i[s]?[]:[{from:o.from,insert:r[s].open+" "},{from:o.to,insert:" "+r[s].close}]))};if(t!=1&&i.some(o=>o)){let o=[];for(let s=0,a;s<i.length;s++)if(a=i[s]){let l=r[s],{open:c,close:u}=a;o.push({from:c.pos-l.open.length,to:c.pos+c.margin},{from:u.pos-u.margin,to:u.pos+l.close.length})}return{changes:o}}return null}function GH(t,e,n=e.selection.ranges){let r=[],i=-1;for(let{from:o,to:s}of n){let a=r.length,l=1e9;for(let c=o;c<=s;){let u=e.doc.lineAt(c);if(u.from>i&&(o==s||s>u.from)){i=u.from;let d=Ox(e,c).line;if(!d)continue;let f=/^\s*/.exec(u.text)[0].length,h=f==u.length,p=u.text.slice(f,f+d.length)==d?f:-1;f<u.text.length&&f<l&&(l=f),r.push({line:u,comment:p,token:d,indent:f,empty:h,single:!1})}c=u.to+1}if(l<1e9)for(let c=a;c<r.length;c++)r[c].indent<r[c].line.text.length&&(r[c].indent=l);r.length==a+1&&(r[a].single=!0)}if(t!=2&&r.some(o=>o.comment<0&&(!o.empty||o.single))){let o=[];for(let{line:a,token:l,indent:c,empty:u,single:d}of r)(d||!u)&&o.push({from:a.from+c,insert:l+" "});let s=e.changes(o);return{changes:s,selection:e.selection.map(s,1)}}else if(t!=1&&r.some(o=>o.comment>=0)){let o=[];for(let{line:s,comment:a,token:l}of r)if(a>=0){let c=s.from+a,u=c+l.length;s.text[u-s.from]==" "&&u++,o.push({from:c,to:u})}return{changes:o}}return null}const Uv=Io.define(),jH=Io.define(),BH=$.define(),Wz=$.define({combine(t){return ti(t,{minDepth:100,newGroupDelay:500},{minDepth:Math.max,newGroupDelay:Math.min})}});function YH(t){let e=0;return t.iterChangedRanges((n,r)=>e=r),e}const Rz=St.define({create(){return Fr.empty},update(t,e){let n=e.state.facet(Wz),r=e.annotation(Uv);if(r){let l=e.docChanged?A.single(YH(e.changes)):void 0,c=ln.fromTransaction(e,l),u=r.side,d=u==0?t.undone:t.done;return c?d=bp(d,d.length,n.minDepth,c):d=Gz(d,e.startState.selection),new Fr(u==0?r.rest:d,u==0?d:r.rest)}let i=e.annotation(jH);if((i=="full"||i=="before")&&(t=t.isolate()),e.annotation(mt.addToHistory)===!1)return e.changes.empty?t:t.addMapping(e.changes.desc);let o=ln.fromTransaction(e),s=e.annotation(mt.time),a=e.annotation(mt.userEvent);return o?t=t.addChanges(o,s,a,n.newGroupDelay,n.minDepth):e.selection&&(t=t.addSelection(e.startState.selection,s,a,n.newGroupDelay)),(i=="full"||i=="after")&&(t=t.isolate()),t},toJSON(t){return{done:t.done.map(e=>e.toJSON()),undone:t.undone.map(e=>e.toJSON())}},fromJSON(t){return new Fr(t.done.map(ln.fromJSON),t.undone.map(ln.fromJSON))}});function Fz(t={}){return[Rz,Wz.of(t),U.domEventHandlers({beforeinput(e,n){let r=e.inputType=="historyUndo"?Hz:e.inputType=="historyRedo"?qv:null;return r?(e.preventDefault(),r(n)):!1}})]}function Om(t,e){return function({state:n,dispatch:r}){if(!e&&n.readOnly)return!1;let i=n.field(Rz,!1);if(!i)return!1;let o=i.pop(t,n,e);return o?(r(o),!0):!1}}const Hz=Om(0,!1),qv=Om(1,!1),KH=Om(0,!0),UH=Om(1,!0);class ln{constructor(e,n,r,i,o){this.changes=e,this.effects=n,this.mapped=r,this.startSelection=i,this.selectionsAfter=o}setSelAfter(e){return new ln(this.changes,this.effects,this.mapped,this.startSelection,e)}toJSON(){var e,n,r;return{changes:(e=this.changes)===null||e===void 0?void 0:e.toJSON(),mapped:(n=this.mapped)===null||n===void 0?void 0:n.toJSON(),startSelection:(r=this.startSelection)===null||r===void 0?void 0:r.toJSON(),selectionsAfter:this.selectionsAfter.map(i=>i.toJSON())}}static fromJSON(e){return new ln(e.changes&&ht.fromJSON(e.changes),[],e.mapped&&Br.fromJSON(e.mapped),e.startSelection&&A.fromJSON(e.startSelection),e.selectionsAfter.map(A.fromJSON))}static fromTransaction(e,n){let r=Un;for(let i of e.startState.facet(BH)){let o=i(e);o.length&&(r=r.concat(o))}return!r.length&&e.changes.empty?null:new ln(e.changes.invert(e.startState.doc),r,void 0,n||e.startState.selection,Un)}static selection(e){return new ln(void 0,Un,void 0,void 0,e)}}function bp(t,e,n,r){let i=e+1>n+20?e-n-1:0,o=t.slice(i,e);return o.push(r),o}function qH(t,e){let n=[],r=!1;return t.iterChangedRanges((i,o)=>n.push(i,o)),e.iterChangedRanges((i,o,s,a)=>{for(let l=0;l<n.length;){let c=n[l++],u=n[l++];a>=c&&s<=u&&(r=!0)}}),r}function JH(t,e){return t.ranges.length==e.ranges.length&&t.ranges.filter((n,r)=>n.empty!=e.ranges[r].empty).length===0}function Dz(t,e){return t.length?e.length?t.concat(e):t:e}const Un=[],QH=200;function Gz(t,e){if(t.length){let n=t[t.length-1],r=n.selectionsAfter.slice(Math.max(0,n.selectionsAfter.length-QH));return r.length&&r[r.length-1].eq(e)?t:(r.push(e),bp(t,t.length-1,1e9,n.setSelAfter(r)))}else return[ln.selection([e])]}function _H(t){let e=t[t.length-1],n=t.slice();return n[t.length-1]=e.setSelAfter(e.selectionsAfter.slice(0,e.selectionsAfter.length-1)),n}function k0(t,e){if(!t.length)return t;let n=t.length,r=Un;for(;n;){let i=$H(t[n-1],e,r);if(i.changes&&!i.changes.empty||i.effects.length){let o=t.slice(0,n);return o[n-1]=i,o}else e=i.mapped,n--,r=i.selectionsAfter}return r.length?[ln.selection(r)]:Un}function $H(t,e,n){let r=Dz(t.selectionsAfter.length?t.selectionsAfter.map(a=>a.map(e)):Un,n);if(!t.changes)return ln.selection(r);let i=t.changes.map(e),o=e.mapDesc(t.changes,!0),s=t.mapped?t.mapped.composeDesc(o):o;return new ln(i,se.mapEffects(t.effects,e),s,t.startSelection.map(o),r)}const e6=/^(input\.type|delete)($|\.)/;class Fr{constructor(e,n,r=0,i=void 0){this.done=e,this.undone=n,this.prevTime=r,this.prevUserEvent=i}isolate(){return this.prevTime?new Fr(this.done,this.undone):this}addChanges(e,n,r,i,o){let s=this.done,a=s[s.length-1];return a&&a.changes&&!a.changes.empty&&e.changes&&(!r||e6.test(r))&&(!a.selectionsAfter.length&&n-this.prevTime<i&&qH(a.changes,e.changes)||r=="input.type.compose")?s=bp(s,s.length-1,o,new ln(e.changes.compose(a.changes),Dz(e.effects,a.effects),a.mapped,a.startSelection,Un)):s=bp(s,s.length,o,e),new Fr(s,Un,n,r)}addSelection(e,n,r,i){let o=this.done.length?this.done[this.done.length-1].selectionsAfter:Un;return o.length>0&&n-this.prevTime<i&&r==this.prevUserEvent&&r&&/^select($|\.)/.test(r)&&JH(o[o.length-1],e)?this:new Fr(Gz(this.done,e),this.undone,n,r)}addMapping(e){return new Fr(k0(this.done,e),k0(this.undone,e),this.prevTime,this.prevUserEvent)}pop(e,n,r){let i=e==0?this.done:this.undone;if(i.length==0)return null;let o=i[i.length-1];if(r&&o.selectionsAfter.length)return n.update({selection:o.selectionsAfter[o.selectionsAfter.length-1],annotations:Uv.of({side:e,rest:_H(i)}),userEvent:e==0?"select.undo":"select.redo",scrollIntoView:!0});if(o.changes){let s=i.length==1?Un:i.slice(0,i.length-1);return o.mapped&&(s=k0(s,o.mapped)),n.update({changes:o.changes,selection:o.startSelection,effects:o.effects,annotations:Uv.of({side:e,rest:s}),filter:!1,userEvent:e==0?"undo":"redo",scrollIntoView:!0})}else return null}}Fr.empty=new Fr(Un,Un);const jz=[{key:"Mod-z",run:Hz,preventDefault:!0},{key:"Mod-y",mac:"Mod-Shift-z",run:qv,preventDefault:!0},{linux:"Ctrl-Shift-z",run:qv,preventDefault:!0},{key:"Mod-u",run:KH,preventDefault:!0},{key:"Alt-u",mac:"Mod-Shift-u",run:UH,preventDefault:!0}];function Il(t,e){return A.create(t.ranges.map(e),t.mainIndex)}function ni(t,e){return t.update({selection:e,scrollIntoView:!0,userEvent:"select"})}function Sr({state:t,dispatch:e},n){let r=Il(t.selection,n);return r.eq(t.selection)?!1:(e(ni(t,r)),!0)}function Cm(t,e){return A.cursor(e?t.to:t.from)}function Bz(t,e){return Sr(t,n=>n.empty?t.moveByChar(n,e):Cm(n,e))}function jt(t){return t.textDirectionAt(t.state.selection.main.head)==Je.LTR}const Yz=t=>Bz(t,!jt(t)),Kz=t=>Bz(t,jt(t));function Uz(t,e){return Sr(t,n=>n.empty?t.moveByGroup(n,e):Cm(n,e))}const t6=t=>Uz(t,!jt(t)),n6=t=>Uz(t,jt(t));function r6(t,e,n){if(e.type.prop(n))return!0;let r=e.to-e.from;return r&&(r>2||/[^\s,.;:]/.test(t.sliceDoc(e.from,e.to)))||e.firstChild}function Tm(t,e,n){let r=xt(t).resolveInner(e.head),i=n?de.closedBy:de.openedBy;for(let l=e.head;;){let c=n?r.childAfter(l):r.childBefore(l);if(!c)break;r6(t,c,i)?r=c:l=n?c.to:c.from}let o=r.type.prop(i),s,a;return o&&(s=n?Rr(t,r.from,1):Rr(t,r.to,-1))&&s.matched?a=n?s.end.to:s.end.from:a=n?r.to:r.from,A.cursor(a,n?-1:1)}const i6=t=>Sr(t,e=>Tm(t.state,e,!jt(t))),o6=t=>Sr(t,e=>Tm(t.state,e,jt(t)));function qz(t,e){return Sr(t,n=>{if(!n.empty)return Cm(n,e);let r=t.moveVertically(n,e);return r.head!=n.head?r:t.moveToLineBoundary(n,e)})}const Jz=t=>qz(t,!1),Qz=t=>qz(t,!0);function _z(t){return Math.max(t.defaultLineHeight,Math.min(t.dom.clientHeight,innerHeight)-5)}function $z(t,e){let{state:n}=t,r=Il(n.selection,a=>a.empty?t.moveVertically(a,e,_z(t)):Cm(a,e));if(r.eq(n.selection))return!1;let i=t.coordsAtPos(n.selection.main.head),o=t.scrollDOM.getBoundingClientRect(),s;return i&&i.top>o.top&&i.bottom<o.bottom&&i.top-o.top<=t.scrollDOM.scrollHeight-t.scrollDOM.scrollTop-t.scrollDOM.clientHeight&&(s=U.scrollIntoView(r.main.head,{y:"start",yMargin:i.top-o.top})),t.dispatch(ni(n,r),{effects:s}),!0}const Qw=t=>$z(t,!1),Jv=t=>$z(t,!0);function Mo(t,e,n){let r=t.lineBlockAt(e.head),i=t.moveToLineBoundary(e,n);if(i.head==e.head&&i.head!=(n?r.to:r.from)&&(i=t.moveToLineBoundary(e,n,!1)),!n&&i.head==r.from&&r.length){let o=/^\s*/.exec(t.state.sliceDoc(r.from,Math.min(r.from+100,r.to)))[0].length;o&&e.head!=r.from+o&&(i=A.cursor(r.from+o))}return i}const s6=t=>Sr(t,e=>Mo(t,e,!0)),a6=t=>Sr(t,e=>Mo(t,e,!1)),l6=t=>Sr(t,e=>Mo(t,e,!jt(t))),c6=t=>Sr(t,e=>Mo(t,e,jt(t))),u6=t=>Sr(t,e=>A.cursor(t.lineBlockAt(e.head).from,1)),d6=t=>Sr(t,e=>A.cursor(t.lineBlockAt(e.head).to,-1));function f6(t,e,n){let r=!1,i=Il(t.selection,o=>{let s=Rr(t,o.head,-1)||Rr(t,o.head,1)||o.head>0&&Rr(t,o.head-1,1)||o.head<t.doc.length&&Rr(t,o.head+1,-1);if(!s||!s.end)return o;r=!0;let a=s.start.from==o.head?s.end.to:s.end.from;return n?A.range(o.anchor,a):A.cursor(a)});return r?(e(ni(t,i)),!0):!1}const h6=({state:t,dispatch:e})=>f6(t,e,!1);function rr(t,e){let n=Il(t.state.selection,r=>{let i=e(r);return A.range(r.anchor,i.head,i.goalColumn)});return n.eq(t.state.selection)?!1:(t.dispatch(ni(t.state,n)),!0)}function eV(t,e){return rr(t,n=>t.moveByChar(n,e))}const tV=t=>eV(t,!jt(t)),nV=t=>eV(t,jt(t));function rV(t,e){return rr(t,n=>t.moveByGroup(n,e))}const p6=t=>rV(t,!jt(t)),m6=t=>rV(t,jt(t)),g6=t=>rr(t,e=>Tm(t.state,e,!jt(t))),b6=t=>rr(t,e=>Tm(t.state,e,jt(t)));function iV(t,e){return rr(t,n=>t.moveVertically(n,e))}const oV=t=>iV(t,!1),sV=t=>iV(t,!0);function aV(t,e){return rr(t,n=>t.moveVertically(n,e,_z(t)))}const _w=t=>aV(t,!1),$w=t=>aV(t,!0),v6=t=>rr(t,e=>Mo(t,e,!0)),y6=t=>rr(t,e=>Mo(t,e,!1)),x6=t=>rr(t,e=>Mo(t,e,!jt(t))),S6=t=>rr(t,e=>Mo(t,e,jt(t))),k6=t=>rr(t,e=>A.cursor(t.lineBlockAt(e.head).from)),w6=t=>rr(t,e=>A.cursor(t.lineBlockAt(e.head).to)),eP=({state:t,dispatch:e})=>(e(ni(t,{anchor:0})),!0),tP=({state:t,dispatch:e})=>(e(ni(t,{anchor:t.doc.length})),!0),nP=({state:t,dispatch:e})=>(e(ni(t,{anchor:t.selection.main.anchor,head:0})),!0),rP=({state:t,dispatch:e})=>(e(ni(t,{anchor:t.selection.main.anchor,head:t.doc.length})),!0),P6=({state:t,dispatch:e})=>(e(t.update({selection:{anchor:0,head:t.doc.length},userEvent:"select"})),!0),O6=({state:t,dispatch:e})=>{let n=Vm(t).map(({from:r,to:i})=>A.range(r,Math.min(i+1,t.doc.length)));return e(t.update({selection:A.create(n),userEvent:"select"})),!0},C6=({state:t,dispatch:e})=>{let n=Il(t.selection,r=>{var i;let o=xt(t).resolveInner(r.head,1);for(;!(o.from<r.from&&o.to>=r.to||o.to>r.to&&o.from<=r.from||!(!((i=o.parent)===null||i===void 0)&&i.parent));)o=o.parent;return A.range(o.to,o.from)});return e(ni(t,n)),!0},T6=({state:t,dispatch:e})=>{let n=t.selection,r=null;return n.ranges.length>1?r=A.create([n.main]):n.main.empty||(r=A.create([A.cursor(n.main.head)])),r?(e(ni(t,r)),!0):!1};function zm(t,e){if(t.state.readOnly)return!1;let n="delete.selection",{state:r}=t,i=r.changeByRange(o=>{let{from:s,to:a}=o;if(s==a){let l=e(s);l<s?(n="delete.backward",l=df(t,l,!1)):l>s&&(n="delete.forward",l=df(t,l,!0)),s=Math.min(s,l),a=Math.max(a,l)}else s=df(t,s,!1),a=df(t,a,!0);return s==a?{range:o}:{changes:{from:s,to:a},range:A.cursor(s)}});return i.changes.empty?!1:(t.dispatch(r.update(i,{scrollIntoView:!0,userEvent:n,effects:n=="delete.selection"?U.announce.of(r.phrase("Selection deleted")):void 0})),!0)}function df(t,e,n){if(t instanceof U)for(let r of t.state.facet(U.atomicRanges).map(i=>i(t)))r.between(e,e,(i,o)=>{i<e&&o>e&&(e=n?o:i)});return e}const lV=(t,e)=>zm(t,n=>{let{state:r}=t,i=r.doc.lineAt(n),o,s;if(!e&&n>i.from&&n<i.from+200&&!/[^ \t]/.test(o=i.text.slice(0,n-i.from))){if(o[o.length-1]=="	")return n-1;let a=sd(o,r.tabSize),l=a%pp(r)||pp(r);for(let c=0;c<l&&o[o.length-1-c]==" ";c++)n--;s=n}else s=Ut(i.text,n-i.from,e,e)+i.from,s==n&&i.number!=(e?r.doc.lines:1)&&(s+=e?1:-1);return s}),Qv=t=>lV(t,!1),cV=t=>lV(t,!0),uV=(t,e)=>zm(t,n=>{let r=n,{state:i}=t,o=i.doc.lineAt(r),s=i.charCategorizer(r);for(let a=null;;){if(r==(e?o.to:o.from)){r==n&&o.number!=(e?i.doc.lines:1)&&(r+=e?1:-1);break}let l=Ut(o.text,r-o.from,e)+o.from,c=o.text.slice(Math.min(r,l)-o.from,Math.max(r,l)-o.from),u=s(c);if(a!=null&&u!=a)break;(c!=" "||r!=n)&&(a=u),r=l}return r}),dV=t=>uV(t,!1),z6=t=>uV(t,!0),fV=t=>zm(t,e=>{let n=t.lineBlockAt(e).to;return e<n?n:Math.min(t.state.doc.length,e+1)}),V6=t=>zm(t,e=>{let n=t.lineBlockAt(e).from;return e>n?n:Math.max(0,e-1)}),E6=({state:t,dispatch:e})=>{if(t.readOnly)return!1;let n=t.changeByRange(r=>({changes:{from:r.from,to:r.to,insert:Se.of(["",""])},range:A.cursor(r.from)}));return e(t.update(n,{scrollIntoView:!0,userEvent:"input"})),!0},N6=({state:t,dispatch:e})=>{if(t.readOnly)return!1;let n=t.changeByRange(r=>{if(!r.empty||r.from==0||r.from==t.doc.length)return{range:r};let i=r.from,o=t.doc.lineAt(i),s=i==o.from?i-1:Ut(o.text,i-o.from,!1)+o.from,a=i==o.to?i+1:Ut(o.text,i-o.from,!0)+o.from;return{changes:{from:s,to:a,insert:t.doc.slice(i,a).append(t.doc.slice(s,i))},range:A.cursor(a)}});return n.changes.empty?!1:(e(t.update(n,{scrollIntoView:!0,userEvent:"move.character"})),!0)};function Vm(t){let e=[],n=-1;for(let r of t.selection.ranges){let i=t.doc.lineAt(r.from),o=t.doc.lineAt(r.to);if(!r.empty&&r.to==o.from&&(o=t.doc.lineAt(r.to-1)),n>=i.number){let s=e[e.length-1];s.to=o.to,s.ranges.push(r)}else e.push({from:i.from,to:o.to,ranges:[r]});n=o.number+1}return e}function hV(t,e,n){if(t.readOnly)return!1;let r=[],i=[];for(let o of Vm(t)){if(n?o.to==t.doc.length:o.from==0)continue;let s=t.doc.lineAt(n?o.to+1:o.from-1),a=s.length+1;if(n){r.push({from:o.to,to:s.to},{from:o.from,insert:s.text+t.lineBreak});for(let l of o.ranges)i.push(A.range(Math.min(t.doc.length,l.anchor+a),Math.min(t.doc.length,l.head+a)))}else{r.push({from:s.from,to:o.from},{from:o.to,insert:t.lineBreak+s.text});for(let l of o.ranges)i.push(A.range(l.anchor-a,l.head-a))}}return r.length?(e(t.update({changes:r,scrollIntoView:!0,selection:A.create(i,t.selection.mainIndex),userEvent:"move.line"})),!0):!1}const I6=({state:t,dispatch:e})=>hV(t,e,!1),M6=({state:t,dispatch:e})=>hV(t,e,!0);function pV(t,e,n){if(t.readOnly)return!1;let r=[];for(let i of Vm(t))n?r.push({from:i.from,insert:t.doc.slice(i.from,i.to)+t.lineBreak}):r.push({from:i.to,insert:t.lineBreak+t.doc.slice(i.from,i.to)});return e(t.update({changes:r,scrollIntoView:!0,userEvent:"input.copyline"})),!0}const A6=({state:t,dispatch:e})=>pV(t,e,!1),L6=({state:t,dispatch:e})=>pV(t,e,!0),Z6=t=>{if(t.state.readOnly)return!1;let{state:e}=t,n=e.changes(Vm(e).map(({from:i,to:o})=>(i>0?i--:o<e.doc.length&&o++,{from:i,to:o}))),r=Il(e.selection,i=>t.moveVertically(i,!0)).map(n);return t.dispatch({changes:n,selection:r,scrollIntoView:!0,userEvent:"delete.line"}),!0};function X6(t,e){if(/\(\)|\[\]|\{\}/.test(t.sliceDoc(e-1,e+1)))return{from:e,to:e};let n=xt(t).resolveInner(e),r=n.childBefore(e),i=n.childAfter(e),o;return r&&i&&r.to<=e&&i.from>=e&&(o=r.type.prop(de.closedBy))&&o.indexOf(i.name)>-1&&t.doc.lineAt(r.to).from==t.doc.lineAt(i.from).from?{from:r.to,to:i.from}:null}const W6=mV(!1),R6=mV(!0);function mV(t){return({state:e,dispatch:n})=>{if(e.readOnly)return!1;let r=e.changeByRange(i=>{let{from:o,to:s}=i,a=e.doc.lineAt(o),l=!t&&o==s&&X6(e,o);t&&(o=s=(s<=a.to?a:e.doc.lineAt(s)).to);let c=new wm(e,{simulateBreak:o,simulateDoubleBreak:!!l}),u=Sx(c,o);for(u==null&&(u=/^\s*/.exec(e.doc.lineAt(o).text)[0].length);s<a.to&&/\s/.test(a.text[s-a.from]);)s++;l?{from:o,to:s}=l:o>a.from&&o<a.from+100&&!/\S/.test(a.text.slice(0,o))&&(o=a.from);let d=["",Nu(e,u)];return l&&d.push(Nu(e,c.lineIndent(a.from,-1))),{changes:{from:o,to:s,insert:Se.of(d)},range:A.cursor(o+1+d[1].length)}});return n(e.update(r,{scrollIntoView:!0,userEvent:"input"})),!0}}function Cx(t,e){let n=-1;return t.changeByRange(r=>{let i=[];for(let s=r.from;s<=r.to;){let a=t.doc.lineAt(s);a.number>n&&(r.empty||r.to>a.from)&&(e(a,i,r),n=a.number),s=a.to+1}let o=t.changes(i);return{changes:i,range:A.range(o.mapPos(r.anchor,1),o.mapPos(r.head,1))}})}const F6=({state:t,dispatch:e})=>{if(t.readOnly)return!1;let n=Object.create(null),r=new wm(t,{overrideIndentation:o=>{let s=n[o];return s==null?-1:s}}),i=Cx(t,(o,s,a)=>{let l=Sx(r,o.from);if(l==null)return;/\S/.test(o.text)||(l=0);let c=/^\s*/.exec(o.text)[0],u=Nu(t,l);(c!=u||a.from<o.from+c.length)&&(n[o.from]=l,s.push({from:o.from,to:o.from+c.length,insert:u}))});return i.changes.empty||e(t.update(i,{userEvent:"indent"})),!0},gV=({state:t,dispatch:e})=>t.readOnly?!1:(e(t.update(Cx(t,(n,r)=>{r.push({from:n.from,insert:t.facet(cd)})}),{userEvent:"input.indent"})),!0),bV=({state:t,dispatch:e})=>t.readOnly?!1:(e(t.update(Cx(t,(n,r)=>{let i=/^\s*/.exec(n.text)[0];if(!i)return;let o=sd(i,t.tabSize),s=0,a=Nu(t,Math.max(0,o-pp(t)));for(;s<i.length&&s<a.length&&i.charCodeAt(s)==a.charCodeAt(s);)s++;r.push({from:n.from+s,to:n.from+i.length,insert:a.slice(s)})}),{userEvent:"delete.dedent"})),!0),H6=[{key:"Ctrl-b",run:Yz,shift:tV,preventDefault:!0},{key:"Ctrl-f",run:Kz,shift:nV},{key:"Ctrl-p",run:Jz,shift:oV},{key:"Ctrl-n",run:Qz,shift:sV},{key:"Ctrl-a",run:u6,shift:k6},{key:"Ctrl-e",run:d6,shift:w6},{key:"Ctrl-d",run:cV},{key:"Ctrl-h",run:Qv},{key:"Ctrl-k",run:fV},{key:"Ctrl-Alt-h",run:dV},{key:"Ctrl-o",run:E6},{key:"Ctrl-t",run:N6},{key:"Ctrl-v",run:Jv}],D6=[{key:"ArrowLeft",run:Yz,shift:tV,preventDefault:!0},{key:"Mod-ArrowLeft",mac:"Alt-ArrowLeft",run:t6,shift:p6,preventDefault:!0},{mac:"Cmd-ArrowLeft",run:l6,shift:x6,preventDefault:!0},{key:"ArrowRight",run:Kz,shift:nV,preventDefault:!0},{key:"Mod-ArrowRight",mac:"Alt-ArrowRight",run:n6,shift:m6,preventDefault:!0},{mac:"Cmd-ArrowRight",run:c6,shift:S6,preventDefault:!0},{key:"ArrowUp",run:Jz,shift:oV,preventDefault:!0},{mac:"Cmd-ArrowUp",run:eP,shift:nP},{mac:"Ctrl-ArrowUp",run:Qw,shift:_w},{key:"ArrowDown",run:Qz,shift:sV,preventDefault:!0},{mac:"Cmd-ArrowDown",run:tP,shift:rP},{mac:"Ctrl-ArrowDown",run:Jv,shift:$w},{key:"PageUp",run:Qw,shift:_w},{key:"PageDown",run:Jv,shift:$w},{key:"Home",run:a6,shift:y6,preventDefault:!0},{key:"Mod-Home",run:eP,shift:nP},{key:"End",run:s6,shift:v6,preventDefault:!0},{key:"Mod-End",run:tP,shift:rP},{key:"Enter",run:W6},{key:"Mod-a",run:P6},{key:"Backspace",run:Qv,shift:Qv},{key:"Delete",run:cV},{key:"Mod-Backspace",mac:"Alt-Backspace",run:dV},{key:"Mod-Delete",mac:"Alt-Delete",run:z6},{mac:"Mod-Backspace",run:V6},{mac:"Mod-Delete",run:fV}].concat(H6.map(t=>({mac:t.key,run:t.run,shift:t.shift}))),vV=[{key:"Alt-ArrowLeft",mac:"Ctrl-ArrowLeft",run:i6,shift:g6},{key:"Alt-ArrowRight",mac:"Ctrl-ArrowRight",run:o6,shift:b6},{key:"Alt-ArrowUp",run:I6},{key:"Shift-Alt-ArrowUp",run:A6},{key:"Alt-ArrowDown",run:M6},{key:"Shift-Alt-ArrowDown",run:L6},{key:"Escape",run:T6},{key:"Mod-Enter",run:R6},{key:"Alt-l",mac:"Ctrl-l",run:O6},{key:"Mod-i",run:C6,preventDefault:!0},{key:"Mod-[",run:bV},{key:"Mod-]",run:gV},{key:"Mod-Alt-\\",run:F6},{key:"Shift-Mod-k",run:Z6},{key:"Shift-Mod-\\",run:h6},{key:"Mod-/",run:kc},{key:"Alt-A",run:RH}].concat(D6),G6={key:"Tab",run:gV,shift:bV};var ce=globalThis||self;function Ao(t,e){t=t.split(".");var n=ce;t[0]in n||typeof n.execScript>"u"||n.execScript("var "+t[0]);for(var r;t.length&&(r=t.shift());)t.length||e===void 0?n[r]&&n[r]!==Object.prototype[r]?n=n[r]:n=n[r]={}:n[r]=e}function ie(t,e){Z.prototype[t]=e}function j6(t){var e;if(typeof AudioWorkletGlobalScope<"u"){t=String(t).replace(/[=]+$/,""),t.length%4===1&&console.error("'atob' failed: The string to be decoded is not correctly encoded.");for(var n=0,r,i=0,o="";r=t.charAt(i++);~r&&(e=n%4?64*e+r:r,n++%4)&&(o+=String.fromCharCode(255&e>>(-2*n&6))))r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(r);e=o}else e=window.atob(t);return e}function B6(t){t=j6(t);for(var e=new Uint8Array(t.length),n=0;n<t.length;++n)e[n]=t.charCodeAt(n);return e.buffer}var w0=()=>B6("");const yV=Symbol("Comlink.proxy"),Y6=Symbol("Comlink.endpoint"),Ms=Symbol("Comlink.releaseProxy"),_v=Symbol("Comlink.thrown"),iP=t=>typeof t=="object"&&t!==null||typeof t=="function",xV=new Map([["proxy",{Ea:t=>iP(t)&&t[yV],La(t){const{port1:e,port2:n}=new MessageChannel;return SV(t,e),[n,[n]]},Fa:t=>(t.start(),Ml(t))}],["throw",{Ea:t=>iP(t)&&_v in t,La({value:t}){let e;return e=t instanceof Error?{Ia:!0,value:{message:t.message,name:t.name,stack:t.stack}}:{Ia:!1,value:t},[e,[]]},Fa(t){throw t.Ia?Object.assign(Error(t.value.message),t.value):t.value}}]]);function SV(t,e=self){e.addEventListener("message",function n(r){if(r&&r.data){var i=r.data.argumentList,{id:o,type:s,path:a}=Object.assign({path:[]},r.data);i=(i||[]).map($o);try{const c=a.slice(0,-1).reduce((d,f)=>d[f],t),u=a.reduce((d,f)=>d[f],t);switch(s){case"GET":var l=u;break;case"SET":c[a.slice(-1)[0]]=$o(r.data.value),l=!0;break;case"APPLY":l=u.apply(c,i);break;case"CONSTRUCT":l=Object.assign(new u(...i),{[yV]:!0});break;case"ENDPOINT":const{port1:d,port2:f}=new MessageChannel;SV(t,f),l=Al(d,[d]);break;case"RELEASE":l=void 0;break;default:return}}catch(c){l={value:c,[_v]:0}}Promise.resolve(l).catch(c=>({value:c,[_v]:0})).then(c=>{const[u,d]=Tx(c);c={...u},c.id=o,e.postMessage(c,d),s==="RELEASE"&&(e.removeEventListener("message",n),kV(e))})}}),e.start&&e.start()}function kV(t){t.constructor.name==="MessagePort"&&t.close()}function Ml(t){return function e(n,r=[],i=function(){}){let o=!1;const s=new Proxy(i,{get(a,l){return ff(o),l===Ms?()=>ia(n,{type:"RELEASE",path:r.map(c=>c.toString())}).then(()=>{kV(n),o=!0}):l==="then"?r.length===0?{then:()=>s}:(a=ia(n,{type:"GET",path:r.map(c=>c.toString())}).then($o),a.then.bind(a)):e(n,[...r,l])},set(a,l,c){ff(o);const[u,d]=Tx(c);return ia(n,{type:"SET",path:[...r,l].map(f=>f.toString()),value:u},d).then($o)},apply(a,l,c){if(ff(o),a=r[r.length-1],a===Y6)return ia(n,{type:"ENDPOINT"}).then($o);if(a==="bind")return e(n,r.slice(0,-1));const[u,d]=oP(c);return c={type:"APPLY"},c.path=r.map(f=>f.toString()),c.argumentList=u,ia(n,c,d).then($o)},construct(a,l){ff(o);const[c,u]=oP(l);return a={type:"CONSTRUCT"},a.path=r.map(d=>d.toString()),a.argumentList=c,ia(n,a,u).then($o)}});return s}(t,[],void 0)}function ff(t){if(t)throw Error("Proxy has been released and is not useable")}function oP(t){t=t.map(Tx);const e=(n=t.map(r=>r[1]),Array.prototype.concat.apply([],n));return[t.map(r=>r[0]),e];var n}const wV=new WeakMap;function Al(t,e){return wV.set(t,e),t}function K6(){var t=cs,e=self;return{postMessage:(n,r)=>t.postMessage(n,"*",r),addEventListener:e.addEventListener.bind(e),removeEventListener:e.removeEventListener.bind(e)}}function Tx(t){for(const[e,n]of xV)if(n.Ea(t)){const[r,i]=n.La(t);return[{type:"HANDLER",name:e,value:r},i]}return[{type:"RAW",value:t},wV.get(t)||[]]}function $o(t){switch(t.type){case"HANDLER":return xV.get(t.name).Fa(t.value);case"RAW":return t.value}}function ia(t,e,n){return new Promise(r=>{const i=Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-");t.addEventListener("message",function o(s){s.data&&s.data.id&&s.data.id===i&&(t.removeEventListener("message",o),r(s.data))}),t.start&&t.start(),e.id=i,t.postMessage(e,n)})}let li,Xt,es,ys,Ri,gl,PV,da;li=()=>()=>{};Xt=()=>()=>{};es=()=>()=>{};ys=()=>()=>{};Ri=()=>()=>{};gl=()=>()=>{};PV=()=>{};da=()=>()=>{};const OV=t=>()=>t.exports.csoundCreateWasi();OV.toString=()=>"create = async () => undefined;";const CV=t=>e=>t.exports.csoundDestroy(e);CV.toString=()=>"destroy = async () => undefined;";const TV=t=>()=>t.exports.csoundGetAPIVersion();TV.toString=()=>"getAPIVersion = async () => Number;";const zV=t=>()=>t.exports.csoundGetVersion();zV.toString=()=>"getVersion = async () => Number;";const VV=t=>(e,n)=>t.exports.csoundInitialize(n);VV.toString=()=>"initialize = async () => Number;";const kr=new TextDecoder("utf8"),dd=new TextEncoder("utf8"),Ll=t=>{const e=t.indexOf("\0");return-1<e?t.substr(0,e):t},At=(t,e)=>{t.exports.freeStringMem(e)},en=(t,e)=>{if(typeof e!="string")console.error("Expected string but got",typeof e);else{e=dd.encode(e);var n=t.exports.allocStringMem(e.length);return new Uint8Array(t.H.memory.buffer,n,e.length+1).set(e),n}},EV=t=>(e,n)=>(n=en(t,n),e=t.exports.csoundParseOrc(e,n),At(t,n),e);EV.toString=()=>"parseOrc = async (orchestra) => Object;";const NV=t=>(e,n)=>t.exports.csoundCompileTree(e,n);NV.toString=()=>"compileTree = async (tree) => Number;";const IV=t=>(e,n)=>(n=en(t,n),e=t.exports.csoundCompileOrc(e,n),At(t,n),e);IV.toString=()=>"compileOrc = async (orchestra) => Number;";const MV=t=>(e,n)=>(n=en(t,n),e=t.exports.csoundEvalCode(e,n),At(t,n),e);MV.toString=()=>"csoundEvalCode = async (orchestra) => Number;";const AV=t=>e=>t.exports.csoundStartWasi(e);AV.toString=()=>"start = async () => Number;";const LV=t=>(e,n,r=1)=>(n=en(t,n),e=t.exports.csoundCompileCSD(e,n,r,0),At(t,n),e);LV.toString=()=>"compileCSD = async (csoundDocument) => Number;";const ZV=t=>e=>t.exports.csoundPerform(e);ZV.toString=()=>"perform = async () => Number;";const XV=t=>e=>t.exports.csoundPerformKsmpsWasi(e);XV.toString=()=>"performKsmps = async (csound) => Number;";const WV=t=>e=>t.exports.csoundPerformBuffer(e);WV.toString=()=>"performBuffer = async (csound) => Number;";const RV=t=>e=>t.exports.csoundStop(e);RV.toString=()=>"stop = async () => undefined;";const FV=t=>e=>t.exports.csoundCleanup(e);FV.toString=()=>"cleanup = async () => Number;";const HV=t=>e=>t.exports.csoundResetWasi(e);HV.toString=()=>"reset = async () => Number;";const $v=[["debug_mode","int"],["buffer_frames","int"],["hardware_buffer_frames","int"],["displays","int"],["ascii_graphs","int"],["postscript_graphs","int"],["message_level","int"],["tempo","int"],["ring_bell","int"],["use_cscore","int"],["terminate_on_midi","int"],["heartbeat","int"],["defer_gen01_load","int"],["midi_key","int"],["midi_key_cps","int"],["midi_key_oct","int"],["midi_key_pch","int"],["midi_velocity","int"],["midi_velocity_amp","int"],["no_default_paths","int"],["number_of_threads","int"],["syntax_check_only","int"],["csd_line_counts","int"],["compute_weights","int"],["realtime_mode","int"],["sample_accurate","int"],["sample_rate_override","MYFLT"],["control_rate_override","MYFLT"],["nchnls_override","int"],["nchnls_i_override","int"],["e0dbfs_override","MYFLT"],["daemon","int"],["ksmps_override","int"],["FFT_library","int"]],DV=[["device_name","char",64],["interface_name","char",64],["device_id","char",64],["midi_module","char",64],["isOutput","int"]],GV=[["type","int"],["lexme","ptr"],["value","int"],["fvalue","double"],["optype","ptr"],["next","ptr"]],jV=[["type","int"],["value","ptr"],["rate","int"],["len","int"],["line","int"],["locn","uint64"],["left","ptr"],["right","ptr"],["next","ptr"],["markup","ptr"]],vp={Vb:4,ac:8,Mb:8,char:1,Rb:8,Yb:4,bc:8},Zl=t=>t?t.reduce((e,[,n])=>vp[n]?vp[n]+e:Zl({Ob:jV,Nb:GV}[n])+e,0):0;Zl(jV);Zl(GV);Zl($v);const P0=Zl(DV),BV=(t,e)=>([t]=t.reduce(([n,r],[i,o,...s])=>(s=o==="char"?vp[o]*s[0]:vp[o],o=o==="char"?Ll(kr.decode(e.subarray(r,s)))||"":e[r],n[i]=o,[n,r+s]),[{},0]),t),YV=t=>e=>t.exports.csoundGetSr(e);YV.toString=()=>"getSr = async () => Number;";const KV=t=>e=>t.exports.csoundGetKr(e);KV.toString=()=>"getKr = async () => Number;";const UV=t=>e=>t.exports.csoundGetKsmps(e);UV.toString=()=>"getKsmps = async () => Number;";const qV=t=>e=>t.exports.csoundGetNchnls(e);qV.toString=()=>"getNchnls = async () => Number;";const JV=t=>e=>t.exports.csoundGetNchnlsInput(e);JV.toString=()=>"getNchnlsInput = async () => Number;";const QV=t=>e=>t.exports.csoundGet0dBFS(e);QV.toString=()=>"get0dBFS = async () => Number;";const _V=t=>e=>t.exports.csoundGetA4(e);_V.toString=()=>"getA4 = async () => Number;";const $V=t=>e=>t.exports.csoundGetCurrentTimeSamples(e);$V.toString=()=>"getCurrentTimeSamples = async () => Number;";const eE=t=>e=>t.exports.csoundGetSizeOfMYFLT(e);eE.toString=()=>"getSizeOfMYFLT = async () => Number;";const tE=t=>(e,n)=>(n=en(t,n),e=t.exports.csoundSetOption(e,n),At(t,n),e);tE.toString=()=>"setOption = async (option) => Number;";const nE=t=>(e,n)=>{t.exports.csoundSetParams(e,n)};nE.toString=()=>"setParams = async (csoundParams) => undefined;";const rE=t=>e=>{var n=t.H.memory.buffer;const r=Zl($v),i=t.exports.allocCsoundParamsStruct();return n=new Uint8Array(n,i,r),t.exports.csoundGetParams(e,i),e=BV($v,n),t.exports.freeCsoundParams(i),e};rE.toString=()=>"getParams = async () => CSOUND_PARAMS;";const iE=t=>e=>t.exports.csoundGetDebug(e);iE.toString=()=>"getDebug = async () => Number;";const oE=t=>(e,n)=>{t.exports.csoundSetDebug(e,n)};oE.toString=()=>"setDebug = async (number) => undefined;";const sE=t=>e=>t.exports.csoundGetInputBufferSize(e);sE.toString=()=>"getInputBufferSize = async () => Number;";const aE=t=>e=>t.exports.csoundGetOutputBufferSize(e);aE.toString=()=>"getOutputBufferSize = async () => Number;";const lE=t=>e=>t.exports.csoundGetInputBuffer(e);lE.toString=()=>"getInputBuffer = async () => Number;";const cE=t=>e=>t.exports.csoundGetOutputBuffer(e);cE.toString=()=>"getOutputBuffer = async () => Number;";const uE=t=>e=>t.exports.csoundGetSpin(e);uE.toString=()=>"getSpin = async (csound) => Number;";const dE=t=>e=>t.exports.csoundGetSpout(e);dE.toString=()=>"getSpout = async () => Number;";const Hr=()=>{if(window.webkitAudioContext!==void 0)return window.webkitAudioContext;if(window.AudioContext!==void 0)return window.AudioContext},Iu=t=>{let e=t.replace(/^csound/i,"");return t==="csoundPushMidiMessage"&&(e="midiMessage"),e.charAt(0).toLowerCase()+e.slice(1)},Fc=new Set(["realtimePerformanceStarted","realtimePerformancePaused","realtimePerformanceResumed","renderStarted"]),io=(t,e,n,r)=>async(...i)=>{if(!r||!Fc.has(r)){const o={};0<Object.values(o).length&&await t.callUncloned("syncWorkerFs",[e,o])}return await t.callUncloned(n,[e,...i])},sP=(t,e)=>async(...n)=>await e.apply({},[t,...n]),Em=async t=>await Promise.all(t.map(async e=>(await fetch(e)).arrayBuffer())),U6=t=>{const e=[];for(let n=0;n<t;n++)e.push(n);return e},fE=t=>(e,n)=>{const r=t.H.memory.buffer,i=t.exports.csoundGetMIDIDevList(e,void 0,n?1:0);if(i===0)return[];const o=t.exports.allocCsMidiDeviceStruct(i);t.exports.csoundGetMIDIDevList(e,o,n?1:0);const s=new Uint8Array(r,o,P0*i);return e=U6(i).map(a=>BV(DV,s.subarray(a*P0,P0))),t.exports.freeCsMidiDeviceStruct(o),e};fE.toString=()=>"getMIDIDevList = async (isOutput) => Object;";const hE=t=>e=>{var n=t.H.memory.buffer;return e=t.exports.getRtMidiName(e),n=new Uint8Array(n,e,128),Ll(kr.decode(n))||""};hE.toString=()=>"getRtMidiName = async () => String;";const pE=t=>(e,n,r,i)=>{t.exports.pushMidiMessage(e,n,r,i)};pE.toString=()=>"midiMessage = async (status, data1, data2) => undefined;";const mE=t=>(e,n)=>(n=en(t,n),e=t.exports.csoundInputMessage(e,n),At(t,n),e);mE.toString=()=>"inputMessage = async (scoreEvent) => Number;";const gE=t=>(e,n)=>(n=en(t,n),e=t.exports.csoundInputMessageAsync(e,n),At(t,n),e);gE.toString=()=>"inputMessageAsync = async (scoreEvent) => Number;";const bE=t=>(e,n)=>(n=en(t,n),e=t.exports.csoundGetControlChannelWasi(e,n),At(t,n),e);bE.toString=()=>"getControlChannel = async (channelName) => Number;";const vE=t=>(e,n,r)=>{n=en(t,n),t.exports.csoundSetControlChannel(e,n,r),At(t,n)};vE.toString=()=>"setControlChannel = async (channelName, value) => void;";const yE=t=>(e,n)=>{n=en(t,n),e=t.exports.csoundGetStringChannelWasi(e,n);var r=new Uint8Array(t.H.memory.buffer,e);return r=kr.decode(r),r=Ll(r),At(t,n),At(t,e),r};yE.toString=()=>"getStringChannel = async (channelName) => String;";const xE=t=>(e,n,r)=>{n=en(t,n),r=en(t,r),t.exports.csoundSetStringChannel(e,n,r),At(t,n),At(t,r)};xE.toString=()=>"setStringChannel = async (channelName, value) => void;";const SE=t=>e=>{var n=t.H.memory.buffer;return e=t.exports.csoundGetOutputName(e),n=new Uint8Array(n,e,64),Ll(kr.decode(n))||""};SE.toString=()=>"getOutputName = async () => String;";const kE=t=>e=>{var n=t.H.memory.buffer;return e=t.exports.csoundGetInputName(e),n=new Uint8Array(n,e,64),Ll(kr.decode(n))||""};kE.toString=()=>"getInputName = async (csound) => String;";const wE=t=>(e,n,r)=>(n=en(t,n),r=en(t,r),e=t.exports.csoundAppendEnv(e,n,r),At(t,n),At(t,r),e);wE.toString=()=>"appendEnv = async (csound, variable, value) => Number;";const PE=t=>e=>t.exports.csoundIsScorePending(e);PE.toString=()=>"isScorePending = async () => Number;";const OE=t=>(e,n)=>t.exports.csoundSetScorePending(e,n);OE.toString=()=>"setScorePending = async (pending) => Number;";const CE=t=>(e,n)=>(n=en(t,n),e=t.exports.csoundReadScore(e,n),At(t,n),e);CE.toString=()=>"readScore = async (score) => Number;";const TE=t=>e=>t.exports.csoundGetScoreTime(e);TE.toString=()=>"getScoreTime = async () => Number;";const zE=t=>e=>t.exports.csoundGetScoreOffsetSeconds(e);zE.toString=()=>"getScoreOffsetSeconds = async () => Number;";const VE=t=>(e,n)=>t.exports.csoundSetScoreOffsetSeconds(e,n);VE.toString=()=>"setScoreOffsetSeconds = async () => Number;";const EE=t=>e=>t.exports.csoundRewindScore(e);EE.toString=()=>"rewindScore = async () => undefined;";const NE=t=>(e,n)=>t.exports.csoundTableLength(e,n);NE.toString=()=>"tableLength = async (tableNum) => Number;";const IE=t=>(e,n,r)=>t.exports.csoundTableGet(e,n,r);IE.toString=()=>"tableGet = async (tableNum, tableIndex) => Number;";const ME=t=>(e,n,r,i)=>t.exports.csoundTableSet(e,n,r,i);ME.toString=()=>"tableSet = async (tableNum, tableIndex, value) => undefined;";const AE=t=>(e,n,r)=>{const i=t.exports.allocFloatArray(r.length);new Float64Array(t.H.memory.buffer,i,r.length).set(r),t.exports.csoundTableCopyIn(e,n,i),t.exports.freeFloatArrayMem(i)};AE.toString=()=>"tableCopyIn = async (tableNum, float64Array) => undefined;";const Mu=t=>(e,n)=>{var r=t.exports.csoundTableLength(e,n);if(0<r){const i=t.exports.allocFloatArray(r);for(t.exports.csoundTableCopyOut(e,n,i),e=new Float64Array(t.H.memory.buffer,i,r),n=new Float64Array(e.length),r=0;r<e.length;r++)n[r]=e[r];return t.exports.freeFloatArrayMem(i),n}};Mu.toString=()=>"tableCopyOut = async (tableNum) => ?Float64Array;";Mu.toString=Mu.toString;const LE=t=>(e,n)=>{const r=t.exports.allocFloatArray(1024);return t.exports.csoundGetTableArgs(e,r,n),e=new Float64Array(t.H.memory.buffer,r,1024),t.exports.freeFloatArrayMem(r),e};LE.toString=()=>"getTableArgs = async (tableNum) => ?Float64Array;";const ZE=t=>(e,n)=>t.exports.csoundIsNamedGEN(e,n);ZE.toString=()=>"isNamedGEN = async (tableNum) => number;";const XE=t=>(e,n)=>{const r=t.exports.csoundIsNamedGEN(e,n);if(0<r){const i=t.exports.allocStringMem(r);return t.exports.csoundGetNamedGEN(e,i,n,r),e=new Uint8Array(t.H.memory.buffer,i,r),kr.decode(e)}};XE.toString=()=>"getNamedGEN = async (tableNum) => ?string;";function zx(t){return(e,n,r)=>{e=typeof r=="string"?dd.encode(r):r,t.H.writeFile(n,e)}}Ao("writeFile$$module$src$filesystem$worker_fs",zx);zx.toString=()=>"async (path, data) => void";function Vx(t){return(e,n,r)=>{e=typeof r=="string"?dd.encode(r):r,t.H.appendFile(n,e)}}Ao("appendFile$$module$src$filesystem$worker_fs",Vx);Vx.toString=()=>"async (path, data) => void";function Ex(t){return(e,n)=>t.H.readFile(n)}Ao("readFile$$module$src$filesystem$worker_fs",Ex);Ex.toString=()=>"async (path) => ?Uint8Array";function Nx(t){return(e,n)=>t.H.unlink(n)}Ao("unlink$$module$src$filesystem$worker_fs",Nx);Nx.toString=()=>"async (path) => void";function Ix(t){return(e,n)=>t.H.readdir(n)}Ao("readdir$$module$src$filesystem$worker_fs",Ix);Ix.toString=()=>"async (path) => string[]";function Mx(t){return(e,n)=>t.H.mkdir(n)}Ao("mkdir$$module$src$filesystem$worker_fs",Mx);Mx.toString=()=>"async (path) => void";const Lo={};Lo.writeFile=zx;Lo.appendFile=Vx;Lo.readFile=Ex;Lo.unlink=Nx;Lo.readdir=Ix;Lo.mkdir=Mx;const As={csoundCreate:OV,csoundDestroy:CV,csoundGetAPIVersion:TV,csoundGetVersion:zV,csoundInitialize:VV,csoundParseOrc:EV,csoundCompileTree:NV,csoundCompileOrc:IV,csoundEvalCode:MV,csoundStart:AV,csoundCompileCSD:LV,csoundPerform:ZV,csoundPerformKsmps:XV,csoundPerformBuffer:WV,csoundStop:RV,csoundCleanup:FV,csoundReset:HV,csoundGetSr:YV,csoundGetKr:KV,csoundGetKsmps:UV,csoundGetNchnls:qV,csoundGetNchnlsInput:JV,csoundGet0dBFS:QV,csoundGetA4:_V,csoundGetCurrentTimeSamples:$V,csoundGetSizeOfMYFLT:eE,csoundSetOption:tE,csoundSetParams:nE,csoundGetParams:rE,csoundGetDebug:iE,csoundSetDebug:oE,csoundGetInputBufferSize:sE,csoundGetOutputBufferSize:aE,csoundGetInputBuffer:lE,csoundGetOutputBuffer:cE,csoundGetSpin:uE,csoundGetSpout:dE,csoundGetMIDIDevList:fE,csoundSetMidiCallbacks:t=>e=>{t.exports.csoundSetMidiCallbacks(e)},csoundGetRtMidiName:hE,csoundGetMidiOutFileName:t=>e=>{var n=t.H.memory.buffer;return e=t.exports.getMidiOutFileName(e),n=new Uint8Array(n,e,128),e&&0<e.length&&At(t,e),Ll(kr.decode(n))||""},csoundPushMidiMessage:pE,_isRequestingRtMidiInput:t=>e=>t.exports.isRequestingRtMidiInput(e),csoundInputMessage:mE,csoundInputMessageAsync:gE,csoundGetControlChannel:bE,csoundSetControlChannel:vE,csoundGetStringChannel:yE,csoundSetStringChannel:xE,csoundGetInputName:kE,csoundGetOutputName:SE,csoundAppendEnv:wE,csoundShouldDaemonize:t=>e=>t.exports.csoundShouldDaemonize(e),csoundIsScorePending:PE,csoundSetScorePending:OE,csoundReadScore:CE,csoundGetScoreTime:TE,csoundGetScoreOffsetSeconds:zE,csoundSetScoreOffsetSeconds:VE,csoundRewindScore:EE,csoundTableLength:NE,csoundTableGet:IE,csoundTableSet:ME,csoundTableCopyIn:AE,csoundTableCopyOut:Mu,csoundGetTable:Mu,csoundGetTableArgs:LE,csoundIsNamedGEN:ZE,csoundGetNamedGEN:XE,fs:Lo};function q6(t){const{fs:e,...n}=As;return{...Object.keys(n).reduce((r,i)=>(r[i]=n[i](t),r),{}),...Object.keys(e).reduce((r,i)=>(r[i]=e[i](t),r),{})}}const Ls=t=>e=>{e.data.log?t&&t.m&&t.m.Oa?t.m.Oa(e.data.log):console.log(typeof e.data.log=="object"&&typeof e.data.log.log=="string"?e.data.log.log:e.data.log):e.data.playStateChange&&t&&t.onPlayStateChange&&t.onPlayStateChange(e.data.playStateChange)},hf=()=>{const{port1:t,port2:e}=new MessageChannel;return[t,e]},pf=([t,e])=>{if(t.close!==void 0)try{t.close()}catch{}if(e.close!==void 0)try{e.close()}catch{}};class Ax{constructor(){const{port1:e,port2:n}=new MessageChannel;this.Y=e,this.g=n;const{port1:r,port2:i}=new MessageChannel;this.ca=r,this.xa=i;const{port1:o,port2:s}=new MessageChannel;this.s=o,this.ka=s;const{port1:a,port2:l}=new MessageChannel;this.o=a,this.ja=l;const{port1:c,port2:u}=new MessageChannel;this.B=c,this.h=u;const{port1:d,port2:f}=new MessageChannel;this.L=d,this.ta=f;const{port1:h,port2:p}=new MessageChannel;this.J=h,this.wa=p,this.C=this.C.bind(this)}C(){pf([this.o,this.ja]),[this.o,this.ja]=hf(),pf([this.ca,this.xa]),[this.ca,this.xa]=hf(),pf([this.s,this.ka]),[this.s,this.ka]=hf(),pf([this.J,this.wa]),[this.J,this.wa]=hf()}}function ls(t){for(;0<t.length;)t.pop()}function hi(t,e){return t.h!==void 0?(console.error(`cannot ${e} while starting, did you forget to 'await'?`),!0):t.s!==void 0?(console.error(`cannot ${e} while stopping, did you forget to 'await'?`),!0):t.B!==void 0?(console.error(`cannot ${e} while pausing, did you forget to 'await'?`),!0):t.C!==void 0?(console.error(`cannot ${e} while resuming, did you forget to 'await'?`),!0):!1}async function WE(t){let e;return(e=t.B)!=null?e:-1}async function J6(t){let e;return(e=t.C)!=null?e:-1}class Nm{constructor(){this.g=[],this.L=this.C=this.J=this.B=this.R=this.s=this.O=this.h=void 0,this.la=this.la.bind(this),this.U=this.U.bind(this),this.X=this.X.bind(this),this.o=this.o.bind(this),this.ia=this.ia.bind(this),this.ra=this.ra.bind(this),this.ya=this.ya.bind(this),this.sa=this.sa.bind(this),this.ha=this.ha.bind(this),this.na=this.na.bind(this),this.T=this.T.bind(this),this.V=this.V.bind(this)}T(){return this.h!==void 0}V(){return this.s!==void 0}async ha(){return this.h?await this.h:-1}async na(){let e;return(e=this.s)!=null?e:-1}la(){this.h||(this.h=new Promise(e=>{this.O=e;const n=setTimeout(()=>{this.g=this.g.filter(r=>r!==n),this.h&&(console.warn("start promise timed out"),this.O(),delete this.O,this.h&&delete this.h)},2e3);this.g.push(n)}))}U(){try{this.g.forEach(clearTimeout),ls(this.g)}catch(e){console.error(e)}this.O&&(this.O(),delete this.O),this.h&&delete this.h}X(){this.s||(this.s=new Promise(e=>{this.R=e;const n=setTimeout(()=>{this.g=this.g.filter(r=>r!==n),this.s&&(console.warn("stop promise timed out"),this.R(),delete this.R,this.s&&delete this.s)},1e4);this.g.push(n)}))}o(){try{this.g.forEach(clearTimeout),ls(this.g)}catch(e){console.error(e)}this.R&&(this.R(),delete this.R),this.s&&delete this.s}ia(){this.B||(this.B=new Promise(e=>{this.J=e;const n=setTimeout(()=>{this.g=this.g.filter(r=>r!==n),this.B&&(console.warn("pause promise timed out"),this.J(),delete this.J,this.B&&delete this.B)},2e3);this.g.push(n)}))}ra(){try{this.g.forEach(clearTimeout),ls(this.g)}catch(e){console.error(e)}this.J&&(this.J(),delete this.J),this.B&&delete this.B}ya(){this.C||(this.C=new Promise(e=>{this.L=e;const n=setTimeout(()=>{this.g=this.g.filter(r=>r!==n),this.C&&(console.warn("resume promise timed out"),this.L(),delete this.L,this.C&&delete this.C)},2e3);this.g.push(n)}))}sa(){try{this.g.forEach(clearTimeout),ls(this.g)}catch(e){console.error(e)}this.L&&(this.L(),delete this.L),this.C&&delete this.C}}var Q6=function t(e,n,r){function i(a,l){if(!n[a]){if(!e[a]){var c=typeof require=="function"&&require;if(!l&&c)return c(a,!0);if(o)return o(a,!0);throw l=Error("Cannot find module '"+a+"'"),l.code="MODULE_NOT_FOUND",l}l=n[a]={exports:{}},e[a][0].call(l.exports,function(u){return i(e[a][1][u]||u)},l,l.exports,t,e,n,r)}return n[a].exports}for(var o=typeof require=="function"&&require,s=0;s<r.length;s++)i(r[s]);return i}({1:[function(t,e){function n(){}function r(c,u,d){this.K=c,this.context=u,this.once=d||!1}function i(c,u,d,f,h){if(typeof d!="function")throw new TypeError("The listener must be a function");return d=new r(d,f||c,h),u=l?l+u:u,c.N[u]?c.N[u].K?c.N[u]=[c.N[u],d]:c.N[u].push(d):(c.N[u]=d,c.ua++),c}function o(c,u){--c.ua==0?c.N=new n:delete c.N[u]}function s(){this.N=new n,this.ua=0}var a=Object.prototype.hasOwnProperty,l="~";Object.create&&(n.prototype=Object.create(null),new n().__proto__||(l=!1)),s.prototype.eventNames=function(){var c,u,d=[];if(this.ua===0)return d;for(u in c=this.N)a.call(c,u)&&d.push(l?u.slice(1):u);return Object.getOwnPropertySymbols?d.concat(Object.getOwnPropertySymbols(c)):d},s.prototype.listeners=function(c){if(c=this.N[l?l+c:c],!c)return[];if(c.K)return[c.K];for(var u=0,d=c.length,f=Array(d);u<d;u++)f[u]=c[u].K;return f},s.prototype.listenerCount=function(c){return(c=this.N[l?l+c:c])?c.K?1:c.length:0},s.prototype.S=function(c,u,d,f,h,p){var m=l?l+c:c;if(this.N[m]){var v;m=this.N[m];var g=arguments.length;if(m.K){switch(m.once&&this.removeListener(c,m.K,void 0,!0),g){case 1:m.K.call(m.context);return;case 2:m.K.call(m.context,u);return;case 3:m.K.call(m.context,u,d);return;case 4:m.K.call(m.context,u,d,f);return;case 5:m.K.call(m.context,u,d,f,h);return;case 6:m.K.call(m.context,u,d,f,h,p);return}for(x=1,v=Array(g-1);x<g;x++)v[x-1]=arguments[x];m.K.apply(m.context,v)}else for(var b,y=m.length,x=0;x<y;x++)switch(m[x].once&&this.removeListener(c,m[x].K,void 0,!0),g){case 1:m[x].K.call(m[x].context);break;case 2:m[x].K.call(m[x].context,u);break;case 3:m[x].K.call(m[x].context,u,d);break;case 4:m[x].K.call(m[x].context,u,d,f);break;default:if(!v)for(b=1,v=Array(g-1);b<g;b++)v[b-1]=arguments[b];m[x].K.apply(m[x].context,v)}}},s.prototype.on=function(c,u,d){return i(this,c,u,d,!1)},s.prototype.once=function(c,u,d){return i(this,c,u,d,!0)},s.prototype.removeListener=function(c,u,d,f){if(c=l?l+c:c,!this.N[c])return this;if(!u)return o(this,c),this;var h=this.N[c];if(h.K)h.K!==u||f&&!h.once||d&&h.context!==d||o(this,c);else{for(var p=0,m=[],v=h.length;p<v;p++)(h[p].K!==u||f&&!h[p].once||d&&h[p].context!==d)&&m.push(h[p]);m.length?this.N[c]=m.length===1?m[0]:m:o(this,c)}return this},s.prototype.removeAllListeners=function(c){var u;return c?(u=l?l+c:c,this.N[u]&&o(this,u)):(this.N=new n,this.ua=0),this},s.prototype.off=s.prototype.removeListener,s.prototype.addListener=s.prototype.on,e!==void 0&&(e.exports=s)},{}]},{},[1])(1);class Im{constructor(){this.g=new Q6,this.h=void 0,this.o=this.o.bind(this),this.ma=this.ma.bind(this),this.fa=this.fa.bind(this),this.ga=this.ga.bind(this),this.s=this.s.bind(this),this.C=this.C.bind(this),this.B=this.B.bind(this),this.ea=this.ea.bind(this),this.I=this.I.bind(this)}I(){this.g.removeAllListeners("play pause stop realtimePerformanceStarted realtimePerformancePaused realtimePerformanceResumed realtimePerformanceEnded renderStarted renderEnded onAudioNodeCreated message".split(" "))}ma(){this.g.S("realtimePerformanceStarted"),this.h!=="play"&&(this.g.S("play"),this.h="play")}fa(){this.g.S("realtimePerformancePaused"),this.h!=="pause"&&(this.g.S("pause"),this.h="pause")}ga(){this.g.S("realtimePerformanceResumed"),this.h!=="play"&&(this.g.S("play"),this.h="play")}s(){this.g.S("realtimePerformanceEnded"),this.h!=="stop"&&(this.g.S("stop"),this.h="stop")}C(){this.g.S("renderStarted"),this.h!=="stop"&&(this.g.S("stop"),this.h="stop")}B(){this.g.S("renderEnded"),this.h!=="stop"&&(this.g.S("stop"),this.h="stop")}ea(e){this.g.S("onAudioNodeCreated",e)}Oa({log:e}){this.g.S("message",e)}o(e){return e.eventNames=this.g.eventNames.bind(this.g),e.listenerCount=this.g.listenerCount.bind(this.g),e.listeners=this.g.listeners.bind(this.g),e.off=this.g.off.bind(this.g),e.on=this.g.on.bind(this.g),e.addListener=this.g.on.bind(this.g),e.once=this.g.once.bind(this.g),e.removeAllListeners=this.g.removeAllListeners.bind(this.g),e.removeListener=this.g.removeListener.bind(this.g),e}}async function _6(t){if(t.D){t.u.sampleRate=await t.j.getSr(t.D);var e=await t.j.getInputName(t.D);t.u.ba=e.includes("adc"),t.u.pa=await t.j._isRequestingRtMidiInput(t.D),t.u.da=await t.j.getNchnls(t.D),t.u.aa=t.u.ba?1:0,es()()}else console.error("fatal error: csound instance not found?")}class $6{constructor({audioContext:e,u:n,M:r,inputChannelCount:i,outputChannelCount:o}){this.l=new Ax,this.i=new Nm,this.m=new Im,n.l=this.l,n.A=this,n.m=this.m,this.u=n,(this.M=r)&&(this.sampleRate=e.sampleRate),i&&(this.inputChannelCount=i),o&&(this.outputChannelCount=o),this.j={},this.g=this.h=this.v=this.D=void 0,this.onPlayStateChange=this.onPlayStateChange.bind(this)}async I(){this.g&&(this.g.terminate(),delete this.g),this.u&&this.u.I&&(await this.u.I(),delete this.u.I),this.h&&(this.h[Ms](),delete this.h),this.m&&this.m.I()}get L(){return this.j}$({data:e}){this.l.h.postMessage&&this.l.h.postMessage(e)}async onPlayStateChange(e){if(this.m){switch(this.v=e,e){case"realtimePerformanceStarted":es()(),await _6(this);break;case"realtimePerformanceEnded":es()(),this.i.X(),this.m.s(),await this.i.o();break;case"renderStarted":await this.i.U(),this.m.C();break;case"renderEnded":es()(),this.m.B(),await this.i.o()}this.u.l||(this.u.l=this.l),await this.u.onPlayStateChange(e)}}async o(){return hi(this.i,"pause")?-1:(this.i.ia(),this.u&&this.u.F!==void 0?await this.u.F.pause():await this.u.onPlayStateChange("realtimePerformancePaused"),await WE(this.i),0)}async s(){return hi(this.i,"resume")?-1:(this.i.ya(),this.u&&this.u.F!==void 0?await this.u.F.resume():await this.u.onPlayStateChange("realtimePerformanceResumed"),await J6(this.i),0)}async J({Z:e,withPlugins:n}){e=e(),typeof this.u.Aa=="function"&&await this.u.Aa(),n&&0<n.length&&(n=await Em(n)),es()(),this.g=this.g||new Worker((window.URL||window.webkitURL).createObjectURL(new Blob([`(function(){/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var m=this||self;function q(a,b){a=a.split(".");var c=m;a[0]in c||"undefined"==typeof c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===b?c[d]&&c[d]!==Object.prototype[d]?c=c[d]:c=c[d]={}:c[d]=b}function u(a,b){z.prototype[a]=b};const aa=Symbol("Comlink.proxy"),ba=Symbol("Comlink.endpoint"),da=Symbol("Comlink.releaseProxy"),ea=Symbol("Comlink.thrown"),fa=a=>"object"==typeof a&&null!==a||"function"==typeof a,ja=new Map([["proxy",{N:a=>fa(a)&&a[aa],V(a){const {port1:b,port2:c}=new MessageChannel;return ha(a,b),[c,[c]]},O:a=>(a.start(),ia(a))}],["throw",{N:a=>fa(a)&&ea in a,V({value:a}){let b;return b=a instanceof Error?{S:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{S:!1,value:a},[b,[]]},O(a){if(a.S)throw Object.assign(Error(a.value.message),
a.value);throw a.value;}}]]);
function ha(a,b=self){b.addEventListener("message",function e(d){if(d&&d.data){var g=d.data.argumentList,{id:f,type:h,path:l}=Object.assign({path:[]},d.data);g=(g||[]).map(B);try{const n=l.slice(0,-1).reduce((r,p)=>r[p],a),t=l.reduce((r,p)=>r[p],a);switch(h){case "GET":var k=t;break;case "SET":n[l.slice(-1)[0]]=B(d.data.value);k=!0;break;case "APPLY":k=t.apply(n,g);break;case "CONSTRUCT":k=Object.assign(new t(...g),{[aa]:!0});break;case "ENDPOINT":const {port1:r,port2:p}=new MessageChannel;ha(a,p);
k=ka(r,[r]);break;case "RELEASE":k=void 0;break;default:return}}catch(n){k={value:n,[ea]:0}}Promise.resolve(k).catch(n=>({value:n,[ea]:0})).then(n=>{const [t,r]=la(n);n={...t};n.id=f;b.postMessage(n,r);"RELEASE"===h&&(b.removeEventListener("message",e),ma(b))})}});b.start&&b.start()}function ma(a){"MessagePort"===a.constructor.name&&a.close()}
function ia(a){return function g(c,d=[],e=function(){}){let f=!1;const h=new Proxy(e,{get(l,k){if(na(f),k===da)return()=>F(c,{type:"RELEASE",path:d.map(n=>n.toString())}).then(()=>{ma(c);f=!0});if("then"===k){if(0===d.length)return{then:()=>h};l=F(c,{type:"GET",path:d.map(n=>n.toString())}).then(B);return l.then.bind(l)}return g(c,[...d,k])},set(l,k,n){na(f);const [t,r]=la(n);return F(c,{type:"SET",path:[...d,k].map(p=>p.toString()),value:t},r).then(B)},apply(l,k,n){na(f);l=d[d.length-1];if(l===ba)return F(c,
{type:"ENDPOINT"}).then(B);if("bind"===l)return g(c,d.slice(0,-1));const [t,r]=oa(n);n={type:"APPLY"};n.path=d.map(p=>p.toString());n.argumentList=t;return F(c,n,r).then(B)},construct(l,k){na(f);const [n,t]=oa(k);l={type:"CONSTRUCT"};l.path=d.map(r=>r.toString());l.argumentList=n;return F(c,l,t).then(B)}});return h}(a,[],void 0)}function na(a){if(a)throw Error("Proxy has been released and is not useable");}
function oa(a){a=a.map(la);const b=(c=a.map(d=>d[1]),Array.prototype.concat.apply([],c));return[a.map(d=>d[0]),b];var c}const pa=new WeakMap;function ka(a,b){return pa.set(a,b),a}function la(a){for(const [b,c]of ja)if(c.N(a)){const [d,e]=c.V(a);return[{type:"HANDLER",name:b,value:d},e]}return[{type:"RAW",value:a},pa.get(a)||[]]}function B(a){switch(a.type){case "HANDLER":return ja.get(a.name).O(a.value);case "RAW":return a.value}}
function F(a,b,c){return new Promise(d=>{const e=Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-");a.addEventListener("message",function h(f){f.data&&f.data.id&&f.data.id===e&&(a.removeEventListener("message",h),d(f.data))});a.start&&a.start();b.id=e;a.postMessage(b,c)})};function G(){}G.prototype.g=!1;G.prototype.port=void 0;G.prototype.J=()=>{};G.prototype.o=()=>{};G.prototype.C=void 0;let J,qa,ra;J=()=>()=>{};qa=()=>()=>{};ra=()=>{};const sa=(a,b,c,d)=>e=>{const g=e.csound,f=1===b.csoundShouldDaemonize(g),h=b.csoundStart(g),l=b.csoundGetOutputName(g)||"test.wav";qa()();0!==h&&a.J(\`error: csoundStart failed while trying to render \${l},\`+" look out for errors in options and syntax");setTimeout(()=>{const k=b._isRequestingRtMidiInput(g);if(f||k||l.includes("dac"))c(e);else if(a.o("renderStarted"),d)d(e);else for(;0===b.csoundPerformKsmps(g););},0);return h},ta=(a,b)=>{const c=[];for(let d=0;d<a;d++)c.push(new Float64Array(b));return c},
ua=({G:a,M:b})=>async c=>{c=c.csound;const d=a.csoundGetKr(c);let e=0,g=0;for(;"renderStarted"===b.C&&0===e;)e=a.csoundPerformKsmps(c),g+=1,"function"===typeof setTimeout&&0===e&&0===g%(2*d)&&await new Promise(f=>setTimeout(f,0));b.o("renderEnded")};const va=a=>()=>a.exports.csoundCreateWasi();va.toString=()=>"create = async () => undefined;";const wa=a=>b=>a.exports.csoundDestroy(b);wa.toString=()=>"destroy = async () => undefined;";const xa=a=>()=>a.exports.csoundGetAPIVersion();xa.toString=()=>"getAPIVersion = async () => Number;";const ya=a=>()=>a.exports.csoundGetVersion();ya.toString=()=>"getVersion = async () => Number;";const za=a=>(b,c)=>a.exports.csoundInitialize(c);za.toString=()=>"initialize = async () => Number;";const K=new TextDecoder("utf8"),L=new TextEncoder("utf8");const M=a=>{const b=a.indexOf("\\x00");return-1<b?a.substr(0,b):a};const N=(a,b)=>{a.exports.freeStringMem(b)},O=(a,b)=>{if("string"!==typeof b)console.error("Expected string but got",typeof b);else{b=L.encode(b);var c=a.exports.allocStringMem(b.length);(new Uint8Array(a.h.memory.buffer,c,b.length+1)).set(b);return c}};const Aa=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundParseOrc(b,c);N(a,c);return b};Aa.toString=()=>"parseOrc = async (orchestra) => Object;";const Ba=a=>(b,c)=>a.exports.csoundCompileTree(b,c);Ba.toString=()=>"compileTree = async (tree) => Number;";const Ca=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundCompileOrc(b,c);N(a,c);return b};Ca.toString=()=>"compileOrc = async (orchestra) => Number;";const Da=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundEvalCode(b,c);N(a,c);return b};Da.toString=()=>"csoundEvalCode = async (orchestra) => Number;";
const Fa=a=>b=>a.exports.csoundStartWasi(b);Fa.toString=()=>"start = async () => Number;";const Ga=a=>(b,c,d=1)=>{c=O(a,c);b=a.exports.csoundCompileCSD(b,c,d,0);N(a,c);return b};Ga.toString=()=>"compileCSD = async (csoundDocument) => Number;";const Ha=a=>b=>a.exports.csoundPerform(b);Ha.toString=()=>"perform = async () => Number;";const Ia=a=>b=>a.exports.csoundPerformKsmpsWasi(b);Ia.toString=()=>"performKsmps = async (csound) => Number;";const Ja=a=>b=>a.exports.csoundPerformBuffer(b);
Ja.toString=()=>"performBuffer = async (csound) => Number;";const Ka=a=>b=>a.exports.csoundStop(b);Ka.toString=()=>"stop = async () => undefined;";const La=a=>b=>a.exports.csoundCleanup(b);La.toString=()=>"cleanup = async () => Number;";const Ma=a=>b=>a.exports.csoundResetWasi(b);Ma.toString=()=>"reset = async () => Number;";const Na=[["debug_mode","int"],["buffer_frames","int"],["hardware_buffer_frames","int"],["displays","int"],["ascii_graphs","int"],["postscript_graphs","int"],["message_level","int"],["tempo","int"],["ring_bell","int"],["use_cscore","int"],["terminate_on_midi","int"],["heartbeat","int"],["defer_gen01_load","int"],["midi_key","int"],["midi_key_cps","int"],["midi_key_oct","int"],["midi_key_pch","int"],["midi_velocity","int"],["midi_velocity_amp","int"],["no_default_paths","int"],["number_of_threads",
"int"],["syntax_check_only","int"],["csd_line_counts","int"],["compute_weights","int"],["realtime_mode","int"],["sample_accurate","int"],["sample_rate_override","MYFLT"],["control_rate_override","MYFLT"],["nchnls_override","int"],["nchnls_i_override","int"],["e0dbfs_override","MYFLT"],["daemon","int"],["ksmps_override","int"],["FFT_library","int"]],Oa=[["device_name","char",64],["interface_name","char",64],["device_id","char",64],["midi_module","char",64],["isOutput","int"]],Pa=[["type","int"],["lexme",
"ptr"],["value","int"],["fvalue","double"],["optype","ptr"],["next","ptr"]],Qa=[["type","int"],["value","ptr"],["rate","int"],["len","int"],["line","int"],["locn","uint64"],["left","ptr"],["right","ptr"],["next","ptr"],["markup","ptr"]];const Ra={eb:4,jb:8,Ya:8,char:1,cb:8,gb:4,kb:8},P=a=>a?a.reduce((b,[,c])=>Ra[c]?Ra[c]+b:P({$a:Qa,Za:Pa}[c])+b,0):0;P(Qa);P(Pa);P(Na);const Sa=P(Oa);const Ta=(a,b)=>{[a]=a.reduce(([c,d],[e,g,...f])=>{f="char"===g?Ra[g]*f[0]:Ra[g];g="char"===g?M(K.decode(b.subarray(d,f)))||"":b[d];c[e]=g;return[c,d+f]},[{},0]);return a};const Ua=a=>b=>a.exports.csoundGetSr(b);Ua.toString=()=>"getSr = async () => Number;";const Va=a=>b=>a.exports.csoundGetKr(b);Va.toString=()=>"getKr = async () => Number;";const Wa=a=>b=>a.exports.csoundGetKsmps(b);Wa.toString=()=>"getKsmps = async () => Number;";const Xa=a=>b=>a.exports.csoundGetNchnls(b);Xa.toString=()=>"getNchnls = async () => Number;";const Ya=a=>b=>a.exports.csoundGetNchnlsInput(b);Ya.toString=()=>"getNchnlsInput = async () => Number;";const Za=a=>b=>a.exports.csoundGet0dBFS(b);
Za.toString=()=>"get0dBFS = async () => Number;";const $a=a=>b=>a.exports.csoundGetA4(b);$a.toString=()=>"getA4 = async () => Number;";const ab=a=>b=>a.exports.csoundGetCurrentTimeSamples(b);ab.toString=()=>"getCurrentTimeSamples = async () => Number;";const bb=a=>b=>a.exports.csoundGetSizeOfMYFLT(b);bb.toString=()=>"getSizeOfMYFLT = async () => Number;";const cb=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundSetOption(b,c);N(a,c);return b};cb.toString=()=>"setOption = async (option) => Number;";
const db=a=>(b,c)=>{a.exports.csoundSetParams(b,c)};db.toString=()=>"setParams = async (csoundParams) => undefined;";const eb=a=>b=>{var c=a.h.memory.buffer;const d=P(Na),e=a.exports.allocCsoundParamsStruct();c=new Uint8Array(c,e,d);a.exports.csoundGetParams(b,e);b=Ta(Na,c);a.exports.freeCsoundParams(e);return b};eb.toString=()=>"getParams = async () => CSOUND_PARAMS;";const fb=a=>b=>a.exports.csoundGetDebug(b);fb.toString=()=>"getDebug = async () => Number;";
const gb=a=>(b,c)=>{a.exports.csoundSetDebug(b,c)};gb.toString=()=>"setDebug = async (number) => undefined;";const hb=a=>b=>a.exports.csoundGetInputBufferSize(b);hb.toString=()=>"getInputBufferSize = async () => Number;";const ib=a=>b=>a.exports.csoundGetOutputBufferSize(b);ib.toString=()=>"getOutputBufferSize = async () => Number;";const jb=a=>b=>a.exports.csoundGetInputBuffer(b);jb.toString=()=>"getInputBuffer = async () => Number;";const kb=a=>b=>a.exports.csoundGetOutputBuffer(b);kb.toString=()=>"getOutputBuffer = async () => Number;";const lb=a=>b=>a.exports.csoundGetSpin(b);lb.toString=()=>"getSpin = async (csound) => Number;";
const mb=a=>b=>a.exports.csoundGetSpout(b);mb.toString=()=>"getSpout = async () => Number;";const nb=a=>{const b=[];for(let c=0;c<a;c++)b.push(c);return b};const ob=a=>(b,c)=>{const d=a.h.memory.buffer,e=a.exports.csoundGetMIDIDevList(b,void 0,c?1:0);if(0===e)return[];const g=a.exports.allocCsMidiDeviceStruct(e);a.exports.csoundGetMIDIDevList(b,g,c?1:0);const f=new Uint8Array(d,g,Sa*e);b=nb(e).map(h=>Ta(Oa,f.subarray(h*Sa,Sa)));a.exports.freeCsMidiDeviceStruct(g);return b};ob.toString=()=>"getMIDIDevList = async (isOutput) => Object;";
const pb=a=>b=>{var c=a.h.memory.buffer;b=a.exports.getRtMidiName(b);c=new Uint8Array(c,b,128);return M(K.decode(c))||""};pb.toString=()=>"getRtMidiName = async () => String;";const qb=a=>(b,c,d,e)=>{a.exports.pushMidiMessage(b,c,d,e)};qb.toString=()=>"midiMessage = async (status, data1, data2) => undefined;";const rb=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundInputMessage(b,c);N(a,c);return b};rb.toString=()=>"inputMessage = async (scoreEvent) => Number;";const sb=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundInputMessageAsync(b,c);N(a,c);return b};sb.toString=()=>"inputMessageAsync = async (scoreEvent) => Number;";const tb=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundGetControlChannelWasi(b,c);N(a,c);return b};tb.toString=()=>"getControlChannel = async (channelName) => Number;";
const ub=a=>(b,c,d)=>{c=O(a,c);a.exports.csoundSetControlChannel(b,c,d);N(a,c)};ub.toString=()=>"setControlChannel = async (channelName, value) => void;";const vb=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundGetStringChannelWasi(b,c);var d=new Uint8Array(a.h.memory.buffer,b);d=K.decode(d);d=M(d);N(a,c);N(a,b);return d};vb.toString=()=>"getStringChannel = async (channelName) => String;";const wb=a=>(b,c,d)=>{c=O(a,c);d=O(a,d);a.exports.csoundSetStringChannel(b,c,d);N(a,c);N(a,d)};wb.toString=()=>"setStringChannel = async (channelName, value) => void;";const xb=a=>b=>{var c=a.h.memory.buffer;b=a.exports.csoundGetOutputName(b);c=new Uint8Array(c,b,64);return M(K.decode(c))||""};xb.toString=()=>"getOutputName = async () => String;";const yb=a=>b=>{var c=a.h.memory.buffer;b=a.exports.csoundGetInputName(b);c=new Uint8Array(c,b,64);return M(K.decode(c))||""};yb.toString=()=>"getInputName = async (csound) => String;";const zb=a=>(b,c,d)=>{c=O(a,c);d=O(a,d);b=a.exports.csoundAppendEnv(b,c,d);N(a,c);N(a,d);return b};zb.toString=()=>"appendEnv = async (csound, variable, value) => Number;";const Ab=a=>b=>a.exports.csoundIsScorePending(b);Ab.toString=()=>"isScorePending = async () => Number;";const Bb=a=>(b,c)=>a.exports.csoundSetScorePending(b,c);Bb.toString=()=>"setScorePending = async (pending) => Number;";const Cb=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundReadScore(b,c);N(a,c);return b};Cb.toString=()=>"readScore = async (score) => Number;";const Db=a=>b=>a.exports.csoundGetScoreTime(b);Db.toString=()=>"getScoreTime = async () => Number;";const Eb=a=>b=>a.exports.csoundGetScoreOffsetSeconds(b);
Eb.toString=()=>"getScoreOffsetSeconds = async () => Number;";const Fb=a=>(b,c)=>a.exports.csoundSetScoreOffsetSeconds(b,c);Fb.toString=()=>"setScoreOffsetSeconds = async () => Number;";const Gb=a=>b=>a.exports.csoundRewindScore(b);Gb.toString=()=>"rewindScore = async () => undefined;";const Hb=a=>(b,c)=>a.exports.csoundTableLength(b,c);Hb.toString=()=>"tableLength = async (tableNum) => Number;";const Ib=a=>(b,c,d)=>a.exports.csoundTableGet(b,c,d);Ib.toString=()=>"tableGet = async (tableNum, tableIndex) => Number;";const Jb=a=>(b,c,d,e)=>a.exports.csoundTableSet(b,c,d,e);Jb.toString=()=>"tableSet = async (tableNum, tableIndex, value) => undefined;";
const Kb=a=>(b,c,d)=>{const e=a.exports.allocFloatArray(d.length);(new Float64Array(a.h.memory.buffer,e,d.length)).set(d);a.exports.csoundTableCopyIn(b,c,e);a.exports.freeFloatArrayMem(e)};Kb.toString=()=>"tableCopyIn = async (tableNum, float64Array) => undefined;";
const Q=a=>(b,c)=>{var d=a.exports.csoundTableLength(b,c);if(0<d){const e=a.exports.allocFloatArray(d);a.exports.csoundTableCopyOut(b,c,e);b=new Float64Array(a.h.memory.buffer,e,d);c=new Float64Array(b.length);for(d=0;d<b.length;d++)c[d]=b[d];a.exports.freeFloatArrayMem(e);return c}};Q.toString=()=>"tableCopyOut = async (tableNum) => ?Float64Array;";Q.toString=Q.toString;
const Lb=a=>(b,c)=>{const d=a.exports.allocFloatArray(1024);a.exports.csoundGetTableArgs(b,d,c);b=new Float64Array(a.h.memory.buffer,d,1024);a.exports.freeFloatArrayMem(d);return b};Lb.toString=()=>"getTableArgs = async (tableNum) => ?Float64Array;";const Mb=a=>(b,c)=>a.exports.csoundIsNamedGEN(b,c);Mb.toString=()=>"isNamedGEN = async (tableNum) => number;";
const Nb=a=>(b,c)=>{const d=a.exports.csoundIsNamedGEN(b,c);if(0<d){const e=a.exports.allocStringMem(d);a.exports.csoundGetNamedGEN(b,e,c,d);b=new Uint8Array(a.h.memory.buffer,e,d);return K.decode(b)}};Nb.toString=()=>"getNamedGEN = async (tableNum) => ?string;";function Ob(a){return(b,c,d)=>{b="string"===typeof d?L.encode(d):d;a.h.writeFile(c,b)}}q("writeFile$$module$src$filesystem$worker_fs",Ob);Ob.toString=()=>"async (path, data) => void";function Pb(a){return(b,c,d)=>{b="string"===typeof d?L.encode(d):d;a.h.appendFile(c,b)}}q("appendFile$$module$src$filesystem$worker_fs",Pb);Pb.toString=()=>"async (path, data) => void";function Qb(a){return(b,c)=>a.h.readFile(c)}q("readFile$$module$src$filesystem$worker_fs",Qb);Qb.toString=()=>"async (path) => ?Uint8Array";
function Rb(a){return(b,c)=>a.h.unlink(c)}q("unlink$$module$src$filesystem$worker_fs",Rb);Rb.toString=()=>"async (path) => void";function Sb(a){return(b,c)=>a.h.readdir(c)}q("readdir$$module$src$filesystem$worker_fs",Sb);Sb.toString=()=>"async (path) => string[]";function Tb(a){return(b,c)=>a.h.mkdir(c)}q("mkdir$$module$src$filesystem$worker_fs",Tb);Tb.toString=()=>"async (path) => void";const R={};R.writeFile=Ob;R.appendFile=Pb;R.readFile=Qb;R.unlink=Rb;R.readdir=Sb;R.mkdir=Tb;const Ub={csoundCreate:va,csoundDestroy:wa,csoundGetAPIVersion:xa,csoundGetVersion:ya,csoundInitialize:za,csoundParseOrc:Aa,csoundCompileTree:Ba,csoundCompileOrc:Ca,csoundEvalCode:Da,csoundStart:Fa,csoundCompileCSD:Ga,csoundPerform:Ha,csoundPerformKsmps:Ia,csoundPerformBuffer:Ja,csoundStop:Ka,csoundCleanup:La,csoundReset:Ma,csoundGetSr:Ua,csoundGetKr:Va,csoundGetKsmps:Wa,csoundGetNchnls:Xa,csoundGetNchnlsInput:Ya,csoundGet0dBFS:Za,csoundGetA4:$a,csoundGetCurrentTimeSamples:ab,csoundGetSizeOfMYFLT:bb,
csoundSetOption:cb,csoundSetParams:db,csoundGetParams:eb,csoundGetDebug:fb,csoundSetDebug:gb,csoundGetInputBufferSize:hb,csoundGetOutputBufferSize:ib,csoundGetInputBuffer:jb,csoundGetOutputBuffer:kb,csoundGetSpin:lb,csoundGetSpout:mb,csoundGetMIDIDevList:ob,csoundSetMidiCallbacks:a=>b=>{a.exports.csoundSetMidiCallbacks(b)},csoundGetRtMidiName:pb,csoundGetMidiOutFileName:a=>b=>{var c=a.h.memory.buffer;b=a.exports.getMidiOutFileName(b);c=new Uint8Array(c,b,128);b&&0<b.length&&N(a,b);return M(K.decode(c))||
""},csoundPushMidiMessage:qb,_isRequestingRtMidiInput:a=>b=>a.exports.isRequestingRtMidiInput(b),csoundInputMessage:rb,csoundInputMessageAsync:sb,csoundGetControlChannel:tb,csoundSetControlChannel:ub,csoundGetStringChannel:vb,csoundSetStringChannel:wb,csoundGetInputName:yb,csoundGetOutputName:xb,csoundAppendEnv:zb,csoundShouldDaemonize:a=>b=>a.exports.csoundShouldDaemonize(b),csoundIsScorePending:Ab,csoundSetScorePending:Bb,csoundReadScore:Cb,csoundGetScoreTime:Db,csoundGetScoreOffsetSeconds:Eb,csoundSetScoreOffsetSeconds:Fb,
csoundRewindScore:Gb,csoundTableLength:Hb,csoundTableGet:Ib,csoundTableSet:Jb,csoundTableCopyIn:Kb,csoundTableCopyOut:Q,csoundGetTable:Q,csoundGetTableArgs:Lb,csoundIsNamedGEN:Mb,csoundGetNamedGEN:Nb,fs:R};function Vb(a){const {fs:b,...c}=Ub;return{...Object.keys(c).reduce((d,e)=>{d[e]=c[e](a);return d},{}),...Object.keys(b).reduce((d,e)=>{d[e]=b[e](a);return d},{})}};void 0!==m&&(m={});m.BigInt||(m.BigInt=void 0===BigInt?Number:BigInt);const Wb=m.BigInt(1)|m.BigInt(2)|m.BigInt(4)|m.BigInt(8)|m.BigInt(16)|m.BigInt(32)|m.BigInt(64)|m.BigInt(128)|m.BigInt(256)|m.BigInt(2097152)|m.BigInt(4194304)|m.BigInt(8388608)|m.BigInt(134217728),Xb=m.BigInt(0);function Yb(a){let b=arguments[0];for(let d=1;d<arguments.length;d++){const e=arguments[d];if(0==e.lastIndexOf("/",0))b=e;else{var c;(c=""==b)||(c=b.length-1,c=0<=c&&b.indexOf("/",c)==c);c?b+=e:b+="/"+e}}return b}
function S(a){if(""==a)return".";let b="";0==a.lastIndexOf("/",0)&&(b="/",0==a.lastIndexOf("//",0)&&0!=a.lastIndexOf("///",0)&&(b="//"));a=a.split("/");const c=[];for(let d=0;d<a.length;d++){const e=a[d];""!=e&&"."!=e&&(".."!=e||!b&&!c.length||".."==c[c.length-1]?c.push(e):c.pop())}return b+c.join("/")||"."};function T(a){return/^\\//g.test(a)?a:\`/\${a}\`}function Zb(){return"undefined"===typeof performance||"undefined"===typeof performance.now?Date.now()-Date.now():performance.now()}function $b(a){var b=a.reduce((d,e)=>d+e.length,0);if(0!==a.length){b=new Uint8Array(b);var c=0;for(const d of a)b.set(d,c),c+=d.length;return b}}
function z(){this.fd=Array.from({length:4});this.fd[0]={fd:0,path:"/dev/stdin",seekPos:m.BigInt(0),buffers:[]};this.fd[1]={fd:1,path:"/dev/stdout",seekPos:m.BigInt(0),buffers:[]};this.fd[2]={fd:2,path:"/dev/stderr",seekPos:m.BigInt(0),buffers:[]};this.fd[3]={fd:3,path:"/",seekPos:m.BigInt(0),buffers:[]};this.g=this.g.bind(this);this.i=0}z.prototype.start=function(a){this.i=Zb();a.exports._start()};
function ac(a,b){const c={};b=WebAssembly.Module.imports(b);for(const d of b)"function"===d.kind&&d.module.startsWith("wasi_")&&("object"!==typeof c[d.module]&&(c[d.module]={}),c[d.module][d.name]=a[d.name].bind(a));return c}z.prototype.g=function(){this.view&&this.view.buffer&&this.view.buffer.byteLength||(this.view=new DataView(this.memory.buffer));return this.view};function bc(a){const b=Math.trunc(a);return m.BigInt(b)*m.BigInt(1E6)+m.BigInt(Math.round(1E6*(a-b)))}
function cc(a,b){switch(b){case 1:return Math.floor(Zb());case 0:return bc(Date.now());case 2:case 3:return Math.floor(Zb()-a.i);default:return 0}}z.prototype.aa=function(){return 0};u("args_get",z.prototype.aa);z.prototype.ba=function(){return 0};u("args_sizes_get",z.prototype.ba);z.prototype.ea=function(){return 0};u("clock_res_get",z.prototype.ea);z.prototype.fa=function(a,b,c){this.g().setBigUint64(c,m.BigInt(cc(this,a)),!0);return 0};u("clock_time_get",z.prototype.fa);z.prototype.ga=function(){return 0};
u("environ_get",z.prototype.ga);z.prototype.ha=function(){return 0};u("environ_sizes_get",z.prototype.ha);z.prototype.ia=function(){return 52};u("fd_advise",z.prototype.ia);z.prototype.ja=function(){return 52};u("fd_allocate",z.prototype.ja);z.prototype.ka=function(){return 0};u("fd_close",z.prototype.ka);z.prototype.la=function(){return 0};u("fd_datasync",z.prototype.la);
z.prototype.ma=function(a,b){a=this.g();a.setUint8(b+4,4);a.setUint16(b+2,0,!0);a.setUint16(b+4,0,!0);a.setBigUint64(b+8,m.BigInt(Wb),!0);a.setBigUint64(b+8+8,m.BigInt(Xb),!0);return 0};u("fd_fdstat_get",z.prototype.ma);z.prototype.na=function(){return 52};u("fd_fdstat_set_flags",z.prototype.na);z.prototype.oa=function(){return 0};u("fd_fdstat_set_rights",z.prototype.oa);
z.prototype.pa=function(a,b){let c=0;this.fd[a]&&(c=this.fd[a].buffers.reduce(function(e,g){return e+(null==g?void 0:g.byteLength)?null==g?void 0:g.byteLength:0},0));const d=this.g();d.setBigUint64(b,m.BigInt(a),!0);b+=8;d.setBigUint64(b,m.BigInt(a),!0);b+=8;d.setUint8(b,4);b+=8;d.setBigUint64(b,m.BigInt(1),!0);b+=8;d.setBigUint64(b,m.BigInt(c),!0);b+=8;d.setBigUint64(b,bc(this.i),!0);b+=8;d.setBigUint64(b,bc(this.i),!0);d.setBigUint64(b+8,bc(this.i),!0);return 0};u("fd_filestat_get",z.prototype.pa);
z.prototype.qa=function(){return 0};u("fd_filestat_set_size",z.prototype.qa);z.prototype.ra=function(){return 0};u("fd_filestat_set_times",z.prototype.ra);z.prototype.sa=function(){return 0};u("fd_pread",z.prototype.sa);z.prototype.ta=function(a,b){if(!this.fd[a]&&!this.fd[a-1])return 8;var {path:c}=this.fd[a];a=this.g();c=L.encode(c);(new Uint8Array(a.buffer)).set(c,b);return 0};u("fd_prestat_dir_name",z.prototype.ta);
z.prototype.ua=function(a,b){if(!this.fd[a])return 8;var {path:c}=this.fd[a];a=this.g();c=L.encode(c);a.setUint8(b,0);a.setUint32(b+4,c.byteLength,!0);return 0};u("fd_prestat_get",z.prototype.ua);z.prototype.va=function(a,b,c,d,e){console.log("fd_pwrite",a,b,c,d,e,arguments);return 0};u("fd_pwrite",z.prototype.va);
z.prototype.wa=function(a,b,c,d){const e=this.fd[a]&&this.fd[a].buffers;var g=e.reduce((t,r)=>t+r.length,0);const f=this.g();if(e&&0!==e.length){var h=Number(this.fd[a].seekPos),l=0,k=!1;if(h>=g)return a=f.getUint32(b,!0),f.setUint8(a,"\\x00"),f.setUint32(d,0,!0),0;for(g=0;g<c;g++){var n=b+8*g;const t=f.getUint32(n,!0);n=f.getUint32(n+4,!0);k||(l+=n,Array.from({length:n},(r,p)=>p).reduce((r,p)=>{if(k)return r;const [A,E]=r;let D=r=0,w=!1,v=0,y;if(0===p)for(;!w;)y=e[r]?e[r].byteLength:0,v<=h&&y+v>h?
(w=!0,D=h-v):(v+=y,r+=1);else r=A,D=E;e[r]?(f.setUint8(t+p,e[r][D]),D+1>=e[r].byteLength?(r=A+1,D=0):D+=1):(f.setUint8(t+p,0),h+=p,k=!0);return[r,D]},[0,0]),k||(h+=n))}this.fd[a].seekPos=m.BigInt(h);f.setUint32(d,l,!0);return 0}console.error("Reading non existent file",a,this.fd[a])};u("fd_read",z.prototype.wa);z.prototype.xa=function(){return 0};u("fd_readdir",z.prototype.xa);z.prototype.ya=function(){return 0};u("fd_renumber",z.prototype.ya);
z.prototype.za=function(a,b,c,d){const e=this.g();switch(c){case 1:let g;this.fd[a].seekPos=(null!=(g=this.fd[a].seekPos)?g:m.BigInt(0))+m.BigInt(b);break;case 2:c=(this.fd[a].buffers||[]).reduce((f,h)=>f+h.length,0);this.fd[a].seekPos=BigInt(c)+BigInt(b);break;case 0:this.fd[a].seekPos=BigInt(b)}e.setBigUint64(d,this.fd[a].seekPos,!0);return 0};u("fd_seek",z.prototype.za);z.prototype.Aa=function(){return 0};u("fd_sync",z.prototype.Aa);
z.prototype.Ba=function(a,b){const c=this.g();this.fd[a].seekPos||(this.fd[a].seekPos=m.BigInt(0));c.setBigUint64(b,this.fd[a].seekPos,!0);return 0};u("fd_tell",z.prototype.Ba);
z.prototype.Ca=function(a,b,c,d){let e=!1;const g=this.g();this.fd[a].buffers=this.fd[a].buffers||[];this.fd[a].seekPos===m.BigInt(0)&&0<this.fd[a].buffers.length&&(e=!0);let f=0;for(let k=0;k<c;k++){var h=b+8*k,l=g.getUint32(h,!0);h=g.getUint32(h+4,!0);f+=h;l=new Uint8Array(g.buffer,l,h);e?this.fd[a].buffers.unshift(l.slice(0,h)):this.fd[a].buffers.push(l.slice(0,h))}this.fd[a].seekPos+=m.BigInt(f);g.setUint32(d,f,!0);[1,2].includes(a)&&console.log(K.decode($b(this.fd[a].buffers)));return 0};
u("fd_write",z.prototype.Ca);z.prototype.Da=function(){return 0};u("path_create_directory",z.prototype.Da);z.prototype.Ea=function(){return 0};u("path_filestat_get",z.prototype.Ea);z.prototype.Fa=function(){return 0};u("path_filestat_set_times",z.prototype.Fa);z.prototype.Ga=function(){return 0};u("path_link",z.prototype.Ga);
z.prototype.Ha=function(a,b,c,d,e,g,f,h,l){b=this.g();e=(this.fd[a]||{path:"/"}).path;c=new Uint8Array(b.buffer,c,d);c=K.decode(c);const k=T(S(Yb(3===a?"":e,c)));if(k.startsWith("/..")||"/._"===k||"/.AppleDouble"===k)return 8;(a=Object.values(this.fd).find(n=>n.path===k&&Array.isArray(n.buffers)))?c=a.fd:(c=this.fd.length,this.fd[c]={fd:c});this.fd[c]={...this.fd[c],path:k,type:"file",seekPos:m.BigInt(0),buffers:a?this.fd[c].buffers:[]};b.setUint32(l,c,!0);return 0};u("path_open",z.prototype.Ha);
z.prototype.Ia=function(){return 0};u("path_readlink",z.prototype.Ia);z.prototype.Ja=function(){return 0};u("path_remove_directory",z.prototype.Ja);z.prototype.Ka=function(){return 0};u("path_rename",z.prototype.Ka);z.prototype.La=function(){return 0};u("path_symlink",z.prototype.La);z.prototype.Ma=function(){return 0};u("path_unlink_file",z.prototype.Ma);z.prototype.Na=function(){return 0};u("poll_oneoff",z.prototype.Na);z.prototype.Oa=function(){return 0};u("proc_exit",z.prototype.Oa);
z.prototype.Pa=function(){return 0};u("proc_raise",z.prototype.Pa);z.prototype.Qa=function(){return 0};u("random_get",z.prototype.Qa);z.prototype.Ra=function(){return 0};u("sched_yield",z.prototype.Ra);z.prototype.Sa=function(){return 52};u("sock_recv",z.prototype.Sa);z.prototype.Ta=function(){return 52};u("sock_send",z.prototype.Ta);z.prototype.Ua=function(){return 52};u("sock_shutdown",z.prototype.Ua);function dc(a,b){return(a=Object.values(a.fd).find(({path:c})=>c===b))&&a.buffers}
z.prototype.readdir=function(a){const b=(T(S(a))+"/").replace("//","/"),c=[];Object.values(this.fd).forEach(({path:d})=>!/\\//g.test(d.replace(b,""))&&c.push(d));return c.map(d=>d.replace(b,"").replace(/^\\//g,"")).filter(d=>!!d)};z.prototype.writeFile=function(a,b){const c=T(S(a));a=Object.keys(this.fd).length;const d=Object.values(this.fd).find(({path:e})=>e===c);this.fd[a]={fd:a,path:c,seekPos:m.BigInt(0),buffers:[b]};d&&delete this.fd[d]};
z.prototype.appendFile=function(a,b){var c=T(S(a));(c=dc(this,c))?c.push(b):console.error(\`Can't append to non-existing file \${a}\`)};z.prototype.readFile=function(a){a=T(S(a));if(a=dc(this,a))return $b(a)};z.prototype.unlink=function(a){const b=T(S(a));(a=Object.values(this.fd).find(({path:c})=>c===b))?delete this.fd[a]:console.error(\`While trying to unlink \${b}, path not found\`)};
z.prototype.mkdir=function(a){const b=T(S(a)),c=[];Object.values(this.fd).forEach(({path:d})=>d.startsWith(b)&&c.push(d));0<c.length?console.warn(\`mkdir: path \${a} already exists\`):(a=Object.keys(this.fd).length,this.fd[a]={fd:a,path:b})};function U(a){for(;0<a.length;)a.pop()};/*
 zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */
function V(a){const b=a.length;let c=0,d=Number.POSITIVE_INFINITY,e,g,f,h;let l,k;for(l=0;l<b;++l)a[l]>c&&(c=a[l]),a[l]<d&&(d=a[l]);const n=1<<c,t=new Uint32Array(n);e=1;g=0;for(f=2;e<=c;){for(l=0;l<b;++l)if(a[l]===e){h=0;var r=g;for(k=0;k<e;++k)h=h<<1|r&1,r>>=1;r=e<<16|l;for(k=h;k<n;k+=f)t[k]=r;++g}++e;g<<=1;f<<=1}return[t,c,d]};function ec(a,b){this.I=[];this.bufferSize=32768;this.l=this.B=this.j=this.K=0;this.A=new Uint8Array(a);this.Y=!1;this.m=W;this.resize=!1;if(b||!(b={}))b.index&&(this.j=b.index),b.bufferSize&&(this.bufferSize=b.bufferSize),b.m&&(this.m=b.m),b.resize&&(this.resize=b.resize);switch(this.m){case fc:this.g=32768;this.i=new Uint8Array(this.bufferSize+33026);break;case W:this.g=0;this.i=new Uint8Array(this.bufferSize);break;default:throw Error("invalid inflate mode");}}
var fc=0,W=1,gc=new Uint16Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),hc=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]),ic=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]),jc=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]),kc=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),
lc;const mc=new Uint8Array(288);let X,nc;X=0;for(nc=mc.length;X<nc;++X)mc[X]=143>=X?8:255>=X?9:279>=X?7:8;lc=V(mc);var oc;const pc=new Uint8Array(30);let qc,rc;qc=0;for(rc=pc.length;qc<rc;++qc)pc[qc]=5;oc=V(pc);function Y(a,b){let c=a.B,d=a.l;const e=a.A;let g=a.j;if(g+(b-d+7>>3)>=e.length)throw Error("input buffer is broken");for(;d<b;)c|=e[g++]<<d,d+=8;a.B=c>>>b;a.l=d-b;a.j=g;return c&(1<<b)-1}
function sc(a,b){let c=a.B,d=a.l;var e=a.A;let g=a.j;var f=e.length;const h=b[0];for(b=b[1];d<b&&!(g>=f);)c|=e[g++]<<d,d+=8;e=h[c&(1<<b)-1];f=e>>>16;if(f>d)throw Error("invalid code length: "+f);a.B=c>>f;a.l=d-f;a.j=g;return e&65535}
function tc(a,b,c){let d=a.i,e=a.g;a.Z=b;const g=d.length-258;var f;let h,l;for(;256!==(f=sc(a,b));)if(256>f)e>=g&&(a.g=e,d=uc(a),e=a.g),d[e++]=f;else for(f-=257,l=hc[f],0<ic[f]&&(l+=Y(a,ic[f])),f=sc(a,c),h=jc[f],0<kc[f]&&(h+=Y(a,kc[f])),e>=g&&(a.g=e,d=uc(a),e=a.g);l--;)d[e]=d[e++-h];for(;8<=a.l;)a.l-=8,a.j--;a.g=e}
function vc(a,b,c){let d=a.i,e=a.g;a.Z=b;let g=d.length;var f;let h,l;for(;256!==(f=sc(a,b));)if(256>f)e>=g&&(d=wc(a),g=d.length),d[e++]=f;else for(f-=257,l=hc[f],0<ic[f]&&(l+=Y(a,ic[f])),f=sc(a,c),h=jc[f],0<kc[f]&&(h+=Y(a,kc[f])),e+l>g&&(d=wc(a),g=d.length);l--;)d[e]=d[e++-h];for(;8<=a.l;)a.l-=8,a.j--;a.g=e}function uc(a){const b=new Uint8Array(a.g-32768),c=a.g-32768,d=a.i;b.set(d.subarray(32768,b.length));a.I.push(b);a.K+=b.length;d.set(d.subarray(c,c+32768));a.g=32768;return d}
function wc(a,b){let c=Math.trunc(a.A.length/a.j+1);const d=a.A,e=a.i;b&&("number"===typeof b.P&&(c=b.P),"number"===typeof b.$&&(c+=b.$));2>c?(b=(d.length-a.j)/a.Z[2],b=Math.trunc(b/2*258),b=b<e.length?e.length+b:e.length<<1):b=e.length*c;b=new Uint8Array(b);b.set(e);a.i=b;return a.i};function xc(a){var b;this.j=a;this.g=0;if(b||!(b={}))b.index&&(this.g=b.index),b.verify&&(this.verify=b.verify);const c=a[this.g++],d=a[this.g++];switch(c&15){case 8:this.method=8;break;default:throw Error("unsupported compression method");}if(0!==((c<<8)+d)%31)throw Error("invalid fcheck flag:"+((c<<8)+d)%31);if(d&32)throw Error("fdict flag is not supported");this.i=new ec(a,{index:this.g,bufferSize:b.bufferSize,m:b.m,resize:b.resize})}
function yc(a){var b=a.j,c;a:{for(c=a.i;!c.Y;){var d=void 0,e=void 0,g=void 0,f=void 0,h=c,l=Y(h,3);l&1&&(h.Y=!0);l>>>=1;switch(l){case 0:l=h.A;e=h.j;var k=h.i,n=h.g;g=l.length;d=k.length;h.B=0;h.l=0;if(e+1>=g)throw Error("invalid uncompressed block header: LEN");f=l[e++]|l[e++]<<8;if(e+1>=g)throw Error("invalid uncompressed block header: NLEN");g=l[e++]|l[e++]<<8;if(f===~g)throw Error("invalid uncompressed block header: length verify");if(e+f>l.length)throw Error("input buffer is broken");switch(h.m){case fc:for(;n+
f>k.length;)g=d-n,f-=g,k.set(l.subarray(e,e+g),n),n+=g,e+=g,h.g=n,k=uc(h),n=h.g;break;case W:for(;n+f>k.length;)k=wc(h,{P:2});break;default:throw Error("invalid inflate mode");}k.set(l.subarray(e,e+f),n);h.j=e+f;h.g=n+f;h.i=k;break;case 1:switch(h.m){case W:vc(h,lc,oc);break;case fc:tc(h,lc,oc);break;default:throw Error("invalid inflate mode");}break;case 2:l=Y(h,5)+257;d=Y(h,5)+1;k=Y(h,4)+4;n=new Uint8Array(gc.length);for(e=0;e<k;++e)n[gc[e]]=Y(h,3);n=V(n);k=new Uint8Array(l+d);e=0;for(d=l+d;e<d;)switch(g=
sc(h,n),g){case 16:for(g=3+Y(h,2);g--;)k[e++]=f;break;case 17:for(g=3+Y(h,3);g--;)k[e++]=0;f=0;break;case 18:for(g=11+Y(h,7);g--;)k[e++]=0;f=0;break;default:f=k[e++]=g}f=V(k.subarray(0,l));l=V(k.subarray(l));switch(h.m){case W:vc(h,f,l);break;case fc:tc(h,f,l);break;default:throw Error("invalid inflate mode");}break;default:throw Error("unknown BTYPE: "+l);}}switch(c.m){case fc:{h=0;f=c.i;l=c.I;k=new Uint8Array(c.K+(c.g-32768));let t;if(0===l.length)c=c.i.subarray(32768,c.g);else{n=0;for(d=l.length;n<
d;++n)for(e=l[n],g=0,t=e.length;g<t;++g)k[h++]=e[g];n=32768;for(d=c.g;n<d;++n)k[h++]=f[n];c.I=[];c.buffer=k;c=c.buffer}}break a;case W:f=c.g;c.resize?(h=new Uint8Array(f),h.set(c.i.subarray(0,f))):h=c.i.subarray(0,f);c.buffer=h;c=c.buffer;break a;default:throw Error("invalid inflate mode");}}a.g=a.i.j;if(a.verify){a=(b[a.g++]<<24|b[a.g++]<<16|b[a.g++]<<8|b[a.g++])>>>0;b=c;if("string"===typeof b){b=[...b];h=0;for(f=b.length;h<f;h++)b[h]=(b[h].charPointAt(0)&255)>>>0;b=new Uint8Array([b])}h=1;f=0;l=
b.length;for(k=0;0<l;){e=1024<l?1024:l;l-=e;do h+=b[k++],f+=h;while(--e);h%=65521;f%=65521}if(a!==(f<<16|h)>>>0)throw Error("invalid adler-32 checksum");}return c};const zc=({memory:a,messagePort:b,W:c})=>function(d,e,g,f){if(a){d=new Uint8Array(a.buffer,f,g);d=K.decode(d);var h=/\\n$/g.test(d);e=/^\\n/g.test(d);var l=d.split("\\n").filter(n=>0<n.length),k=[];if(0===l.length&&h||e)k.push(c.join("")),U(c);l.forEach((n,t)=>{t+1===l.length?h?0===t?(k.push(c.join("")+n),U(c)):k.push(n):c.push(n):0===t?(k.push(c.join("")+n),U(c)):k.push(n)});k.forEach(n=>{n.replace(/(\\r\\n|\\n|\\r)/gm,"")&&b.J({log:n})})}},Ac=a=>{if(a&&"object"===typeof a&&"object"===typeof a.exports){if(a.exports.__wasm_call_ctors){if(a.exports.csoundModuleCreate||
a.exports.csound_opcode_init||a.exports.csound_fgen_init)return!0;console.error(a.exports,"A csound plugin turns out to be neither a plugin, opcode or module.\\nPerhaps csdl.h or module.h wasn't imported correctly?");return!1}console.error("A csound plugin didn't export __wasm_call_ctors.\\nPlease re-run wasm-ld with either --export-all or include --export=__wasm_call_ctors");return!1}console.error("Error instantiating a csound plugin, instance and/or export is missing!");return!1},Bc=a=>{function b(){let k=
0,n=1;for(;;){const t=a[c++];k+=(t&127)*n;n*=128;if(!(t&128))break}return k}1836278016!==(new Uint32Array((new Uint8Array(a.subarray(0,24))).buffer))[0]&&console.error("Wasm magic number is missing!");if(0!==a[8])return ra(),"static";let c=9;const d=b();c++;c++;c++;c++;c++;c++;c++;c++;c+=3;const e=b(),g=b(),f=b(),h=b(),l=b();return{hb:d,H:e,T:g,fb:l,X:f,ib:h}},Cc=async({Va:a,h:b,messagePort:c})=>{const d=await WebAssembly.compile(a);a=new WebAssembly.Memory({initial:16384});const e=ac(b,d);e.u=e.u||
{};e.u.ab=()=>0;e.u.memory=a;e.u.bb=zc({memory:e.u.memory,W:[],messagePort:c});c=await WebAssembly.instantiate(d,e);b.memory=a;b.start(c);c.exports.__wasi_js_csoundSetMessageStringCallback();return[c,b]};
async function Dc({Wa:a,withPlugins:b=[],messagePort:c}){var d={};const e=new z;a=new Uint8Array(a);a=yc(new xc(a));var g=Bc(a);if("static"===g)return await Cc({messagePort:c,Va:a,lb:d,h:e});d=g.H;const f=g.T;g=g.X;b=await b.reduce(async(w,v)=>{w=await w;let y,C;try{y=new Uint8Array(v),C=Bc(y)}catch(I){console.error("Error in plugin",I)}C&&w.push({R:C,Xa:y});return w},[]);d=Math.ceil((d+f)/65536);var h=Math.ceil(b.reduce((w,{R:v})=>"static"===v?0:w+(v.H+f),0)/65536);h=d+h+2048;const l=new WebAssembly.Memory({initial:h,
maximum:16384}),k=new WebAssembly.Table({initial:g+1,element:"anyfunc"});e.memory=l;const n=new WebAssembly.Global({value:"i32",mutable:!0},65536*h);g=new WebAssembly.Global({value:"i32",mutable:!0},65536*h);h=new WebAssembly.Global({value:"i32",mutable:!1},2048);const t=new WebAssembly.Global({value:"i32",mutable:!1},1),r=new WebAssembly.Global({value:"i32",mutable:!0},0);a=await WebAssembly.compile(a);const p=ac(e,a);let A=[],E=d;p.env=p.env||{};p.env.memory=l;p.env.__indirect_function_table=k;
p.env.__stack_pointer=n;p.env.__memory_base=h;p.env.__table_base=t;p.env.csoundLoadModules=w=>{A.forEach(v=>{if(void 0===D)console.error("csound-wasm internal: timing problem detected!");else{var y=D;if(v.exports.csoundModuleInit){var C=new WebAssembly.Global({value:"i32",mutable:!0},0),I=new WebAssembly.Global({value:"i32",mutable:!0},0),H=new WebAssembly.Global({value:"i32",mutable:!0},0);const ca=new WebAssembly.Global({value:"i32",mutable:!0},0);let x=k.length;"function"===typeof v.exports.csoundModuleCreate&&
(k.grow(1),C.value=x,k.set(x,v.exports.csoundModuleCreate),x+=1);"function"===typeof v.exports.csoundModuleInit&&(k.grow(1),I.value=x,k.set(x,v.exports.csoundModuleInit),x+=1);"function"===typeof v.exports.csoundModuleDestroy&&(k.grow(1),H.value=x,k.set(x,v.exports.csoundModuleDestroy),x+=1);"function"===typeof v.exports.csoundModuleErrorCodeToString&&(k.grow(1),ca.value=x,k.set(x,v.exports.csoundModuleErrorCodeToString));y.exports.csoundWasiLoadPlugin(w,C,I,H,ca)}else v.exports.csound_opcode_init||
v.exports.csound_fgen_init?(C=new WebAssembly.Global({value:"i32",mutable:!0},0),I=new WebAssembly.Global({value:"i32",mutable:!0},0),H=k.length,"function"===typeof v.exports.csound_opcode_init&&(C.value=H,k.grow(1),k.set(H,v.exports.csound_opcode_init),H+=1),"function"===typeof v.exports.csound_fgen_init&&(I.value=H,k.grow(1),k.set(H,v.exports.csound_fgen_init)),y.exports.csoundWasiLoadOpcodeLibrary(w,I,C)):console.error("Plugin doesn't export nececcary functions to quality as csound plugin.")}});
return 0};p.env.csoundLoadExternals=()=>{};p.env._ZTH5errno=function(){};p.env.csoundWasiJsMessageCallback=zc({memory:l,messagePort:c,W:[]});p.env.printDebugCallback=(w,v)=>{w=new Uint8Array(l.buffer,w,v);w=K.decode(w);console.log(w)};p["GOT.mem"]=p["GOT.mem"]||{};p["GOT.mem"].__heap_base=g;p["GOT.func"]=p["GOT.func"]||{};const D=await WebAssembly.instantiate(a,p);c=Object.assign({},D.exports);a={};c.memory=l;a.exports=c;A=await b.reduce(async(w,{R:v,Xa:y})=>{w=await w;try{const C=v.H,I=v.T,H=v.X,
ca=await WebAssembly.compile(y),x=ac(e,ca),Gc=new WebAssembly.Global({value:"i32",mutable:!1},65536*E);k.grow(H);x.env=Object.assign({},x.env);x.env.memory=l;x.env.__indirect_function_table=k;x.env.__memory_base=Gc;x.env.__stack_pointer=n;x.env.__table_base=t;x.env.csoundLoadModules=r;delete x.env.csoundWasiJsMessageCallback;E+=Math.ceil((C+I)/65536);const Ea=await WebAssembly.instantiate(ca,x);Ac(Ea)&&(Ea.exports.__wasm_call_ctors(),w.push(Ea))}catch(C){console.error("Error while compiling csound-plugin",
C)}return w},[]);e.start(a);a.exports.__wasi_js_csoundSetMessageStringCallback();return[a,e]};let Ec,Fc=()=>{};
const Z=[],Hc=(a,b)=>{for(let c=0;c<b;++c)a.buffers.push(new Float64Array(16384))},Ic=({G:a,L:b,M:c,ca:d,inputChannelCount:e})=>g=>{const f=g.csound;g=a.csoundGetInputName(f).includes("adc");const h=a.csoundGetNchnls(f),l=0<e?e:g?a.csoundGetNchnlsInput(f):0,k=a.csoundGet0dBFS(f);g=a.csoundGetSpout(f);const n=a.csoundGetKsmps(f);let t=new Float64Array(b.h.memory.buffer,a.csoundGetSpin(f),n*l),r=new Float64Array(b.h.memory.buffer,g,n*h),p=0,A=0;c.o("realtimePerformanceStarted");Fc=({U:E})=>{const D=
ta(h,E),w=0<d.buffers.length&&d.s>=E;0<Z.length&&(Z.forEach(()=>{}),U(Z));for(let v=0;v<E;v++){A=(A+1)%n;if("realtimePerformanceEnded"===c.C)return 0===p&&(p=a.csoundPerformKsmps(f)),c.o("realtimePerformanceEnded"),Fc=()=>{},U(Z),d.port=void 0,{D:v};if(0===A&&0===p&&(p=a.csoundPerformKsmps(f),0!==p))return c.o("realtimePerformanceEnded"),Fc=()=>{},U(Z),d.port=void 0,{D:v};0===t.length&&(t=new Float64Array(b.h.memory.buffer,a.csoundGetSpin(f),n*l));0===r.length&&(r=new Float64Array(b.h.memory.buffer,
a.csoundGetSpout(f),n*h));D.forEach((y,C)=>{0<r.length&&(y[v]=(r[A*h+C]||0)/k)});if(w)for(let y=0;y<l;y++)t[A*l+y]=(d.buffers[y][v+d.F%16384]||0)*k}w&&(d.s-=E,d.F+=E%16384);return{da:D,D:0}}},Jc=({port:a})=>{J()();const b=new G;b.port=a;b.J=c=>{a.postMessage({log:c})};b.o=c=>{b.C=c;const d={};d.playStateChange=c;a.postMessage(d)};b.g=!0;return b},Kc=(a,b)=>{J()();a.addEventListener("message",c=>{var d="realtimePerformanceEnded"!==b.C?Fc({U:c.data.numFrames}):void 0;const {D:e=0,da:g}=d||{};d={};d.numFrames=
c.data.U-e;d.audioPacket=g;a.postMessage({...d,...c.data})});a.start()},Lc=({port:a})=>{J()();const b={s:0,buffers:[],F:0,v:0,port:a};b.port.addEventListener("message",({data:c})=>{0===b.buffers.length&&Hc(b,c.length);b.buffers.forEach((d,e)=>{d.set(c[e],b.v)});b.v+=c[0].length;b.s+=c[0].length;16384<=b.v&&(b.v=0)});b.port.start();return b},Mc=a=>{J()();a.addEventListener("message",({data:b})=>{Z.push(b)});a.start()};
ha({initialize:async a=>{var b=a.audioInputPort;const c=a.inputChannelCount,d=a.messagePort,e=a.outputChannelCount,g=a.requestPort,f=a.rtmidiPort,h=a.wasmDataURI,l=a.wasmTransformerDataURI;a=a.withPlugins||[];J()();const k=Jc({port:d}),n=Lc({port:b});Kc(g,k);Mc(f);const [t,r]=await Dc({Wa:h,mb:l,withPlugins:a,messagePort:k});t.h=r;const p=Vb(t);Ec=new Map(Object.entries({...p,csoundStart:(A,E)=>sa(k,p,Ic({ca:n,inputChannelCount:c,G:p,outputChannelCount:e,L:t,h:r,M:k}),ua({inputChannelCount:c,G:p,
outputChannelCount:e,L:t,M:k}))(E),L:t}));b=p.csoundCreate();k.port.addEventListener("message",A=>{A.data&&A.data.newPlayState&&("realtimePerformanceEnded"===A.data.newPlayState&&k.o("realtimePerformanceEnded"),k.C=A.data.newPlayState)});k.port.start();return b},callUncloned:async(a,b)=>(a=Ec.get(a))&&a.apply({},b||[])});}).call(this);
//# sourceMappingURL=__compiled.vanilla.worker.js.map
`]))),this.l.Y.addEventListener("message",Ls(this)),this.l.J.addEventListener("message",Ls(this)),this.l.Y.start();const r=Ml(this.g);this.h=r;const i={};i.wasmDataURI=e,i.messagePort=this.l.g,i.requestPort=this.l.s,i.audioInputPort=this.l.o,i.rtmidiPort=this.l.B,i.sampleRate=this.sampleRate,i.inputChannelCount=this.inputChannelCount,i.outputChannelCount=this.outputChannelCount,i.withPlugins=n,this.D=await r.initialize(Al(i,[e,this.l.g,this.l.s,this.l.o,this.l.B])),this.j.pause=this.o.bind(this),this.j.resume=this.s.bind(this),this.j.terminateInstance=this.I.bind(this),this.j.getAudioContext=async()=>this.u.audioContext,this.j.getNode=async()=>{const o=this.u.P;return o||await new Promise(s=>{this.j.once("onAudioNodeCreated",s)})},this.j=this.m.o(this.j),this.j.enableAudioInput=()=>console.warn("enableAudioInput was ignored: please use -iadc option before calling start with useWorker=true"),this.j.name="Csound: Audio Worklet, Worker",this.j.addListener("message",console.log);for(const o of Object.keys(As)){const s=As[o],a=io(r,this.D,o,this.v);switch(o){case"csoundCreate":break;case"csoundStart":n=async function(){if(hi(this.i,"start"))return-1;this.i.la();var l={};return l.csound=this.D,l=await a(l),await this.i.ha(),l},n.toString=()=>s.toString(),this.j.start=n.bind(this);break;case"csoundStop":n=async function(){if(hi(this.i,"stop"))return-1;this.i.X();const l={};return l.newPlayState=this.v==="renderStarted"?"renderEnded":"realtimePerformanceEnded",this.l.Y.postMessage(l),await this.i.na(),0},this.j.stop=n.bind(this),n.toString=s.toString;break;case"csoundReset":n=async()=>{if(this.v){if(hi(this.i,"reset"))return-1;Fc.has(this.v)&&await this.j.stop();const l=await a([]);return this.M||(await this.u.I(),delete this.u.audioContext),this.l.C(),l}},this.j.reset=n.bind(this),n.toString=s.toString;break;case"fs":this.j.fs={},Object.keys(s).forEach(l=>{const c=io(r,this.D,l,this.v);c.toString=s[l].toString,this.j.fs[l]=c});break;default:a.toString=s.toString,this.j[Iu(o)]=a}}es()()}}const aP="auxclick click contextmenu dblclick keydown keyup mousedown mouseup touchend".split(" "),lP=[0,4096,0,0,0,0,-1,-1,-1,-1,0,128,0,0,0,0,0,0,0,0];class eD{constructor({audioContext:e,u:n,M:r,inputChannelCount:i,outputChannelCount:o}){this.o=this.h=this.ia=this.v=this.D=void 0,this.za=!0,this.l=new Ax,this.i=new Nm,this.m=new Im,n.l=this.l,this.M=r,this.u=n,this.u.onPlayStateChange=this.u.onPlayStateChange.bind(n),this.j={},this.C=0,this.g={},this.O=new SharedArrayBuffer(lP.length*Int32Array.BYTES_PER_ELEMENT),this.G=new Int32Array(this.O),r&&Atomics.store(this.G,6,e.sampleRate),i&&Atomics.store(this.G,9,i),o&&Atomics.store(this.G,8,o),this.Ca=new SharedArrayBuffer(524288*Float64Array.BYTES_PER_ELEMENT),this.Da=new SharedArrayBuffer(524288*Float64Array.BYTES_PER_ELEMENT),this.V=new SharedArrayBuffer(3072*Int32Array.BYTES_PER_ELEMENT),this.s=new Int32Array(this.V),this.onPlayStateChange=this.onPlayStateChange.bind(this),this.B=this.B.bind(this),Xt()()}async I(){this.o&&(this.o.terminate(),delete this.o),this.u&&this.u.I&&(await this.u.I(),delete this.u.I),this.h&&(this.h[Ms](),delete this.h),this.m&&this.m.I()}get L(){return this.j}$({data:[e,n,r]}){var i=Atomics.load(this.G,18);const o=Atomics.load(this.G,17);i=(3*i+o)%1024,Atomics.store(this.s,i,e),Atomics.store(this.s,i+1,n),Atomics.store(this.s,i+2,r),Atomics.add(this.G,18,1)}async R(){return hi(this.i,"pause")?-1:(this.i.ia(),Atomics.store(this.G,4,1),await WE(this.i),this.onPlayStateChange("realtimePerformancePaused"),0)}async T(){Atomics.load(this.G,4)===1&&Atomics.load(this.G,5)!==1&&Atomics.load(this.G,2)===1&&(Atomics.store(this.G,4,0),Atomics.notify(this.G,4),this.onPlayStateChange("realtimePerformanceResumed"))}async onPlayStateChange(e){if(this===void 0)console.log("Failed to announce playstatechange",e);else if(this.v=e,this.m&&e){switch(e){case"realtimePerformanceStarted":Xt()();try{await this.B()}catch(n){console.error(n)}break;case"realtimePerformanceEnded":this.i.X(),Object.values(this.g).forEach(n=>{this.h.callUncloned(n.apiKey,n.argumentz).then(n.resolveCallback)}),this.g={},Xt()(),lP.forEach((n,r)=>{Atomics.store(this.G,r,n)});break;case"renderStarted":this.m.C(),this.i.U();break;case"renderEnded":Xt()(),this.m.B(),this.i&&this.i.o()}try{await this.u.onPlayStateChange(e)}catch(n){console.error(n)}}}async B(){Xt()();const e=Atomics.load(this.G,8),n=Atomics.load(this.G,9);this.u.ba=Atomics.load(this.G,10),this.u.pa=Atomics.load(this.G,16);const r=Atomics.load(this.G,7),i=Atomics.load(this.G,6);this.u.qa=r,this.u.sampleRate=i,this.u.Ub=n,this.u.da=e}async J({Z:e,withPlugins:n}){n&&0<n.length&&(n=await Em(n)),Xt()();var r=new Worker((window.URL||window.webkitURL).createObjectURL(new Blob([`(function(){/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var m=this||self;function r(a,b){a=a.split(".");var c=m;a[0]in c||"undefined"==typeof c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===b?c[d]&&c[d]!==Object.prototype[d]?c=c[d]:c=c[d]={}:c[d]=b}function u(a,b){B.prototype[a]=b};const aa=Symbol("Comlink.proxy"),ba=Symbol("Comlink.endpoint"),ca=Symbol("Comlink.releaseProxy"),da=Symbol("Comlink.thrown"),ea=a=>"object"==typeof a&&null!==a||"function"==typeof a,ia=new Map([["proxy",{M:a=>ea(a)&&a[aa],T(a){const {port1:b,port2:c}=new MessageChannel;return fa(a,b),[c,[c]]},N:a=>(a.start(),ha(a))}],["throw",{M:a=>ea(a)&&da in a,T({value:a}){let b;return b=a instanceof Error?{R:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{R:!1,value:a},[b,[]]},N(a){if(a.R)throw Object.assign(Error(a.value.message),
a.value);throw a.value;}}]]);
function fa(a,b=self){b.addEventListener("message",function e(d){if(d&&d.data){var h=d.data.argumentList,{id:f,type:g,path:k}=Object.assign({path:[]},d.data);h=(h||[]).map(E);try{const n=k.slice(0,-1).reduce((p,t)=>p[t],a),q=k.reduce((p,t)=>p[t],a);switch(g){case "GET":var l=q;break;case "SET":n[k.slice(-1)[0]]=E(d.data.value);l=!0;break;case "APPLY":l=q.apply(n,h);break;case "CONSTRUCT":l=Object.assign(new q(...h),{[aa]:!0});break;case "ENDPOINT":const {port1:p,port2:t}=new MessageChannel;fa(a,t);
l=ja(p,[p]);break;case "RELEASE":l=void 0;break;default:return}}catch(n){l={value:n,[da]:0}}Promise.resolve(l).catch(n=>({value:n,[da]:0})).then(n=>{const [q,p]=ka(n);n={...q};n.id=f;b.postMessage(n,p);"RELEASE"===g&&(b.removeEventListener("message",e),la(b))})}});b.start&&b.start()}function la(a){"MessagePort"===a.constructor.name&&a.close()}
function ha(a){return function h(c,d=[],e=function(){}){let f=!1;const g=new Proxy(e,{get(k,l){if(ma(f),l===ca)return()=>I(c,{type:"RELEASE",path:d.map(n=>n.toString())}).then(()=>{la(c);f=!0});if("then"===l){if(0===d.length)return{then:()=>g};k=I(c,{type:"GET",path:d.map(n=>n.toString())}).then(E);return k.then.bind(k)}return h(c,[...d,l])},set(k,l,n){ma(f);const [q,p]=ka(n);return I(c,{type:"SET",path:[...d,l].map(t=>t.toString()),value:q},p).then(E)},apply(k,l,n){ma(f);k=d[d.length-1];if(k===ba)return I(c,
{type:"ENDPOINT"}).then(E);if("bind"===k)return h(c,d.slice(0,-1));const [q,p]=oa(n);n={type:"APPLY"};n.path=d.map(t=>t.toString());n.argumentList=q;return I(c,n,p).then(E)},construct(k,l){ma(f);const [n,q]=oa(l);k={type:"CONSTRUCT"};k.path=d.map(p=>p.toString());k.argumentList=n;return I(c,k,q).then(E)}});return g}(a,[],void 0)}function ma(a){if(a)throw Error("Proxy has been released and is not useable");}
function oa(a){a=a.map(ka);const b=(c=a.map(d=>d[1]),Array.prototype.concat.apply([],c));return[a.map(d=>d[0]),b];var c}const pa=new WeakMap;function ja(a,b){return pa.set(a,b),a}function ka(a){for(const [b,c]of ia)if(c.M(a)){const [d,e]=c.T(a);return[{type:"HANDLER",name:b,value:d},e]}return[{type:"RAW",value:a},pa.get(a)||[]]}function E(a){switch(a.type){case "HANDLER":return ia.get(a.name).N(a.value);case "RAW":return a.value}}
function I(a,b,c){return new Promise(d=>{const e=Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-");a.addEventListener("message",function g(f){f.data&&f.data.id&&f.data.id===e&&(a.removeEventListener("message",g),d(f.data))});a.start&&a.start();b.id=e;a.postMessage(b,c)})};function qa(){}qa.prototype.g=!1;qa.prototype.port=void 0;qa.prototype.F=()=>{};qa.prototype.o=()=>{};const ra=a=>()=>a.exports.csoundCreateWasi();ra.toString=()=>"create = async () => undefined;";const sa=a=>b=>a.exports.csoundDestroy(b);sa.toString=()=>"destroy = async () => undefined;";const ta=a=>()=>a.exports.csoundGetAPIVersion();ta.toString=()=>"getAPIVersion = async () => Number;";const ua=a=>()=>a.exports.csoundGetVersion();ua.toString=()=>"getVersion = async () => Number;";const va=a=>(b,c)=>a.exports.csoundInitialize(c);va.toString=()=>"initialize = async () => Number;";const J=new TextDecoder("utf8"),wa=new TextEncoder("utf8");const N=a=>{const b=a.indexOf("\\x00");return-1<b?a.substr(0,b):a};const O=(a,b)=>{a.exports.freeStringMem(b)},P=(a,b)=>{if("string"!==typeof b)console.error("Expected string but got",typeof b);else{b=wa.encode(b);var c=a.exports.allocStringMem(b.length);(new Uint8Array(a.h.memory.buffer,c,b.length+1)).set(b);return c}};const xa=a=>(b,c)=>{c=P(a,c);b=a.exports.csoundParseOrc(b,c);O(a,c);return b};xa.toString=()=>"parseOrc = async (orchestra) => Object;";const ya=a=>(b,c)=>a.exports.csoundCompileTree(b,c);ya.toString=()=>"compileTree = async (tree) => Number;";const za=a=>(b,c)=>{c=P(a,c);b=a.exports.csoundCompileOrc(b,c);O(a,c);return b};za.toString=()=>"compileOrc = async (orchestra) => Number;";const Aa=a=>(b,c)=>{c=P(a,c);b=a.exports.csoundEvalCode(b,c);O(a,c);return b};Aa.toString=()=>"csoundEvalCode = async (orchestra) => Number;";
const Ba=a=>b=>a.exports.csoundStartWasi(b);Ba.toString=()=>"start = async () => Number;";const Ca=a=>(b,c,d=1)=>{c=P(a,c);b=a.exports.csoundCompileCSD(b,c,d,0);O(a,c);return b};Ca.toString=()=>"compileCSD = async (csoundDocument) => Number;";const Da=a=>b=>a.exports.csoundPerform(b);Da.toString=()=>"perform = async () => Number;";const Ea=a=>b=>a.exports.csoundPerformKsmpsWasi(b);Ea.toString=()=>"performKsmps = async (csound) => Number;";const Fa=a=>b=>a.exports.csoundPerformBuffer(b);
Fa.toString=()=>"performBuffer = async (csound) => Number;";const Ga=a=>b=>a.exports.csoundStop(b);Ga.toString=()=>"stop = async () => undefined;";const Ha=a=>b=>a.exports.csoundCleanup(b);Ha.toString=()=>"cleanup = async () => Number;";const Ia=a=>b=>a.exports.csoundResetWasi(b);Ia.toString=()=>"reset = async () => Number;";const Ja=[["debug_mode","int"],["buffer_frames","int"],["hardware_buffer_frames","int"],["displays","int"],["ascii_graphs","int"],["postscript_graphs","int"],["message_level","int"],["tempo","int"],["ring_bell","int"],["use_cscore","int"],["terminate_on_midi","int"],["heartbeat","int"],["defer_gen01_load","int"],["midi_key","int"],["midi_key_cps","int"],["midi_key_oct","int"],["midi_key_pch","int"],["midi_velocity","int"],["midi_velocity_amp","int"],["no_default_paths","int"],["number_of_threads",
"int"],["syntax_check_only","int"],["csd_line_counts","int"],["compute_weights","int"],["realtime_mode","int"],["sample_accurate","int"],["sample_rate_override","MYFLT"],["control_rate_override","MYFLT"],["nchnls_override","int"],["nchnls_i_override","int"],["e0dbfs_override","MYFLT"],["daemon","int"],["ksmps_override","int"],["FFT_library","int"]],Ka=[["device_name","char",64],["interface_name","char",64],["device_id","char",64],["midi_module","char",64],["isOutput","int"]],Na=[["type","int"],["lexme",
"ptr"],["value","int"],["fvalue","double"],["optype","ptr"],["next","ptr"]],Oa=[["type","int"],["value","ptr"],["rate","int"],["len","int"],["line","int"],["locn","uint64"],["left","ptr"],["right","ptr"],["next","ptr"],["markup","ptr"]];const Pa={ab:4,hb:8,Va:8,char:1,$a:8,cb:4,ib:8},Q=a=>a?a.reduce((b,[,c])=>Pa[c]?Pa[c]+b:Q({Xa:Oa,Wa:Na}[c])+b,0):0;Q(Oa);Q(Na);Q(Ja);const Qa=Q(Ka);const Ra=(a,b)=>{[a]=a.reduce(([c,d],[e,h,...f])=>{f="char"===h?Pa[h]*f[0]:Pa[h];h="char"===h?N(J.decode(b.subarray(d,f)))||"":b[d];c[e]=h;return[c,d+f]},[{},0]);return a};const Sa=a=>b=>a.exports.csoundGetSr(b);Sa.toString=()=>"getSr = async () => Number;";const Ta=a=>b=>a.exports.csoundGetKr(b);Ta.toString=()=>"getKr = async () => Number;";const Ua=a=>b=>a.exports.csoundGetKsmps(b);Ua.toString=()=>"getKsmps = async () => Number;";const Va=a=>b=>a.exports.csoundGetNchnls(b);Va.toString=()=>"getNchnls = async () => Number;";const Wa=a=>b=>a.exports.csoundGetNchnlsInput(b);Wa.toString=()=>"getNchnlsInput = async () => Number;";const Xa=a=>b=>a.exports.csoundGet0dBFS(b);
Xa.toString=()=>"get0dBFS = async () => Number;";const Ya=a=>b=>a.exports.csoundGetA4(b);Ya.toString=()=>"getA4 = async () => Number;";const Za=a=>b=>a.exports.csoundGetCurrentTimeSamples(b);Za.toString=()=>"getCurrentTimeSamples = async () => Number;";const $a=a=>b=>a.exports.csoundGetSizeOfMYFLT(b);$a.toString=()=>"getSizeOfMYFLT = async () => Number;";const ab=a=>(b,c)=>{c=P(a,c);b=a.exports.csoundSetOption(b,c);O(a,c);return b};ab.toString=()=>"setOption = async (option) => Number;";
const bb=a=>(b,c)=>{a.exports.csoundSetParams(b,c)};bb.toString=()=>"setParams = async (csoundParams) => undefined;";const cb=a=>b=>{var c=a.h.memory.buffer;const d=Q(Ja),e=a.exports.allocCsoundParamsStruct();c=new Uint8Array(c,e,d);a.exports.csoundGetParams(b,e);b=Ra(Ja,c);a.exports.freeCsoundParams(e);return b};cb.toString=()=>"getParams = async () => CSOUND_PARAMS;";const db=a=>b=>a.exports.csoundGetDebug(b);db.toString=()=>"getDebug = async () => Number;";
const eb=a=>(b,c)=>{a.exports.csoundSetDebug(b,c)};eb.toString=()=>"setDebug = async (number) => undefined;";const fb=a=>b=>a.exports.csoundGetInputBufferSize(b);fb.toString=()=>"getInputBufferSize = async () => Number;";const gb=a=>b=>a.exports.csoundGetOutputBufferSize(b);gb.toString=()=>"getOutputBufferSize = async () => Number;";const hb=a=>b=>a.exports.csoundGetInputBuffer(b);hb.toString=()=>"getInputBuffer = async () => Number;";const ib=a=>b=>a.exports.csoundGetOutputBuffer(b);ib.toString=()=>"getOutputBuffer = async () => Number;";const jb=a=>b=>a.exports.csoundGetSpin(b);jb.toString=()=>"getSpin = async (csound) => Number;";
const kb=a=>b=>a.exports.csoundGetSpout(b);kb.toString=()=>"getSpout = async () => Number;";const lb=a=>{const b=[];for(let c=0;c<a;c++)b.push(c);return b};const mb=a=>(b,c)=>{const d=a.h.memory.buffer,e=a.exports.csoundGetMIDIDevList(b,void 0,c?1:0);if(0===e)return[];const h=a.exports.allocCsMidiDeviceStruct(e);a.exports.csoundGetMIDIDevList(b,h,c?1:0);const f=new Uint8Array(d,h,Qa*e);b=lb(e).map(g=>Ra(Ka,f.subarray(g*Qa,Qa)));a.exports.freeCsMidiDeviceStruct(h);return b};mb.toString=()=>"getMIDIDevList = async (isOutput) => Object;";
const nb=a=>b=>{var c=a.h.memory.buffer;b=a.exports.getRtMidiName(b);c=new Uint8Array(c,b,128);return N(J.decode(c))||""};nb.toString=()=>"getRtMidiName = async () => String;";const ob=a=>(b,c,d,e)=>{a.exports.pushMidiMessage(b,c,d,e)};ob.toString=()=>"midiMessage = async (status, data1, data2) => undefined;";const pb=a=>(b,c)=>{c=P(a,c);b=a.exports.csoundInputMessage(b,c);O(a,c);return b};pb.toString=()=>"inputMessage = async (scoreEvent) => Number;";const qb=a=>(b,c)=>{c=P(a,c);b=a.exports.csoundInputMessageAsync(b,c);O(a,c);return b};qb.toString=()=>"inputMessageAsync = async (scoreEvent) => Number;";const rb=a=>(b,c)=>{c=P(a,c);b=a.exports.csoundGetControlChannelWasi(b,c);O(a,c);return b};rb.toString=()=>"getControlChannel = async (channelName) => Number;";
const sb=a=>(b,c,d)=>{c=P(a,c);a.exports.csoundSetControlChannel(b,c,d);O(a,c)};sb.toString=()=>"setControlChannel = async (channelName, value) => void;";const tb=a=>(b,c)=>{c=P(a,c);b=a.exports.csoundGetStringChannelWasi(b,c);var d=new Uint8Array(a.h.memory.buffer,b);d=J.decode(d);d=N(d);O(a,c);O(a,b);return d};tb.toString=()=>"getStringChannel = async (channelName) => String;";const ub=a=>(b,c,d)=>{c=P(a,c);d=P(a,d);a.exports.csoundSetStringChannel(b,c,d);O(a,c);O(a,d)};ub.toString=()=>"setStringChannel = async (channelName, value) => void;";const vb=a=>b=>{var c=a.h.memory.buffer;b=a.exports.csoundGetOutputName(b);c=new Uint8Array(c,b,64);return N(J.decode(c))||""};vb.toString=()=>"getOutputName = async () => String;";const wb=a=>b=>{var c=a.h.memory.buffer;b=a.exports.csoundGetInputName(b);c=new Uint8Array(c,b,64);return N(J.decode(c))||""};wb.toString=()=>"getInputName = async (csound) => String;";const xb=a=>(b,c,d)=>{c=P(a,c);d=P(a,d);b=a.exports.csoundAppendEnv(b,c,d);O(a,c);O(a,d);return b};xb.toString=()=>"appendEnv = async (csound, variable, value) => Number;";const yb=a=>b=>a.exports.csoundIsScorePending(b);yb.toString=()=>"isScorePending = async () => Number;";const zb=a=>(b,c)=>a.exports.csoundSetScorePending(b,c);zb.toString=()=>"setScorePending = async (pending) => Number;";const Ab=a=>(b,c)=>{c=P(a,c);b=a.exports.csoundReadScore(b,c);O(a,c);return b};Ab.toString=()=>"readScore = async (score) => Number;";const Bb=a=>b=>a.exports.csoundGetScoreTime(b);Bb.toString=()=>"getScoreTime = async () => Number;";const Cb=a=>b=>a.exports.csoundGetScoreOffsetSeconds(b);
Cb.toString=()=>"getScoreOffsetSeconds = async () => Number;";const Db=a=>(b,c)=>a.exports.csoundSetScoreOffsetSeconds(b,c);Db.toString=()=>"setScoreOffsetSeconds = async () => Number;";const Eb=a=>b=>a.exports.csoundRewindScore(b);Eb.toString=()=>"rewindScore = async () => undefined;";const Fb=a=>(b,c)=>a.exports.csoundTableLength(b,c);Fb.toString=()=>"tableLength = async (tableNum) => Number;";const Gb=a=>(b,c,d)=>a.exports.csoundTableGet(b,c,d);Gb.toString=()=>"tableGet = async (tableNum, tableIndex) => Number;";const Hb=a=>(b,c,d,e)=>a.exports.csoundTableSet(b,c,d,e);Hb.toString=()=>"tableSet = async (tableNum, tableIndex, value) => undefined;";
const Ib=a=>(b,c,d)=>{const e=a.exports.allocFloatArray(d.length);(new Float64Array(a.h.memory.buffer,e,d.length)).set(d);a.exports.csoundTableCopyIn(b,c,e);a.exports.freeFloatArrayMem(e)};Ib.toString=()=>"tableCopyIn = async (tableNum, float64Array) => undefined;";
const Jb=a=>(b,c)=>{var d=a.exports.csoundTableLength(b,c);if(0<d){const e=a.exports.allocFloatArray(d);a.exports.csoundTableCopyOut(b,c,e);b=new Float64Array(a.h.memory.buffer,e,d);c=new Float64Array(b.length);for(d=0;d<b.length;d++)c[d]=b[d];a.exports.freeFloatArrayMem(e);return c}};Jb.toString=()=>"tableCopyOut = async (tableNum) => ?Float64Array;";Jb.toString=Jb.toString;
const Kb=a=>(b,c)=>{const d=a.exports.allocFloatArray(1024);a.exports.csoundGetTableArgs(b,d,c);b=new Float64Array(a.h.memory.buffer,d,1024);a.exports.freeFloatArrayMem(d);return b};Kb.toString=()=>"getTableArgs = async (tableNum) => ?Float64Array;";const Lb=a=>(b,c)=>a.exports.csoundIsNamedGEN(b,c);Lb.toString=()=>"isNamedGEN = async (tableNum) => number;";
const Mb=a=>(b,c)=>{const d=a.exports.csoundIsNamedGEN(b,c);if(0<d){const e=a.exports.allocStringMem(d);a.exports.csoundGetNamedGEN(b,e,c,d);b=new Uint8Array(a.h.memory.buffer,e,d);return J.decode(b)}};Mb.toString=()=>"getNamedGEN = async (tableNum) => ?string;";function Nb(a){return(b,c,d)=>{b="string"===typeof d?wa.encode(d):d;a.h.writeFile(c,b)}}r("writeFile$$module$src$filesystem$worker_fs",Nb);Nb.toString=()=>"async (path, data) => void";function Ob(a){return(b,c,d)=>{b="string"===typeof d?wa.encode(d):d;a.h.appendFile(c,b)}}r("appendFile$$module$src$filesystem$worker_fs",Ob);Ob.toString=()=>"async (path, data) => void";function Pb(a){return(b,c)=>a.h.readFile(c)}r("readFile$$module$src$filesystem$worker_fs",Pb);Pb.toString=()=>"async (path) => ?Uint8Array";
function Qb(a){return(b,c)=>a.h.unlink(c)}r("unlink$$module$src$filesystem$worker_fs",Qb);Qb.toString=()=>"async (path) => void";function Rb(a){return(b,c)=>a.h.readdir(c)}r("readdir$$module$src$filesystem$worker_fs",Rb);Rb.toString=()=>"async (path) => string[]";function Sb(a){return(b,c)=>a.h.mkdir(c)}r("mkdir$$module$src$filesystem$worker_fs",Sb);Sb.toString=()=>"async (path) => void";const R={};R.writeFile=Nb;R.appendFile=Ob;R.readFile=Pb;R.unlink=Qb;R.readdir=Rb;R.mkdir=Sb;const Tb={csoundCreate:ra,csoundDestroy:sa,csoundGetAPIVersion:ta,csoundGetVersion:ua,csoundInitialize:va,csoundParseOrc:xa,csoundCompileTree:ya,csoundCompileOrc:za,csoundEvalCode:Aa,csoundStart:Ba,csoundCompileCSD:Ca,csoundPerform:Da,csoundPerformKsmps:Ea,csoundPerformBuffer:Fa,csoundStop:Ga,csoundCleanup:Ha,csoundReset:Ia,csoundGetSr:Sa,csoundGetKr:Ta,csoundGetKsmps:Ua,csoundGetNchnls:Va,csoundGetNchnlsInput:Wa,csoundGet0dBFS:Xa,csoundGetA4:Ya,csoundGetCurrentTimeSamples:Za,csoundGetSizeOfMYFLT:$a,
csoundSetOption:ab,csoundSetParams:bb,csoundGetParams:cb,csoundGetDebug:db,csoundSetDebug:eb,csoundGetInputBufferSize:fb,csoundGetOutputBufferSize:gb,csoundGetInputBuffer:hb,csoundGetOutputBuffer:ib,csoundGetSpin:jb,csoundGetSpout:kb,csoundGetMIDIDevList:mb,csoundSetMidiCallbacks:a=>b=>{a.exports.csoundSetMidiCallbacks(b)},csoundGetRtMidiName:nb,csoundGetMidiOutFileName:a=>b=>{var c=a.h.memory.buffer;b=a.exports.getMidiOutFileName(b);c=new Uint8Array(c,b,128);b&&0<b.length&&O(a,b);return N(J.decode(c))||
""},csoundPushMidiMessage:ob,_isRequestingRtMidiInput:a=>b=>a.exports.isRequestingRtMidiInput(b),csoundInputMessage:pb,csoundInputMessageAsync:qb,csoundGetControlChannel:rb,csoundSetControlChannel:sb,csoundGetStringChannel:tb,csoundSetStringChannel:ub,csoundGetInputName:wb,csoundGetOutputName:vb,csoundAppendEnv:xb,csoundShouldDaemonize:a=>b=>a.exports.csoundShouldDaemonize(b),csoundIsScorePending:yb,csoundSetScorePending:zb,csoundReadScore:Ab,csoundGetScoreTime:Bb,csoundGetScoreOffsetSeconds:Cb,csoundSetScoreOffsetSeconds:Db,
csoundRewindScore:Eb,csoundTableLength:Fb,csoundTableGet:Gb,csoundTableSet:Hb,csoundTableCopyIn:Ib,csoundTableCopyOut:Jb,csoundGetTable:Jb,csoundGetTableArgs:Kb,csoundIsNamedGEN:Lb,csoundGetNamedGEN:Mb,fs:R};function Ub(a){const {fs:b,...c}=Tb;return{...Object.keys(c).reduce((d,e)=>{d[e]=c[e](a);return d},{}),...Object.keys(b).reduce((d,e)=>{d[e]=b[e](a);return d},{})}};void 0!==m&&(m={});m.BigInt||(m.BigInt=void 0===BigInt?Number:BigInt);const Vb=m.BigInt(1)|m.BigInt(2)|m.BigInt(4)|m.BigInt(8)|m.BigInt(16)|m.BigInt(32)|m.BigInt(64)|m.BigInt(128)|m.BigInt(256)|m.BigInt(2097152)|m.BigInt(4194304)|m.BigInt(8388608)|m.BigInt(134217728),Wb=m.BigInt(0);function Xb(a){let b=arguments[0];for(let d=1;d<arguments.length;d++){const e=arguments[d];if(0==e.lastIndexOf("/",0))b=e;else{var c;(c=""==b)||(c=b.length-1,c=0<=c&&b.indexOf("/",c)==c);c?b+=e:b+="/"+e}}return b}
function S(a){if(""==a)return".";let b="";0==a.lastIndexOf("/",0)&&(b="/",0==a.lastIndexOf("//",0)&&0!=a.lastIndexOf("///",0)&&(b="//"));a=a.split("/");const c=[];for(let d=0;d<a.length;d++){const e=a[d];""!=e&&"."!=e&&(".."!=e||!b&&!c.length||".."==c[c.length-1]?c.push(e):c.pop())}return b+c.join("/")||"."};function T(a){return/^\\//g.test(a)?a:\`/\${a}\`}function Yb(){return"undefined"===typeof performance||"undefined"===typeof performance.now?Date.now()-Date.now():performance.now()}function Zb(a){var b=a.reduce((d,e)=>d+e.length,0);if(0!==a.length){b=new Uint8Array(b);var c=0;for(const d of a)b.set(d,c),c+=d.length;return b}}
function B(){this.fd=Array.from({length:4});this.fd[0]={fd:0,path:"/dev/stdin",seekPos:m.BigInt(0),buffers:[]};this.fd[1]={fd:1,path:"/dev/stdout",seekPos:m.BigInt(0),buffers:[]};this.fd[2]={fd:2,path:"/dev/stderr",seekPos:m.BigInt(0),buffers:[]};this.fd[3]={fd:3,path:"/",seekPos:m.BigInt(0),buffers:[]};this.g=this.g.bind(this);this.i=0}B.prototype.start=function(a){this.i=Yb();a.exports._start()};
function $b(a,b){const c={};b=WebAssembly.Module.imports(b);for(const d of b)"function"===d.kind&&d.module.startsWith("wasi_")&&("object"!==typeof c[d.module]&&(c[d.module]={}),c[d.module][d.name]=a[d.name].bind(a));return c}B.prototype.g=function(){this.view&&this.view.buffer&&this.view.buffer.byteLength||(this.view=new DataView(this.memory.buffer));return this.view};function ac(a){const b=Math.trunc(a);return m.BigInt(b)*m.BigInt(1E6)+m.BigInt(Math.round(1E6*(a-b)))}
function bc(a,b){switch(b){case 1:return Math.floor(Yb());case 0:return ac(Date.now());case 2:case 3:return Math.floor(Yb()-a.i);default:return 0}}B.prototype.$=function(){return 0};u("args_get",B.prototype.$);B.prototype.aa=function(){return 0};u("args_sizes_get",B.prototype.aa);B.prototype.ba=function(){return 0};u("clock_res_get",B.prototype.ba);B.prototype.ca=function(a,b,c){this.g().setBigUint64(c,m.BigInt(bc(this,a)),!0);return 0};u("clock_time_get",B.prototype.ca);B.prototype.da=function(){return 0};
u("environ_get",B.prototype.da);B.prototype.ea=function(){return 0};u("environ_sizes_get",B.prototype.ea);B.prototype.fa=function(){return 52};u("fd_advise",B.prototype.fa);B.prototype.ga=function(){return 52};u("fd_allocate",B.prototype.ga);B.prototype.ha=function(){return 0};u("fd_close",B.prototype.ha);B.prototype.ia=function(){return 0};u("fd_datasync",B.prototype.ia);
B.prototype.ja=function(a,b){a=this.g();a.setUint8(b+4,4);a.setUint16(b+2,0,!0);a.setUint16(b+4,0,!0);a.setBigUint64(b+8,m.BigInt(Vb),!0);a.setBigUint64(b+8+8,m.BigInt(Wb),!0);return 0};u("fd_fdstat_get",B.prototype.ja);B.prototype.ka=function(){return 52};u("fd_fdstat_set_flags",B.prototype.ka);B.prototype.la=function(){return 0};u("fd_fdstat_set_rights",B.prototype.la);
B.prototype.ma=function(a,b){let c=0;this.fd[a]&&(c=this.fd[a].buffers.reduce(function(e,h){return e+(null==h?void 0:h.byteLength)?null==h?void 0:h.byteLength:0},0));const d=this.g();d.setBigUint64(b,m.BigInt(a),!0);b+=8;d.setBigUint64(b,m.BigInt(a),!0);b+=8;d.setUint8(b,4);b+=8;d.setBigUint64(b,m.BigInt(1),!0);b+=8;d.setBigUint64(b,m.BigInt(c),!0);b+=8;d.setBigUint64(b,ac(this.i),!0);b+=8;d.setBigUint64(b,ac(this.i),!0);d.setBigUint64(b+8,ac(this.i),!0);return 0};u("fd_filestat_get",B.prototype.ma);
B.prototype.na=function(){return 0};u("fd_filestat_set_size",B.prototype.na);B.prototype.oa=function(){return 0};u("fd_filestat_set_times",B.prototype.oa);B.prototype.pa=function(){return 0};u("fd_pread",B.prototype.pa);B.prototype.qa=function(a,b){if(!this.fd[a]&&!this.fd[a-1])return 8;var {path:c}=this.fd[a];a=this.g();c=wa.encode(c);(new Uint8Array(a.buffer)).set(c,b);return 0};u("fd_prestat_dir_name",B.prototype.qa);
B.prototype.ra=function(a,b){if(!this.fd[a])return 8;var {path:c}=this.fd[a];a=this.g();c=wa.encode(c);a.setUint8(b,0);a.setUint32(b+4,c.byteLength,!0);return 0};u("fd_prestat_get",B.prototype.ra);B.prototype.sa=function(a,b,c,d,e){console.log("fd_pwrite",a,b,c,d,e,arguments);return 0};u("fd_pwrite",B.prototype.sa);
B.prototype.ta=function(a,b,c,d){const e=this.fd[a]&&this.fd[a].buffers;var h=e.reduce((q,p)=>q+p.length,0);const f=this.g();if(e&&0!==e.length){var g=Number(this.fd[a].seekPos),k=0,l=!1;if(g>=h)return a=f.getUint32(b,!0),f.setUint8(a,"\\x00"),f.setUint32(d,0,!0),0;for(h=0;h<c;h++){var n=b+8*h;const q=f.getUint32(n,!0);n=f.getUint32(n+4,!0);l||(k+=n,Array.from({length:n},(p,t)=>t).reduce((p,t)=>{if(l)return p;const [H,L]=p;let C=p=0,x=!1,v=0,F;if(0===t)for(;!x;)F=e[p]?e[p].byteLength:0,v<=g&&F+v>g?
(x=!0,C=g-v):(v+=F,p+=1);else p=H,C=L;e[p]?(f.setUint8(q+t,e[p][C]),C+1>=e[p].byteLength?(p=H+1,C=0):C+=1):(f.setUint8(q+t,0),g+=t,l=!0);return[p,C]},[0,0]),l||(g+=n))}this.fd[a].seekPos=m.BigInt(g);f.setUint32(d,k,!0);return 0}console.error("Reading non existent file",a,this.fd[a])};u("fd_read",B.prototype.ta);B.prototype.ua=function(){return 0};u("fd_readdir",B.prototype.ua);B.prototype.va=function(){return 0};u("fd_renumber",B.prototype.va);
B.prototype.wa=function(a,b,c,d){const e=this.g();switch(c){case 1:let h;this.fd[a].seekPos=(null!=(h=this.fd[a].seekPos)?h:m.BigInt(0))+m.BigInt(b);break;case 2:c=(this.fd[a].buffers||[]).reduce((f,g)=>f+g.length,0);this.fd[a].seekPos=BigInt(c)+BigInt(b);break;case 0:this.fd[a].seekPos=BigInt(b)}e.setBigUint64(d,this.fd[a].seekPos,!0);return 0};u("fd_seek",B.prototype.wa);B.prototype.xa=function(){return 0};u("fd_sync",B.prototype.xa);
B.prototype.ya=function(a,b){const c=this.g();this.fd[a].seekPos||(this.fd[a].seekPos=m.BigInt(0));c.setBigUint64(b,this.fd[a].seekPos,!0);return 0};u("fd_tell",B.prototype.ya);
B.prototype.za=function(a,b,c,d){let e=!1;const h=this.g();this.fd[a].buffers=this.fd[a].buffers||[];this.fd[a].seekPos===m.BigInt(0)&&0<this.fd[a].buffers.length&&(e=!0);let f=0;for(let l=0;l<c;l++){var g=b+8*l,k=h.getUint32(g,!0);g=h.getUint32(g+4,!0);f+=g;k=new Uint8Array(h.buffer,k,g);e?this.fd[a].buffers.unshift(k.slice(0,g)):this.fd[a].buffers.push(k.slice(0,g))}this.fd[a].seekPos+=m.BigInt(f);h.setUint32(d,f,!0);[1,2].includes(a)&&console.log(J.decode(Zb(this.fd[a].buffers)));return 0};
u("fd_write",B.prototype.za);B.prototype.Aa=function(){return 0};u("path_create_directory",B.prototype.Aa);B.prototype.Ba=function(){return 0};u("path_filestat_get",B.prototype.Ba);B.prototype.Ca=function(){return 0};u("path_filestat_set_times",B.prototype.Ca);B.prototype.Da=function(){return 0};u("path_link",B.prototype.Da);
B.prototype.Ea=function(a,b,c,d,e,h,f,g,k){b=this.g();e=(this.fd[a]||{path:"/"}).path;c=new Uint8Array(b.buffer,c,d);c=J.decode(c);const l=T(S(Xb(3===a?"":e,c)));if(l.startsWith("/..")||"/._"===l||"/.AppleDouble"===l)return 8;(a=Object.values(this.fd).find(n=>n.path===l&&Array.isArray(n.buffers)))?c=a.fd:(c=this.fd.length,this.fd[c]={fd:c});this.fd[c]={...this.fd[c],path:l,type:"file",seekPos:m.BigInt(0),buffers:a?this.fd[c].buffers:[]};b.setUint32(k,c,!0);return 0};u("path_open",B.prototype.Ea);
B.prototype.Fa=function(){return 0};u("path_readlink",B.prototype.Fa);B.prototype.Ga=function(){return 0};u("path_remove_directory",B.prototype.Ga);B.prototype.Ha=function(){return 0};u("path_rename",B.prototype.Ha);B.prototype.Ia=function(){return 0};u("path_symlink",B.prototype.Ia);B.prototype.Ja=function(){return 0};u("path_unlink_file",B.prototype.Ja);B.prototype.Ka=function(){return 0};u("poll_oneoff",B.prototype.Ka);B.prototype.La=function(){return 0};u("proc_exit",B.prototype.La);
B.prototype.Ma=function(){return 0};u("proc_raise",B.prototype.Ma);B.prototype.Na=function(){return 0};u("random_get",B.prototype.Na);B.prototype.Oa=function(){return 0};u("sched_yield",B.prototype.Oa);B.prototype.Pa=function(){return 52};u("sock_recv",B.prototype.Pa);B.prototype.Qa=function(){return 52};u("sock_send",B.prototype.Qa);B.prototype.Ra=function(){return 52};u("sock_shutdown",B.prototype.Ra);function cc(a,b){return(a=Object.values(a.fd).find(({path:c})=>c===b))&&a.buffers}
B.prototype.readdir=function(a){const b=(T(S(a))+"/").replace("//","/"),c=[];Object.values(this.fd).forEach(({path:d})=>!/\\//g.test(d.replace(b,""))&&c.push(d));return c.map(d=>d.replace(b,"").replace(/^\\//g,"")).filter(d=>!!d)};B.prototype.writeFile=function(a,b){const c=T(S(a));a=Object.keys(this.fd).length;const d=Object.values(this.fd).find(({path:e})=>e===c);this.fd[a]={fd:a,path:c,seekPos:m.BigInt(0),buffers:[b]};d&&delete this.fd[d]};
B.prototype.appendFile=function(a,b){var c=T(S(a));(c=cc(this,c))?c.push(b):console.error(\`Can't append to non-existing file \${a}\`)};B.prototype.readFile=function(a){a=T(S(a));if(a=cc(this,a))return Zb(a)};B.prototype.unlink=function(a){const b=T(S(a));(a=Object.values(this.fd).find(({path:c})=>c===b))?delete this.fd[a]:console.error(\`While trying to unlink \${b}, path not found\`)};
B.prototype.mkdir=function(a){const b=T(S(a)),c=[];Object.values(this.fd).forEach(({path:d})=>d.startsWith(b)&&c.push(d));0<c.length?console.warn(\`mkdir: path \${a} already exists\`):(a=Object.keys(this.fd).length,this.fd[a]={fd:a,path:b})};function dc(a){for(;0<a.length;)a.pop()};let V,ec,fc;V=()=>()=>{};ec=()=>()=>{};fc=()=>{};/*
 zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */
function gc(a){const b=a.length;let c=0,d=Number.POSITIVE_INFINITY,e,h,f,g;let k,l;for(k=0;k<b;++k)a[k]>c&&(c=a[k]),a[k]<d&&(d=a[k]);const n=1<<c,q=new Uint32Array(n);e=1;h=0;for(f=2;e<=c;){for(k=0;k<b;++k)if(a[k]===e){g=0;var p=h;for(l=0;l<e;++l)g=g<<1|p&1,p>>=1;p=e<<16|k;for(l=g;l<n;l+=f)q[l]=p;++h}++e;h<<=1;f<<=1}return[q,c,d]};function hc(a,b){this.D=[];this.bufferSize=32768;this.l=this.v=this.j=this.J=0;this.u=new Uint8Array(a);this.W=!1;this.m=W;this.resize=!1;if(b||!(b={}))b.index&&(this.j=b.index),b.bufferSize&&(this.bufferSize=b.bufferSize),b.m&&(this.m=b.m),b.resize&&(this.resize=b.resize);switch(this.m){case ic:this.g=32768;this.i=new Uint8Array(this.bufferSize+33026);break;case W:this.g=0;this.i=new Uint8Array(this.bufferSize);break;default:throw Error("invalid inflate mode");}}
var ic=0,W=1,jc=new Uint16Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),kc=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]),lc=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]),mc=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]),nc=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),
oc;const pc=new Uint8Array(288);let X,qc;X=0;for(qc=pc.length;X<qc;++X)pc[X]=143>=X?8:255>=X?9:279>=X?7:8;oc=gc(pc);var rc;const sc=new Uint8Array(30);let tc,uc;tc=0;for(uc=sc.length;tc<uc;++tc)sc[tc]=5;rc=gc(sc);function Y(a,b){let c=a.v,d=a.l;const e=a.u;let h=a.j;if(h+(b-d+7>>3)>=e.length)throw Error("input buffer is broken");for(;d<b;)c|=e[h++]<<d,d+=8;a.v=c>>>b;a.l=d-b;a.j=h;return c&(1<<b)-1}
function vc(a,b){let c=a.v,d=a.l;var e=a.u;let h=a.j;var f=e.length;const g=b[0];for(b=b[1];d<b&&!(h>=f);)c|=e[h++]<<d,d+=8;e=g[c&(1<<b)-1];f=e>>>16;if(f>d)throw Error("invalid code length: "+f);a.v=c>>f;a.l=d-f;a.j=h;return e&65535}
function wc(a,b,c){let d=a.i,e=a.g;a.X=b;const h=d.length-258;var f;let g,k;for(;256!==(f=vc(a,b));)if(256>f)e>=h&&(a.g=e,d=xc(a),e=a.g),d[e++]=f;else for(f-=257,k=kc[f],0<lc[f]&&(k+=Y(a,lc[f])),f=vc(a,c),g=mc[f],0<nc[f]&&(g+=Y(a,nc[f])),e>=h&&(a.g=e,d=xc(a),e=a.g);k--;)d[e]=d[e++-g];for(;8<=a.l;)a.l-=8,a.j--;a.g=e}
function yc(a,b,c){let d=a.i,e=a.g;a.X=b;let h=d.length;var f;let g,k;for(;256!==(f=vc(a,b));)if(256>f)e>=h&&(d=zc(a),h=d.length),d[e++]=f;else for(f-=257,k=kc[f],0<lc[f]&&(k+=Y(a,lc[f])),f=vc(a,c),g=mc[f],0<nc[f]&&(g+=Y(a,nc[f])),e+k>h&&(d=zc(a),h=d.length);k--;)d[e]=d[e++-g];for(;8<=a.l;)a.l-=8,a.j--;a.g=e}function xc(a){const b=new Uint8Array(a.g-32768),c=a.g-32768,d=a.i;b.set(d.subarray(32768,b.length));a.D.push(b);a.J+=b.length;d.set(d.subarray(c,c+32768));a.g=32768;return d}
function zc(a,b){let c=Math.trunc(a.u.length/a.j+1);const d=a.u,e=a.i;b&&("number"===typeof b.O&&(c=b.O),"number"===typeof b.Z&&(c+=b.Z));2>c?(b=(d.length-a.j)/a.X[2],b=Math.trunc(b/2*258),b=b<e.length?e.length+b:e.length<<1):b=e.length*c;b=new Uint8Array(b);b.set(e);a.i=b;return a.i};function Ac(a){var b;this.j=a;this.g=0;if(b||!(b={}))b.index&&(this.g=b.index),b.verify&&(this.verify=b.verify);const c=a[this.g++],d=a[this.g++];switch(c&15){case 8:this.method=8;break;default:throw Error("unsupported compression method");}if(0!==((c<<8)+d)%31)throw Error("invalid fcheck flag:"+((c<<8)+d)%31);if(d&32)throw Error("fdict flag is not supported");this.i=new hc(a,{index:this.g,bufferSize:b.bufferSize,m:b.m,resize:b.resize})}
function Bc(a){var b=a.j,c;a:{for(c=a.i;!c.W;){var d=void 0,e=void 0,h=void 0,f=void 0,g=c,k=Y(g,3);k&1&&(g.W=!0);k>>>=1;switch(k){case 0:k=g.u;e=g.j;var l=g.i,n=g.g;h=k.length;d=l.length;g.v=0;g.l=0;if(e+1>=h)throw Error("invalid uncompressed block header: LEN");f=k[e++]|k[e++]<<8;if(e+1>=h)throw Error("invalid uncompressed block header: NLEN");h=k[e++]|k[e++]<<8;if(f===~h)throw Error("invalid uncompressed block header: length verify");if(e+f>k.length)throw Error("input buffer is broken");switch(g.m){case ic:for(;n+
f>l.length;)h=d-n,f-=h,l.set(k.subarray(e,e+h),n),n+=h,e+=h,g.g=n,l=xc(g),n=g.g;break;case W:for(;n+f>l.length;)l=zc(g,{O:2});break;default:throw Error("invalid inflate mode");}l.set(k.subarray(e,e+f),n);g.j=e+f;g.g=n+f;g.i=l;break;case 1:switch(g.m){case W:yc(g,oc,rc);break;case ic:wc(g,oc,rc);break;default:throw Error("invalid inflate mode");}break;case 2:k=Y(g,5)+257;d=Y(g,5)+1;l=Y(g,4)+4;n=new Uint8Array(jc.length);for(e=0;e<l;++e)n[jc[e]]=Y(g,3);n=gc(n);l=new Uint8Array(k+d);e=0;for(d=k+d;e<
d;)switch(h=vc(g,n),h){case 16:for(h=3+Y(g,2);h--;)l[e++]=f;break;case 17:for(h=3+Y(g,3);h--;)l[e++]=0;f=0;break;case 18:for(h=11+Y(g,7);h--;)l[e++]=0;f=0;break;default:f=l[e++]=h}f=gc(l.subarray(0,k));k=gc(l.subarray(k));switch(g.m){case W:yc(g,f,k);break;case ic:wc(g,f,k);break;default:throw Error("invalid inflate mode");}break;default:throw Error("unknown BTYPE: "+k);}}switch(c.m){case ic:{g=0;f=c.i;k=c.D;l=new Uint8Array(c.J+(c.g-32768));let q;if(0===k.length)c=c.i.subarray(32768,c.g);else{n=
0;for(d=k.length;n<d;++n)for(e=k[n],h=0,q=e.length;h<q;++h)l[g++]=e[h];n=32768;for(d=c.g;n<d;++n)l[g++]=f[n];c.D=[];c.buffer=l;c=c.buffer}}break a;case W:f=c.g;c.resize?(g=new Uint8Array(f),g.set(c.i.subarray(0,f))):g=c.i.subarray(0,f);c.buffer=g;c=c.buffer;break a;default:throw Error("invalid inflate mode");}}a.g=a.i.j;if(a.verify){a=(b[a.g++]<<24|b[a.g++]<<16|b[a.g++]<<8|b[a.g++])>>>0;b=c;if("string"===typeof b){b=[...b];g=0;for(f=b.length;g<f;g++)b[g]=(b[g].charPointAt(0)&255)>>>0;b=new Uint8Array([b])}g=
1;f=0;k=b.length;for(l=0;0<k;){e=1024<k?1024:k;k-=e;do g+=b[l++],f+=g;while(--e);g%=65521;f%=65521}if(a!==(f<<16|g)>>>0)throw Error("invalid adler-32 checksum");}return c};const Cc=({memory:a,messagePort:b,U:c})=>function(d,e,h,f){if(a){d=new Uint8Array(a.buffer,f,h);d=J.decode(d);var g=/\\n$/g.test(d);e=/^\\n/g.test(d);var k=d.split("\\n").filter(n=>0<n.length),l=[];if(0===k.length&&g||e)l.push(c.join("")),dc(c);k.forEach((n,q)=>{q+1===k.length?g?0===q?(l.push(c.join("")+n),dc(c)):l.push(n):c.push(n):0===q?(l.push(c.join("")+n),dc(c)):l.push(n)});l.forEach(n=>{n.replace(/(\\r\\n|\\n|\\r)/gm,"")&&b.F({log:n})})}},Dc=a=>{if(a&&"object"===typeof a&&"object"===typeof a.exports){if(a.exports.__wasm_call_ctors){if(a.exports.csoundModuleCreate||
a.exports.csound_opcode_init||a.exports.csound_fgen_init)return!0;console.error(a.exports,"A csound plugin turns out to be neither a plugin, opcode or module.\\nPerhaps csdl.h or module.h wasn't imported correctly?");return!1}console.error("A csound plugin didn't export __wasm_call_ctors.\\nPlease re-run wasm-ld with either --export-all or include --export=__wasm_call_ctors");return!1}console.error("Error instantiating a csound plugin, instance and/or export is missing!");return!1},Ec=a=>{function b(){let l=
0,n=1;for(;;){const q=a[c++];l+=(q&127)*n;n*=128;if(!(q&128))break}return l}1836278016!==(new Uint32Array((new Uint8Array(a.subarray(0,24))).buffer))[0]&&console.error("Wasm magic number is missing!");if(0!==a[8])return fc(),"static";let c=9;const d=b();c++;c++;c++;c++;c++;c++;c++;c++;c+=3;const e=b(),h=b(),f=b(),g=b(),k=b();return{fb:d,C:e,S:h,bb:k,V:f,gb:g}},Fc=async({Sa:a,h:b,messagePort:c})=>{const d=await WebAssembly.compile(a);a=new WebAssembly.Memory({initial:16384});const e=$b(b,d);e.s=e.s||
{};e.s.Ya=()=>0;e.s.memory=a;e.s.Za=Cc({memory:e.s.memory,U:[],messagePort:c});c=await WebAssembly.instantiate(d,e);b.memory=a;b.start(c);c.exports.__wasi_js_csoundSetMessageStringCallback();return[c,b]};
async function Gc({Ta:a,withPlugins:b=[],messagePort:c}){var d={};const e=new B;a=new Uint8Array(a);a=Bc(new Ac(a));var h=Ec(a);if("static"===h)return await Fc({messagePort:c,Sa:a,jb:d,h:e});d=h.C;const f=h.S;h=h.V;b=await b.reduce(async(x,v)=>{x=await x;let F,y;try{F=new Uint8Array(v),y=Ec(F)}catch(G){console.error("Error in plugin",G)}y&&x.push({P:y,Ua:F});return x},[]);d=Math.ceil((d+f)/65536);var g=Math.ceil(b.reduce((x,{P:v})=>"static"===v?0:x+(v.C+f),0)/65536);g=d+g+2048;const k=new WebAssembly.Memory({initial:g,
maximum:16384}),l=new WebAssembly.Table({initial:h+1,element:"anyfunc"});e.memory=k;const n=new WebAssembly.Global({value:"i32",mutable:!0},65536*g);h=new WebAssembly.Global({value:"i32",mutable:!0},65536*g);g=new WebAssembly.Global({value:"i32",mutable:!1},2048);const q=new WebAssembly.Global({value:"i32",mutable:!1},1),p=new WebAssembly.Global({value:"i32",mutable:!0},0);a=await WebAssembly.compile(a);const t=$b(e,a);let H=[],L=d;t.env=t.env||{};t.env.memory=k;t.env.__indirect_function_table=l;
t.env.__stack_pointer=n;t.env.__memory_base=g;t.env.__table_base=q;t.env.csoundLoadModules=x=>{H.forEach(v=>{if(void 0===C)console.error("csound-wasm internal: timing problem detected!");else{var F=C;if(v.exports.csoundModuleInit){var y=new WebAssembly.Global({value:"i32",mutable:!0},0),G=new WebAssembly.Global({value:"i32",mutable:!0},0),D=new WebAssembly.Global({value:"i32",mutable:!0},0);const M=new WebAssembly.Global({value:"i32",mutable:!0},0);let w=l.length;"function"===typeof v.exports.csoundModuleCreate&&
(l.grow(1),y.value=w,l.set(w,v.exports.csoundModuleCreate),w+=1);"function"===typeof v.exports.csoundModuleInit&&(l.grow(1),G.value=w,l.set(w,v.exports.csoundModuleInit),w+=1);"function"===typeof v.exports.csoundModuleDestroy&&(l.grow(1),D.value=w,l.set(w,v.exports.csoundModuleDestroy),w+=1);"function"===typeof v.exports.csoundModuleErrorCodeToString&&(l.grow(1),M.value=w,l.set(w,v.exports.csoundModuleErrorCodeToString));F.exports.csoundWasiLoadPlugin(x,y,G,D,M)}else v.exports.csound_opcode_init||
v.exports.csound_fgen_init?(y=new WebAssembly.Global({value:"i32",mutable:!0},0),G=new WebAssembly.Global({value:"i32",mutable:!0},0),D=l.length,"function"===typeof v.exports.csound_opcode_init&&(y.value=D,l.grow(1),l.set(D,v.exports.csound_opcode_init),D+=1),"function"===typeof v.exports.csound_fgen_init&&(G.value=D,l.grow(1),l.set(D,v.exports.csound_fgen_init)),F.exports.csoundWasiLoadOpcodeLibrary(x,G,y)):console.error("Plugin doesn't export nececcary functions to quality as csound plugin.")}});
return 0};t.env.csoundLoadExternals=()=>{};t.env._ZTH5errno=function(){};t.env.csoundWasiJsMessageCallback=Cc({memory:k,messagePort:c,U:[]});t.env.printDebugCallback=(x,v)=>{x=new Uint8Array(k.buffer,x,v);x=J.decode(x);console.log(x)};t["GOT.mem"]=t["GOT.mem"]||{};t["GOT.mem"].__heap_base=h;t["GOT.func"]=t["GOT.func"]||{};const C=await WebAssembly.instantiate(a,t);c=Object.assign({},C.exports);a={};c.memory=k;a.exports=c;H=await b.reduce(async(x,{P:v,Ua:F})=>{x=await x;try{const y=v.C,G=v.S,D=v.V,
M=await WebAssembly.compile(F),w=$b(e,M),na=new WebAssembly.Global({value:"i32",mutable:!1},65536*L);l.grow(D);w.env=Object.assign({},w.env);w.env.memory=k;w.env.__indirect_function_table=l;w.env.__memory_base=na;w.env.__stack_pointer=n;w.env.__table_base=q;w.env.csoundLoadModules=p;delete w.env.csoundWasiJsMessageCallback;L+=Math.ceil((y+G)/65536);const A=await WebAssembly.instantiate(M,w);Dc(A)&&(A.exports.__wasm_call_ctors(),x.push(A))}catch(y){console.error("Error while compiling csound-plugin",
y)}return x},[]);e.start(a);a.exports.__wasi_js_csoundSetMessageStringCallback();return[a,e]};const Hc=(a,b,c,d)=>e=>{const h=e.csound,f=1===b.csoundShouldDaemonize(h),g=b.csoundStart(h),k=b.csoundGetOutputName(h)||"test.wav";ec()();0!==g&&a.F(\`error: csoundStart failed while trying to render \${k},\`+" look out for errors in options and syntax");setTimeout(()=>{const l=b._isRequestingRtMidiInput(h);if(f||l||k.includes("dac"))c(e);else if(a.o("renderStarted"),d)d(e);else for(;0===b.csoundPerformKsmps(h););},0);return g};const Ic=[0,4096,0,0,0,0,-1,-1,-1,-1,0,128,0,0,0,0,0,0,0,0];let Jc,Kc,Lc;
const Mc=({B:a,A:b,I:c,G:d,H:e,Y:h,K:f})=>async g=>{var k=g.audioStreamIn,l=g.audioStreamOut;const n=g.midiBuffer,q=g.csound,p=new Int32Array(g.audioStateBuffer);Ic.forEach((Z,La)=>{Atomics.store(p,La,Z)});g=a._isRequestingRtMidiInput(q);var t=0===Atomics.load(p,9)&&a.csoundGetInputName(q).includes("adc");Atomics.load(p,8);var H=Atomics.load(p,9);Atomics.load(p,6);const L=a.csoundGetNchnls(q),C=H||t?a.csoundGetNchnlsInput(q):0,x=Atomics.load(p,6)||a.csoundGetSr(q);Atomics.store(p,8,L);Atomics.store(p,
9,C);Atomics.store(p,10,t?1:0);Atomics.store(p,6,a.csoundGetSr(q));Atomics.store(p,16,g);t=a.csoundGetKsmps(q);Atomics.store(p,7,t);const v=a.csoundGet0dBFS(q);H=[];const F=[];for(var y=0;y<L;++y)H.push(new Float64Array(l,16384*y,16384));for(l=0;l<C;++l)F.push(new Float64Array(k,16384*l,16384));f.o("realtimePerformanceStarted");Atomics.store(p,2,1);V()();k=!0;let G=0,D=0,M=0,w=0,na;l=(Z=!1)=>1===Atomics.load(p,5)||1!==Atomics.load(p,2)||0!==G||Z?(0===G&&V()(),V()(),f.o("realtimePerformanceEnded"),
V()(),c(),!0):!1;for(y=!0;!y||(na=Atomics.wait(p,0,1,1E4));){if("timed-out"===na){l(!0);break}k&&(k=!1,await new Promise(z=>{Lc=z;f.L()}),V()());1===Atomics.load(p,4)&&(await new Promise(z=>setTimeout(z,0)),d(),await new Promise(z=>setTimeout(z,0)),Atomics.wait(p,4,0),await new Promise(z=>setTimeout(z,0)),e(),await new Promise(z=>setTimeout(z,0)));if(l())break;if(g){var A=Atomics.load(p,18);if(0<A){var U=Atomics.load(p,17),K=U;for(let z=0;z<A;z++)K=(U+3*z)%1024,Atomics.load(n,K),Atomics.load(n,K+
1),Atomics.load(n,K+2);Atomics.store(p,17,(K+1)%1024);Atomics.sub(p,18,A)}}const Z=Atomics.load(p,11);A=Atomics.load(p,14)>=Z;U=a.csoundGetSpin(q);K=a.csoundGetSpout(q);const La=A&&new Float64Array(h.h.memory.buffer,U,t*C),Nc=new Float64Array(h.h.memory.buffer,K,t*L);U=Atomics.load(p,1);for(K=0;K<U;K++){if(0===D)if(0===G)G=a.csoundPerformKsmps(q),!y&&Atomics.add(p,15,t),y=!1;else if(0!==G){Atomics.store(p,2,0);l(!0);return}H.forEach((z,Ma)=>{z[w]=(Nc[D*L+Ma]||0)/v});A&&(F.forEach((z,Ma)=>{La[D*C+
Ma]=(z[M]||0)*v}),M=A&&(M+1)%16384);w=(w+1)%16384;D=(D+1)%t}A&&Atomics.sub(p,14,U);1===Atomics.compareExchange(p,19,1,0)&&await new Promise(z=>{Kc=z;b()});if(l())break;A=Atomics.load(p,12);A=Math.max(2048-(w<A?w+16384-A:w-A),0);Atomics.store(p,1,A);0===A&&await new Promise(z=>setTimeout(z,Z/x*1E3))}},Oc=({port:a})=>{const b=new qa;b.F=c=>{a.postMessage({log:c})};b.o=c=>{const d={};d.playStateChange=c;a.postMessage(d)};b.L=()=>{a.postMessage({eb:"unlocked"})};b.g=!0;return b},Pc=a=>{const b=a.port;
b.addEventListener("message",c=>{if(c.data&&c.data.unlock)c=Lc,Lc=void 0,c&&c();else{c=c.data;var d=c.reduce((e,h)=>{const f=h.id;var g=h.argumentz;h=h.apiKey;try{const k=Jc.get(h),l=k&&k.apply({},g||[]);g={};g.id=f;g.answer=l;e.push(g)}catch(k){throw Error(k);}return e},[]);b.postMessage(d);d=Kc;Kc=void 0;d&&d(c)}});b.start()},Qc=({B:a,A:b,I:c,G:d,H:e,K:h})=>async f=>{const g=f.csound;f=new Int32Array(f.audioStateBuffer);Atomics.store(f,3,1);for(h.L();1!==Atomics.load(f,5)&&0===a.csoundPerformKsmps(g);)1===
Atomics.load(f,4)&&(d(),Atomics.wait(f,4,0),e()),1===Atomics.compareExchange(f,19,1,0)&&await new Promise(k=>{Kc=k;b()});Atomics.store(f,3,0);h.o("renderEnded");c()},Rc=async a=>{const b=a.wasmDataURI,c=a.withPlugins||[],d=a.messagePort,e=a.callbackPort;V()();const h=Oc({port:d}),f=()=>e.postMessage("poll"),g=()=>e.postMessage("releaseStop"),k=()=>e.postMessage("releasePause"),l=()=>e.postMessage("releaseResumed");Pc({port:e});const [n,q]=await Gc({Ta:b,withPlugins:c,messagePort:h});n.h=q;const p=
Ub(n);Jc=new Map(Object.entries({...p,csoundStart:(t,H)=>Hc(h,p,Mc({B:p,A:f,Y:n,K:h,I:g,G:k,H:l}),Qc({B:p,A:f,K:h,h:q,I:g,G:k,H:l}))(H),Y:n}));p.csoundInitialize(0);return p.csoundCreate()};r("initialize$$module$src$workers$sab_worker",Rc);fa({initialize:Rc,callUncloned:async(a,b)=>(a=Jc.get(a))&&a.apply({},b||[])});}).call(this);
//# sourceMappingURL=__compiled.sab.worker.js.map
`])));this.o=r;const i=this.O,o=this.G,s=this.Ca,a=this.Da,l=this.s;Xt()(),this.u.A=this,Xt()(),this.l.Y.addEventListener("message",Ls(this)),this.l.Y.start(),this.l.ca.addEventListener("message",Ls(this)),this.l.ca.start(),Xt()(),this.l.ta.addEventListener("message",d=>{switch(d.data){case"poll":this.l&&this.l.ta&&this.l.ta.postMessage(Object.keys(this.g).map(f=>{const h={};return h.id=f,h.apiKey=this.g[f].apiKey,h.argumentz=this.g[f].argumentz,h}));break;case"releaseStop":this.onPlayStateChange(this.v==="renderStarted"?"renderEnded":"realtimePerformanceEnded"),this.m&&this.m.s(),this.i&&this.i.o();break;case"releasePause":this.m.fa(),this.i.ra();break;case"releaseResumed":this.m.ga(),this.i.sa();break;default:d.data.forEach(f=>{this.g[f.id].resolveCallback(f.answer),delete this.g[f.id]})}}),this.l.ta.start();const c=Ml(r);e=e(),this.h=c,r={},r.wasmDataURI=e,r.wasmTransformerDataURI=this.ia,r.messagePort=this.l.g,r.callbackPort=this.l.L,r.withPlugins=n;const u=await c.initialize(Al(r,[e,this.l.g,this.l.L]));this.D=u,this.l.Y.start(),this.l.ca.start(),Xt()(),this.j.pause=this.R.bind(this),this.j.resume=this.T.bind(this),this.j.terminateInstance=this.I.bind(this),this.j.enableAudioInput=()=>console.warn("enableAudioInput was ignored: please use -iadc option before calling start with useWorker=true"),this.j.name="Csound: Audio Worklet, Shared-Array Buffer",this.j.getNode=async()=>{const d=this.u.P;return d||await new Promise(f=>{this.j.once("onAudioNodeCreated",f)})},this.j.getAudioContext=async()=>this.u.audioContext,this.j=this.m.o(this.j),this.j.addListener("message",console.log);for(const d of Object.keys(As)){const f=io(c,u,d,this.v),h=As[d];switch(d){case"csoundCreate":break;case"csoundStart":n=async function(){if(!u||typeof u!="number")return console.error("starting csound failed because csound instance wasn't created"),-1;if(hi(this.i,"start"))return-1;this.i.la();var p={};return p.audioStateBuffer=i,p.audioStreamIn=s,p.audioStreamOut=a,p.midiBuffer=l,p.csound=u,p=await f(p),await this.i.ha(),this.l&&this.l.ta.postMessage({unlock:!0}),p},n.toString=()=>h.toString(),this.j.start=n.bind(this);break;case"csoundStop":n=async()=>(Xt(["Checking if it's safe to call stop:",Fc.has(this.v),"currentPlayState is",this.v].join(`
`))(),hi(this.i,"stop")?(Xt()(),-1):Fc.has(this.v)?(Xt()(),this.i.X(),Atomics.store(this.G,5,1),Xt()(),Atomics.store(this.G,2,0),this.v==="realtimePerformancePaused"&&(Atomics.store(this.G,4,0),Atomics.notify(this.G,4)),this.v!=="renderStarted"&&!Atomics.compareExchange(this.G,0,0,1)&&Atomics.notify(this.G,0),await this.i.na(),0):-1),this.j.stop=n.bind(this),n.toString=()=>h.toString();break;case"csoundReset":n=async()=>{if(this.v)return hi(this.i,"reset")?-1:(Fc.has(this.v)&&await this.j.stop(),this.l.C(),this.M||(await this.u.I(),delete this.u.audioContext),await f([]))},this.j.reset=n.bind(this),n.toString=()=>h.toString();break;case"csoundPushMidiMessage":n=async(p=0,m=0,v=0)=>{this.$({data:[p,m,v]})},this.j.Wb=n.bind(this),n.toString=()=>h.toString();break;case"fs":this.j.fs={},Object.keys(h).forEach(p=>{const m=io(c,u,p,this.v);m.toString=()=>h[p].toString(),this.j.fs[p]=m});break;default:n=async(...p)=>{if(this.v==="realtimePerformanceStarted"||this.v==="renderStarted"||this.i.T()){const m=this.C;this.C+=1;const v=new Promise((g,b)=>{const y=setTimeout(()=>b(Error(`Worker timed out so ${Iu(d)}() wasn't called!`)),1e4),x={resolveCallback:k=>{clearTimeout(y),g(k)}};x.apiKey=d,x.argumentz=[u,...p],this.g[m]=x});return Atomics.compareExchange(o,19,0,1),await v}return await f.apply(void 0,p)},n.toString=()=>h.toString(),this.j[Iu(d)]=n}}Xt()()}}async function Mm({va:t}){if(da()(),navigator&&navigator.requestMIDIAccess)try{const e=await navigator.requestMIDIAccess();if(e.inputs){const n=e.inputs.values();for(let r=n.next();r&&!r.done;r=n.next())da()(),r.value.onmidimessage=t}else da()()}catch{da()()}else da()()}let cP=0;class tD{constructor({audioContext:e,M:n,autoConnect:r}){this.autoConnect=r,this.M=n,this.l=void 0,this.audioContext=e,this.F=this.h=this.A=this.v=this.P=void 0,this.ba=this.pa=!1,this.da=this.aa=this.sampleRate=this.qa=void 0,this.o=this.o.bind(this),this.onPlayStateChange=this.onPlayStateChange.bind(this),this.I=this.I.bind(this),this.g=this.g.bind(this),li()()}async I(){if(this.P&&(this.P.disconnect(),delete this.P),this.audioContext){if(this.audioContext.state!=="closed")try{await this.audioContext.close()}catch{}delete this.audioContext}this.F&&(this.F[Ms](),delete this.F)}g(e,n,r){const i={};return i.contextUid=r,i.isRequestingInput=this.ba,i.inputsCount=n,i.outputsCount=this.da,i.ksmps=this.qa,i.maybeSharedArrayBuffer=this.A.za&&this.A.G,i.maybeSharedArrayBufferAudioIn=this.A.za&&this.A.Ca,i.maybeSharedArrayBufferAudioOut=this.A.za&&this.A.Da,e=new AudioWorkletNode(e,"csound-worklet-processor",{inputChannelCount:n?[n]:0,outputChannelCount:[this.da||2],processorOptions:i}),this.A.m.ea(e),e}async onPlayStateChange(e){switch(this.v=e,e){case"realtimePerformanceStarted":li()(),await this.o(),this.A&&this.A.i&&(this.A.m&&this.A.m.ma(this),this.A.i&&await this.A.i.U());break;case"realtimePerformanceEnded":if(li()(),!this.M&&this.autoConnect&&this.audioContext&&this.audioContext.state!=="closed")try{await this.audioContext.close()}catch{}this.autoConnect&&this.P&&(this.P.disconnect(),delete this.P),this.F&&(this.F[Ms](),delete this.F),this.h&&(window.URL||window.webkitURL).revokeObjectURL(this.h),this.P&&delete this.P,this.da=this.aa=this.sampleRate=this.v=void 0;break;case"realtimePerformancePaused":this.A&&this.A.i&&(this.A.m&&this.A.m.fa(this),await this.A.i.ra());break;case"realtimePerformanceResumed":this.A&&this.A.i&&(this.A.m&&this.A.m.ga(this),await this.A.i.sa())}}async o(){this.audioContext||(this.M&&console.error("fatal: the provided AudioContext was undefined"),this.audioContext=new(Hr())({sampleRate:this.sampleRate})),this.audioContext.state==="closed"&&(this.M&&console.error("fatal: the provided AudioContext was closed, falling back new AudioContext"),this.audioContext=new(Hr())({sampleRate:this.sampleRate})),this.sampleRate!==this.audioContext.sampleRate&&(this.audioContext=new(Hr())({sampleRate:this.sampleRate}),this.M&&console.error("Internal error: sample rate was ignored from provided audioContext")),this.h="data:application/javascript;base64,";try{await this.audioContext.audioWorklet.addModule(this.h)}catch(r){console.error("Error calling audioWorklet.addModule",r)}if(li()(),this.A){var e=`audioWorklet${cP}`;if(cP+=1,this.pa&&(li(),Mm({va:this.A.$.bind(this.A)})),this.ba){let r;var n=new Promise(s=>{r=s});const i=navigator.mediaDevices===void 0?navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.g:navigator.mediaDevices.getUserMedia,o=s=>{if(s){s=this.audioContext.createMediaStreamSource(s),this.aa=s.channelCount;const a=this.g(this.audioContext,s.channelCount,e);this.P=a,this.autoConnect&&s.connect(a).connect(this.audioContext.destination)}else this.aa=0,this.P=this.g(this.audioContext,0,e),this.autoConnect&&this.P.connect(this.audioContext.destination);r&&r()};li()(),navigator.mediaDevices===void 0?i.call(navigator,{audio:{optional:[{echoCancellation:!1,sampleSize:32}]}},o,console.error):i.call(navigator.mediaDevices,{audio:{echoCancellation:!1,sampleSize:32}}).then(o).catch(console.error)}else this.P=this.g(this.audioContext,0,e),li()(),this.autoConnect&&this.P.connect(this.audioContext.destination);n&&await n,this.F=Ml(this.P.port),this.l.ca.addEventListener("message",Ls(this)),this.l.ca.start(),n={},n.contextUid=e,n.messagePort=this.l.xa,n.requestPort=this.l.ka,n.inputPort=this.l.ja,await this.F.initialize(Al(n,[this.l.xa,this.l.ka,this.l.ja])),li()()}else console.error("fatal: worker not reachable from worklet-main thread")}}const RE=t=>{const e=navigator.mediaDevices===void 0?navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.g:navigator.mediaDevices.getUserMedia;console.log("requesting microphone access"),navigator.mediaDevices===void 0?e.call(navigator,{audio:{optional:[{echoCancellation:!1,sampleSize:32}]}},t,console.error):e.call(navigator.mediaDevices,{audio:{echoCancellation:!1,sampleSize:32}}).then(t).catch(console.error)};async function nD(){console.log("enabling audio input"),RE(async t=>{if(t){t=(await this.Sb()).createMediaStreamSource(t),this.aa=t.channelCount;const e=await this.Tb();t.connect(e)}})}let cs,qi,ey=0;async function rD(t){if(!cs&&(await t.Aa(),!cs)){console.error("SPN FATAL: Couldn't create iFrame");return}var e=`audioWorklet${ey}`;t.h=e,ey+=1,qi||(qi=Ml(K6())),t.audioContext||(t.M&&console.error("fatal: the provided AudioContext was undefined"),t.audioContext=new(Hr())({sampleRate:t.sampleRate})),t.audioContext.state==="closed"&&(t.M&&console.error("fatal: the provided AudioContext was closed, falling back new AudioContext"),t.audioContext=new(Hr())({sampleRate:t.sampleRate})),t.M||t.sampleRate===t.audioContext.sampleRate||(t.audioContext=new(Hr())({sampleRate:t.sampleRate})),cs[e]=t.audioContext,window[`__csound_wasm_iframe_parent_${e}`]=t.audioContext;let n;t.ba&&await new Promise(i=>{RE(o=>{o&&(n=t.audioContext.createMediaStreamSource(o)),i()})}),ys()();const r={};r.contextUid=e,r.hardwareBufferSize=32768,r.softwareBufferSize=2048,r.inputsCount=t.aa,r.outputsCount=t.da,r.sampleRate=t.sampleRate,r.audioInputPort=t.l.ja,r.messagePort=t.l.wa,r.requestPort=t.l.ka,r.audioContextIsProvided=t.M,r.autoConnect=t.autoConnect,r.initialPlayState=t.v,await qi.initialize(Al(r,[t.l.ja,t.l.wa,t.l.ka])),ys()(),(e=cs[`${e}Node`]||window[`__csound_wasm_iframe_parent_${e}Node`])&&n&&n.connect(e),t.m.ea(e),t.pa&&t.A&&t.A.$&&(ys()(),Mm({va:t.A.$.bind(t.A)}))}class iD{constructor({audioContext:e,M:n,autoConnect:r}){this.ba=this.pa=!1,this.l=this.m=this.g=this.h=void 0,this.autoConnect=r,this.M=n,this.audioContext=e,this.da=this.aa=this.sampleRate=this.A=this.v=void 0,ys()()}async I(){if(window[`__csound_wasm_iframe_parent_${this.h}Node`]&&(window[`__csound_wasm_iframe_parent_${this.h}Node`].disconnect(),delete window[`__csound_wasm_iframe_parent_${this.h}Node`]),this.audioContext){if(this.audioContext.state!=="closed")try{await this.audioContext.close()}catch{}delete this.audioContext}qi&&(qi[Ms](),qi=void 0),this.g&&this.g.remove(),cs=void 0,ey=0}async onPlayStateChange(e){if(this.v!==e){switch(e){case"realtimePerformanceStarted":ys()(),this.v=e,await rD(this),await this.A.i.U(),this.m.ma(this.A);break;case"realtimePerformanceEnded":ys()(),window[`__csound_wasm_iframe_parent_${this.h}Node`]&&(window[`__csound_wasm_iframe_parent_${this.h}Node`].disconnect(),delete window[`__csound_wasm_iframe_parent_${this.h}Node`]);break;case"realtimePerformancePaused":this.A&&this.A.i&&(this.A.m&&this.A.m.fa(this),await this.A.i.ra());break;case"realtimePerformanceResumed":this.A&&this.A.i&&(this.A.m&&this.A.m.ga(this),await this.A.i.sa())}if(this.v=e,qi&&(e!=="realtimePerformanceStarted"||e!=="renderStarted")){const n={};n.contextUid=this.h,n.newPlayState=e,await qi.setPlayState(n)}}}async Aa(){if(window===void 0||window.document===void 0)throw new TypeError("Can only run SPN in Browser scope");const e=window.document;var n=[`<!doctype html>
<html lang="en">
<head>
<meta charset="UTF-8">
</head>
<body>`,`<script type="text/javascript" src="${(window.URL||window.webkitURL).createObjectURL(new Blob(['(function(){/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nvar r=this||self;function t(a,c){a=a.split(".");var b=r;a[0]in b||"undefined"==typeof b.execScript||b.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===c?b[d]&&b[d]!==Object.prototype[d]?b=b[d]:b=b[d]={}:b[d]=c};const u=Symbol("Comlink.proxy"),v=Symbol("Comlink.endpoint"),w=Symbol("Comlink.releaseProxy"),x=Symbol("Comlink.thrown"),y=a=>"object"==typeof a&&null!==a||"function"==typeof a,B=new Map([["proxy",{R:a=>y(a)&&a[u],U(a){const {port1:c,port2:b}=new MessageChannel;return z(a,c),[b,[b]]},S:a=>(a.start(),A(a))}],["throw",{R:a=>y(a)&&x in a,U({value:a}){let c;return c=a instanceof Error?{T:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{T:!1,value:a},[c,[]]},S(a){if(a.T)throw Object.assign(Error(a.value.message),\na.value);throw a.value;}}]]);\nfunction z(a,c=self){c.addEventListener("message",function h(d){if(d&&d.data){var l=d.data.argumentList,{id:k,type:g,path:e}=Object.assign({path:[]},d.data);l=(l||[]).map(C);try{const f=e.slice(0,-1).reduce((n,q)=>n[q],a),p=e.reduce((n,q)=>n[q],a);switch(g){case "GET":var m=p;break;case "SET":f[e.slice(-1)[0]]=C(d.data.value);m=!0;break;case "APPLY":m=p.apply(f,l);break;case "CONSTRUCT":m=Object.assign(new p(...l),{[u]:!0});break;case "ENDPOINT":const {port1:n,port2:q}=new MessageChannel;z(a,q);m=\nD(n,[n]);break;case "RELEASE":m=void 0;break;default:return}}catch(f){m={value:f,[x]:0}}Promise.resolve(m).catch(f=>({value:f,[x]:0})).then(f=>{const [p,n]=E(f);f={...p};f.id=k;c.postMessage(f,n);"RELEASE"===g&&(c.removeEventListener("message",h),F(c))})}});c.start&&c.start()}function F(a){"MessagePort"===a.constructor.name&&a.close()}\nfunction A(a){return function l(b,d=[],h=function(){}){let k=!1;const g=new Proxy(h,{get(e,m){if(G(k),m===w)return()=>H(b,{type:"RELEASE",path:d.map(f=>f.toString())}).then(()=>{F(b);k=!0});if("then"===m){if(0===d.length)return{then:()=>g};e=H(b,{type:"GET",path:d.map(f=>f.toString())}).then(C);return e.then.bind(e)}return l(b,[...d,m])},set(e,m,f){G(k);const [p,n]=E(f);return H(b,{type:"SET",path:[...d,m].map(q=>q.toString()),value:p},n).then(C)},apply(e,m,f){G(k);e=d[d.length-1];if(e===v)return H(b,\n{type:"ENDPOINT"}).then(C);if("bind"===e)return l(b,d.slice(0,-1));const [p,n]=I(f);f={type:"APPLY"};f.path=d.map(q=>q.toString());f.argumentList=p;return H(b,f,n).then(C)},construct(e,m){G(k);const [f,p]=I(m);e={type:"CONSTRUCT"};e.path=d.map(n=>n.toString());e.argumentList=f;return H(b,e,p).then(C)}});return g}(a,[],void 0)}function G(a){if(a)throw Error("Proxy has been released and is not useable");}\nfunction I(a){a=a.map(E);const c=(b=a.map(d=>d[1]),Array.prototype.concat.apply([],b));return[a.map(d=>d[0]),c];var b}const J=new WeakMap;function D(a,c){return J.set(a,c),a}function E(a){for(const [c,b]of B)if(b.R(a)){const [d,h]=b.U(a);return[{type:"HANDLER",name:c,value:d},h]}return[{type:"RAW",value:a},J.get(a)||[]]}function C(a){switch(a.type){case "HANDLER":return B.get(a.name).S(a.value);case "RAW":return a.value}}\nfunction H(a,c,b){return new Promise(d=>{const h=Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-");a.addEventListener("message",function g(k){k.data&&k.data.id&&k.data.id===h&&(a.removeEventListener("message",g),d(k.data))});a.start&&a.start();c.id=h;a.postMessage(c,b)})};let K;K=()=>()=>{};const L=(a,c)=>{const b=[];for(let d=0;d<a;d++)b.push(new Float64Array(c));return b};function M(){}M.prototype.h=!1;M.prototype.port=void 0;M.prototype.K=()=>{};M.prototype.u=()=>{};M.prototype.s=void 0;const N=()=>{var a=void 0!==window.webkitAudioContext?window.webkitAudioContext:void 0!==window.AudioContext?window.AudioContext:void 0;if(a)return new a};const O=a=>{const c=[];for(let b=0;b<a;b++)c.push(b);return c};let P;const Q=async a=>{const c=window[a],b=window.parent[`__csound_wasm_iframe_parent_${a}`];if(c){if("closed"!==c.state)try{await c.close()}catch(d){}delete window[a]}if(b){if(c!==b&&"closed"!==b.state)try{await b.close()}catch(d){}delete window.parent[`__csound_wasm_iframe_parent_${a}`]}},R=(a,c)=>{window[a]?window[`${a}Node`]=c:window.parent[`__csound_wasm_iframe_parent_${a}Node`]=c},S=new Map;\nclass T{constructor({audioContext:a,v:c,i:b,j:d,A:h,D:l,sampleRate:k,H:g,autoConnect:e}){this.F=this.g=this.m=void 0;this.autoConnect=e;this.H=g;this.i=b;this.j=d;this.A=h;this.D=l;this.sampleRate=k;this.B=[];this.O=[];this.o=this.h=this.l=this.G=this.C=0;this.M=this.P=!1;this.O=L(h,b);this.B=L(l,b);this.audioContext=a;this.v=c;this.L=this.audioContext.createScriptProcessor(this.j,h,l);this.I=this.I.bind(this);this.L.onaudioprocess=this.I.bind(this);this.autoConnect?R(c,this.L.connect(this.audioContext.destination)):\nR(c,this.L.context.destination);this.N=this.N.bind(this);this.J=this.J.bind(this)}async J({g:a,F:c,m:b}){this.g=a;this.F=c;this.m=b;if("suspended"===this.audioContext.state){for(a=0;100>a;)if(await new Promise(d=>setTimeout(d,100)),"suspended"===this.audioContext.state)a+=1;else return;this.g.u("realtimePerformancePaused")}}N({X:a,Y:c,Z:b}){this.h-=c;if(a){for(let d=0;d<this.D;++d){let h=!1,l=c;(b+c)%this.i<b&&(h=!0,l=this.i-b);this.B[d].set(a[d].subarray(0,l),b);h&&this.B[d].set(a[d].subarray(l))}this.l+=\nc}this.M||(this.M=!0,P&&P())}I(a){const c=a.inputBuffer,b=a.outputBuffer;if("realtimePerformanceEnded"===this.g.s)return U({v:this.v,$:"realtimePerformanceEnded"}),!0;if(!this.P){a=4*this.j;var d={readIndex:0};d.numFrames=a;this.m.postMessage(d);this.h+=a;return this.P=!0}if(!this.M)return!0;a=c?O(this.A).map(g=>c.getChannelData(g)):[];d=b?O(this.D).map(g=>b.getChannelData(g)):[];var h=0<a.length;const l=(this.C+d[0].length)%this.i,k=h?(this.G+a[0].length)%this.i:0;if("realtimePerformanceStarted"!==\nthis.g.s&&"realtimePerformanceResumed"!==this.g.s)return d.forEach(g=>{g.fill(0)}),!0;if(this.l>=d[0].length){d.forEach((g,e)=>{g.set(this.B[e].subarray(this.C,l<this.C?this.i:l))});if(0<this.A&&h&&0<a[0].length&&(h=4*this.j,a.forEach((g,e)=>{this.O[e].set(g,this.G)}),0===k%h)){const g=[],e=(0===k?this.i:k)-h,m=0===k?this.i:k;this.O.forEach(f=>{g.push(f.subarray(e,m))});this.F(g)}this.C=l;this.G=k;this.l-=d[0].length;this.o=0}else 1<this.o&&12>this.o&&(this.g.K("Buffer underrun"),this.o+=1),100===\nthis.o&&(this.g.K("FATAL: 100 buffers failed in a row"),this.g.u("realtimePerformanceEnded"));this.l<4*this.j&&this.h<4*this.j&&(a={},a.readIndex=(this.l+l+this.h)%this.i,a.numFrames=4*this.j,this.m.postMessage(a),this.h+=4*this.j);return!0}}\nconst V=({W:a})=>c=>{a.postMessage(c)},W=({port:a})=>{const c=new M;c.K=b=>{a.postMessage({log:b})};c.u=b=>{if("realtimePerformanceStarted"!==c.s||"realtimePerformanceStarted"!==b){var d={};d.playStateChange=b;a.postMessage(d)}};c.h=!0;return c},X=({m:a,V:c})=>{a.addEventListener("message",b=>{c.N({X:b.data.audioPacket,Y:b.data.numFrames,Z:b.data.readIndex})});a.start()},U=async a=>{const c=a.contextUid;a=a.newPlayState;const b=S.get(c);if(b)if("resume"===a)"suspended"===b.audioContext.state&&b.audioContext.resume(),\n"running"===b.audioContext.state&&b.g.u("realtimePerformanceResumed");else if(b.g){if("realtimePerformanceEnded"===a&&"realtimePerformanceEnded"!==b.g.s){b.g.u("realtimePerformanceEnded");if(b.autoConnect){const d=window[c+"Node"]||window.parent[`__csound_wasm_iframe_parent_${c}Node`];d&&d.disconnect()}window[c+"Node"]&&delete window[c+"Node"];window.parent[`__csound_wasm_iframe_parent_${c}Node`]&&delete window.parent[`__csound_wasm_iframe_parent_${c}Node`];S.delete(c);b.autoConnect&&!b.H&&Q(c)}else"realtimePerformanceResumed"===\na&&"suspended"===b.audioContext.state&&b.audioContext.resume();b.g.s=a}};t("setPlayState$$module$src$workers$old_spn_worker",U);\nconst Y=async a=>{const c=a.contextUid;var b=a.hardwareBufferSize;const d=a.softwareBufferSize,h=a.inputsCount,l=a.outputsCount,k=a.sampleRate;var g=a.audioInputPort,e=a.messagePort;const m=a.requestPort,f=a.audioContextIsProvided,p=a.autoConnect;a=a.initialPlayState;K()();P=void 0;const n=window[c]||window.parent[`__csound_wasm_iframe_parent_${c}`]||N();b=new T({audioContext:n,v:c,i:b,j:d,A:h,D:l,sampleRate:k,H:f,autoConnect:p});e=W({port:e});g=V({W:g,V:b});X({m,V:b});b.J({g:e,F:g,m});S.set(c,b);\nif("realtimePerformanceStarted"===a)return await new Promise((q,aa)=>{P=q;setTimeout(()=>{if("function"===typeof P)return aa(Error("a call to start() timed out")),P=void 0,-1},6E5)})};t("initialize$$module$src$workers$old_spn_worker",Y);const Z={};Z.initialize=Y;Z.setPlayState=U;z(Z,function(a,c=self,b="*"){return{postMessage:(d,h)=>a.postMessage(d,b,h),addEventListener:c.addEventListener.bind(c),removeEventListener:c.removeEventListener.bind(c)}}(window.parent));}).call(this);\n//# sourceMappingURL=__compiled.old-spn.worker.js.map\n']))}"><\/script>`,"</body>"].join(`
`);n=new Blob([n],{type:"text/html"}),this.g=document.createElement("iframe"),this.g.src=URL.createObjectURL(n),this.g.sandbox.add("allow-scripts","allow-same-origin"),this.g.style.cssText="position:absolute;left:0;top:-999px;width:1px;height:1px;",n=new Promise(r=>{this.g.onload=()=>{r()}}),e.body.append(this.g);try{await n}catch(r){console.error(r)}cs=this.g.contentWindow}}ce!==void 0&&(ce={});ce.BigInt||(ce.BigInt=BigInt===void 0?Number:BigInt);const oD=ce.BigInt(1)|ce.BigInt(2)|ce.BigInt(4)|ce.BigInt(8)|ce.BigInt(16)|ce.BigInt(32)|ce.BigInt(64)|ce.BigInt(128)|ce.BigInt(256)|ce.BigInt(2097152)|ce.BigInt(4194304)|ce.BigInt(8388608)|ce.BigInt(134217728),sD=ce.BigInt(0);function aD(t){let e=arguments[0];for(let r=1;r<arguments.length;r++){const i=arguments[r];if(i.lastIndexOf("/",0)==0)e=i;else{var n;(n=e=="")||(n=e.length-1,n=0<=n&&e.indexOf("/",n)==n),n?e+=i:e+="/"+i}}return e}function Ds(t){if(t=="")return".";let e="";t.lastIndexOf("/",0)==0&&(e="/",t.lastIndexOf("//",0)==0&&t.lastIndexOf("///",0)!=0&&(e="//")),t=t.split("/");const n=[];for(let r=0;r<t.length;r++){const i=t[r];i!=""&&i!="."&&(i!=".."||!e&&!n.length||n[n.length-1]==".."?n.push(i):n.pop())}return e+n.join("/")||"."}function Gs(t){return/^\//g.test(t)?t:`/${t}`}function ty(){return typeof performance>"u"||typeof performance.now>"u"?Date.now()-Date.now():performance.now()}function FE(t){var e=t.reduce((r,i)=>r+i.length,0);if(t.length!==0){e=new Uint8Array(e);var n=0;for(const r of t)e.set(r,n),n+=r.length;return e}}function Z(){this.fd=Array.from({length:4}),this.fd[0]={fd:0,path:"/dev/stdin",seekPos:ce.BigInt(0),buffers:[]},this.fd[1]={fd:1,path:"/dev/stdout",seekPos:ce.BigInt(0),buffers:[]},this.fd[2]={fd:2,path:"/dev/stderr",seekPos:ce.BigInt(0),buffers:[]},this.fd[3]={fd:3,path:"/",seekPos:ce.BigInt(0),buffers:[]},this.g=this.g.bind(this),this.h=0}Z.prototype.start=function(t){this.h=ty(),t.exports._start()};function ny(t,e){const n={};e=WebAssembly.Module.imports(e);for(const r of e)r.kind==="function"&&r.module.startsWith("wasi_")&&(typeof n[r.module]!="object"&&(n[r.module]={}),n[r.module][r.name]=t[r.name].bind(t));return n}Z.prototype.g=function(){return this.view&&this.view.buffer&&this.view.buffer.byteLength||(this.view=new DataView(this.memory.buffer)),this.view};function ch(t){const e=Math.trunc(t);return ce.BigInt(e)*ce.BigInt(1e6)+ce.BigInt(Math.round(1e6*(t-e)))}function lD(t,e){switch(e){case 1:return Math.floor(ty());case 0:return ch(Date.now());case 2:case 3:return Math.floor(ty()-t.h);default:return 0}}Z.prototype.Qa=function(){return 0};ie("args_get",Z.prototype.Qa);Z.prototype.Ra=function(){return 0};ie("args_sizes_get",Z.prototype.Ra);Z.prototype.Sa=function(){return 0};ie("clock_res_get",Z.prototype.Sa);Z.prototype.Ta=function(t,e,n){return this.g().setBigUint64(n,ce.BigInt(lD(this,t)),!0),0};ie("clock_time_get",Z.prototype.Ta);Z.prototype.Va=function(){return 0};ie("environ_get",Z.prototype.Va);Z.prototype.Wa=function(){return 0};ie("environ_sizes_get",Z.prototype.Wa);Z.prototype.Xa=function(){return 52};ie("fd_advise",Z.prototype.Xa);Z.prototype.Ya=function(){return 52};ie("fd_allocate",Z.prototype.Ya);Z.prototype.Za=function(){return 0};ie("fd_close",Z.prototype.Za);Z.prototype.$a=function(){return 0};ie("fd_datasync",Z.prototype.$a);Z.prototype.ab=function(t,e){return t=this.g(),t.setUint8(e+4,4),t.setUint16(e+2,0,!0),t.setUint16(e+4,0,!0),t.setBigUint64(e+8,ce.BigInt(oD),!0),t.setBigUint64(e+8+8,ce.BigInt(sD),!0),0};ie("fd_fdstat_get",Z.prototype.ab);Z.prototype.bb=function(){return 52};ie("fd_fdstat_set_flags",Z.prototype.bb);Z.prototype.cb=function(){return 0};ie("fd_fdstat_set_rights",Z.prototype.cb);Z.prototype.eb=function(t,e){let n=0;this.fd[t]&&(n=this.fd[t].buffers.reduce(function(i,o){return i+(o==null?void 0:o.byteLength)?o==null?void 0:o.byteLength:0},0));const r=this.g();return r.setBigUint64(e,ce.BigInt(t),!0),e+=8,r.setBigUint64(e,ce.BigInt(t),!0),e+=8,r.setUint8(e,4),e+=8,r.setBigUint64(e,ce.BigInt(1),!0),e+=8,r.setBigUint64(e,ce.BigInt(n),!0),e+=8,r.setBigUint64(e,ch(this.h),!0),e+=8,r.setBigUint64(e,ch(this.h),!0),r.setBigUint64(e+8,ch(this.h),!0),0};ie("fd_filestat_get",Z.prototype.eb);Z.prototype.fb=function(){return 0};ie("fd_filestat_set_size",Z.prototype.fb);Z.prototype.gb=function(){return 0};ie("fd_filestat_set_times",Z.prototype.gb);Z.prototype.hb=function(){return 0};ie("fd_pread",Z.prototype.hb);Z.prototype.ib=function(t,e){if(!this.fd[t]&&!this.fd[t-1])return 8;var{path:n}=this.fd[t];return t=this.g(),n=dd.encode(n),new Uint8Array(t.buffer).set(n,e),0};ie("fd_prestat_dir_name",Z.prototype.ib);Z.prototype.jb=function(t,e){if(!this.fd[t])return 8;var{path:n}=this.fd[t];return t=this.g(),n=dd.encode(n),t.setUint8(e,0),t.setUint32(e+4,n.byteLength,!0),0};ie("fd_prestat_get",Z.prototype.jb);Z.prototype.kb=function(t,e,n,r,i){return console.log("fd_pwrite",t,e,n,r,i,arguments),0};ie("fd_pwrite",Z.prototype.kb);Z.prototype.lb=function(t,e,n,r){const i=this.fd[t]&&this.fd[t].buffers;var o=i.reduce((d,f)=>d+f.length,0);const s=this.g();if(i&&i.length!==0){var a=Number(this.fd[t].seekPos),l=0,c=!1;if(a>=o)return t=s.getUint32(e,!0),s.setUint8(t,"\0"),s.setUint32(r,0,!0),0;for(o=0;o<n;o++){var u=e+8*o;const d=s.getUint32(u,!0);u=s.getUint32(u+4,!0),c||(l+=u,Array.from({length:u},(f,h)=>h).reduce((f,h)=>{if(c)return f;const[p,m]=f;let v=f=0,g=!1,b=0,y;if(h===0)for(;!g;)y=i[f]?i[f].byteLength:0,b<=a&&y+b>a?(g=!0,v=a-b):(b+=y,f+=1);else f=p,v=m;return i[f]?(s.setUint8(d+h,i[f][v]),v+1>=i[f].byteLength?(f=p+1,v=0):v+=1):(s.setUint8(d+h,0),a+=h,c=!0),[f,v]},[0,0]),c||(a+=u))}return this.fd[t].seekPos=ce.BigInt(a),s.setUint32(r,l,!0),0}console.error("Reading non existent file",t,this.fd[t])};ie("fd_read",Z.prototype.lb);Z.prototype.mb=function(){return 0};ie("fd_readdir",Z.prototype.mb);Z.prototype.nb=function(){return 0};ie("fd_renumber",Z.prototype.nb);Z.prototype.ob=function(t,e,n,r){const i=this.g();switch(n){case 1:let o;this.fd[t].seekPos=((o=this.fd[t].seekPos)!=null?o:ce.BigInt(0))+ce.BigInt(e);break;case 2:n=(this.fd[t].buffers||[]).reduce((s,a)=>s+a.length,0),this.fd[t].seekPos=BigInt(n)+BigInt(e);break;case 0:this.fd[t].seekPos=BigInt(e)}return i.setBigUint64(r,this.fd[t].seekPos,!0),0};ie("fd_seek",Z.prototype.ob);Z.prototype.pb=function(){return 0};ie("fd_sync",Z.prototype.pb);Z.prototype.qb=function(t,e){const n=this.g();return this.fd[t].seekPos||(this.fd[t].seekPos=ce.BigInt(0)),n.setBigUint64(e,this.fd[t].seekPos,!0),0};ie("fd_tell",Z.prototype.qb);Z.prototype.rb=function(t,e,n,r){let i=!1;const o=this.g();this.fd[t].buffers=this.fd[t].buffers||[],this.fd[t].seekPos===ce.BigInt(0)&&0<this.fd[t].buffers.length&&(i=!0);let s=0;for(let c=0;c<n;c++){var a=e+8*c,l=o.getUint32(a,!0);a=o.getUint32(a+4,!0),s+=a,l=new Uint8Array(o.buffer,l,a),i?this.fd[t].buffers.unshift(l.slice(0,a)):this.fd[t].buffers.push(l.slice(0,a))}return this.fd[t].seekPos+=ce.BigInt(s),o.setUint32(r,s,!0),[1,2].includes(t)&&console.log(kr.decode(FE(this.fd[t].buffers))),0};ie("fd_write",Z.prototype.rb);Z.prototype.sb=function(){return 0};ie("path_create_directory",Z.prototype.sb);Z.prototype.tb=function(){return 0};ie("path_filestat_get",Z.prototype.tb);Z.prototype.ub=function(){return 0};ie("path_filestat_set_times",Z.prototype.ub);Z.prototype.vb=function(){return 0};ie("path_link",Z.prototype.vb);Z.prototype.wb=function(t,e,n,r,i,o,s,a,l){e=this.g(),i=(this.fd[t]||{path:"/"}).path,n=new Uint8Array(e.buffer,n,r),n=kr.decode(n);const c=Gs(Ds(aD(t===3?"":i,n)));return c.startsWith("/..")||c==="/._"||c==="/.AppleDouble"?8:((t=Object.values(this.fd).find(u=>u.path===c&&Array.isArray(u.buffers)))?n=t.fd:(n=this.fd.length,this.fd[n]={fd:n}),this.fd[n]={...this.fd[n],path:c,type:"file",seekPos:ce.BigInt(0),buffers:t?this.fd[n].buffers:[]},e.setUint32(l,n,!0),0)};ie("path_open",Z.prototype.wb);Z.prototype.xb=function(){return 0};ie("path_readlink",Z.prototype.xb);Z.prototype.yb=function(){return 0};ie("path_remove_directory",Z.prototype.yb);Z.prototype.zb=function(){return 0};ie("path_rename",Z.prototype.zb);Z.prototype.Ab=function(){return 0};ie("path_symlink",Z.prototype.Ab);Z.prototype.Bb=function(){return 0};ie("path_unlink_file",Z.prototype.Bb);Z.prototype.Cb=function(){return 0};ie("poll_oneoff",Z.prototype.Cb);Z.prototype.Db=function(){return 0};ie("proc_exit",Z.prototype.Db);Z.prototype.Eb=function(){return 0};ie("proc_raise",Z.prototype.Eb);Z.prototype.Fb=function(){return 0};ie("random_get",Z.prototype.Fb);Z.prototype.Gb=function(){return 0};ie("sched_yield",Z.prototype.Gb);Z.prototype.Hb=function(){return 52};ie("sock_recv",Z.prototype.Hb);Z.prototype.Ib=function(){return 52};ie("sock_send",Z.prototype.Ib);Z.prototype.Jb=function(){return 52};ie("sock_shutdown",Z.prototype.Jb);function HE(t,e){return(t=Object.values(t.fd).find(({path:n})=>n===e))&&t.buffers}Z.prototype.readdir=function(t){const e=(Gs(Ds(t))+"/").replace("//","/"),n=[];return Object.values(this.fd).forEach(({path:r})=>!/\//g.test(r.replace(e,""))&&n.push(r)),n.map(r=>r.replace(e,"").replace(/^\//g,"")).filter(r=>!!r)};Z.prototype.writeFile=function(t,e){const n=Gs(Ds(t));t=Object.keys(this.fd).length;const r=Object.values(this.fd).find(({path:i})=>i===n);this.fd[t]={fd:t,path:n,seekPos:ce.BigInt(0),buffers:[e]},r&&delete this.fd[r]};Z.prototype.appendFile=function(t,e){var n=Gs(Ds(t));(n=HE(this,n))?n.push(e):console.error(`Can't append to non-existing file ${t}`)};Z.prototype.readFile=function(t){if(t=Gs(Ds(t)),t=HE(this,t))return FE(t)};Z.prototype.unlink=function(t){const e=Gs(Ds(t));(t=Object.values(this.fd).find(({path:n})=>n===e))?delete this.fd[t]:console.error(`While trying to unlink ${e}, path not found`)};Z.prototype.mkdir=function(t){const e=Gs(Ds(t)),n=[];Object.values(this.fd).forEach(({path:r})=>r.startsWith(e)&&n.push(r)),0<n.length?console.warn(`mkdir: path ${t} already exists`):(t=Object.keys(this.fd).length,this.fd[t]={fd:t,path:e})};function Hc(t){const e=t.length;let n=0,r=Number.POSITIVE_INFINITY,i,o,s,a,l,c;for(l=0;l<e;++l)t[l]>n&&(n=t[l]),t[l]<r&&(r=t[l]);const u=1<<n,d=new Uint32Array(u);for(i=1,o=0,s=2;i<=n;){for(l=0;l<e;++l)if(t[l]===i){a=0;var f=o;for(c=0;c<i;++c)a=a<<1|f&1,f>>=1;for(f=i<<16|l,c=a;c<u;c+=s)d[c]=f;++o}++i,o<<=1,s<<=1}return[d,n,r]}function cD(t,e){switch(this.J=[],this.bufferSize=32768,this.s=this.C=this.o=this.L=0,this.B=new Uint8Array(t),this.O=!1,this.W=za,this.resize=!1,(e||!(e={}))&&(e.index&&(this.o=e.index),e.bufferSize&&(this.bufferSize=e.bufferSize),e.W&&(this.W=e.W),e.resize&&(this.resize=e.resize)),this.W){case wc:this.g=32768,this.h=new Uint8Array(this.bufferSize+33026);break;case za:this.g=0,this.h=new Uint8Array(this.bufferSize);break;default:throw Error("invalid inflate mode")}}var wc=0,za=1,uP=new Uint16Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),DE=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]),yp=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]),GE=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]),xp=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),ry;const iy=new Uint8Array(288);let Uo,dP;Uo=0;for(dP=iy.length;Uo<dP;++Uo)iy[Uo]=143>=Uo?8:255>=Uo?9:279>=Uo?7:8;ry=Hc(iy);var oy;const sy=new Uint8Array(30);let uh,fP;uh=0;for(fP=sy.length;uh<fP;++uh)sy[uh]=5;oy=Hc(sy);function Dn(t,e){let n=t.C,r=t.s;const i=t.B;let o=t.o;if(o+(e-r+7>>3)>=i.length)throw Error("input buffer is broken");for(;r<e;)n|=i[o++]<<r,r+=8;return t.C=n>>>e,t.s=r-e,t.o=o,n&(1<<e)-1}function Au(t,e){let n=t.C,r=t.s;var i=t.B;let o=t.o;var s=i.length;const a=e[0];for(e=e[1];r<e&&!(o>=s);)n|=i[o++]<<r,r+=8;if(i=a[n&(1<<e)-1],s=i>>>16,s>r)throw Error("invalid code length: "+s);return t.C=n>>s,t.s=r-s,t.o=o,i&65535}function hP(t,e,n){let r=t.h,i=t.g;t.R=e;const o=r.length-258;var s;let a,l;for(;(s=Au(t,e))!==256;)if(256>s)i>=o&&(t.g=i,r=ay(t),i=t.g),r[i++]=s;else for(s-=257,l=DE[s],0<yp[s]&&(l+=Dn(t,yp[s])),s=Au(t,n),a=GE[s],0<xp[s]&&(a+=Dn(t,xp[s])),i>=o&&(t.g=i,r=ay(t),i=t.g);l--;)r[i]=r[i++-a];for(;8<=t.s;)t.s-=8,t.o--;t.g=i}function pP(t,e,n){let r=t.h,i=t.g;t.R=e;let o=r.length;var s;let a,l;for(;(s=Au(t,e))!==256;)if(256>s)i>=o&&(r=ly(t),o=r.length),r[i++]=s;else for(s-=257,l=DE[s],0<yp[s]&&(l+=Dn(t,yp[s])),s=Au(t,n),a=GE[s],0<xp[s]&&(a+=Dn(t,xp[s])),i+l>o&&(r=ly(t),o=r.length);l--;)r[i]=r[i++-a];for(;8<=t.s;)t.s-=8,t.o--;t.g=i}function ay(t){const e=new Uint8Array(t.g-32768),n=t.g-32768,r=t.h;return e.set(r.subarray(32768,e.length)),t.J.push(e),t.L+=e.length,r.set(r.subarray(n,n+32768)),t.g=32768,r}function ly(t,e){let n=Math.trunc(t.B.length/t.o+1);const r=t.B,i=t.h;return e&&(typeof e.Ga=="number"&&(n=e.Ga),typeof e.Pa=="number"&&(n+=e.Pa)),2>n?(e=(r.length-t.o)/t.R[2],e=Math.trunc(e/2*258),e=e<i.length?i.length+e:i.length<<1):e=i.length*n,e=new Uint8Array(e),e.set(i),t.h=e,t.h}function uD(t){var e;this.o=t,this.g=0,(e||!(e={}))&&(e.index&&(this.g=e.index),e.verify&&(this.verify=e.verify));const n=t[this.g++],r=t[this.g++];switch(n&15){case 8:this.method=8;break;default:throw Error("unsupported compression method")}if(((n<<8)+r)%31!==0)throw Error("invalid fcheck flag:"+((n<<8)+r)%31);if(r&32)throw Error("fdict flag is not supported");this.h=new cD(t,{index:this.g,bufferSize:e.bufferSize,W:e.W,resize:e.resize})}function dD(t){var e=t.o,n;e:{for(n=t.h;!n.O;){var r=void 0,i=void 0,o=void 0,s=void 0,a=n,l=Dn(a,3);switch(l&1&&(a.O=!0),l>>>=1,l){case 0:l=a.B,i=a.o;var c=a.h,u=a.g;if(o=l.length,r=c.length,a.C=0,a.s=0,i+1>=o)throw Error("invalid uncompressed block header: LEN");if(s=l[i++]|l[i++]<<8,i+1>=o)throw Error("invalid uncompressed block header: NLEN");if(o=l[i++]|l[i++]<<8,s===~o)throw Error("invalid uncompressed block header: length verify");if(i+s>l.length)throw Error("input buffer is broken");switch(a.W){case wc:for(;u+s>c.length;)o=r-u,s-=o,c.set(l.subarray(i,i+o),u),u+=o,i+=o,a.g=u,c=ay(a),u=a.g;break;case za:for(;u+s>c.length;)c=ly(a,{Ga:2});break;default:throw Error("invalid inflate mode")}c.set(l.subarray(i,i+s),u),a.o=i+s,a.g=u+s,a.h=c;break;case 1:switch(a.W){case za:pP(a,ry,oy);break;case wc:hP(a,ry,oy);break;default:throw Error("invalid inflate mode")}break;case 2:for(l=Dn(a,5)+257,r=Dn(a,5)+1,c=Dn(a,4)+4,u=new Uint8Array(uP.length),i=0;i<c;++i)u[uP[i]]=Dn(a,3);for(u=Hc(u),c=new Uint8Array(l+r),i=0,r=l+r;i<r;)switch(o=Au(a,u),o){case 16:for(o=3+Dn(a,2);o--;)c[i++]=s;break;case 17:for(o=3+Dn(a,3);o--;)c[i++]=0;s=0;break;case 18:for(o=11+Dn(a,7);o--;)c[i++]=0;s=0;break;default:s=c[i++]=o}switch(s=Hc(c.subarray(0,l)),l=Hc(c.subarray(l)),a.W){case za:pP(a,s,l);break;case wc:hP(a,s,l);break;default:throw Error("invalid inflate mode")}break;default:throw Error("unknown BTYPE: "+l)}}switch(n.W){case wc:{a=0,s=n.h,l=n.J,c=new Uint8Array(n.L+(n.g-32768));let d;if(l.length===0)n=n.h.subarray(32768,n.g);else{for(u=0,r=l.length;u<r;++u)for(i=l[u],o=0,d=i.length;o<d;++o)c[a++]=i[o];for(u=32768,r=n.g;u<r;++u)c[a++]=s[u];n.J=[],n.buffer=c,n=n.buffer}}break e;case za:s=n.g,n.resize?(a=new Uint8Array(s),a.set(n.h.subarray(0,s))):a=n.h.subarray(0,s),n.buffer=a,n=n.buffer;break e;default:throw Error("invalid inflate mode")}}if(t.g=t.h.o,t.verify){if(t=(e[t.g++]<<24|e[t.g++]<<16|e[t.g++]<<8|e[t.g++])>>>0,e=n,typeof e=="string"){for(e=[...e],a=0,s=e.length;a<s;a++)e[a]=(e[a].charPointAt(0)&255)>>>0;e=new Uint8Array([e])}for(a=1,s=0,l=e.length,c=0;0<l;){i=1024<l?1024:l,l-=i;do a+=e[c++],s+=a;while(--i);a%=65521,s%=65521}if(t!==(s<<16|a)>>>0)throw Error("invalid adler-32 checksum")}return n}const jE=({memory:t,messagePort:e,Ma:n})=>function(r,i,o,s){if(t){r=new Uint8Array(t.buffer,s,o),r=kr.decode(r);var a=/\n$/g.test(r);i=/^\n/g.test(r);var l=r.split(`
`).filter(u=>0<u.length),c=[];(l.length===0&&a||i)&&(c.push(n.join("")),ls(n)),l.forEach((u,d)=>{d+1===l.length?a?d===0?(c.push(n.join("")+u),ls(n)):c.push(u):n.push(u):d===0?(c.push(n.join("")+u),ls(n)):c.push(u)}),c.forEach(u=>{u.replace(/(\r\n|\n|\r)/gm,"")&&e.Ka({log:u})})}},fD=t=>t&&typeof t=="object"&&typeof t.exports=="object"?t.exports.__wasm_call_ctors?t.exports.csoundModuleCreate||t.exports.csound_opcode_init||t.exports.csound_fgen_init?!0:(console.error(t.exports,`A csound plugin turns out to be neither a plugin, opcode or module.
Perhaps csdl.h or module.h wasn't imported correctly?`),!1):(console.error(`A csound plugin didn't export __wasm_call_ctors.
Please re-run wasm-ld with either --export-all or include --export=__wasm_call_ctors`),!1):(console.error("Error instantiating a csound plugin, instance and/or export is missing!"),!1),mP=t=>{function e(){let c=0,u=1;for(;;){const d=t[n++];if(c+=(d&127)*u,u*=128,!(d&128))break}return c}if(new Uint32Array(new Uint8Array(t.subarray(0,24)).buffer)[0]!==1836278016&&console.error("Wasm magic number is missing!"),t[8]!==0)return PV(),"static";let n=9;const r=e();n++,n++,n++,n++,n++,n++,n++,n++,n+=3;const i=e(),o=e(),s=e(),a=e(),l=e();return{Zb:r,Ba:i,Ja:o,Xb:l,Na:s,$b:a}},hD=async({Kb:t,H:e,messagePort:n})=>{const r=await WebAssembly.compile(t);t=new WebAssembly.Memory({initial:16384});const i=ny(e,r);return i.oa=i.oa||{},i.oa.Pb=()=>0,i.oa.memory=t,i.oa.Qb=jE({memory:i.oa.memory,Ma:[],messagePort:n}),n=await WebAssembly.instantiate(r,i),e.memory=t,e.start(n),n.exports.__wasi_js_csoundSetMessageStringCallback(),[n,e]};async function pD({Z:t,withPlugins:e=[],messagePort:n}){var r={};const i=new Z;t=new Uint8Array(t),t=dD(new uD(t));var o=mP(t);if(o==="static")return await hD({messagePort:n,Kb:t,cc:r,H:i});r=o.Ba;const s=o.Ja;o=o.Na,e=await e.reduce(async(g,b)=>{g=await g;let y,x;try{y=new Uint8Array(b),x=mP(y)}catch(k){console.error("Error in plugin",k)}return x&&g.push({Ha:x,Lb:y}),g},[]),r=Math.ceil((r+s)/65536);var a=Math.ceil(e.reduce((g,{Ha:b})=>b==="static"?0:g+(b.Ba+s),0)/65536);a=r+a+2048;const l=new WebAssembly.Memory({initial:a,maximum:16384}),c=new WebAssembly.Table({initial:o+1,element:"anyfunc"});i.memory=l;const u=new WebAssembly.Global({value:"i32",mutable:!0},65536*a);o=new WebAssembly.Global({value:"i32",mutable:!0},65536*a),a=new WebAssembly.Global({value:"i32",mutable:!1},2048);const d=new WebAssembly.Global({value:"i32",mutable:!1},1),f=new WebAssembly.Global({value:"i32",mutable:!0},0);t=await WebAssembly.compile(t);const h=ny(i,t);let p=[],m=r;h.env=h.env||{},h.env.memory=l,h.env.__indirect_function_table=c,h.env.__stack_pointer=u,h.env.__memory_base=a,h.env.__table_base=d,h.env.csoundLoadModules=g=>(p.forEach(b=>{if(v===void 0)console.error("csound-wasm internal: timing problem detected!");else{var y=v;if(b.exports.csoundModuleInit){var x=new WebAssembly.Global({value:"i32",mutable:!0},0),k=new WebAssembly.Global({value:"i32",mutable:!0},0),P=new WebAssembly.Global({value:"i32",mutable:!0},0);const O=new WebAssembly.Global({value:"i32",mutable:!0},0);let z=c.length;typeof b.exports.csoundModuleCreate=="function"&&(c.grow(1),x.value=z,c.set(z,b.exports.csoundModuleCreate),z+=1),typeof b.exports.csoundModuleInit=="function"&&(c.grow(1),k.value=z,c.set(z,b.exports.csoundModuleInit),z+=1),typeof b.exports.csoundModuleDestroy=="function"&&(c.grow(1),P.value=z,c.set(z,b.exports.csoundModuleDestroy),z+=1),typeof b.exports.csoundModuleErrorCodeToString=="function"&&(c.grow(1),O.value=z,c.set(z,b.exports.csoundModuleErrorCodeToString)),y.exports.csoundWasiLoadPlugin(g,x,k,P,O)}else b.exports.csound_opcode_init||b.exports.csound_fgen_init?(x=new WebAssembly.Global({value:"i32",mutable:!0},0),k=new WebAssembly.Global({value:"i32",mutable:!0},0),P=c.length,typeof b.exports.csound_opcode_init=="function"&&(x.value=P,c.grow(1),c.set(P,b.exports.csound_opcode_init),P+=1),typeof b.exports.csound_fgen_init=="function"&&(k.value=P,c.grow(1),c.set(P,b.exports.csound_fgen_init)),y.exports.csoundWasiLoadOpcodeLibrary(g,k,x)):console.error("Plugin doesn't export nececcary functions to quality as csound plugin.")}}),0),h.env.csoundLoadExternals=()=>{},h.env._ZTH5errno=function(){},h.env.csoundWasiJsMessageCallback=jE({memory:l,messagePort:n,Ma:[]}),h.env.printDebugCallback=(g,b)=>{g=new Uint8Array(l.buffer,g,b),g=kr.decode(g),console.log(g)},h["GOT.mem"]=h["GOT.mem"]||{},h["GOT.mem"].__heap_base=o,h["GOT.func"]=h["GOT.func"]||{};const v=await WebAssembly.instantiate(t,h);return n=Object.assign({},v.exports),t={},n.memory=l,t.exports=n,p=await e.reduce(async(g,{Ha:b,Lb:y})=>{g=await g;try{const x=b.Ba,k=b.Ja,P=b.Na,O=await WebAssembly.compile(y),z=ny(i,O),I=new WebAssembly.Global({value:"i32",mutable:!1},65536*m);c.grow(P),z.env=Object.assign({},z.env),z.env.memory=l,z.env.__indirect_function_table=c,z.env.__memory_base=I,z.env.__stack_pointer=u,z.env.__table_base=d,z.env.csoundLoadModules=f,delete z.env.csoundWasiJsMessageCallback,m+=Math.ceil((x+k)/65536);const E=await WebAssembly.instantiate(O,z);fD(E)&&(E.exports.__wasm_call_ctors(),g.push(E))}catch(x){console.error("Error while compiling csound-plugin",x)}return g},[]),i.start(t),t.exports.__wasi_js_csoundSetMessageStringCallback(),[t,i]}function Am(){}Am.prototype.g=!1;Am.prototype.port=void 0;Am.prototype.Ka=()=>{};const mD=Object.keys(Lo);async function gP(t,e){if(e&&t.v!=="realtimePerformanceEnded"&&t.v!=="realtimePerformanceStarted")return-1;t.v==="realtimePerformanceStarted"&&t.onPlayStateChange("realtimePerformanceEnded"),t.s=!1,t.o=!1,t.R=0,t.C=-1,t.L=-1,delete t.J,delete t.O}async function gD(t,{Z:e,withPlugins:n,autoConnect:r}){if(n&&0<n.length&&(n=await Em(n)),!t.B||!t.B.H){const[s,a]=await pD({Z:e(),withPlugins:n,messagePort:t.messagePort});t.B=s,t.H=a,t.B.H=a}const i=q6(t.B);t.g=i;const o=await i.csoundCreate(0);return t.D=o,r&&t.h.connect(t.audioContext.destination),gP(t,!1),Object.keys(i).reduce((s,a)=>{if(mD.includes(a)){s.fs=s.fs||{};var l=async(...c)=>sP(t.B,i[a]).apply({},c);l.toString=i[a].toString,s.fs[a]=l}else l=Iu(a),s[l]=(...c)=>sP(o,i[a]).apply({},c),s[l].toString=i[a].toString;return s},t.j),t.j.pause=t.pause.bind(t),t.j.resume=t.resume.bind(t),t.j.start=t.start.bind(t),t.j.stop=t.stop.bind(t),t.j.terminateInstance=t.I.bind(t),t.j.getAudioContext=async()=>t.audioContext,t.j.name="Csound: ScriptProcessor Node, Single-threaded",t.j=t.m.o(t.j),t.j.reset=()=>gP(t,!0),t.j.addListener("message",console.log),t.j}class bD{constructor({audioContext:e,inputChannelCount:n=1,outputChannelCount:r=2}){this.qa=this.L=this.C=this.T=this.V=this.R=0,this.B=this.H=this.J=this.O=void 0,this.m=new Im,this.i=new Nm,this.audioContext=e,this.onaudioprocess=this.onaudioprocess.bind(this),this.v=void 0,this.onPlayStateChange=this.onPlayStateChange.bind(this),this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.pause=this.pause.bind(this),this.resume=this.resume.bind(this),this.g=this.D=void 0,this.j={},this.h=e.createScriptProcessor(0,n,r),this.h.audioContext=e,this.h.inputChannelCount=n,this.h.outputChannelCount=r,this.h.onaudioprocess=this.onaudioprocess,this.node=this.h,this.j.getNode=async()=>this.h,this.sampleRate=e.sampleRate,this.messagePort=new Am,this.messagePort.Ka=i=>{Ls(this)({data:{log:i}})},this.messagePort.g=!0,this.o=this.s=!1}async I(){this.o=this.s=!1,this.h&&(this.h.disconnect(),delete this.h),this.audioContext&&(this.audioContext.state!=="closed"&&await this.audioContext.close(),delete this.audioContext),this.m&&(this.m.I(),delete this.m)}async onPlayStateChange(e){if(this.m&&this.v!==e)switch(this.v=e,e){case"realtimePerformanceStarted":this.m.ma();break;case"realtimePerformanceEnded":this.o=!1,this.m.s();break;case"realtimePerformancePaused":this.m.fa();break;case"realtimePerformanceResumed":this.m.ga();break;case"renderStarted":this.o=!0,this.m.C();break;case"renderEnded":this.o=!1,this.i&&this.i.o(),this.m.B()}}async pause(){this.o&&this.s&&(this.s=!1,this.onPlayStateChange("realtimePerformancePaused"))}async resume(){this.o&&!this.s&&(this.s=!0,this.onPlayStateChange("realtimePerformanceResumed"))}async stop(){if(this.o){this.i.X();const e=this.g.csoundStop(this.D);return await this.i.na(),delete this.O,delete this.J,delete this.v,e}}async start(){if(this.g){var e=(this.g.csoundGetOutputName(this.D)||"test.wav").includes("dac");if(e&&this.v!=="realtimePerformanceStarted")return this.R=0,this.L=this.C=-1,this.T=this.qa=e=this.g.csoundGetKsmps(this.D),this.C=this.g.csoundGetNchnls(this.D),this.L=this.g.csoundGetNchnlsInput(this.D),this.J=new Float64Array(this.H.memory.buffer,this.g.csoundGetSpout(this.D),e*this.C),this.O=new Float64Array(this.B.H.memory.buffer,this.g.csoundGetSpin(this.D),e*this.L),this.V=this.g.csoundGet0dBFS(this.D),this.m.ea(this.h),this.i.la(),e=this.g.csoundStart(this.D),this.g._isRequestingRtMidiInput(this.D)&&Mm({va:({data:n})=>this.g.csoundPushMidiMessage(this.D,n[0],n[1],n[2])}),this.s=!0,await this.i.ha(),e;if(!e&&this.v!=="renderStarted")return e=this.g.csoundStart(this.D),this.onPlayStateChange("renderStarted"),setTimeout(()=>{let n=0;for(;n===0&&this.g&&this.D;)n=this.g.csoundPerformKsmps(this.D);this.onPlayStateChange&&this.onPlayStateChange("renderEnded")},0),e}else console.error("starting csound failed because csound instance wasn't created")}onaudioprocess(e){if(this.g&&!["renderStarted","renderEnded"].includes(this.v)){if(this.J===null||this.s===!1){var n=e.outputBuffer,r=n.getChannelData(0);if(r){r=r.length;for(var i=0;i<r;i++)for(var o=0;o<n.numberOfChannels;o++)n.getChannelData(o)[i]=0}}this.s&&!this.o&&(this.o=!0,this.onPlayStateChange("realtimePerformanceStarted"),this.i&&this.i.U()),n=e.inputBuffer,e=e.outputBuffer,r=e.getChannelData(0).length,i=this.J,o=this.O;var s=this.qa,a=this.V,l=this.C,c=this.L,u=this.T||0,d=this.R||0;for(let m=0;m<r;m++,u++){u===s&&d===0&&(d=this.g.csoundPerformKsmps(this.D),u=0,d!==0&&(this.o=this.s=!1,this.onPlayStateChange("realtimePerformanceEnded"),this.i&&this.i.o())),i&&i.length!==0||(i=this.J=new Float64Array(this.B.H.memory.buffer,this.g.csoundGetSpout(this.D),s*l)),o&&o.length!==0||(o=this.O=new Float64Array(this.B.H.memory.buffer,this.g.csoundGetSpin(this.D),s*c));for(var f=Math.min(this.L,n.numberOfChannels),h=0;h<f;h++){var p=n.getChannelData(h);o[u*c+h]=p[m]*a}if(this.C===e.numberOfChannels)for(f=0;f<e.numberOfChannels;f++)e.getChannelData(f)[m]=d===0?i[u*l+f]/a:0;else this.C===2&&e.numberOfChannels===1?e.getChannelData(0)[m]=d===0?.5*(i[u*l]/a+i[u*l+1]/a):0:this.C===1&&e.numberOfChannels===2&&(f=e.getChannelData(0),h=e.getChannelData(1),d===0?(p=i[u*l]/a,f[m]=p,h[m]=p):(f[m]=0,h[m]=0))}this.T=u,this.R=d}}}const vD=async t=>{gl()();try{await t.audioWorklet.addModule("data:application/javascript;base64,")}catch(e){return console.error("Error calling audioWorklet.addModule",e),!1}return!0};async function yD(t,{Z:e,withPlugins:n,autoConnect:r}){n&&0<n.length&&(n=await Em(n)),await vD(t.audioContext),t.node=new AudioWorkletNode(t.audioContext,"csound-singlethread-worklet-processor",{inputChannelCount:t.inputChannelCount?[t.inputChannelCount]:0,outputChannelCount:[t.outputChannelCount||2]}),r&&t.node.connect(t.audioContext.destination);try{gl()(),t.F=Ml(t.node.port)}catch(o){console.error("COMLINK ERROR",o)}r={},r.messagePort=t.l.g,r.rtmidiPort=t.l.B,await t.F.initializeMessagePort(Al(r,[t.l.g,t.l.B])),t.l.Y.addEventListener("message",Ls(t)),t.l.Y.start(),await t.F.initialize(e(),n);const i=await io(t.F,void 0,"csoundCreate",t.v)();t.D=i,await io(t.F,i,"csoundInitialize",t.v)(0),t.j.pause=t.g.bind(t),t.j.resume=t.h.bind(t),t.j.terminateInstance=t.I.bind(t),t.j.getAudioContext=async()=>t.audioContext,t.j.getNode=async()=>t.node,t.j.enableAudioInput=nD,t.j.name="Csound: Audio Worklet, Single-threaded",t.j=t.m.o(t.j),t.j.addListener("message",console.log);for(const o of Object.keys(As)){const s=As[o],a=io(t.F,i,o,t.v);switch(o){case"csoundCreate":break;case"csoundStart":e=async function(){this.i.la();var l=await this.F.isRequestingInput();return await this.F.isRequestingRealtimeOutput()?(l&&this.j.enableAudioInput(),await this.j._isRequestingRtMidiInput(i)&&Mm({va:this.$.bind(this)}),l=await a({Ua:i}),this.m.ea(this.node),await this.i.ha(),l):(a({Ua:i}),this.m.ea(this.node),await this.i.ha(),0)},e.toString=()=>s.toString(),t.j.start=e.bind(t);break;case"csoundStop":e=async()=>{if(t.i.V())return gl()(),-1;t.i.X();const l=await a();return await t.i.na(),l},e.toString=()=>s.toString(),t.j.stop=e.bind(t);break;case"fs":t.j.fs={},Object.keys(s).forEach(l=>{const c=io(t.F,i,l,t.v);c.toString=()=>s[l].toString(),t.j.fs[l]=c});break;default:a.toString=()=>s.toString(),t.j[Iu(o)]=a}}return t.j}class xD{constructor({audioContext:e,inputChannelCount:n=1,outputChannelCount:r=2}){this.D=this.node=this.F=void 0,this.j={},this.l=new Ax,this.m=new Im,this.i=new Nm,this.audioContext=e,this.inputChannelCount=n,this.outputChannelCount=r,this.onPlayStateChange=this.onPlayStateChange.bind(this),this.v=void 0}async I(){this.node&&(this.node.disconnect(),delete this.node),this.audioContext&&(this.audioContext.state!=="closed"&&await this.audioContext.close(),delete this.audioContext),this.F&&(this.F[Ms](),delete this.F),this.m&&(this.m.I(),delete this.m)}async onPlayStateChange(e){if(this.v!==e&&this.m)switch(this.v=e,e){case"realtimePerformanceStarted":this.i.T()&&(gl()(),this.i.U()),this.m.ma();break;case"realtimePerformanceEnded":this.v=void 0,this.m&&this.m.s(),this.i&&this.i.V()&&this.i.o(),this.i&&this.i.U();break;case"realtimePerformancePaused":this.m.fa();break;case"realtimePerformanceResumed":this.m.ga();break;case"renderStarted":this.i.T()&&(gl()(),this.m.C(),this.i.U());break;case"renderEnded":this.m.B(),this.i&&this.i.V()&&this.i.o(),this.i&&this.i.U()}}async g(){this.F!==void 0&&await this.F.pause()}async h(){this.F!==void 0&&await this.F.resume()}$({data:e}){this.l.h.postMessage&&this.l.h.postMessage(e)}}(function(){function t(){i==="blocked"&&(i="pending",e()),o==="blocked"&&(o="pending",a=new r,l=a.createBufferSource(),l.buffer=a.createBuffer(1,1,22050),l.connect(a.destination),l.start(),a.state==="running"?(o="allowed",n()):(o="blocked",l.disconnect(a.destination),l=null,a.close(),a=null))}function e(){s=document.createElement("audio"),s.setAttribute("x-webkit-airplay","deny"),s.preload="auto",s.loop=!0,s.src=c,s.load(),s.play().then(()=>{i="allowed",n()},()=>{i="blocked",s.pause(),s.removeAttribute("src"),s.load(),s=null})}function n(){i==="allowed"&&o==="allowed"&&aP.forEach(u=>{window.removeEventListener(u,t,{capture:!0,passive:!0})})}const r=window.webkitAudioContext;if(0<navigator.maxTouchPoints&&r!=null){var i="blocked",o="blocked",s,a,l,c=function(u){const d=new ArrayBuffer(10),f=new DataView(d);return f.setUint32(0,u,!0),f.setUint32(4,u,!0),f.setUint16(8,1,!0),`data:audio/wav;base64,UklGRisAAABXQVZFZm10IBAAAAABAAEA${window.btoa(String.fromCharCode(...new Uint8Array(d))).slice(0,13)}AgAZGF0YQcAAACAgICAgICAAAA=`}(new r().sampleRate);aP.forEach(u=>{window.addEventListener(u,t,{capture:!0,passive:!0})})}})();async function Lx({audioContext:t,inputChannelCount:e,outputChannelCount:n,autoConnect:r=!0,withPlugins:i=[],useWorker:o=!1,useSAB:s=!0,useSPN:a=!1}={}){const l=t&&Hr()&&t instanceof Hr();l||(t=t||new(Hr())({latencyHint:"interactive"})),typeof navigator.vendor=="string"&&navigator.vendor.includes("Apple")&&t.resume();const c=AudioNode!==void 0&&AudioWorkletNode!==void 0;var u=Hr();if(u=u!==void 0&&u.prototype.createScriptProcessor!==void 0,o){c||u?Ri()():console.error("No WebAudio Support detected");var d;if(!a&&c?d=new tD({audioContext:t,M:l,autoConnect:r}):u&&(d=new iD({audioContext:t,M:l,autoConnect:r})),d)return(r=!navigator.userAgent.toLowerCase().includes("firefox")&&window&&window.Atomics!==void 0&&window.SharedArrayBuffer!==void 0)?s&&Ri()():Ri()(),t=r&&c&&s?new eD({u:d,audioContext:t,M:l,inputChannelCount:e,outputChannelCount:n}):new $6({u:d,M:l}),Ri()(),await t.J({Z:w0,withPlugins:i}),Object.freeze(t.L)}else{if(c&&!a)return Ri()(),yD(new xD({audioContext:t,inputChannelCount:e||2,outputChannelCount:n||2}),{Z:w0,withPlugins:i,autoConnect:r});if(u)return Ri()(),await gD(new bD({audioContext:t,inputChannelCount:e||2,outputChannelCount:n||2}),{Z:w0,withPlugins:i,autoConnect:r})}console.error("No detectable WebAudioAPI in current environment")}Ao("Csound$$module$src$index",Lx);Ao("__Csound__",Lx);const SD=Lx;var kD=t=>{var{theme:e,settings:n,styles:r}=t,i={"&":{backgroundColor:n.background,color:n.foreground},".cm-gutters":{}};n.fontFamily&&(i["&.cm-editor .cm-scroller"]={fontFamily:n.fontFamily}),n.gutterBackground&&(i[".cm-gutters"].backgroundColor=n.gutterBackground),n.gutterForeground&&(i[".cm-gutters"].color=n.gutterForeground),n.gutterBorder&&(i[".cm-gutters"].borderRightColor=n.gutterBorder),n.caret&&(i[".cm-content"]={caretColor:n.caret},i[".cm-cursor, .cm-dropCursor"]={borderLeftColor:n.caret});var o={};n.gutterActiveForeground&&(o.color=n.gutterActiveForeground),n.lineHighlight&&(i[".cm-activeLine"]={backgroundColor:n.lineHighlight},o.backgroundColor=n.lineHighlight),i[".cm-activeLineGutter"]=o,n.selection&&(i["&.cm-focused .cm-selectionBackground, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection"]={backgroundColor:n.selection}),n.selectionMatch&&(i["& .cm-selectionMatch"]={backgroundColor:n.selectionMatch});var s=U.theme(i,{dark:e==="dark"}),a=Nl.define(r),l=[s,wx(a)];return l},wD=kD({theme:"dark",settings:{background:"#272822",foreground:"#FFFFFF",caret:"#FFFFFF",selection:"#49483E",selectionMatch:"#49483E",gutterBackground:"#272822",gutterForeground:"#FFFFFF70",lineHighlight:"#00000059"},styles:[{tag:[V.comment,V.documentMeta],color:"#8292a2"},{tag:[V.number,V.bool,V.null,V.atom],color:"#ae81ff"},{tag:[V.attributeValue,V.className,V.name],color:"#e6db74"},{tag:[V.propertyName,V.attributeName],color:"#a6e22e"},{tag:[V.variableName],color:"#9effff"},{tag:[V.squareBracket],color:"#bababa"},{tag:[V.string,V.special(V.brace)],color:"#e6db74"},{tag:[V.regexp,V.className,V.typeName,V.definition(V.typeName)],color:"#66d9ef"},{tag:[V.definition(V.variableName),V.definition(V.propertyName),V.function(V.variableName)],color:"#fd971f"},{tag:[V.keyword,V.definitionKeyword,V.modifier,V.tagName,V.angleBracket],color:"#f92672"}]});function bl(){return bl=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},bl.apply(this,arguments)}function BE(t,e){if(t==null)return{};var n={},r=Object.keys(t),i,o;for(o=0;o<r.length;o++)i=r[o],!(e.indexOf(i)>=0)&&(n[i]=t[i]);return n}function Ne(){var t=arguments[0];typeof t=="string"&&(t=document.createElement(t));var e=1,n=arguments[1];if(n&&typeof n=="object"&&n.nodeType==null&&!Array.isArray(n)){for(var r in n)if(Object.prototype.hasOwnProperty.call(n,r)){var i=n[r];typeof i=="string"?t.setAttribute(r,i):i!=null&&(t[r]=i)}e++}for(;e<arguments.length;e++)YE(t,arguments[e]);return t}function YE(t,e){if(typeof e=="string")t.appendChild(document.createTextNode(e));else if(e!=null)if(e.nodeType!=null)t.appendChild(e);else if(Array.isArray(e))for(var n=0;n<e.length;n++)YE(t,e[n]);else throw new RangeError("Unsupported child node: "+e)}const bP=typeof String.prototype.normalize=="function"?t=>t.normalize("NFKD"):t=>t;class vl{constructor(e,n,r=0,i=e.length,o,s){this.test=s,this.value={from:0,to:0},this.done=!1,this.matches=[],this.buffer="",this.bufferPos=0,this.iter=e.iterRange(r,i),this.bufferStart=r,this.normalize=o?a=>o(bP(a)):bP,this.query=this.normalize(n)}peek(){if(this.bufferPos==this.buffer.length){if(this.bufferStart+=this.buffer.length,this.iter.next(),this.iter.done)return-1;this.bufferPos=0,this.buffer=this.iter.value}return Tt(this.buffer,this.bufferPos)}next(){for(;this.matches.length;)this.matches.pop();return this.nextOverlapping()}nextOverlapping(){for(;;){let e=this.peek();if(e<0)return this.done=!0,this;let n=ox(e),r=this.bufferStart+this.bufferPos;this.bufferPos+=wn(e);let i=this.normalize(n);for(let o=0,s=r;;o++){let a=i.charCodeAt(o),l=this.match(a,s);if(l)return this.value=l,this;if(o==i.length-1)break;s==r&&o<n.length&&n.charCodeAt(o)==a&&s++}}}match(e,n){let r=null;for(let i=0;i<this.matches.length;i+=2){let o=this.matches[i],s=!1;this.query.charCodeAt(o)==e&&(o==this.query.length-1?r={from:this.matches[i+1],to:n+1}:(this.matches[i]++,s=!0)),s||(this.matches.splice(i,2),i-=2)}return this.query.charCodeAt(0)==e&&(this.query.length==1?r={from:n,to:n+1}:this.matches.push(1,n)),r&&this.test&&!this.test(r.from,r.to,this.buffer,this.bufferPos)&&(r=null),r}}typeof Symbol<"u"&&(vl.prototype[Symbol.iterator]=function(){return this});const KE={from:-1,to:-1,match:/.*/.exec("")},Zx="gm"+(/x/.unicode==null?"":"u");class UE{constructor(e,n,r,i=0,o=e.length){if(this.text=e,this.to=o,this.curLine="",this.done=!1,this.value=KE,/\\[sWDnr]|\n|\r|\[\^/.test(n))return new qE(e,n,r,i,o);this.re=new RegExp(n,Zx+(r!=null&&r.ignoreCase?"i":"")),this.test=r==null?void 0:r.test,this.iter=e.iter();let s=e.lineAt(i);this.curLineStart=s.from,this.matchPos=Sp(e,i),this.getLine(this.curLineStart)}getLine(e){this.iter.next(e),this.iter.lineBreak?this.curLine="":(this.curLine=this.iter.value,this.curLineStart+this.curLine.length>this.to&&(this.curLine=this.curLine.slice(0,this.to-this.curLineStart)),this.iter.next())}nextLine(){this.curLineStart=this.curLineStart+this.curLine.length+1,this.curLineStart>this.to?this.curLine="":this.getLine(0)}next(){for(let e=this.matchPos-this.curLineStart;;){this.re.lastIndex=e;let n=this.matchPos<=this.to&&this.re.exec(this.curLine);if(n){let r=this.curLineStart+n.index,i=r+n[0].length;if(this.matchPos=Sp(this.text,i+(r==i?1:0)),r==this.curLineStart+this.curLine.length&&this.nextLine(),(r<i||r>this.value.to)&&(!this.test||this.test(r,i,n)))return this.value={from:r,to:i,match:n},this;e=this.matchPos-this.curLineStart}else if(this.curLineStart+this.curLine.length<this.to)this.nextLine(),e=0;else return this.done=!0,this}}}const O0=new WeakMap;class ja{constructor(e,n){this.from=e,this.text=n}get to(){return this.from+this.text.length}static get(e,n,r){let i=O0.get(e);if(!i||i.from>=r||i.to<=n){let a=new ja(n,e.sliceString(n,r));return O0.set(e,a),a}if(i.from==n&&i.to==r)return i;let{text:o,from:s}=i;return s>n&&(o=e.sliceString(n,s)+o,s=n),i.to<r&&(o+=e.sliceString(i.to,r)),O0.set(e,new ja(s,o)),new ja(n,o.slice(n-s,r-s))}}class qE{constructor(e,n,r,i,o){this.text=e,this.to=o,this.done=!1,this.value=KE,this.matchPos=Sp(e,i),this.re=new RegExp(n,Zx+(r!=null&&r.ignoreCase?"i":"")),this.test=r==null?void 0:r.test,this.flat=ja.get(e,i,this.chunkEnd(i+5e3))}chunkEnd(e){return e>=this.to?this.to:this.text.lineAt(e).to}next(){for(;;){let e=this.re.lastIndex=this.matchPos-this.flat.from,n=this.re.exec(this.flat.text);if(n&&!n[0]&&n.index==e&&(this.re.lastIndex=e+1,n=this.re.exec(this.flat.text)),n){let r=this.flat.from+n.index,i=r+n[0].length;if((this.flat.to>=this.to||n.index+n[0].length<=this.flat.text.length-10)&&(!this.test||this.test(r,i,n)))return this.value={from:r,to:i,match:n},this.matchPos=Sp(this.text,i+(r==i?1:0)),this}if(this.flat.to==this.to)return this.done=!0,this;this.flat=ja.get(this.text,this.flat.from,this.chunkEnd(this.flat.from+this.flat.text.length*2))}}}typeof Symbol<"u"&&(UE.prototype[Symbol.iterator]=qE.prototype[Symbol.iterator]=function(){return this});function PD(t){try{return new RegExp(t,Zx),!0}catch{return!1}}function Sp(t,e){if(e>=t.length)return e;let n=t.lineAt(e),r;for(;e<n.to&&(r=n.text.charCodeAt(e-n.from))>=56320&&r<57344;)e++;return e}function cy(t){let e=Ne("input",{class:"cm-textfield",name:"line"}),n=Ne("form",{class:"cm-gotoLine",onkeydown:i=>{i.keyCode==27?(i.preventDefault(),t.dispatch({effects:kp.of(!1)}),t.focus()):i.keyCode==13&&(i.preventDefault(),r())},onsubmit:i=>{i.preventDefault(),r()}},Ne("label",t.state.phrase("Go to line"),": ",e)," ",Ne("button",{class:"cm-button",type:"submit"},t.state.phrase("go")));function r(){let i=/^([+-])?(\d+)?(:\d+)?(%)?$/.exec(e.value);if(!i)return;let{state:o}=t,s=o.doc.lineAt(o.selection.main.head),[,a,l,c,u]=i,d=c?+c.slice(1):0,f=l?+l:s.number;if(l&&u){let p=f/100;a&&(p=p*(a=="-"?-1:1)+s.number/o.doc.lines),f=Math.round(o.doc.lines*p)}else l&&a&&(f=f*(a=="-"?-1:1)+s.number);let h=o.doc.line(Math.max(1,Math.min(o.doc.lines,f)));t.dispatch({effects:kp.of(!1),selection:A.cursor(h.from+Math.max(0,Math.min(d,h.length))),scrollIntoView:!0}),t.focus()}return{dom:n}}const kp=se.define(),vP=St.define({create(){return!0},update(t,e){for(let n of e.effects)n.is(kp)&&(t=n.value);return t},provide:t=>hl.from(t,e=>e?cy:null)}),OD=t=>{let e=Vu(t,cy);if(!e){let n=[kp.of(!0)];t.state.field(vP,!1)==null&&n.push(se.appendConfig.of([vP,CD])),t.dispatch({effects:n}),e=Vu(t,cy)}return e&&e.dom.querySelector("input").focus(),!0},CD=U.baseTheme({".cm-panel.cm-gotoLine":{padding:"2px 6px 4px","& label":{fontSize:"80%"}}}),TD={highlightWordAroundCursor:!1,minSelectionLength:1,maxMatches:100,wholeWords:!1},JE=$.define({combine(t){return ti(t,TD,{highlightWordAroundCursor:(e,n)=>e||n,minSelectionLength:Math.min,maxMatches:Math.min})}});function zD(t){let e=[MD,ID];return t&&e.push(JE.of(t)),e}const VD=G.mark({class:"cm-selectionMatch"}),ED=G.mark({class:"cm-selectionMatch cm-selectionMatch-main"});function yP(t,e,n,r){return(n==0||t(e.sliceDoc(n-1,n))!=Be.Word)&&(r==e.doc.length||t(e.sliceDoc(r,r+1))!=Be.Word)}function ND(t,e,n,r){return t(e.sliceDoc(n,n+1))==Be.Word&&t(e.sliceDoc(r-1,r))==Be.Word}const ID=nt.fromClass(class{constructor(t){this.decorations=this.getDeco(t)}update(t){(t.selectionSet||t.docChanged||t.viewportChanged)&&(this.decorations=this.getDeco(t.view))}getDeco(t){let e=t.state.facet(JE),{state:n}=t,r=n.selection;if(r.ranges.length>1)return G.none;let i=r.main,o,s=null;if(i.empty){if(!e.highlightWordAroundCursor)return G.none;let l=n.wordAt(i.head);if(!l)return G.none;s=n.charCategorizer(i.head),o=n.sliceDoc(l.from,l.to)}else{let l=i.to-i.from;if(l<e.minSelectionLength||l>200)return G.none;if(e.wholeWords){if(o=n.sliceDoc(i.from,i.to),s=n.charCategorizer(i.head),!(yP(s,n,i.from,i.to)&&ND(s,n,i.from,i.to)))return G.none}else if(o=n.sliceDoc(i.from,i.to).trim(),!o)return G.none}let a=[];for(let l of t.visibleRanges){let c=new vl(n.doc,o,l.from,l.to);for(;!c.next().done;){let{from:u,to:d}=c.value;if((!s||yP(s,n,u,d))&&(i.empty&&u<=i.from&&d>=i.to?a.push(ED.range(u,d)):(u>=i.to||d<=i.from)&&a.push(VD.range(u,d)),a.length>e.maxMatches))return G.none}}return G.set(a)}},{decorations:t=>t.decorations}),MD=U.baseTheme({".cm-selectionMatch":{backgroundColor:"#99ff7780"},".cm-searchMatch .cm-selectionMatch":{backgroundColor:"transparent"}}),AD=({state:t,dispatch:e})=>{let{selection:n}=t,r=A.create(n.ranges.map(i=>t.wordAt(i.head)||A.cursor(i.head)),n.mainIndex);return r.eq(n)?!1:(e(t.update({selection:r})),!0)};function LD(t,e){let{main:n,ranges:r}=t.selection,i=t.wordAt(n.head),o=i&&i.from==n.from&&i.to==n.to;for(let s=!1,a=new vl(t.doc,e,r[r.length-1].to);;)if(a.next(),a.done){if(s)return null;a=new vl(t.doc,e,0,Math.max(0,r[r.length-1].from-1)),s=!0}else{if(s&&r.some(l=>l.from==a.value.from))continue;if(o){let l=t.wordAt(a.value.from);if(!l||l.from!=a.value.from||l.to!=a.value.to)continue}return a.value}}const ZD=({state:t,dispatch:e})=>{let{ranges:n}=t.selection;if(n.some(o=>o.from===o.to))return AD({state:t,dispatch:e});let r=t.sliceDoc(n[0].from,n[0].to);if(t.selection.ranges.some(o=>t.sliceDoc(o.from,o.to)!=r))return!1;let i=LD(t,r);return i?(e(t.update({selection:t.selection.addRange(A.range(i.from,i.to),!1),effects:U.scrollIntoView(i.to)})),!0):!1},Xx=$.define({combine(t){return ti(t,{top:!1,caseSensitive:!1,literal:!1,wholeWord:!1,createPanel:e=>new UD(e)})}});class QE{constructor(e){this.search=e.search,this.caseSensitive=!!e.caseSensitive,this.literal=!!e.literal,this.regexp=!!e.regexp,this.replace=e.replace||"",this.valid=!!this.search&&(!this.regexp||PD(this.search)),this.unquoted=this.unquote(this.search),this.wholeWord=!!e.wholeWord}unquote(e){return this.literal?e:e.replace(/\\([nrt\\])/g,(n,r)=>r=="n"?`
`:r=="r"?"\r":r=="t"?"	":"\\")}eq(e){return this.search==e.search&&this.replace==e.replace&&this.caseSensitive==e.caseSensitive&&this.regexp==e.regexp&&this.wholeWord==e.wholeWord}create(){return this.regexp?new FD(this):new WD(this)}getCursor(e,n=0,r){let i=e.doc?e:pe.create({doc:e});return r==null&&(r=i.doc.length),this.regexp?ha(this,i,n,r):fa(this,i,n,r)}}class _E{constructor(e){this.spec=e}}function fa(t,e,n,r){return new vl(e.doc,t.unquoted,n,r,t.caseSensitive?void 0:i=>i.toLowerCase(),t.wholeWord?XD(e.doc,e.charCategorizer(e.selection.main.head)):void 0)}function XD(t,e){return(n,r,i,o)=>((o>n||o+i.length<r)&&(o=Math.max(0,n-2),i=t.sliceString(o,Math.min(t.length,r+2))),(e(wp(i,n-o))!=Be.Word||e(Pp(i,n-o))!=Be.Word)&&(e(Pp(i,r-o))!=Be.Word||e(wp(i,r-o))!=Be.Word))}class WD extends _E{constructor(e){super(e)}nextMatch(e,n,r){let i=fa(this.spec,e,r,e.doc.length).nextOverlapping();return i.done&&(i=fa(this.spec,e,0,n).nextOverlapping()),i.done?null:i.value}prevMatchInRange(e,n,r){for(let i=r;;){let o=Math.max(n,i-1e4-this.spec.unquoted.length),s=fa(this.spec,e,o,i),a=null;for(;!s.nextOverlapping().done;)a=s.value;if(a)return a;if(o==n)return null;i-=1e4}}prevMatch(e,n,r){return this.prevMatchInRange(e,0,n)||this.prevMatchInRange(e,r,e.doc.length)}getReplacement(e){return this.spec.unquote(this.spec.replace)}matchAll(e,n){let r=fa(this.spec,e,0,e.doc.length),i=[];for(;!r.next().done;){if(i.length>=n)return null;i.push(r.value)}return i}highlight(e,n,r,i){let o=fa(this.spec,e,Math.max(0,n-this.spec.unquoted.length),Math.min(r+this.spec.unquoted.length,e.doc.length));for(;!o.next().done;)i(o.value.from,o.value.to)}}function ha(t,e,n,r){return new UE(e.doc,t.search,{ignoreCase:!t.caseSensitive,test:t.wholeWord?RD(e.charCategorizer(e.selection.main.head)):void 0},n,r)}function wp(t,e){return t.slice(Ut(t,e,!1),e)}function Pp(t,e){return t.slice(e,Ut(t,e))}function RD(t){return(e,n,r)=>!r[0].length||(t(wp(r.input,r.index))!=Be.Word||t(Pp(r.input,r.index))!=Be.Word)&&(t(Pp(r.input,r.index+r[0].length))!=Be.Word||t(wp(r.input,r.index+r[0].length))!=Be.Word)}class FD extends _E{nextMatch(e,n,r){let i=ha(this.spec,e,r,e.doc.length).next();return i.done&&(i=ha(this.spec,e,0,n).next()),i.done?null:i.value}prevMatchInRange(e,n,r){for(let i=1;;i++){let o=Math.max(n,r-i*1e4),s=ha(this.spec,e,o,r),a=null;for(;!s.next().done;)a=s.value;if(a&&(o==n||a.from>o+10))return a;if(o==n)return null}}prevMatch(e,n,r){return this.prevMatchInRange(e,0,n)||this.prevMatchInRange(e,r,e.doc.length)}getReplacement(e){return this.spec.unquote(this.spec.replace.replace(/\$([$&\d+])/g,(n,r)=>r=="$"?"$":r=="&"?e.match[0]:r!="0"&&+r<e.match.length?e.match[r]:n))}matchAll(e,n){let r=ha(this.spec,e,0,e.doc.length),i=[];for(;!r.next().done;){if(i.length>=n)return null;i.push(r.value)}return i}highlight(e,n,r,i){let o=ha(this.spec,e,Math.max(0,n-250),Math.min(r+250,e.doc.length));for(;!o.next().done;)i(o.value.from,o.value.to)}}const Lu=se.define(),Wx=se.define(),bo=St.define({create(t){return new C0(uy(t).create(),null)},update(t,e){for(let n of e.effects)n.is(Lu)?t=new C0(n.value.create(),t.panel):n.is(Wx)&&(t=new C0(t.query,n.value?Rx:null));return t},provide:t=>hl.from(t,e=>e.panel)});class C0{constructor(e,n){this.query=e,this.panel=n}}const HD=G.mark({class:"cm-searchMatch"}),DD=G.mark({class:"cm-searchMatch cm-searchMatch-selected"}),GD=nt.fromClass(class{constructor(t){this.view=t,this.decorations=this.highlight(t.state.field(bo))}update(t){let e=t.state.field(bo);(e!=t.startState.field(bo)||t.docChanged||t.selectionSet||t.viewportChanged)&&(this.decorations=this.highlight(e))}highlight({query:t,panel:e}){if(!e||!t.spec.valid)return G.none;let{view:n}=this,r=new Oi;for(let i=0,o=n.visibleRanges,s=o.length;i<s;i++){let{from:a,to:l}=o[i];for(;i<s-1&&l>o[i+1].from-2*250;)l=o[++i].to;t.highlight(n.state,a,l,(c,u)=>{let d=n.state.selection.ranges.some(f=>f.from==c&&f.to==u);r.add(c,u,d?DD:HD)})}return r.finish()}},{decorations:t=>t.decorations});function fd(t){return e=>{let n=e.state.field(bo,!1);return n&&n.query.spec.valid?t(e,n):$E(e)}}const Op=fd((t,{query:e})=>{let{to:n}=t.state.selection.main,r=e.nextMatch(t.state,n,n);return r?(t.dispatch({selection:{anchor:r.from,head:r.to},scrollIntoView:!0,effects:Fx(t,r),userEvent:"select.search"}),!0):!1}),Cp=fd((t,{query:e})=>{let{state:n}=t,{from:r}=n.selection.main,i=e.prevMatch(n,r,r);return i?(t.dispatch({selection:{anchor:i.from,head:i.to},scrollIntoView:!0,effects:Fx(t,i),userEvent:"select.search"}),!0):!1}),jD=fd((t,{query:e})=>{let n=e.matchAll(t.state,1e3);return!n||!n.length?!1:(t.dispatch({selection:A.create(n.map(r=>A.range(r.from,r.to))),userEvent:"select.search.matches"}),!0)}),BD=({state:t,dispatch:e})=>{let n=t.selection;if(n.ranges.length>1||n.main.empty)return!1;let{from:r,to:i}=n.main,o=[],s=0;for(let a=new vl(t.doc,t.sliceDoc(r,i));!a.next().done;){if(o.length>1e3)return!1;a.value.from==r&&(s=o.length),o.push(A.range(a.value.from,a.value.to))}return e(t.update({selection:A.create(o,s),userEvent:"select.search.matches"})),!0},xP=fd((t,{query:e})=>{let{state:n}=t,{from:r,to:i}=n.selection.main;if(n.readOnly)return!1;let o=e.nextMatch(n,r,r);if(!o)return!1;let s=[],a,l,c=[];if(o.from==r&&o.to==i&&(l=n.toText(e.getReplacement(o)),s.push({from:o.from,to:o.to,insert:l}),o=e.nextMatch(n,o.from,o.to),c.push(U.announce.of(n.phrase("replaced match on line $",n.doc.lineAt(r).number)+"."))),o){let u=s.length==0||s[0].from>=o.to?0:o.to-o.from-l.length;a={anchor:o.from-u,head:o.to-u},c.push(Fx(t,o))}return t.dispatch({changes:s,selection:a,scrollIntoView:!!a,effects:c,userEvent:"input.replace"}),!0}),YD=fd((t,{query:e})=>{if(t.state.readOnly)return!1;let n=e.matchAll(t.state,1e9).map(i=>{let{from:o,to:s}=i;return{from:o,to:s,insert:e.getReplacement(i)}});if(!n.length)return!1;let r=t.state.phrase("replaced $ matches",n.length)+".";return t.dispatch({changes:n,effects:U.announce.of(r),userEvent:"input.replace.all"}),!0});function Rx(t){return t.state.facet(Xx).createPanel(t)}function uy(t,e){var n,r,i,o;let s=t.selection.main,a=s.empty||s.to>s.from+100?"":t.sliceDoc(s.from,s.to);if(e&&!a)return e;let l=t.facet(Xx);return new QE({search:((n=e==null?void 0:e.literal)!==null&&n!==void 0?n:l.literal)?a:a.replace(/\n/g,"\\n"),caseSensitive:(r=e==null?void 0:e.caseSensitive)!==null&&r!==void 0?r:l.caseSensitive,literal:(i=e==null?void 0:e.literal)!==null&&i!==void 0?i:l.literal,wholeWord:(o=e==null?void 0:e.wholeWord)!==null&&o!==void 0?o:l.wholeWord})}const $E=t=>{let e=t.state.field(bo,!1);if(e&&e.panel){let n=Vu(t,Rx);if(!n)return!1;let r=n.dom.querySelector("[main-field]");if(r&&r!=t.root.activeElement){let i=uy(t.state,e.query.spec);i.valid&&t.dispatch({effects:Lu.of(i)}),r.focus(),r.select()}}else t.dispatch({effects:[Wx.of(!0),e?Lu.of(uy(t.state,e.query.spec)):se.appendConfig.of(JD)]});return!0},eN=t=>{let e=t.state.field(bo,!1);if(!e||!e.panel)return!1;let n=Vu(t,Rx);return n&&n.dom.contains(t.root.activeElement)&&t.focus(),t.dispatch({effects:Wx.of(!1)}),!0},KD=[{key:"Mod-f",run:$E,scope:"editor search-panel"},{key:"F3",run:Op,shift:Cp,scope:"editor search-panel",preventDefault:!0},{key:"Mod-g",run:Op,shift:Cp,scope:"editor search-panel",preventDefault:!0},{key:"Escape",run:eN,scope:"editor search-panel"},{key:"Mod-Shift-l",run:BD},{key:"Alt-g",run:OD},{key:"Mod-d",run:ZD,preventDefault:!0}];class UD{constructor(e){this.view=e;let n=this.query=e.state.field(bo).query.spec;this.commit=this.commit.bind(this),this.searchField=Ne("input",{value:n.search,placeholder:vn(e,"Find"),"aria-label":vn(e,"Find"),class:"cm-textfield",name:"search",form:"","main-field":"true",onchange:this.commit,onkeyup:this.commit}),this.replaceField=Ne("input",{value:n.replace,placeholder:vn(e,"Replace"),"aria-label":vn(e,"Replace"),class:"cm-textfield",name:"replace",form:"",onchange:this.commit,onkeyup:this.commit}),this.caseField=Ne("input",{type:"checkbox",name:"case",form:"",checked:n.caseSensitive,onchange:this.commit}),this.reField=Ne("input",{type:"checkbox",name:"re",form:"",checked:n.regexp,onchange:this.commit}),this.wordField=Ne("input",{type:"checkbox",name:"word",form:"",checked:n.wholeWord,onchange:this.commit});function r(i,o,s){return Ne("button",{class:"cm-button",name:i,onclick:o,type:"button"},s)}this.dom=Ne("div",{onkeydown:i=>this.keydown(i),class:"cm-search"},[this.searchField,r("next",()=>Op(e),[vn(e,"next")]),r("prev",()=>Cp(e),[vn(e,"previous")]),r("select",()=>jD(e),[vn(e,"all")]),Ne("label",null,[this.caseField,vn(e,"match case")]),Ne("label",null,[this.reField,vn(e,"regexp")]),Ne("label",null,[this.wordField,vn(e,"by word")]),...e.state.readOnly?[]:[Ne("br"),this.replaceField,r("replace",()=>xP(e),[vn(e,"replace")]),r("replaceAll",()=>YD(e),[vn(e,"replace all")])],Ne("button",{name:"close",onclick:()=>eN(e),"aria-label":vn(e,"close"),type:"button"},["\xD7"])])}commit(){let e=new QE({search:this.searchField.value,caseSensitive:this.caseField.checked,regexp:this.reField.checked,wholeWord:this.wordField.checked,replace:this.replaceField.value});e.eq(this.query)||(this.query=e,this.view.dispatch({effects:Lu.of(e)}))}keydown(e){AF(this.view,e,"search-panel")?e.preventDefault():e.keyCode==13&&e.target==this.searchField?(e.preventDefault(),(e.shiftKey?Cp:Op)(this.view)):e.keyCode==13&&e.target==this.replaceField&&(e.preventDefault(),xP(this.view))}update(e){for(let n of e.transactions)for(let r of n.effects)r.is(Lu)&&!r.value.eq(this.query)&&this.setQuery(r.value)}setQuery(e){this.query=e,this.searchField.value=e.search,this.replaceField.value=e.replace,this.caseField.checked=e.caseSensitive,this.reField.checked=e.regexp,this.wordField.checked=e.wholeWord}mount(){this.searchField.select()}get pos(){return 80}get top(){return this.view.state.facet(Xx).top}}function vn(t,e){return t.state.phrase(e)}const mf=30,gf=/[\s\.,:;?!]/;function Fx(t,{from:e,to:n}){let r=t.state.doc.lineAt(e),i=t.state.doc.lineAt(n).to,o=Math.max(r.from,e-mf),s=Math.min(i,n+mf),a=t.state.sliceDoc(o,s);if(o!=r.from){for(let l=0;l<mf;l++)if(!gf.test(a[l+1])&&gf.test(a[l])){a=a.slice(l);break}}if(s!=i){for(let l=a.length-1;l>a.length-mf;l--)if(!gf.test(a[l-1])&&gf.test(a[l])){a=a.slice(0,l);break}}return U.announce.of(`${t.state.phrase("current match")}. ${a} ${t.state.phrase("on line")} ${r.number}.`)}const qD=U.baseTheme({".cm-panel.cm-search":{padding:"2px 6px 4px",position:"relative","& [name=close]":{position:"absolute",top:"0",right:"4px",backgroundColor:"inherit",border:"none",font:"inherit",padding:0,margin:0},"& input, & button, & label":{margin:".2em .6em .2em 0"},"& input[type=checkbox]":{marginRight:".2em"},"& label":{fontSize:"80%",whiteSpace:"pre"}},"&light .cm-searchMatch":{backgroundColor:"#ffff0054"},"&dark .cm-searchMatch":{backgroundColor:"#00ffff8a"},"&light .cm-searchMatch-selected":{backgroundColor:"#ff6a0054"},"&dark .cm-searchMatch-selected":{backgroundColor:"#ff00ff8a"}}),JD=[bo,Fs.lowest(GD),qD];class tN{constructor(e,n,r){this.state=e,this.pos=n,this.explicit=r,this.abortListeners=[]}tokenBefore(e){let n=xt(this.state).resolveInner(this.pos,-1);for(;n&&e.indexOf(n.name)<0;)n=n.parent;return n?{from:n.from,to:this.pos,text:this.state.sliceDoc(n.from,this.pos),type:n.type}:null}matchBefore(e){let n=this.state.doc.lineAt(this.pos),r=Math.max(n.from,this.pos-250),i=n.text.slice(r-n.from,this.pos-n.from),o=i.search(rN(e,!1));return o<0?null:{from:r+o,to:this.pos,text:i.slice(o)}}get aborted(){return this.abortListeners==null}addEventListener(e,n){e=="abort"&&this.abortListeners&&this.abortListeners.push(n)}}function SP(t){let e=Object.keys(t).join(""),n=/\w/.test(e);return n&&(e=e.replace(/\w/g,"")),`[${n?"\\w":""}${e.replace(/[^\w\s]/g,"\\$&")}]`}function QD(t){let e=Object.create(null),n=Object.create(null);for(let{label:i}of t){e[i[0]]=!0;for(let o=1;o<i.length;o++)n[i[o]]=!0}let r=SP(e)+SP(n)+"*$";return[new RegExp("^"+r),new RegExp(r)]}function nN(t){let e=t.map(i=>typeof i=="string"?{label:i}:i),[n,r]=e.every(i=>/^\w+$/.test(i.label))?[/\w*$/,/\w+$/]:QD(e);return i=>{let o=i.matchBefore(r);return o||i.explicit?{from:o?o.from:i.pos,options:e,validFor:n}:null}}class kP{constructor(e,n,r){this.completion=e,this.source=n,this.match=r}}function vo(t){return t.selection.main.head}function rN(t,e){var n;let{source:r}=t,i=e&&r[0]!="^",o=r[r.length-1]!="$";return!i&&!o?t:new RegExp(`${i?"^":""}(?:${r})${o?"$":""}`,(n=t.flags)!==null&&n!==void 0?n:t.ignoreCase?"i":"")}const _D=Io.define();function $D(t,e,n,r){return Object.assign(Object.assign({},t.changeByRange(i=>{if(i==t.selection.main)return{changes:{from:n,to:r,insert:e},range:A.cursor(n+e.length)};let o=r-n;return!i.empty||o&&t.sliceDoc(i.from-o,i.from)!=t.sliceDoc(n,r)?{range:i}:{changes:{from:i.from-o,to:i.from,insert:e},range:A.cursor(i.from-o+e.length)}})),{userEvent:"input.complete"})}function iN(t,e){const n=e.completion.apply||e.completion.label;let r=e.source;typeof n=="string"?t.dispatch(Object.assign(Object.assign({},$D(t.state,n,r.from,r.to)),{annotations:_D.of(e.completion)})):n(t,e.completion,r.from,r.to)}const wP=new WeakMap;function e8(t){if(!Array.isArray(t))return t;let e=wP.get(t);return e||wP.set(t,e=nN(t)),e}class t8{constructor(e){this.pattern=e,this.chars=[],this.folded=[],this.any=[],this.precise=[],this.byWord=[];for(let n=0;n<e.length;){let r=Tt(e,n),i=wn(r);this.chars.push(r);let o=e.slice(n,n+i),s=o.toUpperCase();this.folded.push(Tt(s==o?o.toLowerCase():s,0)),n+=i}this.astral=e.length!=this.chars.length}match(e){if(this.pattern.length==0)return[0];if(e.length<this.pattern.length)return null;let{chars:n,folded:r,any:i,precise:o,byWord:s}=this;if(n.length==1){let b=Tt(e,0);return b==n[0]?[0,0,wn(b)]:b==r[0]?[-200,0,wn(b)]:null}let a=e.indexOf(this.pattern);if(a==0)return[0,0,this.pattern.length];let l=n.length,c=0;if(a<0){for(let b=0,y=Math.min(e.length,200);b<y&&c<l;){let x=Tt(e,b);(x==n[c]||x==r[c])&&(i[c++]=b),b+=wn(x)}if(c<l)return null}let u=0,d=0,f=!1,h=0,p=-1,m=-1,v=/[a-z]/.test(e),g=!0;for(let b=0,y=Math.min(e.length,200),x=0;b<y&&d<l;){let k=Tt(e,b);a<0&&(u<l&&k==n[u]&&(o[u++]=b),h<l&&(k==n[h]||k==r[h]?(h==0&&(p=b),m=b+1,h++):h=0));let P,O=k<255?k>=48&&k<=57||k>=97&&k<=122?2:k>=65&&k<=90?1:0:(P=ox(k))!=P.toLowerCase()?1:P!=P.toUpperCase()?2:0;(!b||O==1&&v||x==0&&O!=0)&&(n[d]==k||r[d]==k&&(f=!0)?s[d++]=b:s.length&&(g=!1)),x=O,b+=wn(k)}return d==l&&s[0]==0&&g?this.result(-100+(f?-200:0),s,e):h==l&&p==0?[-200-e.length,0,m]:a>-1?[-700-e.length,a,a+this.pattern.length]:h==l?[-200+-700-e.length,p,m]:d==l?this.result(-100+(f?-200:0)+-700+(g?0:-1100),s,e):n.length==2?null:this.result((i[0]?-700:0)+-200+-1100,i,e)}result(e,n,r){let i=[e-r.length],o=1;for(let s of n){let a=s+(this.astral?wn(Tt(r,s)):1);o>1&&i[o-1]==s?i[o-1]=a:(i[o++]=s,i[o++]=a)}return i}}const er=$.define({combine(t){return ti(t,{activateOnTyping:!0,selectOnOpen:!0,override:null,closeOnBlur:!0,maxRenderedOptions:100,defaultKeymap:!0,optionClass:()=>"",aboveCursor:!1,icons:!0,addToOptions:[],compareCompletions:(e,n)=>e.label.localeCompare(n.label),interactionDelay:75},{defaultKeymap:(e,n)=>e&&n,closeOnBlur:(e,n)=>e&&n,icons:(e,n)=>e&&n,optionClass:(e,n)=>r=>n8(e(r),n(r)),addToOptions:(e,n)=>e.concat(n)})}});function n8(t,e){return t?e?t+" "+e:t:e}function r8(t){let e=t.addToOptions.slice();return t.icons&&e.push({render(n){let r=document.createElement("div");return r.classList.add("cm-completionIcon"),n.type&&r.classList.add(...n.type.split(/\s+/g).map(i=>"cm-completionIcon-"+i)),r.setAttribute("aria-hidden","true"),r},position:20}),e.push({render(n,r,i){let o=document.createElement("span");o.className="cm-completionLabel";let{label:s}=n,a=0;for(let l=1;l<i.length;){let c=i[l++],u=i[l++];c>a&&o.appendChild(document.createTextNode(s.slice(a,c)));let d=o.appendChild(document.createElement("span"));d.appendChild(document.createTextNode(s.slice(c,u))),d.className="cm-completionMatchedText",a=u}return a<s.length&&o.appendChild(document.createTextNode(s.slice(a))),o},position:50},{render(n){if(!n.detail)return null;let r=document.createElement("span");return r.className="cm-completionDetail",r.textContent=n.detail,r},position:80}),e.sort((n,r)=>n.position-r.position).map(n=>n.render)}function PP(t,e,n){if(t<=n)return{from:0,to:t};if(e<0&&(e=0),e<=t>>1){let i=Math.floor(e/n);return{from:i*n,to:(i+1)*n}}let r=Math.floor((t-e)/n);return{from:t-(r+1)*n,to:t-r*n}}class i8{constructor(e,n){this.view=e,this.stateField=n,this.info=null,this.placeInfo={read:()=>this.measureInfo(),write:a=>this.positionInfo(a),key:this},this.space=null;let r=e.state.field(n),{options:i,selected:o}=r.open,s=e.state.facet(er);this.optionContent=r8(s),this.optionClass=s.optionClass,this.range=PP(i.length,o,s.maxRenderedOptions),this.dom=document.createElement("div"),this.dom.className="cm-tooltip-autocomplete",this.dom.addEventListener("mousedown",a=>{for(let l=a.target,c;l&&l!=this.dom;l=l.parentNode)if(l.nodeName=="LI"&&(c=/-(\d+)$/.exec(l.id))&&+c[1]<i.length){iN(e,i[+c[1]]),a.preventDefault();return}}),this.list=this.dom.appendChild(this.createListBox(i,r.id,this.range)),this.list.addEventListener("scroll",()=>{this.info&&this.view.requestMeasure(this.placeInfo)})}mount(){this.updateSel()}update(e){var n,r,i;let o=e.state.field(this.stateField),s=e.startState.field(this.stateField);o!=s&&(this.updateSel(),((n=o.open)===null||n===void 0?void 0:n.disabled)!=((r=s.open)===null||r===void 0?void 0:r.disabled)&&this.dom.classList.toggle("cm-tooltip-autocomplete-disabled",!!(!((i=o.open)===null||i===void 0)&&i.disabled)))}positioned(e){this.space=e,this.info&&this.view.requestMeasure(this.placeInfo)}updateSel(){let e=this.view.state.field(this.stateField),n=e.open;if((n.selected>-1&&n.selected<this.range.from||n.selected>=this.range.to)&&(this.range=PP(n.options.length,n.selected,this.view.state.facet(er).maxRenderedOptions),this.list.remove(),this.list=this.dom.appendChild(this.createListBox(n.options,e.id,this.range)),this.list.addEventListener("scroll",()=>{this.info&&this.view.requestMeasure(this.placeInfo)})),this.updateSelectedOption(n.selected)){this.info&&(this.info.remove(),this.info=null);let{completion:r}=n.options[n.selected],{info:i}=r;if(!i)return;let o=typeof i=="string"?document.createTextNode(i):i(r);if(!o)return;"then"in o?o.then(s=>{s&&this.view.state.field(this.stateField,!1)==e&&this.addInfoPane(s)}).catch(s=>zn(this.view.state,s,"completion info")):this.addInfoPane(o)}}addInfoPane(e){let n=this.info=document.createElement("div");n.className="cm-tooltip cm-completionInfo",n.appendChild(e),this.dom.appendChild(n),this.view.requestMeasure(this.placeInfo)}updateSelectedOption(e){let n=null;for(let r=this.list.firstChild,i=this.range.from;r;r=r.nextSibling,i++)i==e?r.hasAttribute("aria-selected")||(r.setAttribute("aria-selected","true"),n=r):r.hasAttribute("aria-selected")&&r.removeAttribute("aria-selected");return n&&s8(this.list,n),n}measureInfo(){let e=this.dom.querySelector("[aria-selected]");if(!e||!this.info)return null;let n=this.dom.getBoundingClientRect(),r=this.info.getBoundingClientRect(),i=e.getBoundingClientRect(),o=this.space;if(!o){let p=this.dom.ownerDocument.defaultView||window;o={left:0,top:0,right:p.innerWidth,bottom:p.innerHeight}}if(i.top>Math.min(o.bottom,n.bottom)-10||i.bottom<Math.max(o.top,n.top)+10)return null;let s=this.view.textDirection==Je.RTL,a=s,l=!1,c,u="",d="",f=n.left-o.left,h=o.right-n.right;if(a&&f<Math.min(r.width,h)?a=!1:!a&&h<Math.min(r.width,f)&&(a=!0),r.width<=(a?f:h))u=Math.max(o.top,Math.min(i.top,o.bottom-r.height))-n.top+"px",c=Math.min(400,a?f:h)+"px";else{l=!0,c=Math.min(400,(s?n.right:o.right-n.left)-30)+"px";let p=o.bottom-n.bottom;p>=r.height||p>n.top?u=i.bottom-n.top+"px":d=n.bottom-i.top+"px"}return{top:u,bottom:d,maxWidth:c,class:l?s?"left-narrow":"right-narrow":a?"left":"right"}}positionInfo(e){this.info&&(e?(this.info.style.top=e.top,this.info.style.bottom=e.bottom,this.info.style.maxWidth=e.maxWidth,this.info.className="cm-tooltip cm-completionInfo cm-completionInfo-"+e.class):this.info.style.top="-1e6px")}createListBox(e,n,r){const i=document.createElement("ul");i.id=n,i.setAttribute("role","listbox"),i.setAttribute("aria-expanded","true"),i.setAttribute("aria-label",this.view.state.phrase("Completions"));for(let o=r.from;o<r.to;o++){let{completion:s,match:a}=e[o];const l=i.appendChild(document.createElement("li"));l.id=n+"-"+o,l.setAttribute("role","option");let c=this.optionClass(s);c&&(l.className=c);for(let u of this.optionContent){let d=u(s,this.view.state,a);d&&l.appendChild(d)}}return r.from&&i.classList.add("cm-completionListIncompleteTop"),r.to<e.length&&i.classList.add("cm-completionListIncompleteBottom"),i}}function o8(t){return e=>new i8(e,t)}function s8(t,e){let n=t.getBoundingClientRect(),r=e.getBoundingClientRect();r.top<n.top?t.scrollTop-=n.top-r.top:r.bottom>n.bottom&&(t.scrollTop+=r.bottom-n.bottom)}function OP(t){return(t.boost||0)*100+(t.apply?10:0)+(t.info?5:0)+(t.type?1:0)}function a8(t,e){let n=[],r=0;for(let a of t)if(a.hasResult())if(a.result.filter===!1){let l=a.result.getMatch;for(let c of a.result.options){let u=[1e9-r++];if(l)for(let d of l(c))u.push(d);n.push(new kP(c,a,u))}}else{let l=new t8(e.sliceDoc(a.from,a.to)),c;for(let u of a.result.options)(c=l.match(u.label))&&(u.boost!=null&&(c[0]+=u.boost),n.push(new kP(u,a,c)))}let i=[],o=null,s=e.facet(er).compareCompletions;for(let a of n.sort((l,c)=>c.match[0]-l.match[0]||s(l.completion,c.completion)))!o||o.label!=a.completion.label||o.detail!=a.completion.detail||o.type!=null&&a.completion.type!=null&&o.type!=a.completion.type||o.apply!=a.completion.apply?i.push(a):OP(a.completion)>OP(o)&&(i[i.length-1]=a),o=a.completion;return i}class Va{constructor(e,n,r,i,o,s){this.options=e,this.attrs=n,this.tooltip=r,this.timestamp=i,this.selected=o,this.disabled=s}setSelected(e,n){return e==this.selected||e>=this.options.length?this:new Va(this.options,CP(n,e),this.tooltip,this.timestamp,e,this.disabled)}static build(e,n,r,i,o){let s=a8(e,n);if(!s.length)return i&&e.some(l=>l.state==1)?new Va(i.options,i.attrs,i.tooltip,i.timestamp,i.selected,!0):null;let a=n.facet(er).selectOnOpen?0:-1;if(i&&i.selected!=a&&i.selected!=-1){let l=i.options[i.selected].completion;for(let c=0;c<s.length;c++)if(s[c].completion==l){a=c;break}}return new Va(s,CP(r,a),{pos:e.reduce((l,c)=>c.hasResult()?Math.min(l,c.from):l,1e8),create:o8(Bn),above:o.aboveCursor},i?i.timestamp:Date.now(),a,!1)}map(e){return new Va(this.options,this.attrs,Object.assign(Object.assign({},this.tooltip),{pos:e.mapPos(this.tooltip.pos)}),this.timestamp,this.selected,this.disabled)}}class Tp{constructor(e,n,r){this.active=e,this.id=n,this.open=r}static start(){return new Tp(u8,"cm-ac-"+Math.floor(Math.random()*2e6).toString(36),null)}update(e){let{state:n}=e,r=n.facet(er),o=(r.override||n.languageDataAt("autocomplete",vo(n)).map(e8)).map(a=>(this.active.find(c=>c.source==a)||new on(a,this.active.some(c=>c.state!=0)?1:0)).update(e,r));o.length==this.active.length&&o.every((a,l)=>a==this.active[l])&&(o=this.active);let s=this.open;e.selection||o.some(a=>a.hasResult()&&e.changes.touchesRange(a.from,a.to))||!l8(o,this.active)?s=Va.build(o,n,this.id,this.open,r):s&&s.disabled&&!o.some(a=>a.state==1)?s=null:s&&e.docChanged&&(s=s.map(e.changes)),!s&&o.every(a=>a.state!=1)&&o.some(a=>a.hasResult())&&(o=o.map(a=>a.hasResult()?new on(a.source,0):a));for(let a of e.effects)a.is(sN)&&(s=s&&s.setSelected(a.value,this.id));return o==this.active&&s==this.open?this:new Tp(o,this.id,s)}get tooltip(){return this.open?this.open.tooltip:null}get attrs(){return this.open?this.open.attrs:c8}}function l8(t,e){if(t==e)return!0;for(let n=0,r=0;;){for(;n<t.length&&!t[n].hasResult;)n++;for(;r<e.length&&!e[r].hasResult;)r++;let i=n==t.length,o=r==e.length;if(i||o)return i==o;if(t[n++].result!=e[r++].result)return!1}}const c8={"aria-autocomplete":"list"};function CP(t,e){let n={"aria-autocomplete":"list","aria-haspopup":"listbox","aria-controls":t};return e>-1&&(n["aria-activedescendant"]=t+"-"+e),n}const u8=[];function dy(t){return t.isUserEvent("input.type")?"input":t.isUserEvent("delete.backward")?"delete":null}class on{constructor(e,n,r=-1){this.source=e,this.state=n,this.explicitPos=r}hasResult(){return!1}update(e,n){let r=dy(e),i=this;r?i=i.handleUserEvent(e,r,n):e.docChanged?i=i.handleChange(e):e.selection&&i.state!=0&&(i=new on(i.source,0));for(let o of e.effects)if(o.is(Hx))i=new on(i.source,1,o.value?vo(e.state):-1);else if(o.is(zp))i=new on(i.source,0);else if(o.is(oN))for(let s of o.value)s.source==i.source&&(i=s);return i}handleUserEvent(e,n,r){return n=="delete"||!r.activateOnTyping?this.map(e.changes):new on(this.source,1)}handleChange(e){return e.changes.touchesRange(vo(e.startState))?new on(this.source,0):this.map(e.changes)}map(e){return e.empty||this.explicitPos<0?this:new on(this.source,this.state,e.mapPos(this.explicitPos))}}class Dc extends on{constructor(e,n,r,i,o){super(e,2,n),this.result=r,this.from=i,this.to=o}hasResult(){return!0}handleUserEvent(e,n,r){var i;let o=e.changes.mapPos(this.from),s=e.changes.mapPos(this.to,1),a=vo(e.state);if((this.explicitPos<0?a<=o:a<this.from)||a>s||n=="delete"&&vo(e.startState)==this.from)return new on(this.source,n=="input"&&r.activateOnTyping?1:0);let l=this.explicitPos<0?-1:e.changes.mapPos(this.explicitPos),c;return d8(this.result.validFor,e.state,o,s)?new Dc(this.source,l,this.result,o,s):this.result.update&&(c=this.result.update(this.result,o,s,new tN(e.state,a,l>=0)))?new Dc(this.source,l,c,c.from,(i=c.to)!==null&&i!==void 0?i:vo(e.state)):new on(this.source,1,l)}handleChange(e){return e.changes.touchesRange(this.from,this.to)?new on(this.source,0):this.map(e.changes)}map(e){return e.empty?this:new Dc(this.source,this.explicitPos<0?-1:e.mapPos(this.explicitPos),this.result,e.mapPos(this.from),e.mapPos(this.to,1))}}function d8(t,e,n,r){if(!t)return!1;let i=e.sliceDoc(n,r);return typeof t=="function"?t(i,n,r,e):rN(t,!0).test(i)}const Hx=se.define(),zp=se.define(),oN=se.define({map(t,e){return t.map(n=>n.map(e))}}),sN=se.define(),Bn=St.define({create(){return Tp.start()},update(t,e){return t.update(e)},provide:t=>[mx.from(t,e=>e.tooltip),U.contentAttributes.from(t,e=>e.attrs)]});function bf(t,e="option"){return n=>{let r=n.state.field(Bn,!1);if(!r||!r.open||r.open.disabled||Date.now()-r.open.timestamp<n.state.facet(er).interactionDelay)return!1;let i=1,o;e=="page"&&(o=w7(n,r.open.tooltip))&&(i=Math.max(2,Math.floor(o.dom.offsetHeight/o.dom.querySelector("li").offsetHeight)-1));let{length:s}=r.open.options,a=r.open.selected>-1?r.open.selected+i*(t?1:-1):t?0:s-1;return a<0?a=e=="page"?0:s-1:a>=s&&(a=e=="page"?s-1:0),n.dispatch({effects:sN.of(a)}),!0}}const f8=t=>{let e=t.state.field(Bn,!1);return t.state.readOnly||!e||!e.open||e.open.selected<0||Date.now()-e.open.timestamp<t.state.facet(er).interactionDelay?!1:(e.open.disabled||iN(t,e.open.options[e.open.selected]),!0)},h8=t=>t.state.field(Bn,!1)?(t.dispatch({effects:Hx.of(!0)}),!0):!1,p8=t=>{let e=t.state.field(Bn,!1);return!e||!e.active.some(n=>n.state!=0)?!1:(t.dispatch({effects:zp.of(null)}),!0)};class m8{constructor(e,n){this.active=e,this.context=n,this.time=Date.now(),this.updates=[],this.done=void 0}}const TP=50,g8=50,b8=1e3,v8=nt.fromClass(class{constructor(t){this.view=t,this.debounceUpdate=-1,this.running=[],this.debounceAccept=-1,this.composing=0;for(let e of t.state.field(Bn).active)e.state==1&&this.startQuery(e)}update(t){let e=t.state.field(Bn);if(!t.selectionSet&&!t.docChanged&&t.startState.field(Bn)==e)return;let n=t.transactions.some(r=>(r.selection||r.docChanged)&&!dy(r));for(let r=0;r<this.running.length;r++){let i=this.running[r];if(n||i.updates.length+t.transactions.length>g8&&Date.now()-i.time>b8){for(let o of i.context.abortListeners)try{o()}catch(s){zn(this.view.state,s)}i.context.abortListeners=null,this.running.splice(r--,1)}else i.updates.push(...t.transactions)}if(this.debounceUpdate>-1&&clearTimeout(this.debounceUpdate),this.debounceUpdate=e.active.some(r=>r.state==1&&!this.running.some(i=>i.active.source==r.source))?setTimeout(()=>this.startUpdate(),TP):-1,this.composing!=0)for(let r of t.transactions)dy(r)=="input"?this.composing=2:this.composing==2&&r.selection&&(this.composing=3)}startUpdate(){this.debounceUpdate=-1;let{state:t}=this.view,e=t.field(Bn);for(let n of e.active)n.state==1&&!this.running.some(r=>r.active.source==n.source)&&this.startQuery(n)}startQuery(t){let{state:e}=this.view,n=vo(e),r=new tN(e,n,t.explicitPos==n),i=new m8(t,r);this.running.push(i),Promise.resolve(t.source(r)).then(o=>{i.context.aborted||(i.done=o||null,this.scheduleAccept())},o=>{this.view.dispatch({effects:zp.of(null)}),zn(this.view.state,o)})}scheduleAccept(){this.running.every(t=>t.done!==void 0)?this.accept():this.debounceAccept<0&&(this.debounceAccept=setTimeout(()=>this.accept(),TP))}accept(){var t;this.debounceAccept>-1&&clearTimeout(this.debounceAccept),this.debounceAccept=-1;let e=[],n=this.view.state.facet(er);for(let r=0;r<this.running.length;r++){let i=this.running[r];if(i.done===void 0)continue;if(this.running.splice(r--,1),i.done){let s=new Dc(i.active.source,i.active.explicitPos,i.done,i.done.from,(t=i.done.to)!==null&&t!==void 0?t:vo(i.updates.length?i.updates[0].startState:this.view.state));for(let a of i.updates)s=s.update(a,n);if(s.hasResult()){e.push(s);continue}}let o=this.view.state.field(Bn).active.find(s=>s.source==i.active.source);if(o&&o.state==1)if(i.done==null){let s=new on(i.active.source,0);for(let a of i.updates)s=s.update(a,n);s.state!=1&&e.push(s)}else this.startQuery(o)}e.length&&this.view.dispatch({effects:oN.of(e)})}},{eventHandlers:{blur(){let t=this.view.state.field(Bn,!1);t&&t.tooltip&&this.view.state.facet(er).closeOnBlur&&this.view.dispatch({effects:zp.of(null)})},compositionstart(){this.composing=1},compositionend(){this.composing==3&&setTimeout(()=>this.view.dispatch({effects:Hx.of(!1)}),20),this.composing=0}}}),y8=U.baseTheme({".cm-tooltip.cm-tooltip-autocomplete":{"& > ul":{fontFamily:"monospace",whiteSpace:"nowrap",overflow:"hidden auto",maxWidth_fallback:"700px",maxWidth:"min(700px, 95vw)",minWidth:"250px",maxHeight:"10em",height:"100%",listStyle:"none",margin:0,padding:0,"& > li":{overflowX:"hidden",textOverflow:"ellipsis",cursor:"pointer",padding:"1px 3px",lineHeight:1.2}}},"&light .cm-tooltip-autocomplete ul li[aria-selected]":{background:"#17c",color:"white"},"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]":{background:"#777"},"&dark .cm-tooltip-autocomplete ul li[aria-selected]":{background:"#347",color:"white"},"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]":{background:"#444"},".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after":{content:'"\xB7\xB7\xB7"',opacity:.5,display:"block",textAlign:"center"},".cm-tooltip.cm-completionInfo":{position:"absolute",padding:"3px 9px",width:"max-content",maxWidth:`${400}px`,boxSizing:"border-box"},".cm-completionInfo.cm-completionInfo-left":{right:"100%"},".cm-completionInfo.cm-completionInfo-right":{left:"100%"},".cm-completionInfo.cm-completionInfo-left-narrow":{right:`${30}px`},".cm-completionInfo.cm-completionInfo-right-narrow":{left:`${30}px`},"&light .cm-snippetField":{backgroundColor:"#00000022"},"&dark .cm-snippetField":{backgroundColor:"#ffffff22"},".cm-snippetFieldPosition":{verticalAlign:"text-top",width:0,height:"1.15em",display:"inline-block",margin:"0 -0.7px -.7em",borderLeft:"1.4px dotted #888"},".cm-completionMatchedText":{textDecoration:"underline"},".cm-completionDetail":{marginLeft:"0.5em",fontStyle:"italic"},".cm-completionIcon":{fontSize:"90%",width:".8em",display:"inline-block",textAlign:"center",paddingRight:".6em",opacity:"0.6",boxSizing:"content-box"},".cm-completionIcon-function, .cm-completionIcon-method":{"&:after":{content:"'\u0192'"}},".cm-completionIcon-class":{"&:after":{content:"'\u25CB'"}},".cm-completionIcon-interface":{"&:after":{content:"'\u25CC'"}},".cm-completionIcon-variable":{"&:after":{content:"'\u{1D465}'"}},".cm-completionIcon-constant":{"&:after":{content:"'\u{1D436}'"}},".cm-completionIcon-type":{"&:after":{content:"'\u{1D461}'"}},".cm-completionIcon-enum":{"&:after":{content:"'\u222A'"}},".cm-completionIcon-property":{"&:after":{content:"'\u25A1'"}},".cm-completionIcon-keyword":{"&:after":{content:"'\u{1F511}\uFE0E'"}},".cm-completionIcon-namespace":{"&:after":{content:"'\u25A2'"}},".cm-completionIcon-text":{"&:after":{content:"'abc'",fontSize:"50%",verticalAlign:"middle"}}}),Zu={brackets:["(","[","{","'",'"'],before:")]}:;>",stringPrefixes:[]},us=se.define({map(t,e){let n=e.mapPos(t,-1,Kt.TrackAfter);return n==null?void 0:n}}),Dx=se.define({map(t,e){return e.mapPos(t)}}),Gx=new class extends Es{};Gx.startSide=1;Gx.endSide=-1;const aN=St.define({create(){return Pe.empty},update(t,e){if(e.selection){let n=e.state.doc.lineAt(e.selection.main.head).from,r=e.startState.doc.lineAt(e.startState.selection.main.head).from;n!=e.changes.mapPos(r,-1)&&(t=Pe.empty)}t=t.map(e.changes);for(let n of e.effects)n.is(us)?t=t.update({add:[Gx.range(n.value,n.value+1)]}):n.is(Dx)&&(t=t.update({filter:r=>r!=n.value}));return t}});function x8(){return[k8,aN]}const T0="()[]{}<>";function lN(t){for(let e=0;e<T0.length;e+=2)if(T0.charCodeAt(e)==t)return T0.charAt(e+1);return ox(t<128?t:t+1)}function cN(t,e){return t.languageDataAt("closeBrackets",e)[0]||Zu}const S8=typeof navigator=="object"&&/Android\b/.test(navigator.userAgent),k8=U.inputHandler.of((t,e,n,r)=>{if((S8?t.composing:t.compositionStarted)||t.state.readOnly)return!1;let i=t.state.selection.main;if(r.length>2||r.length==2&&wn(Tt(r,0))==1||e!=i.from||n!=i.to)return!1;let o=O8(t.state,r);return o?(t.dispatch(o),!0):!1}),w8=({state:t,dispatch:e})=>{if(t.readOnly)return!1;let r=cN(t,t.selection.main.head).brackets||Zu.brackets,i=null,o=t.changeByRange(s=>{if(s.empty){let a=C8(t.doc,s.head);for(let l of r)if(l==a&&Lm(t.doc,s.head)==lN(Tt(l,0)))return{changes:{from:s.head-l.length,to:s.head+l.length},range:A.cursor(s.head-l.length)}}return{range:i=s}});return i||e(t.update(o,{scrollIntoView:!0,userEvent:"delete.backward"})),!i},P8=[{key:"Backspace",run:w8}];function O8(t,e){let n=cN(t,t.selection.main.head),r=n.brackets||Zu.brackets;for(let i of r){let o=lN(Tt(i,0));if(e==i)return o==i?V8(t,i,r.indexOf(i+i+i)>-1,n):T8(t,i,o,n.before||Zu.before);if(e==o&&uN(t,t.selection.main.from))return z8(t,i,o)}return null}function uN(t,e){let n=!1;return t.field(aN).between(0,t.doc.length,r=>{r==e&&(n=!0)}),n}function Lm(t,e){let n=t.sliceString(e,e+2);return n.slice(0,wn(Tt(n,0)))}function C8(t,e){let n=t.sliceString(e-2,e);return wn(Tt(n,0))==n.length?n:n.slice(1)}function T8(t,e,n,r){let i=null,o=t.changeByRange(s=>{if(!s.empty)return{changes:[{insert:e,from:s.from},{insert:n,from:s.to}],effects:us.of(s.to+e.length),range:A.range(s.anchor+e.length,s.head+e.length)};let a=Lm(t.doc,s.head);return!a||/\s/.test(a)||r.indexOf(a)>-1?{changes:{insert:e+n,from:s.head},effects:us.of(s.head+e.length),range:A.cursor(s.head+e.length)}:{range:i=s}});return i?null:t.update(o,{scrollIntoView:!0,userEvent:"input.type"})}function z8(t,e,n){let r=null,i=t.selection.ranges.map(o=>o.empty&&Lm(t.doc,o.head)==n?A.cursor(o.head+n.length):r=o);return r?null:t.update({selection:A.create(i,t.selection.mainIndex),scrollIntoView:!0,effects:t.selection.ranges.map(({from:o})=>Dx.of(o))})}function V8(t,e,n,r){let i=r.stringPrefixes||Zu.stringPrefixes,o=null,s=t.changeByRange(a=>{if(!a.empty)return{changes:[{insert:e,from:a.from},{insert:e,from:a.to}],effects:us.of(a.to+e.length),range:A.range(a.anchor+e.length,a.head+e.length)};let l=a.head,c=Lm(t.doc,l),u;if(c==e){if(zP(t,l))return{changes:{insert:e+e,from:l},effects:us.of(l+e.length),range:A.cursor(l+e.length)};if(uN(t,l)){let d=n&&t.sliceDoc(l,l+e.length*3)==e+e+e;return{range:A.cursor(l+e.length*(d?3:1)),effects:Dx.of(l)}}}else{if(n&&t.sliceDoc(l-2*e.length,l)==e+e&&(u=VP(t,l-2*e.length,i))>-1&&zP(t,u))return{changes:{insert:e+e+e+e,from:l},effects:us.of(l+e.length),range:A.cursor(l+e.length)};if(t.charCategorizer(l)(c)!=Be.Word&&VP(t,l,i)>-1&&!E8(t,l,e,i))return{changes:{insert:e+e,from:l},effects:us.of(l+e.length),range:A.cursor(l+e.length)}}return{range:o=a}});return o?null:t.update(s,{scrollIntoView:!0,userEvent:"input.type"})}function zP(t,e){let n=xt(t).resolveInner(e+1);return n.parent&&n.from==e}function E8(t,e,n,r){let i=xt(t).resolveInner(e,-1),o=r.reduce((s,a)=>Math.max(s,a.length),0);for(let s=0;s<5;s++){let a=t.sliceDoc(i.from,Math.min(i.to,i.from+n.length+o)),l=a.indexOf(n);if(!l||l>-1&&r.indexOf(a.slice(0,l))>-1){let u=i.firstChild;for(;u&&u.from==i.from&&u.to-u.from>n.length+l;){if(t.sliceDoc(u.to-n.length,u.to)==n)return!1;u=u.firstChild}return!0}let c=i.to==e&&i.parent;if(!c)break;i=c}return!1}function VP(t,e,n){let r=t.charCategorizer(e);if(r(t.sliceDoc(e-1,e))!=Be.Word)return e;for(let i of n){let o=e-i.length;if(t.sliceDoc(o,e)==i&&r(t.sliceDoc(o-1,o))!=Be.Word)return o}return-1}function N8(t={}){return[Bn,er.of(t),v8,I8,y8]}const dN=[{key:"Ctrl-Space",run:h8},{key:"Escape",run:p8},{key:"ArrowDown",run:bf(!0)},{key:"ArrowUp",run:bf(!1)},{key:"PageDown",run:bf(!0,"page")},{key:"PageUp",run:bf(!1,"page")},{key:"Enter",run:f8}],I8=Fs.highest(ld.computeN([er],t=>t.facet(er).defaultKeymap?[dN]:[]));class M8{constructor(e,n,r){this.from=e,this.to=n,this.diagnostic=r}}class ts{constructor(e,n,r){this.diagnostics=e,this.panel=n,this.selected=r}static init(e,n,r){let i=e,o=r.facet(Ea).markerFilter;o&&(i=o(i));let s=G.set(i.map(a=>a.from==a.to||a.from==a.to-1&&r.doc.lineAt(a.from).to==a.from?G.widget({widget:new G8(a),diagnostic:a}).range(a.from):G.mark({attributes:{class:"cm-lintRange cm-lintRange-"+a.severity},diagnostic:a}).range(a.from,a.to)),!0);return new ts(s,n,yl(s))}}function yl(t,e=null,n=0){let r=null;return t.between(n,1e9,(i,o,{spec:s})=>{if(!(e&&s.diagnostic!=e))return r=new M8(i,o,s.diagnostic),!1}),r}function A8(t,e){return!!(t.effects.some(n=>n.is(jx))||t.changes.touchesRange(e.pos))}function fN(t,e){return t.field(Cn,!1)?e:e.concat(se.appendConfig.of([Cn,U.decorations.compute([Cn],n=>{let{selected:r,panel:i}=n.field(Cn);return!r||!i||r.from==r.to?G.none:G.set([Z8.range(r.from,r.to)])}),k7(X8,{hideOn:A8}),B8]))}function L8(t,e){return{effects:fN(t,[jx.of(e)])}}const jx=se.define(),Bx=se.define(),hN=se.define(),Cn=St.define({create(){return new ts(G.none,null,null)},update(t,e){if(e.docChanged){let n=t.diagnostics.map(e.changes),r=null;if(t.selected){let i=e.changes.mapPos(t.selected.from,1);r=yl(n,t.selected.diagnostic,i)||yl(n,null,i)}t=new ts(n,t.panel,r)}for(let n of e.effects)n.is(jx)?t=ts.init(n.value,t.panel,e.state):n.is(Bx)?t=new ts(t.diagnostics,n.value?Zm.open:null,t.selected):n.is(hN)&&(t=new ts(t.diagnostics,t.panel,n.value));return t},provide:t=>[hl.from(t,e=>e.panel),U.decorations.from(t,e=>e.diagnostics)]}),Z8=G.mark({class:"cm-lintRange cm-lintRange-active"});function X8(t,e,n){let{diagnostics:r}=t.state.field(Cn),i=[],o=2e8,s=0;r.between(e-(n<0?1:0),e+(n>0?1:0),(l,c,{spec:u})=>{e>=l&&e<=c&&(l==c||(e>l||n>0)&&(e<c||n<0))&&(i.push(u.diagnostic),o=Math.min(l,o),s=Math.max(c,s))});let a=t.state.facet(Ea).tooltipFilter;return a&&(i=a(i)),i.length?{pos:o,end:s,above:t.state.doc.lineAt(o).to<s,create(){return{dom:W8(t,i)}}}:null}function W8(t,e){return Ne("ul",{class:"cm-tooltip-lint"},e.map(n=>mN(t,n,!1)))}const R8=t=>{let e=t.state.field(Cn,!1);(!e||!e.panel)&&t.dispatch({effects:fN(t.state,[Bx.of(!0)])});let n=Vu(t,Zm.open);return n&&n.dom.querySelector(".cm-panel-lint ul").focus(),!0},EP=t=>{let e=t.state.field(Cn,!1);return!e||!e.panel?!1:(t.dispatch({effects:Bx.of(!1)}),!0)},F8=t=>{let e=t.state.field(Cn,!1);if(!e)return!1;let n=t.state.selection.main,r=e.diagnostics.iter(n.to+1);return!r.value&&(r=e.diagnostics.iter(0),!r.value||r.from==n.from&&r.to==n.to)?!1:(t.dispatch({selection:{anchor:r.from,head:r.to},scrollIntoView:!0}),!0)},H8=[{key:"Mod-Shift-m",run:R8,preventDefault:!0},{key:"F8",run:F8}],D8=nt.fromClass(class{constructor(t){this.view=t,this.timeout=-1,this.set=!0;let{delay:e}=t.state.facet(Ea);this.lintTime=Date.now()+e,this.run=this.run.bind(this),this.timeout=setTimeout(this.run,e)}run(){let t=Date.now();if(t<this.lintTime-10)setTimeout(this.run,this.lintTime-t);else{this.set=!1;let{state:e}=this.view,{sources:n}=e.facet(Ea);Promise.all(n.map(r=>Promise.resolve(r(this.view)))).then(r=>{let i=r.reduce((o,s)=>o.concat(s));this.view.state.doc==e.doc&&this.view.dispatch(L8(this.view.state,i))},r=>{zn(this.view.state,r)})}}update(t){let e=t.state.facet(Ea);(t.docChanged||e!=t.startState.facet(Ea))&&(this.lintTime=Date.now()+e.delay,this.set||(this.set=!0,this.timeout=setTimeout(this.run,e.delay)))}force(){this.set&&(this.lintTime=Date.now(),this.run())}destroy(){clearTimeout(this.timeout)}}),Ea=$.define({combine(t){return Object.assign({sources:t.map(e=>e.source)},ti(t.map(e=>e.config),{delay:750,markerFilter:null,tooltipFilter:null}))},enables:D8});function pN(t){let e=[];if(t)e:for(let{name:n}of t){for(let r=0;r<n.length;r++){let i=n[r];if(/[a-zA-Z]/.test(i)&&!e.some(o=>o.toLowerCase()==i.toLowerCase())){e.push(i);continue e}}e.push("")}return e}function mN(t,e,n){var r;let i=n?pN(e.actions):[];return Ne("li",{class:"cm-diagnostic cm-diagnostic-"+e.severity},Ne("span",{class:"cm-diagnosticText"},e.renderMessage?e.renderMessage():e.message),(r=e.actions)===null||r===void 0?void 0:r.map((o,s)=>{let a=d=>{d.preventDefault();let f=yl(t.state.field(Cn).diagnostics,e);f&&o.apply(t,f.from,f.to)},{name:l}=o,c=i[s]?l.indexOf(i[s]):-1,u=c<0?l:[l.slice(0,c),Ne("u",l.slice(c,c+1)),l.slice(c+1)];return Ne("button",{type:"button",class:"cm-diagnosticAction",onclick:a,onmousedown:a,"aria-label":` Action: ${l}${c<0?"":` (access key "${i[s]})"`}.`},u)}),e.source&&Ne("div",{class:"cm-diagnosticSource"},e.source))}class G8 extends Ni{constructor(e){super(),this.diagnostic=e}eq(e){return e.diagnostic==this.diagnostic}toDOM(){return Ne("span",{class:"cm-lintPoint cm-lintPoint-"+this.diagnostic.severity})}}class NP{constructor(e,n){this.diagnostic=n,this.id="item_"+Math.floor(Math.random()*4294967295).toString(16),this.dom=mN(e,n,!0),this.dom.id=this.id,this.dom.setAttribute("role","option")}}class Zm{constructor(e){this.view=e,this.items=[];let n=i=>{if(i.keyCode==27)EP(this.view),this.view.focus();else if(i.keyCode==38||i.keyCode==33)this.moveSelection((this.selectedIndex-1+this.items.length)%this.items.length);else if(i.keyCode==40||i.keyCode==34)this.moveSelection((this.selectedIndex+1)%this.items.length);else if(i.keyCode==36)this.moveSelection(0);else if(i.keyCode==35)this.moveSelection(this.items.length-1);else if(i.keyCode==13)this.view.focus();else if(i.keyCode>=65&&i.keyCode<=90&&this.selectedIndex>=0){let{diagnostic:o}=this.items[this.selectedIndex],s=pN(o.actions);for(let a=0;a<s.length;a++)if(s[a].toUpperCase().charCodeAt(0)==i.keyCode){let l=yl(this.view.state.field(Cn).diagnostics,o);l&&o.actions[a].apply(e,l.from,l.to)}}else return;i.preventDefault()},r=i=>{for(let o=0;o<this.items.length;o++)this.items[o].dom.contains(i.target)&&this.moveSelection(o)};this.list=Ne("ul",{tabIndex:0,role:"listbox","aria-label":this.view.state.phrase("Diagnostics"),onkeydown:n,onclick:r}),this.dom=Ne("div",{class:"cm-panel-lint"},this.list,Ne("button",{type:"button",name:"close","aria-label":this.view.state.phrase("close"),onclick:()=>EP(this.view)},"\xD7")),this.update()}get selectedIndex(){let e=this.view.state.field(Cn).selected;if(!e)return-1;for(let n=0;n<this.items.length;n++)if(this.items[n].diagnostic==e.diagnostic)return n;return-1}update(){let{diagnostics:e,selected:n}=this.view.state.field(Cn),r=0,i=!1,o=null;for(e.between(0,this.view.state.doc.length,(s,a,{spec:l})=>{let c=-1,u;for(let d=r;d<this.items.length;d++)if(this.items[d].diagnostic==l.diagnostic){c=d;break}c<0?(u=new NP(this.view,l.diagnostic),this.items.splice(r,0,u),i=!0):(u=this.items[c],c>r&&(this.items.splice(r,c-r),i=!0)),n&&u.diagnostic==n.diagnostic?u.dom.hasAttribute("aria-selected")||(u.dom.setAttribute("aria-selected","true"),o=u):u.dom.hasAttribute("aria-selected")&&u.dom.removeAttribute("aria-selected"),r++});r<this.items.length&&!(this.items.length==1&&this.items[0].diagnostic.from<0);)i=!0,this.items.pop();this.items.length==0&&(this.items.push(new NP(this.view,{from:-1,to:-1,severity:"info",message:this.view.state.phrase("No diagnostics")})),i=!0),o?(this.list.setAttribute("aria-activedescendant",o.id),this.view.requestMeasure({key:this,read:()=>({sel:o.dom.getBoundingClientRect(),panel:this.list.getBoundingClientRect()}),write:({sel:s,panel:a})=>{s.top<a.top?this.list.scrollTop-=a.top-s.top:s.bottom>a.bottom&&(this.list.scrollTop+=s.bottom-a.bottom)}})):this.selectedIndex<0&&this.list.removeAttribute("aria-activedescendant"),i&&this.sync()}sync(){let e=this.list.firstChild;function n(){let r=e;e=r.nextSibling,r.remove()}for(let r of this.items)if(r.dom.parentNode==this.list){for(;e!=r.dom;)n();e=r.dom.nextSibling}else this.list.insertBefore(r.dom,e);for(;e;)n()}moveSelection(e){if(this.selectedIndex<0)return;let n=this.view.state.field(Cn),r=yl(n.diagnostics,this.items[e].diagnostic);!r||this.view.dispatch({selection:{anchor:r.from,head:r.to},scrollIntoView:!0,effects:hN.of(r)})}static open(e){return new Zm(e)}}function j8(t,e='viewBox="0 0 40 40"'){return`url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(t)}</svg>')`}function z0(t){return j8(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${t}" fill="none" stroke-width=".7"/>`,'width="6" height="3"')}const B8=U.baseTheme({".cm-diagnostic":{padding:"3px 6px 3px 8px",marginLeft:"-1px",display:"block",whiteSpace:"pre-wrap"},".cm-diagnostic-error":{borderLeft:"5px solid #d11"},".cm-diagnostic-warning":{borderLeft:"5px solid orange"},".cm-diagnostic-info":{borderLeft:"5px solid #999"},".cm-diagnosticAction":{font:"inherit",border:"none",padding:"2px 4px",backgroundColor:"#444",color:"white",borderRadius:"3px",marginLeft:"8px"},".cm-diagnosticSource":{fontSize:"70%",opacity:.7},".cm-lintRange":{backgroundPosition:"left bottom",backgroundRepeat:"repeat-x",paddingBottom:"0.7px"},".cm-lintRange-error":{backgroundImage:z0("#d11")},".cm-lintRange-warning":{backgroundImage:z0("orange")},".cm-lintRange-info":{backgroundImage:z0("#999")},".cm-lintRange-active":{backgroundColor:"#ffdd9980"},".cm-tooltip-lint":{padding:0,margin:0},".cm-lintPoint":{position:"relative","&:after":{content:'""',position:"absolute",bottom:0,left:"-2px",borderLeft:"3px solid transparent",borderRight:"3px solid transparent",borderBottom:"4px solid #d11"}},".cm-lintPoint-warning":{"&:after":{borderBottomColor:"orange"}},".cm-lintPoint-info":{"&:after":{borderBottomColor:"#999"}},".cm-panel.cm-panel-lint":{position:"relative","& ul":{maxHeight:"100px",overflowY:"auto","& [aria-selected]":{backgroundColor:"#ddd","& u":{textDecoration:"underline"}},"&:focus [aria-selected]":{background_fallback:"#bdf",backgroundColor:"Highlight",color_fallback:"white",color:"HighlightText"},"& u":{textDecoration:"none"},padding:0,margin:0},"& [name=close]":{position:"absolute",top:"0",right:"2px",background:"inherit",border:"none",font:"inherit",padding:0,margin:0}}});var IP=function(e){e===void 0&&(e={});var n=[];e.closeBracketsKeymap!==!1&&(n=n.concat(P8)),e.defaultKeymap!==!1&&(n=n.concat(vV)),e.searchKeymap!==!1&&(n=n.concat(KD)),e.historyKeymap!==!1&&(n=n.concat(jz)),e.foldKeymap!==!1&&(n=n.concat(vH)),e.completionKeymap!==!1&&(n=n.concat(dN)),e.lintKeymap!==!1&&(n=n.concat(H8));var r=[];return e.lineNumbers!==!1&&r.push(I7()),e.highlightActiveLineGutter!==!1&&r.push(L7()),e.highlightSpecialChars!==!1&&r.push(_F()),e.history!==!1&&r.push(Fz()),e.foldGutter!==!1&&r.push(SH()),e.drawSelection!==!1&&r.push(RF()),e.dropCursor!==!1&&r.push(YF()),e.allowMultipleSelections!==!1&&r.push(pe.allowMultipleSelections.of(!0)),e.indentOnInput!==!1&&r.push(cH()),e.syntaxHighlighting!==!1&&r.push(wx(OH,{fallback:!0})),e.bracketMatching!==!1&&r.push(IH()),e.closeBrackets!==!1&&r.push(x8()),e.autocompletion!==!1&&r.push(N8()),e.rectangularSelection!==!1&&r.push(f7()),e.crosshairCursor!==!1&&r.push(m7()),e.highlightActiveLine!==!1&&r.push(i7()),e.highlightSelectionMatches!==!1&&r.push(zD()),e.tabSize&&typeof e.tabSize=="number"&&r.push(cd.of(" ".repeat(e.tabSize))),r.concat([ld.of(n.flat())]).filter(Boolean)};const Y8="#e5c07b",MP="#e06c75",K8="#56b6c2",U8="#ffffff",dh="#abb2bf",fy="#7d8799",q8="#61afef",J8="#98c379",AP="#d19a66",Q8="#c678dd",_8="#21252b",LP="#2c313a",ZP="#282c34",V0="#353a42",$8="#3E4451",XP="#528bff",eG=U.theme({"&":{color:dh,backgroundColor:ZP},".cm-content":{caretColor:XP},".cm-cursor, .cm-dropCursor":{borderLeftColor:XP},"&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection":{backgroundColor:$8},".cm-panels":{backgroundColor:_8,color:dh},".cm-panels.cm-panels-top":{borderBottom:"2px solid black"},".cm-panels.cm-panels-bottom":{borderTop:"2px solid black"},".cm-searchMatch":{backgroundColor:"#72a1ff59",outline:"1px solid #457dff"},".cm-searchMatch.cm-searchMatch-selected":{backgroundColor:"#6199ff2f"},".cm-activeLine":{backgroundColor:"#6699ff0b"},".cm-selectionMatch":{backgroundColor:"#aafe661a"},"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bad0f847",outline:"1px solid #515a6b"},".cm-gutters":{backgroundColor:ZP,color:fy,border:"none"},".cm-activeLineGutter":{backgroundColor:LP},".cm-foldPlaceholder":{backgroundColor:"transparent",border:"none",color:"#ddd"},".cm-tooltip":{border:"none",backgroundColor:V0},".cm-tooltip .cm-tooltip-arrow:before":{borderTopColor:"transparent",borderBottomColor:"transparent"},".cm-tooltip .cm-tooltip-arrow:after":{borderTopColor:V0,borderBottomColor:V0},".cm-tooltip-autocomplete":{"& > ul > li[aria-selected]":{backgroundColor:LP,color:dh}}},{dark:!0}),tG=Nl.define([{tag:V.keyword,color:Q8},{tag:[V.name,V.deleted,V.character,V.propertyName,V.macroName],color:MP},{tag:[V.function(V.variableName),V.labelName],color:q8},{tag:[V.color,V.constant(V.name),V.standard(V.name)],color:AP},{tag:[V.definition(V.name),V.separator],color:dh},{tag:[V.typeName,V.className,V.number,V.changed,V.annotation,V.modifier,V.self,V.namespace],color:Y8},{tag:[V.operator,V.operatorKeyword,V.url,V.escape,V.regexp,V.link,V.special(V.string)],color:K8},{tag:[V.meta,V.comment],color:fy},{tag:V.strong,fontWeight:"bold"},{tag:V.emphasis,fontStyle:"italic"},{tag:V.strikethrough,textDecoration:"line-through"},{tag:V.link,color:fy,textDecoration:"underline"},{tag:V.heading,fontWeight:"bold",color:MP},{tag:[V.atom,V.bool,V.special(V.variableName)],color:AP},{tag:[V.processingInstruction,V.string,V.inserted],color:J8},{tag:V.invalid,color:U8}]),nG=[eG,wx(tG)];var rG=t=>({line:t.state.doc.lineAt(t.state.selection.main.from),lineCount:t.state.doc.lines,lineBreak:t.state.lineBreak,length:t.state.doc.length,readOnly:t.state.readOnly,tabSize:t.state.tabSize,selection:t.state.selection,selectionAsSingle:t.state.selection.asSingle().main,ranges:t.state.selection.ranges,selectionCode:t.state.sliceDoc(t.state.selection.main.from,t.state.selection.main.to),selections:t.state.selection.ranges.map(e=>t.state.sliceDoc(e.from,e.to)),selectedText:t.state.selection.ranges.some(e=>!e.empty)});function iG(t){var{value:e,selection:n,onChange:r,onStatistics:i,onCreateEditor:o,onUpdate:s,extensions:a=[],autoFocus:l,theme:c="light",height:u="",minHeight:d="",maxHeight:f="",placeholder:h="",width:p="",minWidth:m="",maxWidth:v="",editable:g=!0,readOnly:b=!1,indentWithTab:y=!0,basicSetup:x=!0,root:k,initialState:P}=t,[O,z]=S.exports.useState(),[I,E]=S.exports.useState(),[X,Y]=S.exports.useState(),Q=U.theme({"&":{backgroundColor:"#fff"}},{dark:!1}),ae=U.theme({"&":{height:u,minHeight:d,maxHeight:f,width:p,minWidth:m,maxWidth:v}}),oe=U.updateListener.of(ee=>{if(ee.docChanged&&typeof r=="function"){var L=ee.state.doc,H=L.toString();r(H,ee)}i&&i(rG(ee))}),D=[oe,ae];switch(y&&D.unshift(ld.of([G6])),x&&(typeof x=="boolean"?D.unshift(IP()):D.unshift(IP(x))),h&&D.unshift(l7(h)),c){case"light":D.push(Q);break;case"dark":D.push(nG);break;default:D.push(c);break}return g===!1&&D.push(U.editable.of(!1)),b&&D.push(pe.readOnly.of(!0)),s&&typeof s=="function"&&D.push(U.updateListener.of(s)),D=D.concat(a),S.exports.useEffect(()=>{if(O&&!X){var ee={doc:e,selection:n,extensions:D},L=P?pe.fromJSON(P.json,ee,P.fields):pe.create(ee);if(Y(L),!I){var H=new U({state:L,parent:O,root:k});E(H),o&&o(H,L)}}return()=>{I&&(Y(void 0),E(void 0))}},[O,X]),S.exports.useEffect(()=>z(t.container),[t.container]),S.exports.useEffect(()=>()=>{I&&(I.destroy(),E(void 0))},[I]),S.exports.useEffect(()=>{l&&I&&I.focus()},[l,I]),S.exports.useEffect(()=>{I&&I.dispatch({effects:se.reconfigure.of(D)})},[c,a,u,d,f,p,m,v,h,g,b,y,x,r,s]),S.exports.useEffect(()=>{var ee=I?I.state.doc.toString():"";I&&e!==ee&&I.dispatch({changes:{from:0,to:ee.length,insert:e||""}})},[e,I]),{state:X,setState:Y,view:I,setView:E,container:O,setContainer:z}}var Xm={exports:{}},Wm={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var oG=S.exports,sG=Symbol.for("react.element"),aG=Symbol.for("react.fragment"),lG=Object.prototype.hasOwnProperty,cG=oG.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,uG={key:!0,ref:!0,__self:!0,__source:!0};function gN(t,e,n){var r,i={},o=null,s=null;n!==void 0&&(o=""+n),e.key!==void 0&&(o=""+e.key),e.ref!==void 0&&(s=e.ref);for(r in e)lG.call(e,r)&&!uG.hasOwnProperty(r)&&(i[r]=e[r]);if(t&&t.defaultProps)for(r in e=t.defaultProps,e)i[r]===void 0&&(i[r]=e[r]);return{$$typeof:sG,type:t,key:o,ref:s,props:i,_owner:cG.current}}Wm.Fragment=aG;Wm.jsx=gN;Wm.jsxs=gN;(function(t){t.exports=Wm})(Xm);const _r=Xm.exports.Fragment,N=Xm.exports.jsx,tt=Xm.exports.jsxs;var dG=["className","value","selection","extensions","onChange","onStatistics","onCreateEditor","onUpdate","autoFocus","theme","height","minHeight","maxHeight","width","minWidth","maxWidth","basicSetup","placeholder","indentWithTab","editable","readOnly","root","initialState"],bN=S.exports.forwardRef((t,e)=>{var{className:n,value:r="",selection:i,extensions:o=[],onChange:s,onStatistics:a,onCreateEditor:l,onUpdate:c,autoFocus:u,theme:d="light",height:f,minHeight:h,maxHeight:p,width:m,minWidth:v,maxWidth:g,basicSetup:b,placeholder:y,indentWithTab:x,editable:k,readOnly:P,root:O,initialState:z}=t,I=BE(t,dG),E=S.exports.useRef(null),{state:X,view:Y,container:Q,setContainer:ae}=iG({container:E.current,root:O,value:r,autoFocus:u,theme:d,height:f,minHeight:h,maxHeight:p,width:m,minWidth:v,maxWidth:g,basicSetup:b,placeholder:y,indentWithTab:x,editable:k,readOnly:P,selection:i,onChange:s,onStatistics:a,onCreateEditor:l,onUpdate:c,extensions:o,initialState:z});if(S.exports.useImperativeHandle(e,()=>({editor:E.current,state:X,view:Y}),[E,Q,X,Y]),typeof r!="string")throw new Error("value must be typeof string but got "+typeof r);var oe=typeof d=="string"?"cm-theme-"+d:"cm-theme";return N("div",bl({ref:E,className:""+oe+(n?" "+n:"")},I))});bN.displayName="CodeMirror";const fG=`;; reset_clock()
start("ReverbMixer")
set_tempo(120)
set_scale("min")

;; callback instrument for csound-live-code
instr P1 

  hexplay("90", 
      "Claves", p3,
      in_scale(-1, 0),
      fade_in(6, 128) * ampdbfs(-12))

  hexplay("8",
      "BD", p3,
      in_scale(-1, 0),
      fade_in(5, 128) * ampdbfs(-3))

  hexplay("0808080c", 
      "Clap", p3,
      in_scale(-1, 0),
      fade_in(5, 128) * ampdbfs(-12))
  
  hexplay("2",
      "CHH", p3,
      in_scale(-1, 0),
      fade_in(6, 128) * ampdbfs(-12))

  hexplay("0200", 
      "Sub5", p3,
      in_scale(2, 2),
      fade_in(7, 128) * ampdbfs(-12))

endin


;; custom instruments
instr Up
  indx = 0
  istart = int(random:i(-4, 4))
  irange = 12
  while (indx < irange) do
    schedule("Sub5", ticks(indx), ticks(1), in_scale(-1, istart + indx), ampdbfs(-12 - indx))
    indx += 1
  od
endin

;; temporal recursion process
instr Run
  irange = 8
  ibase = int(random(-irange, irange))
  schedule("Sub1", 0, ticks(1), in_scale(0, ibase), ampdbfs(-12))
  
  schedule("Sub5", 0, ticks(1), in_scale(0, xcos(phsm(4), ibase, 8)), ampdbfs(-12))

  if(choose(0.3) == 1) then
    schedule("Sub4", 0, ticks(1), in_scale(1, xcos(phsm(2.5), ibase, 4)), ampdbfs(-12))
  endif

  if(choose(0.5) == 1) then
    schedule("SynBrass", 0, ticks(2), in_scale(1, ibase + rand(array(0,2,4))), ampdbfs(-12))
  endif
  
  if(choose(0.25) == 1) then
  	schedule("Sub1", 0, ticks(1), in_scale(0, ibase + 2), ampdbfs(-12))
  endif
  
  if(choose(0.15) == 1) then
  	schedule("Up", 0, 1)
  endif
    
  schedule(p1, next_beat(rand(array(1,2,4,8)) * 0.25), 1)
endin

;; starts the process, be careful not to evaluate multiple times for this example
schedule("Run", 0, 1)


;; temporal recursion process
instr Run2
  if(choose(0.7) == 1) then
    isd = random(-8, 8)
    schedule("Sub3", 0, beats(random(6,8)), in_scale(2, isd), ampdbfs(-22))
    schedule("Sub3", 0, beats(random(6,8)), in_scale(2, isd + 4), ampdbfs(-22))
  endif

  schedule("FM1", 0, ticks(1), in_scale(-2, rand(array(0,2,4))), ampdbfs(-18))

  schedule(p1, next_beat(rand(array(1,2,4,8))), 1)
endin


;; starts the process, be careful not to evaluate multiple times for this example
schedule("Run2", 0, 1)
`;var vN={exports:{}};(function(t,e){(function(n,r){r()})(fi,function(){function n(c,u){return typeof u>"u"?u={autoBom:!1}:typeof u!="object"&&(console.warn("Deprecated: Expected third argument to be a object"),u={autoBom:!u}),u.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(c.type)?new Blob(["\uFEFF",c],{type:c.type}):c}function r(c,u,d){var f=new XMLHttpRequest;f.open("GET",c),f.responseType="blob",f.onload=function(){l(f.response,u,d)},f.onerror=function(){console.error("could not download file")},f.send()}function i(c){var u=new XMLHttpRequest;u.open("HEAD",c,!1);try{u.send()}catch{}return 200<=u.status&&299>=u.status}function o(c){try{c.dispatchEvent(new MouseEvent("click"))}catch{var u=document.createEvent("MouseEvents");u.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),c.dispatchEvent(u)}}var s=typeof window=="object"&&window.window===window?window:typeof self=="object"&&self.self===self?self:typeof fi=="object"&&fi.global===fi?fi:void 0,a=s.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),l=s.saveAs||(typeof window!="object"||window!==s?function(){}:"download"in HTMLAnchorElement.prototype&&!a?function(c,u,d){var f=s.URL||s.webkitURL,h=document.createElement("a");u=u||c.name||"download",h.download=u,h.rel="noopener",typeof c=="string"?(h.href=c,h.origin===location.origin?o(h):i(h.href)?r(c,u,d):o(h,h.target="_blank")):(h.href=f.createObjectURL(c),setTimeout(function(){f.revokeObjectURL(h.href)},4e4),setTimeout(function(){o(h)},0))}:"msSaveOrOpenBlob"in navigator?function(c,u,d){if(u=u||c.name||"download",typeof c!="string")navigator.msSaveOrOpenBlob(n(c,d),u);else if(i(c))r(c,u,d);else{var f=document.createElement("a");f.href=c,f.target="_blank",setTimeout(function(){o(f)})}}:function(c,u,d,f){if(f=f||open("","_blank"),f&&(f.document.title=f.document.body.innerText="downloading..."),typeof c=="string")return r(c,u,d);var h=c.type==="application/octet-stream",p=/constructor/i.test(s.HTMLElement)||s.safari,m=/CriOS\/[\d]+/.test(navigator.userAgent);if((m||h&&p||a)&&typeof FileReader<"u"){var v=new FileReader;v.onloadend=function(){var y=v.result;y=m?y:y.replace(/^data:[^;]*;/,"data:attachment/file;"),f?f.location.href=y:location=y,f=null},v.readAsDataURL(c)}else{var g=s.URL||s.webkitURL,b=g.createObjectURL(c);f?f.location=b:location.href=b,f=null,setTimeout(function(){g.revokeObjectURL(b)},4e4)}});s.saveAs=l.saveAs=l,t.exports=l})})(vN);const hG=`/*
  Live Coding Functions
  Author: Steven Yi
*/ 

instr S1
  ifreq = p4
  iamp = p5
endin

instr P1
  ibeat = p4
endin

;; TIME

gk_tempo init 120 


/** Set tempo of global clock to itempo value in beats per minute. */
opcode set_tempo,0,i
  itempo xin
  gk_tempo init itempo
endop

/** Returns tempo of global clock in beats per minute. */
opcode get_tempo,i,0
  xout i(gk_tempo)
endop

/** Adjust tempo of global clock towards by inewtempo by incr amount. */
opcode go_tempo, 0, ii
  inewtempo, incr xin

  icurtempo = i(gk_tempo)
  itemp init icurtempo 

  if(inewtempo > icurtempo) ithen
    itemp = min:i(inewtempo, icurtempo + abs(incr))
    gk_tempo init itemp 
  elseif (inewtempo < icurtempo) ithen
    itemp = max:i(inewtempo, icurtempo - abs(incr))
    gk_tempo init itemp 
  endif
endop

instr Perform
  ibeat = p4

  schedule("P1", 0, p3, ibeat) 
endin


gk_clock_internal init 0
gk_clock_tick init 0
gk_now init 0

/** Returns value of now beat time
   (Code used from Thorin Kerr's LivecodeLib.csd) */
opcode now, i, 0
  xout i(gk_now)
endop

/** Returns current clock tick at init time */
opcode now_tick, i, 0
  xout i(gk_clock_tick)
endop

/** Returns duration of time in given number of beats (quarter notes) */
opcode beats, i, i
  inumbeats xin
  ibeatdur = divz(60, i(gk_tempo), -1)
  xout ibeatdur * inumbeats
endop

/** Returns duration of time in given number of measures (4 quarter notes) */
opcode measures, i, i
  inummeasures xin
  xout beats(inummeasures * 4)
endop

/** Returns duration of time in given number of ticks (16th notes) */
opcode ticks, i, i
  inumbeats xin
  ibeatdur = divz(60, i(gk_tempo), -1)
  ibeatdur = ibeatdur / 4
  xout ibeatdur * inumbeats
endop

/** Returns time from now for next beat, rounding to align
    on beat boundary. 
   (Code used from Thorin Kerr's LivecodeLib.csd) */
opcode next_beat, i, p
  ibeatcount xin
  inow = now()
  ibc = frac(ibeatcount)
  inudge = int(ibeatcount)
  iresult = inudge + ibc + (round(divz(inow, ibc, inow)) * (ibc == 0 ? 1 : ibc)) - inow
  xout beats(iresult)
endop

/** Returns time from now for next measure, rounding to align to measure  
    boundary. */
opcode next_measure, i,0
  inow = now() % 4
  ival = 4 - inow 
  if(ival < 0.25) then
    ival += 4
  endif
  inext = beats(ival)
  xout inext
endop

/** Reset clock so that next tick starts at 0 */
opcode reset_clock, 0, 0
  gk_clock_internal init 0 
  gk_clock_tick init -1 
  gk_now init -(ksmps / sr)
endop

/** Adjust clock by iadjust number of beats.
    Value may be positive or negative. */
opcode adjust_clock, 0, i 
  iadjust xin
  gk_now init i(gk_now) + iadjust 
endop


instr Clock ;; our clock  
  ;; tick at 1/16th note
  kfreq = (4 * gk_tempo) / 60     ;; frequency of 16th note
  kdur = 1 / kfreq                ;; duration of 16th note in seconds 
  kstep = (gk_tempo / 60) / kr    ;; step size in quarter notes per buffer
  kstep16th = kfreq / kr          ;; step size in 16th notes per buffer
  gk_now += kstep                 ;; advance beat clock
  gk_clock_internal += kstep16th  ;; advance 16th note clock

  // checks if next buffer will be one where clock will
  // trigger.  If so, then schedule event for time 0 
  // which will get processed next buffer. 
  if(gk_clock_internal + kstep16th >= 1.0 ) then
    gk_clock_internal -= 1.0 
    gk_clock_tick += 1 
    event("i", "Perform", 0, kdur, gk_clock_tick)
  endif
endin

;; Randomization

/** Given a random chance value between 0 and 1, calculates a random value and
returns 1 if value is less than chance value. For example, giving a value of 0.7,
it can read as "70 percent of time, return 1; else 0" */
opcode choose, i, i
  iamount xin
  ival = 0

  if(random(0,1) < limit:i(iamount, 0, 1)) then
    ival = 1 
  endif
  xout ival
endop

;; Array Functions

/** Cycles through karray using index. */
opcode cycle, i, ik[]
  indx, kvals[] xin
  ival = i(kvals, indx % lenarray(kvals))
  xout ival
endop


/** Checks to see if item exists within array. Returns 1 if
  true and 0 if false. */
opcode contains, i, ii[]
  ival, iarr[] xin
  indx = 0
  iret = 0
  while (indx < lenarray:i(iarr)) do
    if (iarr[indx] == ival) then
      iret = 1
      igoto end
    endif
    indx += 1
  od
end:
  xout iret
endop 

/** Checks to see if item exists within array. Returns 1 if
  true and 0 if false. */
opcode contains, i, ik[]
  ival, karr[] xin
  indx = 0
  iret = 0
  while (indx < lenarray:i(karr)) do
    if (i(karr,indx) == ival) then
      iret = 1
      igoto end
    endif
    indx += 1
  od
end:
  xout iret
endop 

/** Create a new array by removing all instances of a
given number from an existing array. */ 
opcode remove, k[], ik[]
  ival, karr[] xin
 
  ifound = 0
  indx = 0
  while (indx < lenarray:i(karr)) do
  	if(i(karr, indx) == ival) then
      ifound += 1
    endif
    indx += 1
  od

  kout[] init (lenarray:i(karr) - ifound)
    
  indx = 0
  iwriteIndx = 0
  
  while (indx < lenarray:i(karr)) do
    iv = i(karr, indx)
    if(iv != ival) then
      kout[iwriteIndx] init iv
      iwriteIndx += 1
    endif
    indx += 1
  od
    
  xout kout
endop

/** Returns random item from karray. */
opcode rand, i, k[]
  kvals[] xin
  indx = int(random(0, lenarray(kvals)))
  ival = i(kvals, indx)
  xout ival
endop

/** Returns random item from String array. */
opcode rand, S, S[]
  Svals[] xin
  indx = int(random(0, lenarray(Svals)))
  Sval = Svals[indx]
  xout Sval
endop

/** Returns random item from karray. */
opcode randk, k, k[]
  kvals[] xin
  kndx = int(random:k(0, lenarray:k(kvals)))
  kval = kvals[kndx]
  xout kval
endop

/** Returns random item from karray. */
opcode randk, S, S[]
  Svals[] xin
  kndx = int(random:k(0, lenarray:k(Svals)))
  Sval = Svals[kndx]
  xout Sval
endop


;; Event

/** Wrapper opcode that calls schedule only if iamp > 0 and ifreq > 0. */
opcode cause, 0, Siiii
  Sinstr, istart, idur, ifreq, iamp xin
  if(ifreq > 0 && iamp > 0) then
    schedule(Sinstr, istart, idur, ifreq, iamp)
  endif
endop

;; Beats

/** Given a hexadecimal beat string pattern and optional
itick (defaults to current now_tick()), returns value 1 if
the given tick matches a hit in the hexadecimal beat, or 
returns 0 otherwise. */
opcode hexbeat, i, So
  Spat, itick xin

  if(itick <= 0) then
    itick = now_tick()
  endif

  istrlen = strlen(Spat)

  iout = 0

  if (istrlen > 0) then
    ;; 4 bits/beats per hex value
    ipatlen = strlen(Spat) * 4
    ;; get beat within pattern length
    itick = itick % ipatlen
    ;; figure which hex value to use from string
    ipatidx = int(itick / 4)
    ;; figure out which bit from hex to use
    ibitidx = itick % 4 
    
    ;; convert individual hex from string to decimal/binary
    ibeatPat = strtol(strcat("0x", strsub(Spat, ipatidx, ipatidx + 1))) 

    ;; bit shift/mask to check onset from hex's bits
    iout = (ibeatPat >> (3 - ibitidx)) & 1 
  endif

  xout iout

endop


/** Given hex beat pattern, use given itick to fire 
  events for given instrument, duration, frequency, and
  amplitude */
opcode hexplay, 0, SiSiip
  Spat, itick, Sinstr, idur, ifreq, iamp xin

  if(ifreq > 0 && iamp > 0 && strlen(Sinstr) > 0 && hexbeat(Spat, itick) == 1) then
    schedule(Sinstr, 0, idur, ifreq, iamp )
  endif
endop

/** Given hex beat pattern, use global clock to fire 
  events for given instrument, duration, frequency, and
  amplitude */
opcode hexplay, 0, SSiip
  Spat, Sinstr, idur, ifreq, iamp xin

  itick = i(gk_clock_tick)

  if(ifreq > 0 && iamp > 0 && strlen(Sinstr) > 0 && hexbeat(Spat, itick) == 1) then
    schedule(Sinstr, 0, idur, ifreq, iamp )
  endif
endop


/** Given an octal beat string pattern and optional
itick (defaults to current now_tick()), returns value 1 if
the given tick matches a hit in the octal beat, or 
returns 0 otherwise. */
opcode octalbeat, i, Si
  Spat, itick xin

  ;; 3 bits/beats per octal value
  ipatlen = strlen(Spat) * 4
  ;; get beat within pattern length
  itick = itick % ipatlen
  ;; figure which octal value to use from string
  ipatidx = int(itick / 3)
  ;; figure out which bit from octal to use
  ibitidx = itick % 3 
  
  ;; convert individual octal from string to decimal/binary
  ibeatPat = strtol(strcat("0", strsub(Spat, ipatidx, ipatidx + 1))) 

  ;; bit shift/mask to check onset from hex's bits
  xout (ibeatPat >> (2 - ibitidx)) & 1 

endop

opcode octalplay, 0, SiSiip
  Spat, ibeat, Sinstr, idur, ifreq, iamp xin

  if(octalbeat(Spat, ibeat) == 1) then
    schedule(Sinstr, 0, idur, ifreq, iamp )
  endif
endop

opcode octalplay, 0, SSiip
  Spat, Sinstr, idur, ifreq, iamp xin

  itick = i(gk_clock_tick)

  if(octalbeat(Spat, itick) == 1) then
    schedule(Sinstr, 0, idur, ifreq, iamp )
  endif
endop

;; Phase Functions

/** Given count and period, return phase value in range [0-1) */
opcode phs, i, ii
  icount, iperiod xin
  xout (icount % iperiod) / iperiod 
endop

/** Given period in ticks, return current phase of global
  clock in range [0-1) */
opcode phs, i, i
  iticks xin
  xout (i(gk_clock_tick) % iticks) / iticks
endop

/** Given period in beats, return current phase of global
  clock in range [0-1) */
opcode phsb, i, i
  ibeats xin
  iticks = ibeats * 4
  xout (i(gk_clock_tick) % iticks) / iticks
endop

/** Given period in measures, return current phase of global
  clock in range [0-1) */
opcode phsm, i, i
  imeasures xin
  iticks = imeasures * 4 * 4
  xout (i(gk_clock_tick) % iticks) / iticks
endop


;; Iterative Euclidean Beat Generator
;; Returns string of 1 and 0's
opcode euclid_str, S, ii
  ihits, isteps xin

  Sleft = "1"
  Sright = "0"

  ileft = ihits
  iright = isteps - ileft

  while iright > 1 do
    if (iright > ileft) then
      iright = iright - ileft 
      Sleft = strcat(Sleft, Sright)
    else
      itemp = iright
      iright = ileft - iright
      ileft = itemp 
      Stemp = Sleft
      Sleft = strcat(Sleft, Sright)
      Sright = Stemp
    endif
  od

  Sout = ""
  indx = 0 
  while (indx < ileft) do
    Sout = strcat(Sout, Sleft)
    indx += 1
  od
  indx = 0 
  while (indx < iright) do
    Sout = strcat(Sout, Sright)
    indx += 1
  od

  xout Sout
endop


/** Given number of ihits for a period of isteps and an optional
itick (defaults to current now_tick()), returns value 1 if
the given tick matches a hit in the euclidean rhythm, or 
returns 0 otherwise. */
opcode euclid, i, iio
  ihits, isteps, itick  xin

  if(itick <= 0) then
    itick = now_tick()
  endif

  Sval = euclid_str(ihits, isteps)
  indx = itick % strlen(Sval)
  xout strtol(strsub(Sval, indx, indx + 1))
endop

opcode euclidplay, 0, iiiSiip
  ihits, isteps, itick, Sinstr, idur, ifreq, iamp xin

  if(euclid(ihits, isteps, itick) == 1) then
    schedule(Sinstr, 0, idur, ifreq, iamp)
  endif
endop


opcode euclidplay, 0, iiSiip
  ihits, isteps, Sinstr, idur, ifreq, iamp xin

  itick = i(gk_clock_tick)

  if(euclid(ihits, isteps, itick) == 1) then
    schedule(Sinstr, 0, idur, ifreq, iamp)
  endif
endop

;; Phase-based Oscillators 

/** Returns cosine of given phase (0-1.0) */
opcode xcos, i,i
  iphase  xin
  xout cos(2 * $M_PI * iphase)
endop

/** Range version of xcos, similar to Impromptu's cosr */
opcode xcos, i,iii
  iphase, ioffset, irange  xin
  xout ioffset + (cos(2 * $M_PI * iphase) * irange)
endop

/** Returns sine of given phase (0-1.0) */
opcode xsin, i,i
  iphase  xin
  xout sin(2 * $M_PI * iphase)
endop

/** Range version of xsin, similar to Impromptu's sinr */
opcode xsin, i,iii
  iphase, ioffset, irange  xin
  xout ioffset + (sin(2 * $M_PI * iphase) * irange)
endop

/** Non-interpolating oscillator. Given phase in range 0-1, 
returns value within the give k-array table. */
opcode xosc, i, ik[]
  iphase, kvals[]  xin
  indx = int(lenarray:i(kvals) * (iphase % 1))  
  xout i(kvals, indx)
endop


/** Non-interpolating oscillator. Given phase duration in beats, 
returns value within the give k-array table. (shorthand for xosc(phsb(ibeats), karr) )*/
opcode xoscb, i,ik[]
  ibeats, kvals[] xin
  xout xosc(phsb(ibeats), kvals)
endop

/** Non-interpolating oscillator. Given phase duration in measures, 
returns value within the give k-array table. (shorthand for xosc(phsm(ibeats), karr) )*/
opcode xoscm, i, ik[]
  ibeats, kvals[] xin
  xout xosc(phsm(ibeats), kvals)
endop


/** Linearly-interpolating oscillator. Given phase in range 0-1, 
returns value intepolated within the two closest points of phase within k-array
table. */
opcode xosci, i, ik[]
  iphase, kvals[]  xin
  ilen = lenarray:i(kvals)
  indx = ilen * (iphase % 1)
  ibase = int(indx)  
  ifrac = indx - ibase 

  iv0 = i(kvals, ibase)  
  iv1 = i(kvals, (ibase + 1) % ilen) 
  xout iv0 + (iv1 - iv0) * ifrac
endop


/** Linearly-interpolating oscillator. Given phase duration in beats, 
returns value intepolated within the two closest points of phase within k-array
table. (shorthand for xosci(phsb(ibeats), karr) )*/
opcode xoscib, i,ik[]
  ibeats, kvals[] xin
  xout xosci(phsb(ibeats), kvals)
endop

/** Linearly-interpolating oscillator. Given phase duration in measures, 
returns value intepolated within the two closest points of phase within k-array
table. (shorthand for xosci(phsm(ibeats), karr) )*/
opcode xoscim, i,ik[]
  ibeats, kvals[] xin
  xout xosci(phsm(ibeats), kvals)
endop

/** Line (Ramp) oscillator. Given phase in range 0-1, return interpolated value between given istart and iend. */
opcode xlin, i, iii
  iphase, istart, iend xin
  xout istart + (iend - istart) * iphase
endop

;; Duration Sequences

/** Given a tick value and array of durations, returns new duration value for tick. */
opcode xoscd, i, ik[]
  itick, kdurs[] xin
  indx = 0
  isum = 0
  ilen = lenarray:i(kdurs)
  ival = 0

  while (indx < ilen) do
    isum += i(kdurs, indx)
    indx += 1
  od

  itick = itick % isum
  indx = 0
  ival = 0
  icur = 0

  while (indx < ilen) do
    itemp = i(kdurs, indx) 

    if(itick < icur + itemp) then
      ival = itemp 
      indx += ilen
    else
      icur += abs(itemp)
    endif
    
    indx += 1
  od

  xout ival 

 endop 


/** Given an array of durations, returns new duration value for current clock tick. Useful with mod division and cycle for additive/subtractive rhythms. */
opcode xoscd, i, k[]
  kdurs[] xin
  xout xoscd(now_tick(), kdurs)
endop


/** Given a tick value and array of durations, returns new duration or 0 depending upon whether tick hits a new duration value. Values
may be positive or negative, but not zero. Negative values can be interpreted as rest durations. */
opcode dur_seq, i, ik[]
  itick, kdurs[] xin
  ival = 0
  icur = 0
  ilen = lenarray:i(kdurs)
  itotal = 0

  indx = 0
  while (indx < ilen) do
    itotal += abs:i(i(kdurs, indx))
    indx += 1
  od

  ;print itotal

  indx = 0
  itick = itick % itotal

  while (indx < ilen) do
    itemp = i(kdurs, indx) 
    if(icur == itick) then
      ival = itemp 
      indx += ilen
    elseif (icur > itick) then
      indx += ilen 
    else
      icur += abs(itemp)
    endif
    
    indx += 1
  od
  xout ival 
endop


/** Given an array of durations, returns new duration or 0 depending upon
 * whether current clock tick hits a new duration value. Values
may be positive or negative, but not zero. Negative values can be interpreted
as rest durations. */
opcode dur_seq, i, k[]
  kdurs[] xin
  xout dur_seq(now_tick(), kdurs)
endop

/** Experimental opcode for generating melodic lines given array of durations, pitches, and amplitudes. Durations follow dur_seq practice that negative values are rests. Pitch and amp array indexing wraps according to their array lengths given index of non-rest duration value currently fired. */ 
opcode melodic, iii, ik[]k[]k[]
  itick, kdurs[], kpchs[], kamps[] xin

  idur = dur_seq(itick, kdurs)
  ipch = 0
  iamp = 0

  indx = 0
  itotal = 0
  ilen = lenarray:i(kdurs)

  while (indx < ilen) do
    itotal += abs:i(i(kdurs, indx))
    indx += 1
  od

  itick = itick % itotal

  if(idur > 0) then
    indx = 0
    icur = 0
    ivalindx = 0

    while (indx < ilen) do
      itemp = i(kdurs, indx) 

      if(icur == itick) then
        indx += ilen
      elseif (icur > itick) then
        indx += ilen 
      else
        if (itemp > 0) then
          ivalindx += 1 
        endif

        icur += abs(itemp)
      endif
      
      indx += 1
    od

    ipch = i(kpchs, ivalindx % lenarray:i(kpchs))
    iamp = i(kamps, ivalindx % lenarray:i(kamps))
  endif

  xout idur, ipch, iamp
endop

/** Experimental opcode for generating melodic lines given array of durations, pitches, and amplitudes. Durations follow dur_seq practice that negative values are rests. Pitch and amp array indexing wraps according to their array lengths given index of non-rest duration value currently fired. */ 
opcode melodic, iii, k[]k[]k[]
  kdurs[], kpchs[], kamps[] xin
  idur, ipch, iamp = melodic(now_tick(), kdurs, kpchs, kamps)
  xout idur, ipch, iamp
endop

;; String functions

/** 
  rotate - Rotates string by irot number of values.  
  (Inspired by rotate from Charlie Roberts' Gibber.)
*/
opcode rotate, S, Si
  Sval, irot xin

  ilen = strlen(Sval)
  irot = irot % ilen
  Sout = strcat(strsub(Sval, irot, ilen), strsub(Sval, 0, irot))
  xout Sout
endop


/** Repeats a given String x number of times. For example, \`Sval = strrep("ab6a", 2)\` will produce the value of "ab6aab6a". Useful in working with Hex beat strings.  */
opcode strrep, S, Si
  Sval, inum xin
    
  Sout = Sval
  indx = 1
  while (indx < inum) do
    Sout = strcat(Sout, Sval) 
    indx += 1
  od

  xout Sout
endop


;; Channel Helper

/** Sets i-rate value into channel and sets initialization to true. Works together 
  with xchan */
opcode xchnset, 0, Si
  SchanName, ival xin
  Sinit = sprintf("%s_initialized", SchanName)
  chnset(1, Sinit)
  chnset(ival, SchanName)
endop

/** xchan 
  Initializes a channel with initial value if channel has default value of 0 and
  then returns the current value from the channel. Useful in live coding to define
  a dynamic point that will be automated or set outside of the instrument that is
  using the channel. 

  Opcode is overloaded to return i- or k- value. Be sure to use xchan:i or xchan:k
  to specify which value to use. 
*/
opcode xchan, i,Si
  SchanName, initVal xin
   
  Sinit = sprintf("%s_initialized", SchanName)
  if(chnget:i(Sinit) == 0) then
    chnset(1, Sinit)
    chnset(initVal, SchanName)
  endif
  xout chnget:i(SchanName)
endop

/** xchan 
  Initializes a channel with initial value if channel has default value of 0 and
  then returns the current value from the channel. Useful in live coding to define
  a dynamic point that will be automated or set outside of the instrument that is
  using the channel. 

  Opcode is overloaded to return i- or k- value. Be sure to use xchan:i or xchan:k
  to specify which value to use. 
*/
opcode xchan, k,Si
  SchanName, initVal xin
    
  Sinit = sprintf("%s_initialized", SchanName)
  if(chnget:i(SchanName) == 0) then
    chnset(1, Sinit)
    chnset(initVal, SchanName)
  endif
  xout chnget:k(SchanName)
endop

;; SCALE/HARMONY (experimental)

gi_scale_major[] = array(0, 2, 4, 5, 7, 9, 11) 
gi_scale_minor[] = array(0, 2, 3, 5, 7, 8, 10)

gi_cur_scale[] = gi_scale_minor
gi_scale_base = 60
gi_chord_offset = 0

/** Set root note of scale in MIDI note number. */
opcode set_root, 0,i 
  iscale_root xin
  gi_scale_base = iscale_root
endop

/** Calculate frequency from root note of scale, using 
octave and pitch class. */
opcode from_root, i, ii
  ioct, ipc xin
  ival = gi_scale_base + (ioct * 12) + ipc
  xout cpsmidinn(ival)
endop

/** Set the global scale.  Currently supports "maj" for major and "min" for minor scales. */
opcode set_scale, 0,S
  Scale xin
  if(strcmp("maj", Scale) == 0) then
    gi_cur_scale = gi_scale_major
  else
    gi_cur_scale = gi_scale_minor
  endif
endop

/** Calculate frequency from root note of scale, using 
octave and scale degree. */
opcode in_scale, i, ii
  ioct, idegree xin

  ibase = gi_scale_base + (ioct * 12)

  idegrees = lenarray(gi_cur_scale)

  ioct = int(idegree / idegrees)
  indx = idegree % idegrees

  if(indx < 0) then
    ioct -= 1
    indx += idegrees
  endif

  xout cpsmidinn(ibase + (ioct * 12) + gi_cur_scale[int(indx)]) 
endop

/** Calculate frequency from root note of scale, using 
octave and scale degree. (k-rate version of opcode) */
opcode in_scale, k, kk 
  koct, kdegree xin

  kbase = gi_scale_base + (koct * 12)

  idegrees = lenarray(gi_cur_scale)

  koct = int(kdegree / idegrees)
  kndx = kdegree % idegrees

  if(kndx < 0) then
    koct -= 1
    kndx += idegrees
  endif

  xout cpsmidinn(kbase + (koct * 12) + gi_cur_scale[int(kndx)]) 
endop

/** Quantizes given MIDI note number to the given scale 
    (Base on pc:quantize from Extempore) */
opcode pc_quantize, i, ii[]
  ipitch_in, iscale[] xin
  inotenum = round:i(ipitch_in)
  ipc = inotenum % 12
  iout = inotenum
  
  
  indx = 0
  while (indx < 7) do
    if(contains(ipc + indx, iscale) == 1) then
      iout = inotenum + indx
      goto end
    elseif (contains(ipc - indx, iscale) == 1) then
      iout = inotenum - indx
      goto end
    endif
    indx += 1
  od
  end:
  xout iout
endop

/** Quantizes given MIDI note number to the current active scale 
    (Base on pc:quantize from Extempore) */
opcode pc_quantize, i, i
  ipitch_in xin
  ival = pc_quantize(ipitch_in, gi_cur_scale)
  xout ival
endop  

/* BELOW CHORD SYSTEM IS EXPERIMENTAL */

gi_chord_base = 0 
gi_chord_maj[] = array(0,4,7)
gi_chord_maj7[] = array(0,4,7,11)
gi_chord_min[] = array(0,3,7)
gi_chord_min7[] = array(0,3,7,10)
gi_chord_dim[] = array(0,3,6)
gi_chord_dim7[] = array(0,3,6,9)
gi_chord_aug[] = array(0,4,8)
gi_chord_current[] = gi_chord_maj 

opcode set_chord, 0, ii[]
  ichord_root, ichord_intervals[] xin
  gi_chord_base = ichord_root
  gi_chord_current = ichord_intervals
endop

opcode set_chord, 0, S 
  Schord xin
endop

opcode in_chord, i, ii
  ioct, idegree xin

  ibase = gi_scale_base + (ioct * 12) + gi_chord_base

  idegrees = lenarray(gi_chord_current)

  ioct = int(idegree / idegrees)
  indx = idegree % idegrees

  if(indx < 0) then
    ioct -= 1
    indx += idegrees
  endif

  xout cpsmidinn(ibase + (ioct * 12) + gi_chord_current[indx]) 
endop

;; AUDIO

/** Utility opcode for declicking an audio signal. Should only be used in instruments that have positive p3 duration. */
opcode declick, a, a
  ain xin
  aenv = linseg:a(0, 0.01, 1, p3 - 0.02, 1, 0.01, 0, 0.01, 0)
  xout ain * aenv
endop

/** Custom non-interpolating oscil that takes in kfrequency and array to use as oscillator table
data. Outputs k-rate signal. */
opcode oscil, k, kk[]
  kfreq, kin[] xin
  ilen = lenarray(kin)
  kphs = phasor:k(kfreq)
  kout = kin[int(kphs * ilen) % ilen]
  xout kout
endop


;; KILLING INSTANCES

instr KillImpl
  Sinstr = p4 
  if (nstrnum(Sinstr) > 0) then
    turnoff2(Sinstr, 0, 0)
  endif
  turnoff
endin

/** Turns off running instances of named instruments.  Useful when livecoding
  audio and control signal process instruments. May not be effective if for
  temporal recursion instruments as they may be non-running but scheduled in the
  event system. In those situations, try using clear_instr to overwrite the
  instrument definition. */
opcode kill, 0,S
  Sinstr xin
  schedule("KillImpl", 0, 0.01, Sinstr)
endop

/** Redefines instr to empty body. Useful for killing
  temporal recursion or clock callback functions */
opcode clear_instr, 0,S
  Sinstr xin
  Sinstr_body = sprintf("instr %s\\nendin\\n", Sinstr)
  ires = compilestr(Sinstr_body)
  prints(sprintf("Cleared instrument definition: %s\\n", 
          Sinstr))
endop

/** Starts running a named instrument for indefinite time using p2=0 and p3=-1. 
  Will first turnoff any instances of existing named instrument first.  Useful
  when livecoding always-on audio and control signal process instruments. */
opcode start, 0,S
  Sinstr xin

  if (nstrnum(Sinstr) > 0) then
    kill(Sinstr)
    schedule(Sinstr, ksmps / sr,-1)
  endif
endop

/** Stops a running named instrument, allowing for release segments to operate. */
opcode stop, 0,S
  Sinstr xin

  if (nstrnum(Sinstr) > 0) then
    schedule(-nstrnum(Sinstr), 0, 0)
  endif
endop

instr CodeEval
  Scode = p4
  ires = compilestr(Scode)
endin

/** Evaluate code at a given time */
opcode eval_at_time, 0, Si 
  Scode, istart xin
  iblock init ksmps / sr
  ;; adjust one block of time difference since this is
  ;; will need to be added as an event back on to the scheduler
  schedule("CodeEval", max:i(0, istart - iblock), 0, Scode)
endop


;; Fades 

gi_fade_range init -30


/** Sets the range in db to fade over. By default, range is -30 (i.e., fades from -30dbfs to 0dbfs) */
opcode set_fade_range, 0, i
  irange xin
  gi_fade_range init irange
endop

/** Given a fade channel identifier (number) and number of ticks to fade over time, advances from current fade channel value towards 0dbfs (1.0) using the globally set fade range. (By default starts fading in from -30dBfs and stops at 0dbfs.) */
opcode fade_in, i, ii
  ident, inumticks xin
  Schan = sprintf("fade_chan_%d", ident)
  ival = chnget:i(Schan)
  if(ival < 1.0) then
    ival = limit:i(ival + (1 / inumticks), 0, 1.0) 
    chnset(ival, Schan)
    iret = ampdbfs((1- ival) * gi_fade_range)
  else
    iret = ival
  endif

  xout iret 
endop

/** Given a fade channel identifier (number) and number of ticks to fade over time, advances from current fade channel value towards 0 using the globally set fade range. (By default starts fading out from 0dBfs and stops at -30dbfs.) */
opcode fade_out, i, ii
  ident, inumticks xin
  Schan = sprintf("fade_chan_%d", ident)

  ival = chnget:i(Schan)
  iret init 0

  if(ival > 0.0) then
    ival = limit:i(ival - (1 / inumticks), 0, 1.0) 
    chnset(ival, Schan)
    iret = ampdbfs((1- ival) * gi_fade_range)
  else
    iret = ival
  endif

  xout iret 
endop

/** Read value from fade channel. Useful if copy/pasting then wanting to just read from fade and control in the original code. */
opcode fade_read, i, i
  ident xin
  Schan = sprintf("fade_chan_%d", ident)
  iret = chnget:i(Schan)
  xout iret 
endop

/**  Set value for fade channel to given value. Should be in range 0-1.0.  (Typically one sets to either 0 or 1.) */
opcode set_fade, 0,ii
  ident, ival xin
  Schan = sprintf("fade_chan_%d", ident)
  ival = limit:i(ival, 0, 1.0) 
  chnset(ival, Schan)
endop

;; Stereo Audio Bus

ga_sbus[] init 16, 2

/** Write two audio signals into stereo bus at given index */
opcode sbus_write, 0,iaa
  ibus, al, ar xin
  ga_sbus[ibus][0] = al
  ga_sbus[ibus][1] = ar
endop

/** Mix two audio signals into stereo bus at given index */
opcode sbus_mix, 0,iaa
  ibus, al, ar xin
  ga_sbus[ibus][0] = ga_sbus[ibus][0] + al
  ga_sbus[ibus][1] = ga_sbus[ibus][1] + ar
endop

/** Clear audio signals from bus channel */
opcode sbus_clear, 0, i
  ibus xin
  aclear init 0
  ga_sbus[ibus][0] = aclear
  ga_sbus[ibus][1] = aclear
endop

/** Read audio signals from bus channel */
opcode sbus_read, aa, i
  ibus xin
  aclear init 0
  al = ga_sbus[ibus][0] 
  ar = ga_sbus[ibus][1] 
  xout al, ar
endop

;; MIXER

gi_reverb_mixer_on init 0

/** Always-on Mixer instrument with Reverb send channel. Use start("ReverbMixer") to run. Designed 
    for use with pan_verb_mix to simplify signal-based live coding. */
instr ReverbMixer

  gi_reverb_mixer_on init 1

  ;; dry and reverb send signals
  a1, a2 sbus_read 0
  a3, a4 sbus_read 1
  
  al, ar reverbsc a3, a4, xchan:k("Reverb.fb", 0.7), xchan:k("Reverb.cut", 12000)
  
  kamp = xchan:k("Mix.amp", 1.0)
  
  a1 = tanh(a1 + al) * kamp
  a2 = tanh(a2 + ar) * kamp
  
  out(a1, a2)
  
  sbus_clear(0)
  sbus_clear(1)
endin


/** Always-on Mixer instrument with Reverb send channel and feedback delay. Use start("FBReverbMixer") to run. Designed 
    for use with pan_verb_mix to simplify signal-based live coding. */
instr FBReverbMixer 
  al, ar sbus_read 0
  
  afb0 init 0
  afb1 init 0

  gi_reverb_mixer_on init 1

  ;; dry and reverb send signals
  a1, a2 sbus_read 0
  a3, a4 sbus_read 1
  
  al, ar reverbsc a3, a4, xchan:k("Reverb.fb", 0.7), xchan:k("Reverb.cut", 12000)

  a1 = tanh(a1 + al + afb0) 
  a2 = tanh(a2 + ar + afb1)
 
  kfb_amt = xchan:k("FB.amt", 0.9)
  kfb_dur = xchan:k("FB.dur", 4.2) * 1000 ;; time in ms

  afb0 = vdelay(a1 * kfb_amt, kfb_dur, 10000)
  afb1 = vdelay(a2 * kfb_amt, kfb_dur, 10000)

  kamp = xchan:k("Mix.amp", 1.0)
  a1 *= kamp
  a2 *= kamp
  
  out(a1, a2)
  
  sbus_clear(0)
  sbus_clear(1)

endin

/** Utility opcode to pan signal, send dry to mixer, and send amount 
    of signal to reverb. If ReverbMixer is not on, will output just 
    panned signal using out opcode. */
opcode pan_verb_mix, 0,akk
  asig, kpan, krvb xin
   ;; Panning and send to mixer
  al, ar pan2 asig, kpan
 
  if(gi_reverb_mixer_on == 1) then
    sbus_mix(0, al, ar)
    sbus_mix(1, al * krvb, ar * krvb)
  else 
    out(al, ar)
  endif
endop

/** Utility opcode to send dry stereo to mixer and send amount 
    of stereo signal to reverb. If ReverbMixer is not on, will output just 
    panned signal using out opcode. */
opcode reverb_mix, 0, aak
  al, ar, krvb xin
 
  if(gi_reverb_mixer_on == 1) then
    sbus_mix(0, al, ar)
    sbus_mix(1, al * krvb, ar * krvb)
  else 
    out(al, ar)
  endif
endop

;; Automation

/** Set a channel value at a given time. p4=ChannelName, p5=value*/ 
instr ChnSet
  Schan = p4
  ival = p5
  chnset(ival, Schan)
endin

/** Automation instrument for channels. Takes in "ChannelName", start value, end value, and automation type (0=linear, else exponential). */ 
instr Auto 
  Schan = p4
  istart = p5
  iend = p6
  itype = p7
  kauto init 0

  if(itype == 0) then
    kauto = line:k(istart, p3, iend)
  else
    kauto = expon:k(istart, p3, iend)
  endif

  chnset(kauto, Schan)
endin

/** Automate channel value over time. Takes in "ChannelName", duration, start value, end value, and automation type (0=linear, else exponential). For exponential, signs of istart and end must match and neither can be zero. */ 
opcode automate, 0, Siiii
  Schan, idur, istart, iend, itype xin
  schedule("Auto", 0, idur, Schan, istart, iend, itype)
endop

instr FadeOutMix
  kauto = ampdbfs:k(line:k(0, p3, -60))
  chnset(kauto, "Mix.amp")
endin

/** Utility opcode for end of performances to fade out Mixer over given idur time. idur defaults to 30 seconds. **/
opcode fade_out_mix, 0, o
  idur xin
  idur = (idur <= 0 ? 30 : idur)
  schedule("FadeOutMix", 0, idur) 
  schedule("ChnSet", idur + 0.1, 0, "Mix.amp", 0)
endop

;; DSP

/** Saturation using tanh */
opcode saturate, a, ak
  asig, ksat xin
  xout tanh(asig * ksat) / tanh(ksat)
endop

;; SYNTHS

xchnset("rvb.default", 0.1)
xchnset("drums.rvb.default", 0.1)

/** Substractive Synth, 3osc */
instr Sub1
  asig = vco2(ampdbfs(-12), p4)
  asig += vco2(ampdbfs(-12), p4 * 1.01, 10)
  asig += vco2(ampdbfs(-12), p4 * 2, 10)
  asig = zdf_ladder(asig, expon(10000, p3, 400), 5)
  asig = declick(asig) * p5
  pan_verb_mix(asig, xchan:i("Sub1.pan", 0.5), xchan:i("Sub1.rvb", chnget:i("rvb.default")))
endin


/** Subtractive Synth, two saws, fifth freq apart */
instr Sub2
  icut = xchan:i("Sub2.cut", sr / 3)
  asig = vco2(ampdbfs(-12), p4) 
  asig += vco2(ampdbfs(-12), p4 * 1.5) 
  asig = zdf_ladder(asig, expon(icut, p3, 400), 5)
  asig = declick(asig) * p5
  pan_verb_mix(asig, xchan:i("Sub2.pan", 0.5), xchan:i("Sub2.rvb", chnget:i("rvb.default")))
endin


/** Subtractive Synth, three detuned saws, swells in */
instr Sub3 
  asig = vco2(p5, p4)
  asig += vco2(p5, p4 * 1.01)
  asig += vco2(p5, p4 * 0.995)
  asig *= 0.33 
  asig = zdf_ladder(asig, expon(100, p3, 22000), 12) 
  asig = declick(asig)
  pan_verb_mix(asig, xchan:i("Sub3.pan", 0.5), xchan:i("Sub3.rvb", chnget:i("rvb.default")))
endin

/** Subtractive Synth, detuned square/saw, stabby. 
   Nice as a lead in octave 2, nicely grungy in octave -2, -1
*/
instr Sub4 
  asig = vco2(0.5, p4 * 2)
  asig += vco2(0.5, p4 * 2.01, 10)
  asig += vco2(1, p4, 10)
  asig += vco2(1, p4 * 0.99)
  itarget = p4 * 2
  asig = zdf_ladder(asig, expseg(20000, 0.15, itarget, 0.1, itarget), 5)
  asig = declick(asig) * p5 * 0.15
  pan_verb_mix(asig, xchan:i("Sub4.pan", 0.5), xchan:i("Sub4.rvb", chnget:i("rvb.default")))
endin


/** Subtractive Synth, detuned square/triangle */
instr Sub5
  asig = vco2(0.5, p4, 10)
  asig += vco2(0.25, p4 * 2.0001, 12)
  asig = zdf_ladder(asig, expseg(10000, 0.1, 500, 0.1, 500), 2)
  asig = declick(asig) * p5 * 0.75
  pan_verb_mix(asig, xchan:i("Sub5.pan", 0.5), xchan:i("Sub5.rvb", chnget:i("rvb.default")))
endin

/** Subtractive Synth, saw, K35 filters */
instr Sub6
  asig = vco2(p5, p4)

  asig = K35_hpf(asig, limit:i(p4, 30, 16000), 1)
  asig = K35_lpf(asig, expseg:k(12000, p3, limit:i(p4 * 8, 30, 12000)), 2.5)
  
  asig = saturate(asig, 4.5)
  asig *= p5 * 0.5
  
  asig = declick(asig)
  
  pan_verb_mix(asig, xchan:i("Sub6.pan", 0.5), xchan:i("Sub6.rvb", chnget:i("rvb.default")))
endin

/** Subtractive Synth, saw + tri, K35 filters */
instr Sub7
  asig = vco2(p5, p4)
  asig += vco2(p5, p4 * 2, 4, 0.5)

  asig = K35_hpf(asig, limit:i(p4, 30, 16000), 1)
  asig = K35_lpf(asig, expseg:k(12000, p3, limit:i(p4 * 8, 30, 12000)), 2.5)
  
  asig = saturate(asig, 4.5)
  asig *= p5 * 0.3
  
  asig = declick(asig)
  
  pan_verb_mix(asig, xchan:i("Sub7.pan", 0.5), xchan:i("Sub7.rvb", chnget:i("rvb.default")))
endin

/** Subtractive Synth, square + saw + tri, diode ladder filter */
instr Sub8
  asig = vco2(p5, p4, 10)
  asig += vco2(p5 * 0.5, p4 * 2)
  asig += vco2(p5 * 0.15, p4 * 3.5, 12)  
  
  aenv = expon:a(1, 0.15, 0.001)
  asig = saturate(asig, 10)
  asig = diode_ladder(asig, 4000 + aenv * 4000, 12)
  asig = zdf_2pole(asig, p5, 0.25, 1)
  asig *= linen:a(1, 0, p3, .001) * 0.5
  pan_verb_mix(asig, xchan:i("Sub8.pan", 0.5), xchan:i("Sub8.rvb", chnget:i("rvb.default")))
endin

/** SynthBrass subtractive synth */ 
instr SynBrass
  ipch = p4

  asig = vco2(0.25, ipch)
  asig += vco2(0.25, ipch * 2.00)
  asig = zdf_ladder(asig, expseg(12000, 0.25, 500, 0.05, 500), 4)
  asig = declick(asig * p5)

  pan_verb_mix(asig, xchan:i("SynBrass.pan", 0.5), xchan:i("SynBrass.rvb", chnget:i("rvb.default")))
endin

/** Synth Harp subtracitve Synth */
instr SynHarp
  
  asig = vco2(p5, p4)
  asig += vco2(p5, p4 * 0.9993423423)
  asig += vco2(p5, p4 * 1.00093029423048) 
  
  ioct = octcps(p4)
  
  asig = zdf_ladder(asig, cpsoct(limit(linseg:a(ioct + 4, 0.015, ioct + 2, 0.2, ioct), 4.25, 14)), 0.5)
  asig = zdf_2pole(asig, p4 * 0.5, 0.5, 1)    
  
  asig *= linen:a(1, 0.012, p3, 0.01)
  
  pan_verb_mix(asig, xchan:i("SynHarp.pan", 0.5), xchan:i("SynHarp.rvb", chnget:i("rvb.default")))
endin
 
/** SuperSaw sound using 9 bandlimited saws (3 sets of detuned saws at octaves)*/
instr SSaw
  asig = vco2(1, p4)
  asig += vco2(1, p4 * cent(9.04234))
  asig += vco2(1, p4 * cent(-7.214342))
  
  asig += vco2(1, p4 * cent(1206.294143))
  asig += vco2(1, p4 * cent(1193.732))
  asig += vco2(1, p4 * cent(1200))
  
  asig += vco2(1, p4 * cent(2406.294143))
  asig += vco2(1, p4 * cent(2393.732))
  asig += vco2(1, p4 * cent(2400))
  
  asig *= 0.1
  icut = xchan:i("SSaw.cut", 16000)
  asig = zdf_ladder(asig, expseg(icut, p3 - 0.05, icut, 0.05, 200), 0.5)
  asig *= p5 
  asig = declick(asig)

  pan_verb_mix(asig, xchan:i("SSaw.pan", 0.5), xchan:i("SSaw.rvb", chnget:i("rvb.default")))
endin

/** Modal Synthesis Instrument: Percussive/organ-y sound */
instr Mode1
  asig = mpulse(p5, 0)

  asig1 = mode(asig, p4, p4 * 0.5)
  asig1 += mode(asig, p4 * 2, p4 * 0.25)
  asig1 += mode(asig, p4 * 4, p4 * 0.125)

  asig = declick(asig1) 

  pan_verb_mix(asig, xchan:i("Mode1.pan", 0.5), xchan:i("Mode1.rvb", chnget:i("rvb.default")))
endin

/** Pluck sound using impulses, noise, and waveguides*/
instr Plk 
  asig = mpulse(p5, 1 / p4)
  asig += random:a(-0.1, 0.1) * expseg(p5, 0.02, 0.001, p3, 0.001)
  
  aout wguide1 asig, 1/ p4, 10000, 0.8
  aout += wguide1(asig, 1/ (2 * p4), 12000, 0.6)

  aout = K35_hpf(aout, p4, 0.5)
  aout = zdf_ladder(aout, expon(10000, p3, 100), 3)
  aout = dcblock2(aout)
  
  asig = declick(aout) 
  
  pan_verb_mix(asig, xchan:i("Plk.pan", 0.5), xchan:i("Plk.rvb", chnget:i("rvb.default")))
endin

gi_organ1 = ftgen(0, 0, 65536, 10, 1, 0.5, 0.3, 0.2, 0.05, 0.015)
/** Wavetable Organ sound using additive synthesis */
instr Organ1
  asig = oscili(p5, p4, gi_organ1)
  asig *= 0.5
  asig = declick(asig)

  pan_verb_mix(asig, xchan:i("Organ1.pan", 0.5), xchan:i("Organ1.rvb", chnget:i("rvb.default")))
endin

/** Organ sound based on M1 Organ 2 patch */
instr Organ2
  asig = vco2(1, p4, 4, 0.25)
  asig += vco2(0.8, p4 * 2, 12)
  asig += vco2(0.3, p4 * 3, 10)
     
  icutStart = limit:i(xchan:i("Organ2.cut", 2000), 40, sr * 1/2)
  icutEnd = limit:i(xchan:i("Organ2.cutEnd", 500), 40, sr * 1/2)
  asig = zdf_ladder(asig, expseg(icutStart, 0.08, icutEnd, p3, icutEnd), 2)
  
  asig *= p5 * 0.67
  asig = declick(asig)
  
  pan_verb_mix(asig, xchan:i("Organ2.pan", 0.5), xchan:i("Organ2.rvb", chnget:i("rvb.default")))
endin

giorgan_claribel_flute = ftgen(0, 0, 65536, 10, 1, ampdbfs(-30), ampdbfs(-35), ampdbfs(-40), ampdbfs(-32), ampdbfs(-40), ampdbfs(-42))

/** Wavetable Organ using Flute 8' and Flute 4', wavetable based on Claribel Flute 
    http://www.pykett.org.uk/the_tonal_structure_of_organ_flutes.htm */
instr Organ3 
  asig = oscili(p5, p4, giorgan_claribel_flute)
  asig += oscili(p5, p4 * 2, giorgan_claribel_flute)  
  ;asig += oscili(p5, p4 * 0.5)
  
  asig *= linen:a(1, .02, p3, .01)

  pan_verb_mix(asig, xchan:i("Organ3.pan", 0.5), xchan:i("Organ3.rvb", chnget:i("rvb.default")))
endin

/** Subtractive Bass sound */

instr Bass

  asig = vco2(p5, p4, 10)
  asig += vco2(p5 * 0.25, p4 * 0.9992342342, 10)  
  asig += vco2(p5 * 0.5, p4 * 2.000234234)
  aenv = linseg:a(1, 0.2, 0.1, p3 - 0.2, 0) * 6
  asig = zdf_ladder(asig, cpsoct(5 + aenv), 4 )
  
  asig *= linen:a(0.7, 0, p3, 0.01)
  
  pan_verb_mix(asig, xchan:i("Bass.pan", 0.5), xchan:i("Bass.rvb", chnget:i("rvb.default")))

endin

/** MS20-style Bass Sound */

instr ms20_bass 
  ipch = p4 
  iamp = p5 
  aenv = expseg(1000, 0.1, ipch * 2, p3 - .05, ipch * 2)

  asig = vco2(1.0, ipch)
  asig = K35_hpf(asig, ipch, 5, 0, 1)
  asig = K35_lpf(asig, aenv, 8, 0, 1)

  asig *= expon:a(iamp, p3, 0.0001) 

  pan_verb_mix(asig, xchan:i("ms20_bass.pan", 0.5), xchan:i("ms20_bass.rvb", chnget:i("rvb.default")))
endin


/** VoxHumana Patch */

instr VoxHumana 
  ipch = p4 
  iamp = p5 
  aenv = transegr:a(0, 0.453, 1, 1.0, 2.242, -1, 0)

  klfo_pulse_width = lfo(0.125, 5.72, 1)
  klfo_saw = lfo(0.021, 5.04, 1)
  klfo_pulse = lfo(0.013, 3.5, 1)

  asaw = vco2(iamp, ipch * (1 + klfo_saw))
  apulse = vco2(iamp, ipch * (1.00004 + klfo_pulse), 2, 0.625 + klfo_pulse_width)

  aout = sum(asaw, apulse) * 0.0625 * aenv

  ikeyfollow = 1 + exp( (ipch - 50) / 10000)

  aout = butterlp(aout, 1986 * ikeyfollow)

  pan_verb_mix(aout, xchan:i("VoxHumana.pan", 0.5), xchan:i("VoxHumana.rvb", chnget:i("rvb.default")))
endin

/** FM 3:1 C:M ratio, 2->0.025 index, nice for bass */
instr FM1 
  icar = xchan("FM1.car", 1)
  imod = xchan("FM1.mod", 3)
  asig = foscili(p5, p4, icar, imod, expon(2, 0.2, 0.025))
  asig = declick(asig) * 0.5
  pan_verb_mix(asig, xchan:i("FM1.pan", 0.5), xchan:i("FM1.rvb", chnget:i("rvb.default")))
endin

/** Filtered noise, exponential envelope */
instr Noi 
  p3 = max:i(p3, 0.4) 
  asig = pinker() * p5 * expon(1, p3, 0.001) * 0.1

  a1 = mode(asig, p4, 80)
  a2 = mode(asig, p4 * 2, 40)
  a3 = mode(asig, p4 * 3, 30)
  a4 = mode(asig, p4 * 4, 20)

  asig sum a1, a2, a3, a4

  asig = declick(asig) * 0.25

  pan_verb_mix(asig, xchan:i("Noi.pan", 0.5), xchan:i("Noi.rvb", chnget:i("rvb.default")))
endin


/** Wobble patched based on Jacob Joaquin's "Tempo-Synced Wobble Bass" */
instr Wobble
  /*p3 = max:i(p3, 0.4) */

  itri = chnget:i("Wobble.triangle")
  if(itri == 0) then
    ;; unipolar triangle
    itri = ftgen(0, 0, 8192, -7, 0, 4096, 1, 4096, 0)
    chnset(itri, "Wobble.triangle")
  endif

  ;; dur in ticks (16ths) for wobble lfo 
  iticks = xchan("Wobble.ticks", 2)
  ;; modulation max
  imod = p4 * 8 

  klfo = oscili:k(1, 1 / ticks(iticks), itri)

  asig = vco2(p5, p4 * 2.018)
  asig += vco2(p5, p4, 10)
  asig = zdf_ladder(asig, min:k(p4 + (imod * klfo), 22000), 12) 
  asig *= expon(1, beats(16), 0.001)
  asig = declick(asig)
  pan_verb_mix(asig, xchan:i("Wobble.pan", 0.5), xchan:i("Wobble.rvb", chnget:i("rvb.default")))

endin

/** Simple Sine-wave instrument with exponential envelope */
instr Sine
  asig = oscili(p5, p4)
  asig *= expseg:a(0.1, 0.001, 1, 0.1, 0.001, p3, 0.001)
  pan_verb_mix(asig, xchan:i("Sine.pan", 0.5), xchan:i("Sine.rvb", chnget:i("rvb.default")))
endin

/** Simple Square-wave instrument with exponential envelope */
instr Square
  asig = vco2(p5, p4, 10)
  asig *= expseg:a(0.1, 0.005, 1, 0.1, 0.001, p3, 0.001)
  pan_verb_mix(asig, xchan:i("Square.pan", 0.5), xchan:i("Square.rvb", chnget:i("rvb.default")))
endin

/** Simple Sawtooth-wave instrument with exponential envelope */
instr Saw
  asig = vco2(p5, p4)
  asig *= expseg:a(0.1, 0.005, 1, 0.1, 0.001, p3, 0.001)
  pan_verb_mix(asig, xchan:i("Saw.pan", 0.5), xchan:i("Saw.rvb", chnget:i("rvb.default")))
endin


;; SQUINE WAVE SYNTHS

/** Squinewave Synth, 2 osc */
instr Squine1
  asig squinewave a(p4), expon:a(.8, p3, .1), expon:a(.9, p3, .5), 0, 4
  a2 squinewave a(p4 * 1.0019234234), expseg:a(.8, p3, .6), a(0), 0, 4

  asig = (asig + a2 * 0.05) * p5 * 0.5
  asig = butterhp(asig, p4)
  asig *= linen:a(1, .015, p3, .02) 
  asig = dcblock2(asig)

  pan_verb_mix(asig, xchan:i("Squine1.pan", 0.5), xchan:i("Squine1.rvb", chnget:i("rvb.default")))
  
endin

gi_lc_sine = ftgen(0, 0, 65536, 10, 1)

/** Formant Synth, buzz source, soprano ah formants */
instr Form1 
  iamp = p5
  ifreq = p4
  asig = buzz(1, ifreq * (1 + lfo(.003, 4)), (sr / 2) / ifreq, gi_lc_sine)
  
  a1 = butterbp(asig, 800, 80)
  a2 = butterbp(asig * ampdbfs(-6), 1150, 90)
  a3 = butterbp(asig * ampdbfs(-32), 2900 , 120)
  a4 = butterbp(asig * ampdbfs(-20), 3900, 130)
  a5 = butterbp(asig * ampdbfs(-50), 4950, 140)

  asig = a1 + a2 + a3 + a4 + a5
  asig *= 35 * iamp * adsr(0.05, 0, 1, 0.01)
  
  pan_verb_mix(asig, xchan:i("Form1.pan", 0.5), xchan:i("Form1.rvb", chnget:i("rvb.default")))
endin

;; MONOPHONIC SYNTHS

/** Monophone synth using sawtooth wave and 4pole lpf. Use "start("Mono") to run the monosynth, then use MonoNote instrument to play the instrument. */
instr Mono
  asig = vco2(xchan:k("Mono.amp", 0.0), portk(xchan:k("Mono.freq", 60), xchan:k("Mono.glide", 0.02)))
  asig = zdf_ladder(asig, xchan:k("Mono.cut", 4000), xchan:k("Mono.Q", 10))
  
  kpan = xchan:k("Mono.pan", 0.5)
  aL,aR pan2  asig,kpan             

  pan_verb_mix(asig, xchan:k("Mono.pan", 0.5), xchan:k("Mono.rvb", chnget:i("rvb.default")))
endin
maxalloc("Mono", 1)

/** Note playing instrument for Mono synth. Be careful to use this
and not try to create multiple Mono instruments! */
instr MonoNote
  chnset(expon(p5, p3, 0.001), "Mono.amp")
  chnset(p4, "Mono.freq")
endin


;; DRUMS

/** Bandpass-filtered impulse glitchy click sound. p4 = center frequency (e.g., 3000, 6000) */
instr Click 
  asig = mpulse(1, 0)
  asig = zdf_2pole(asig, p4, 3, 3)
  
  asig *= p5 * 4      ;; adjust amp 
  asig *= linen:a(1, 0, p3, 0.01)
  
  pan_verb_mix(asig, xchan:i("Click.pan", 0.5), xchan:i("Click.rvb", chnget:i("rvb.default")))
endin

/** Highpass-filtered noise+saw sound. Use NoiSaw.cut channel to adjust cutoff. */
instr NoiSaw 
  asig = random:a(-1, 1)
  asig += vco2(1, 100)
  asig = zdf_2pole(asig, xchan:i("NoiSaw.cut", 3000), 1, 3)
  
  asig *= p5 * 0.5
  asig *= expseg:a(1, 0.1, 0.001, p3, 0.0001)
  
  asig *= linen:a(1, 0, p3, 0.01)
  
  pan_verb_mix(asig, xchan:i("NoiSaw.pan", 0.5), xchan:i("NoiSaw.rvb", chnget:i("rvb.default")))
endin

/** Modified clap instrument by Istvan Varga (clap1.orc) */
instr Clap
  ifreq = p4 ;; ignore
  iamp = p5

  ibpfrq  =  1046.5       /* bandpass filter frequency */
  kbpbwd =  port:k(ibpfrq*0.25, 0.03, ibpfrq*4.0)   /* bandpass filter bandwidth */
  idec  =  0.5          /* decay time        */

  a1  =  1.0
  a1_ delay1 a1
  a1  =  a1 - a1_
  a2  delay a1, 0.011
  a3  delay a1, 0.023
  a4  delay a1, 0.031

  a1  tone a1, 60.0
  a2  tone a2, 60.0
  a3  tone a3, 60.0
  a4  tone a4, 1.0 / idec

  aenv1 =  a1 + a2 + a3 + a4*60.0*idec

  a_  unirand 2.0
  a_  =  aenv1 * (a_ - 1.0)
  a_  butterbp a_, ibpfrq, kbpbwd

  aout = a_ * 80 * iamp ;; 
  pan_verb_mix(aout, xchan:k("Clap.pan", 0.7), xchan:k("Clap.rvb", chnget:i("drums.rvb.default")))
endin



gi_808_sine  ftgen 0,0,1024,10,1   ;A SINE WAVE
gi_808_cos ftgen 0,0,65536,9,1,1,90  ;A COSINE WAVE 

/** Bass Drum - From Iain McCurdy's TR-808.csd */
instr BD  ;BASS DRUM
  p3  = 2 * xchan("BD.decay", 0.5)              ;NOTE DURATION. SCALED USING GUI 'Decay' KNOB

  ilevel = xchan("BD.level", 1) * 2
  itune = xchan("BD.tune", 0)

  ;SUSTAIN AND BODY OF THE SOUND
  kmul = transeg(0.2,p3*0.5,-15,0.01, p3*0.5,0,0)         ;PARTIAL STRENGTHS MULTIPLIER USED BY GBUZZ. DECAYS FROM A SOUND WITH OVERTONES TO A SINE TONE.
  kbend = transeg(0.5,1.2,-4, 0,1,0,0)            ;SLIGHT PITCH BEND AT THE START OF THE NOTE 
  asig = gbuzz(0.5,50*octave(itune)*semitone(kbend),20,1,kmul,gi_808_cos)   ;GBUZZ TONE
  aenv = transeg:a(1,p3-0.004,-6,0)             ;AMPLITUDE ENVELOPE FOR SUSTAIN OF THE SOUND
  aatt = linseg:a(0,0.004,1, .01, 1)              ;SOFT ATTACK
  asig= asig*aenv*aatt

  ;HARD, SHORT ATTACK OF THE SOUND
  aenv  = linseg:a(1,0.07,0, .01, 0)              ;AMPLITUDE ENVELOPE (FAST DECAY)            
  acps = expsega(400,0.07,0.001,1,0.001)            ;FREQUENCY OF THE ATTACK SOUND. QUICKLY GLISSES FROM 400 Hz TO SUB-AUDIO
  aimp = oscili(aenv,acps*octave(itune*0.25),gi_808_sine)       ;CREATE ATTACK SOUND
  
  amix  = ((asig*0.5)+(aimp*0.35))*ilevel*p5      ;MIX SUSTAIN AND ATTACK SOUND ELEMENTS AND SCALE USING GUI 'Level' KNOB
  
  pan_verb_mix(amix, xchan:k("BD.pan", 0.5), xchan:k("BD.rvb", chnget:i("drums.rvb.default")))
endin


/** Snare Drum - From Iain McCurdy's TR-808.csd */
instr SD  ;SNARE DRUM
  
  ;SOUND CONSISTS OF TWO SINE TONES, AN OCTAVE APART AND A NOISE SIGNAL
  idur = xchan("SD.decay", 1.0) 
  ilevel = xchan("SD.level", 1) 
  itune = xchan("SD.tune", 0)

  ifrq    = 342   ;FREQUENCY OF THE TONES
  iNseDur = 0.3 * idur  ;DURATION OF THE NOISE COMPONENT
  iPchDur = 0.1 * idur  ;DURATION OF THE SINE TONES COMPONENT
  p3  = iNseDur   ;p3 DURATION TAKEN FROM NOISE COMPONENT DURATION (ALWATS THE LONGEST COMPONENT)
  
  ;SINE TONES COMPONENT
  aenv1 = expseg(1, iPchDur, 0.0001, p3-iPchDur, 0.0001)    ;AMPLITUDE ENVELOPE
  apitch1 = oscili(1, ifrq * octave(itune), gi_808_sine)      ;SINE TONE 1
  apitch2 = oscili(0.25, ifrq * 0.5 * octave(itune), gi_808_sine)   ;SINE TONE 2 (AN OCTAVE LOWER)
  apitch  = (apitch1+apitch2)*0.75        ;MIX THE TWO SINE TONES

  ;NOISE COMPONENT
  aenv2 = expon(1,p3,0.0005)          ;AMPLITUDE ENVELOPE
  anoise = noise(0.75, 0)           ;CREATE SOME NOISE
  anoise = butbp(anoise, 10000*octave(itune), 10000)    ;BANDPASS FILTER THE NOISE SIGNAL
  anoise = buthp(anoise, 1000)          ;HIGHPASS FILTER THE NOISE SIGNAL
  kcf = expseg(5000, 0.1, 3000, p3-0.2, 3000)     ;CUTOFF FREQUENCY FOR A LOWPASS FILTER
  anoise = butlp(anoise,kcf)                      ;LOWPASS FILTER THE NOISE SIGNAL
  amix  = ((apitch*aenv1)+(anoise*aenv2))*ilevel*p5 ;MIX AUDIO SIGNALS AND SCALE ACCORDING TO GUI 'Level' CONTROL

  pan_verb_mix(amix, xchan:k("SD.pan", 0.5), xchan:k("SD.rvb", chnget:i("drums.rvb.default")))
endin


/** Open High Hat - From Iain McCurdy's TR-808.csd */
instr OHH ;OPEN HIGH HAT

  idur = xchan("OHH.decay", 1.0)  
  ilevel = xchan("OHH.level", 1) 
  itune = xchan("OHH.tune", 0)
  ioct = octave:i(itune)


  kFrq1 = 296*ioct  ;FREQUENCIES OF THE 6 OSCILLATORS
  kFrq2 = 285*ioct  
  kFrq3 = 365*ioct  
  kFrq4 = 348*ioct  
  kFrq5 = 420*ioct  
  kFrq6 = 835*ioct  
  p3  = 0.5*idur    ;DURATION OF THE NOTE
  
  ;SOUND CONSISTS OF 6 PULSE OSCILLATORS MIXED WITH A NOISE COMPONENT
  ;PITCHED ELEMENT
  aenv  linseg  1,p3-0.05,0.1,0.05,0    ;AMPLITUDE ENVELOPE FOR THE PULSE OSCILLATORS
  ipw = 0.25        ;PULSE WIDTH
  a1  vco2  0.5,kFrq1,2,ipw     ;PULSE OSCILLATORS...
  a2  vco2  0.5,kFrq2,2,ipw
  a3  vco2  0.5,kFrq3,2,ipw
  a4  vco2  0.5,kFrq4,2,ipw
  a5  vco2  0.5,kFrq5,2,ipw
  a6  vco2  0.5,kFrq6,2,ipw
  amix  sum a1,a2,a3,a4,a5,a6   ;MIX THE PULSE OSCILLATORS
  amix  reson amix,5000*ioct,5000,1 ;BANDPASS FILTER THE MIXTURE
  amix  buthp amix,5000     ;HIGHPASS FILTER THE SOUND...
  amix  buthp amix,5000     ;...AND AGAIN
  amix  = amix*aenv     ;APPLY THE AMPLITUDE ENVELOPE
  
  ;NOISE ELEMENT
  anoise  noise 0.8,0       ;GENERATE SOME WHITE NOISE
  aenv  linseg  1,p3-0.05,0.1,0.05,0    ;CREATE AN AMPLITUDE ENVELOPE
  kcf expseg  20000,0.7,9000,p3-0.1,9000  ;CREATE A CUTOFF FREQ. ENVELOPE
  anoise  butlp anoise,kcf      ;LOWPASS FILTER THE NOISE SIGNAL
  anoise  buthp anoise,8000     ;HIGHPASS FILTER THE NOISE SIGNAL
  anoise  = anoise*aenv     ;APPLY THE AMPLITUDE ENVELOPE
  
  ;MIX PULSE OSCILLATOR AND NOISE COMPONENTS
  amix  = (amix+anoise)*ilevel*p5*0.55

  pan_verb_mix(amix, xchan:k("OHH.pan", 0.5), xchan:k("OHH.rvb", chnget:i("drums.rvb.default")))
endin


/** Closed High Hat - From Iain McCurdy's TR-808.csd */
instr CHH ;CLOSED HIGH HAT
  idur = xchan("CHH.decay", 1.0)  
  ilevel = xchan("CHH.level", 1) 
  itune = xchan("CHH.tune", 0)
  ioct = octave:i(itune)

  kFrq1 = 296*ioct  ;FREQUENCIES OF THE 6 OSCILLATORS
  kFrq2 = 285*ioct  
  kFrq3 = 365*ioct  
  kFrq4 = 348*ioct  
  kFrq5 = 420*ioct  
  kFrq6 = 835*ioct  
  idur  = 0.088*idur    ;DURATION OF THE NOTE
  p3  limit idur,0.1,10   ;LIMIT THE MINIMUM DURATION OF THE NOTE (VERY SHORT NOTES CAN RESULT IN THE INDICATOR LIGHT ON-OFF NOTE BEING TO0 SHORT)

  iohh = nstrnum("OHH")
  iactive = active(iohh)      ;SENSE ACTIVITY OF PREVIOUS INSTRUMENT (OPEN HIGH HAT) 
  if iactive>0 then     ;IF 'OPEN HIGH HAT' IS ACTIVE...
   turnoff2 iohh,0,0    ;TURN IT OFF (CLOSED HIGH HAT TAKES PRESIDENCE)
  endif

  ;PITCHED ELEMENT
  aenv  expsega 1,idur,0.001,1,0.001    ;AMPLITUDE ENVELOPE FOR THE PULSE OSCILLATORS
  ipw = 0.25        ;PULSE WIDTH
  a1  vco2  0.5,kFrq1,2,ipw     ;PULSE OSCILLATORS...     
  a2  vco2  0.5,kFrq2,2,ipw
  a3  vco2  0.5,kFrq3,2,ipw
  a4  vco2  0.5,kFrq4,2,ipw
  a5  vco2  0.5,kFrq5,2,ipw
  a6  vco2  0.5,kFrq6,2,ipw
  amix  sum a1,a2,a3,a4,a5,a6   ;MIX THE PULSE OSCILLATORS
  amix  reson amix,5000*ioct,5000,1 ;BANDPASS FILTER THE MIXTURE
  amix  buthp amix,5000     ;HIGHPASS FILTER THE SOUND...
  amix  buthp amix,5000     ;...AND AGAIN
  amix  = amix*aenv     ;APPLY THE AMPLITUDE ENVELOPE
  
  ;NOISE ELEMENT
  anoise  noise 0.8,0       ;GENERATE SOME WHITE NOISE
  aenv  expsega 1,idur,0.001,1,0.001    ;CREATE AN AMPLITUDE ENVELOPE
  kcf expseg  20000,0.7,9000,idur-0.1,9000  ;CREATE A CUTOFF FREQ. ENVELOPE
  anoise  butlp anoise,kcf      ;LOWPASS FILTER THE NOISE SIGNAL
  anoise  buthp anoise,8000     ;HIGHPASS FILTER THE NOISE SIGNAL
  anoise  = anoise*aenv     ;APPLY THE AMPLITUDE ENVELOPE
  
  ;MIX PULSE OSCILLATOR AND NOISE COMPONENTS
  amix  = (amix+anoise)*ilevel*p5*0.55

  pan_verb_mix(amix, xchan:k("CHH.pan", 0.5), xchan:k("CHH.rvb", chnget:i("drums.rvb.default")))
endin

/** High Tom - From Iain McCurdy's TR-808.csd */
instr HiTom ;HIGH TOM
  idur = xchan("HiTom.decay", 1.0)  
  ilevel = xchan("HiTom.level", 1) 
  itune = xchan("HiTom.tune", 0)
  ioct = octave:i(itune)

  ifrq      = 200 * ioct  ;FREQUENCY
  p3      = 0.5 * idur      ;DURATION OF THIS NOTE

  ;SINE TONE SIGNAL
  aAmpEnv transeg 1,p3,-10,0.001        ;AMPLITUDE ENVELOPE FOR SINE TONE SIGNAL
  afmod expsega 5,0.125/ifrq,1,1,1      ;FREQUENCY MODULATION ENVELOPE. GIVES THE TONE MORE OF AN ATTACK.
  asig  oscili  -aAmpEnv*0.6,ifrq*afmod,gi_808_sine   ;SINE TONE SIGNAL

  ;NOISE SIGNAL
  aEnvNse transeg 1,p3,-6,0.001       ;AMPLITUDE ENVELOPE FOR NOISE SIGNAL
  anoise  dust2 0.4, 8000       ;GENERATE NOISE SIGNAL
  anoise  reson anoise,400*ioct,800,1 ;BANDPASS FILTER THE NOISE SIGNAL
  anoise  buthp anoise,100*ioct   ;HIGHPASS FILTER THE NOSIE SIGNAL
  anoise  butlp anoise,1000*ioct    ;LOWPASS FILTER THE NOISE SIGNAL
  anoise  = anoise * aEnvNse      ;SCALE NOISE SIGNAL WITH AMPLITUDE ENVELOPE
  
  ;MIX THE TWO SOUND COMPONENTS
  amix  = (asig + anoise)*ilevel*p5

  pan_verb_mix(amix, xchan:k("HiTom.pan", 0.5), xchan:k("HiTom.rvb", chnget:i("drums.rvb.default")))
endin

/** Mid Tom - From Iain McCurdy's TR-808.csd */
instr MidTom ;MID TOM
  idur = xchan("MidTom.decay", 1.0) 
  ilevel = xchan("MidTom.level", 1) 
  itune = xchan("MidTom.tune", 0)
  ioct = octave:i(itune)

  ifrq      = 133*ioct    ;FREQUENCY
  p3      = 0.6 * idur      ;DURATION OF THIS NOTE

  ;SINE TONE SIGNAL
  aAmpEnv transeg 1,p3,-10,0.001        ;AMPLITUDE ENVELOPE FOR SINE TONE SIGNAL
  afmod expsega 5,0.125/ifrq,1,1,1      ;FREQUENCY MODULATION ENVELOPE. GIVES THE TONE MORE OF AN ATTACK.
  asig  oscili  -aAmpEnv*0.6,ifrq*afmod,gi_808_sine   ;SINE TONE SIGNAL

  ;NOISE SIGNAL
  aEnvNse transeg 1,p3,-6,0.001       ;AMPLITUDE ENVELOPE FOR NOISE SIGNAL
  anoise  dust2 0.4, 8000       ;GENERATE NOISE SIGNAL
  anoise  reson anoise, 400*ioct,800,1  ;BANDPASS FILTER THE NOISE SIGNAL
  anoise  buthp anoise,100*ioct   ;HIGHPASS FILTER THE NOSIE SIGNAL
  anoise  butlp anoise,600*ioct   ;LOWPASS FILTER THE NOISE SIGNAL
  anoise  = anoise * aEnvNse      ;SCALE NOISE SIGNAL WITH AMPLITUDE ENVELOPE
  
  ;MIX THE TWO SOUND COMPONENTS
  amix  = (asig + anoise)*ilevel*p5

  pan_verb_mix(amix, xchan:k("MidTom.pan", 0.5), xchan:k("MidTom.rvb", chnget:i("drums.rvb.default")))
endin

/** Low Tom - From Iain McCurdy's TR-808.csd */
instr LowTom  ;LOW TOM
  idur = xchan("LowTom.decay", 1.0) 
  ilevel = xchan("LowTom.level", 1) 
  itune = xchan("LowTom.tune", 0)
  ioct = octave:i(itune)

  ifrq      = 90 * ioct ;FREQUENCY
  p3    = 0.7*idur    ;DURATION OF THIS NOTE

  ;SINE TONE SIGNAL
  aAmpEnv transeg 1,p3,-10,0.001        ;AMPLITUDE ENVELOPE FOR SINE TONE SIGNAL
  afmod expsega 5,0.125/ifrq,1,1,1      ;FREQUENCY MODULATION ENVELOPE. GIVES THE TONE MORE OF AN ATTACK.
  asig  oscili  -aAmpEnv*0.6,ifrq*afmod,gi_808_sine   ;SINE TONE SIGNAL

  ;NOISE SIGNAL
  aEnvNse transeg 1,p3,-6,0.001       ;AMPLITUDE ENVELOPE FOR NOISE SIGNAL
  anoise  dust2 0.4, 8000       ;GENERATE NOISE SIGNAL
  anoise  reson anoise,40*ioct,800,1    ;BANDPASS FILTER THE NOISE SIGNAL
  anoise  buthp anoise,100*ioct   ;HIGHPASS FILTER THE NOSIE SIGNAL
  anoise  butlp anoise,600*ioct   ;LOWPASS FILTER THE NOISE SIGNAL
  anoise  = anoise * aEnvNse      ;SCALE NOISE SIGNAL WITH AMPLITUDE ENVELOPE
  
  ;MIX THE TWO SOUND COMPONENTS
  amix  = (asig + anoise)*ilevel*p5

  pan_verb_mix(amix, xchan:k("LowTom.pan", 0.5), xchan:k("LowTom.rvb", chnget:i("drums.rvb.default")))
endin



/** Cymbal - From Iain McCurdy's TR-808.csd */
instr Cymbal  ;CYMBAL
  idur = xchan("Cymbal.decay", 1.0) 
  ilevel = xchan("Cymbal.level", 1) 
  itune = xchan("Cymbal.tune", 0)
  ioct = octave:i(itune)

  iFrq1 = 296*ioct  ;FREQUENCIES OF THE 6 OSCILLATORS
  iFrq2 = 285*ioct
  iFrq3 = 365*ioct
  iFrq4 = 348*ioct     
  iFrq5 = 420*ioct
  iFrq6 = 835*ioct
  p3  = 2*idur  ;DURATION OF THE NOTE

  ;SOUND CONSISTS OF 6 PULSE OSCILLATORS MIXED WITH A NOISE COMPONENT
  ;PITCHED ELEMENT
  aenv  expon 1,p3,0.0001   ;AMPLITUDE ENVELOPE FOR THE PULSE OSCILLATORS 
  ipw = 0.25      ;PULSE WIDTH      
  a1  vco2  0.5,iFrq1,2,ipw   ;PULSE OSCILLATORS...  
  a2  vco2  0.5,iFrq2,2,ipw
  a3  vco2  0.5,iFrq3,2,ipw
  a4  vco2  0.5,iFrq4,2,ipw
  a5  vco2  0.5,iFrq5,2,ipw 
  a6  vco2  0.5,iFrq6,2,ipw

  amix  sum a1,a2,a3,a4,a5,a6   ;MIX THE PULSE OSCILLATORS
  amix  reson amix,5000 * ioct,5000,1 ;BANDPASS FILTER THE MIXTURE
  amix  buthp amix,10000      ;HIGHPASS FILTER THE SOUND
  amix  butlp amix,12000      ;LOWPASS FILTER THE SOUND...
  amix  butlp amix,12000      ;AND AGAIN...
  amix  = amix*aenv     ;APPLY THE AMPLITUDE ENVELOPE
  
  ;NOISE ELEMENT
  anoise  noise 0.8,0       ;GENERATE SOME WHITE NOISE
  aenv  expsega 1,0.3,0.07,p3-0.1,0.00001 ;CREATE AN AMPLITUDE ENVELOPE
  kcf expseg  14000,0.7,7000,p3-0.1,5000  ;CREATE A CUTOFF FREQ. ENVELOPE
  anoise  butlp anoise,kcf      ;LOWPASS FILTER THE NOISE SIGNAL
  anoise  buthp anoise,8000     ;HIGHPASS FILTER THE NOISE SIGNAL
  anoise  = anoise*aenv     ;APPLY THE AMPLITUDE ENVELOPE            

  ;MIX PULSE OSCILLATOR AND NOISE COMPONENTS
  amix  = (amix+anoise)*ilevel*p5*0.85

  pan_verb_mix(amix, xchan:k("Cymbal.pan", 0.5), xchan:k("Cymbal.rvb", chnget:i("drums.rvb.default")))
endin

;WAVEFORM FOR TR808 RIMSHOT
giTR808RimShot  ftgen 0,0,1024,10, 0.971,0.269,0.041,0.054,0.011,0.013,0.08,0.0065,0.005,0.004,0.003,0.003,0.002,0.002,0.002,0.002,0.002,0.001,0.001,0.001,0.001,0.001,0.002,0.001,0.001  

/** Rimshot - From Iain McCurdy's TR-808.csd */
instr Rimshot ;RIM SHOT

  idur = xchan("Rimshot.decay", 1.0)  
  ilevel = xchan("Rimshot.level", 1) 
  itune = xchan("Rimshot.tune", 0)

  idur  = 0.027*idur    ;NOTE DURATION
  p3  limit idur,0.1,10     ;LIMIT THE MINIMUM DURATION OF THE NOTE (VERY SHORT NOTES CAN RESULT IN THE INDICATOR LIGHT ON-OFF NOTE BEING TO0 SHORT)

  ;RING
  aenv1 expsega 1,idur,0.001,1,0.001    ;AMPLITUDE ENVELOPE FOR SUSTAIN ELEMENT OF SOUND
  ifrq1 = 1700*octave(itune)    ;FREQUENCY OF SUSTAIN ELEMENT OF SOUND
  aring oscili  1,ifrq1,giTR808RimShot,0    ;CREATE SUSTAIN ELEMENT OF SOUND  
  aring butbp aring,ifrq1,ifrq1*8 
  aring = aring*(aenv1-0.001)*0.5     ;APPLY AMPLITUDE ENVELOPE

  ;NOISE
  anoise  noise 1,0         ;CREATE A NOISE SIGNAL
  aenv2 expsega 1, 0.002, 0.8, 0.005, 0.5, idur-0.002-0.005, 0.0001, 1, 0.0001  ;CREATE AMPLITUDE ENVELOPE
  anoise  buthp anoise,800      ;HIGHPASS FILTER THE NOISE SOUND
  kcf expseg  4000,idur,20        ;CUTOFF FREQUENCY FUNCTION FOR LOWPASS FILTER
  anoise  butlp anoise,kcf      ;LOWPASS FILTER THE SOUND
  anoise  = anoise*(aenv2-0.001)  ;APPLY ENVELOPE TO NOISE SIGNAL

  ;MIX
  amix  = (aring+anoise)*ilevel*p5*0.8

  pan_verb_mix(amix, xchan:k("Rimshot.pan", 0.5), xchan:k("Rimshot.rvb", chnget:i("drums.rvb.default")))
endin


/** Claves - From Iain McCurdy's TR-808.csd */
instr Claves  
  idur = xchan("Claves.decay", 1.0) 
  ilevel = xchan("Claves.level", 1) 
  itune = xchan("Claves.tune", 0)

  ifrq  = 2500*octave(itune)  ;FREQUENCY OF OSCILLATOR
  idur  = 0.045   * idur    ;DURATION OF THE NOTE
  p3  limit idur,0.1,10     ;LIMIT THE MINIMUM DURATION OF THE NOTE (VERY SHORT NOTES CAN RESULT IN THE INDICATOR LIGHT ON-OFF NOTE BEING TO0 SHORT)      
  aenv  expsega 1,idur,0.001,1,0.001    ;AMPLITUDE ENVELOPE
  afmod expsega 3,0.00005,1,1,1     ;FREQUENCY MODULATION ENVELOPE. GIVES THE SOUND A LITTLE MORE ATTACK.
  asig  oscili  -(aenv-0.001),ifrq*afmod,gi_808_sine,0  ;AUDIO OSCILLATOR
  asig  = asig * 0.4 * ilevel * p5    ;RESCALE AMPLITUDE

  pan_verb_mix(asig, xchan:k("Claves.pan", 0.5), xchan:k("Claves.rvb", chnget:i("drums.rvb.default")))
endin


/** Cowbell - From Iain McCurdy's TR-808.csd */
instr Cowbell 
  idur = xchan("Cowbell.decay", 1.0)  
  ilevel = xchan("Cowbell.level", 1) 
  itune = xchan("Cowbell.tune", 0)

  ifrq1 = 562 * octave(itune) ;FREQUENCIES OF THE TWO OSCILLATORS
  ifrq2 = 845 * octave(itune) ;
  ipw   = 0.5         ;PULSE WIDTH OF THE OSCILLATOR  
  ishp  = -30   
  idur  = 0.7         ;NOTE DURATION
  p3  = 0.7*idur      ;LIMIT THE MINIMUM DURATION OF THE NOTE (VERY SHORT NOTES CAN RESULT IN THE INDICATOR LIGHT ON-OFF NOTE BEING TO0 SHORT)
  ishape  = -30       ;SHAPE OF THE CURVES IN THE AMPLITUDE ENVELOPE
  kenv1 transeg 1,p3*0.3,ishape,0.2, p3*0.7,ishape,0.2  ;FIRST AMPLITUDE ENVELOPE - PRINCIPALLY THE ATTACK OF THE NOTE
  kenv2 expon 1,p3,0.0005       ;SECOND AMPLITUDE ENVELOPE - THE SUSTAIN PORTION OF THE NOTE
  kenv  = kenv1*kenv2     ;COMBINE THE TWO ENVELOPES
  itype = 2       ;WAVEFORM FOR VCO2 (2=PULSE)
  a1  vco2  0.65,ifrq1,itype,ipw    ;CREATE THE TWO OSCILLATORS
  a2  vco2  0.65,ifrq2,itype,ipw
  amix  = a1+a2       ;MIX THE TWO OSCILLATORS 
  iLPF2 = 10000       ;LOWPASS FILTER RESTING FREQUENCY
  kcf expseg  12000,0.07,iLPF2,1,iLPF2  ;LOWPASS FILTER CUTOFF FREQUENCY ENVELOPE
  alpf  butlp amix,kcf      ;LOWPASS FILTER THE MIX OF THE TWO OSCILLATORS (CREATE A NEW SIGNAL)
  abpf  reson amix, ifrq2, 25     ;BANDPASS FILTER THE MIX OF THE TWO OSCILLATORS (CREATE A NEW SIGNAL)
  amix  dcblock2  (abpf*0.06*kenv1)+(alpf*0.5)+(amix*0.9) ;MIX ALL SIGNALS AND BLOCK DC OFFSET
  amix  buthp amix,700      ;HIGHPASS FILTER THE MIX OF ALL SIGNALS
  amix  = amix * 0.07 * kenv * p5 * ilevel  ;RESCALE AMPLITUDE

  pan_verb_mix(amix, xchan:k("Cowbell.pan", 0.5), xchan:k("Cowbell.rvb", chnget:i("drums.rvb.default")))
endin

/** Maraca - from Iain McCurdy's TR-808.csd */ 
instr Maraca  ;MARACA
  idur = xchan("Maraca.decay", 1.0) 
  ilevel = xchan("Maraca.level", 1) 
  itune = xchan("Maraca.tune", 0)
  ioct = octave:i(itune)

  idur  = 0.07*idur       ;DURATION 3
  p3  limit idur,0.1,10       ;LIMIT THE MINIMUM DURATION OF THE NOTE (VERY SHORT NOTES CAN RESULT IN THE INDICATOR LIGHT ON-OFF NOTE BEING TO0 SHORT)
  iHPF  limit 6000*ioct,20,sr/2 ;HIGHPASS FILTER FREQUENCY  
  iLPF  limit 12000*ioct,20,sr/3  ;LOWPASS FILTER FREQUENCY. (LIMIT MAXIMUM TO PREVENT OUT OF RANGE VALUES)
  ;AMPLITUDE ENVELOPE
  iBP1  = 0.4         ;BREAK-POINT 1
  iDur1 = 0.014*idur      ;DURATION 1
  iBP2  = 1         ;BREAKPOINT 2
  iDur2 = 0.01 *idur      ;DURATION 2
  iBP3  = 0.05          ;BREAKPOINT 3
  p3  limit idur,0.1,10       ;LIMIT THE MINIMUM DURATION OF THE NOTE (VERY SHORT NOTES CAN RESULT IN THE INDICATOR LIGHT ON-OFF NOTE BEING TO0 SHORT)
  aenv  expsega iBP1,iDur1,iBP2,iDur2,iBP3    ;CREATE AMPLITUDE ENVELOPE
  anoise  noise 0.75,0          ;CREATE A NOISE SIGNAL
  anoise  buthp anoise,iHPF       ;HIGHPASS FILTER THE SOUND
  anoise  butlp anoise,iLPF       ;LOWPASS FILTER THE SOUND
  anoise  = anoise*aenv*p5*ilevel ;SCALE THE AMPLITUDE

  pan_verb_mix(anoise, xchan:k("Maraca.pan", 0.5), xchan:k("Maraca.rvb", chnget:i("drums.rvb.default")))
endin

/** High Conga - From Iain McCurdy's TR-808.csd */
instr HiConga ;HIGH CONGA
  idur = xchan("HiConga.decay", 1.0)  
  ilevel = xchan("HiConga.level", 1) 
  itune = xchan("HiConga.tune", 0)
  ioct = octave:i(itune)

  ifrq    = 420*ioct    ;FREQUENCY OF NOTE
  p3    = 0.22*idur     ;DURATION OF NOTE
  aenv  transeg 0.7,1/ifrq,1,1,p3,-6,0.001  ;AMPLITUDE ENVELOPE
  afrq  expsega ifrq*3,0.25/ifrq,ifrq,1,ifrq  ;FREQUENCY ENVELOPE (CREATE A SHARPER ATTACK)
  asig  oscili  -aenv*0.25,afrq,gi_808_sine   ;CREATE THE AUDIO OSCILLATOR
  asig  = asig*p5*ilevel  ;SCALE THE AMPLITUDE
  
  pan_verb_mix(asig, xchan:k("HiConga.pan", 0.5), xchan:k("HiConga.rvb", chnget:i("drums.rvb.default")))
endin

/** Mid Conga - From Iain McCurdy's TR-808.csd */
instr MidConga  ;MID CONGA
  idur = xchan("MidConga.decay", 1.0) 
  ilevel = xchan("MidConga.level", 1) 
  itune = xchan("MidConga.tune", 0)
  ioct = octave:i(itune)

  ifrq    = 310*ioct    ;FREQUENCY OF NOTE
  p3    = 0.33*idur     ;DURATION OF NOTE
  aenv  transeg 0.7,1/ifrq,1,1,p3,-6,0.001  ;AMPLITUDE ENVELOPE 
  afrq  expsega ifrq*3,0.25/ifrq,ifrq,1,ifrq  ;FREQUENCY ENVELOPE (CREATE A SHARPER ATTACK)
  asig  oscili  -aenv*0.25,afrq,gi_808_sine   ;CREATE THE AUDIO OSCILLATOR
  asig  = asig*p5*ilevel    ;SCALE THE AMPLITUDE

  pan_verb_mix(asig, xchan:k("MidConga.pan", 0.5), xchan:k("MidConga.rvb", chnget:i("drums.rvb.default")))
endin

/** Low Conga - From Iain McCurdy's TR-808.csd */
instr LowConga  ;LOW CONGA
  idur = xchan("LowConga.decay", 1.0) 
  ilevel = xchan("LowConga.level", 1) 
  itune = xchan("LowConga.tune", 0)
  ioct = octave:i(itune)

  ifrq    = 227*ioct    ;FREQUENCY OF NOTE
  p3    = 0.41*idur     ;DURATION OF NOTE   
  aenv  transeg 0.7,1/ifrq,1,1,p3,-6,0.001  ;AMPLITUDE ENVELOPE 
  afrq  expsega ifrq*3,0.25/ifrq,ifrq,1,ifrq  ;FREQUENCY ENVELOPE (CREATE A SHARPER ATTACK)
  asig  oscili  -aenv*0.25,afrq,gi_808_sine   ;CREATE THE AUDIO OSCILLATOR
  asig  = asig*p5*ilevel  ;SCALE THE AMPLITUDE

  pan_verb_mix(asig, xchan:k("LowConga.pan", 0.5), xchan:k("LowConga.rvb", chnget:i("drums.rvb.default")))
endin

;; INITIALIZATION OF SYSTEM

start("Clock")
`,hy=async t=>{if(!t)return;await t.stop(),await t.reset(),await t.setOption("-m0"),await t.setOption("-odac"),await t.setOption("-+msg_color=false"),await t.setOption("--daemon");const e=await t.getAudioContext();await t.compileOrc(`sr=${e==null?void 0:e.sampleRate}
ksmps=32
0dbfs=1
nchnls=2
nchnls_i=1
${hG}`),await t.start()},pG=()=>{const t="https://github.com/kunstmusik/csound-live-code/blob/master/doc/intro.md";window.open(t)},mG=(t,e)=>{const n=t.toLowerCase().endsWith(".orc")?t:t+".orc",r=new Blob([e],{type:"text/plain;charset=utf-8"});vN.exports.saveAs(r,n)};let E0=[[/^\s*instr/,"instr"],[/^\s*endin/,"endin"],[/^\s*opcode/,"opcode"],[/^\s*endop/,"endop"]];const gG=t=>{for(let e=0;e<E0.length;e++)if(t.match(E0[e][0])!=null)return E0[e][1];return null},WP=(t,e,n,r)=>{const i=t.state.doc;for(let o=e;o!=r;o+=n){let s=gG(i.line(o).text);if(s!=null)return[o,s]}return null},bG=t=>{const e=t.state,n=e.selection,r=e.doc;let{from:i,to:o}=n.main,s=e.sliceDoc(i,o);if(i===o){let a=WP(t,r.lineAt(i).number,-1,0),l=WP(t,r.lineAt(i).number,1,r.lines+1);if(a!=null&&l!=null&&(a[1]==="instr"&&l[1]==="endin"||a[1]==="opcode"&&l[1]==="endop"))i=r.line(a[0]).from,o=r.line(l[0]).to,s=e.sliceDoc(i,o);else{const c=r.lineAt(i);i=c.from,o=c.to,s=c.text}}return{text:s,from:i,to:o}},yN=se.define(),xN=se.define(),vG=(t,e,n)=>{const r=G.mark({class:n});t.dispatch({effects:yN.of([r.range(e.from,e.to)])}),setTimeout(()=>{t.dispatch({effects:xN.of((i,o)=>o<=e.from||i>=e.to)})},250)},yG=St.define({create(){return G.none},update(t,e){t=t.map(e.changes);for(let n of e.effects)n.is(yN)?t=t.update({add:n.value,sort:!0}):n.is(xN)&&(t=t.update({filter:n.value}));return t},provide:t=>U.decorations.from(t)});let Vp=5;const RP=t=>{const e=`hexplay("8",
      "Sub5", p3,
      in_scale(-1, 0),
      fade_in(`+Vp+`, 128) * ampdbfs(-12))
`;Vp+=1;const n=t.state.selection.main;return t.dispatch({changes:{from:n.from,to:n.to,insert:e}}),!0},FP=t=>{const e=`euclidplay(13, 32,
      "Sub5", p3,
      in_scale(-1, 0),
      fade_in(`+Vp+`, 128) * ampdbfs(-12))
`;Vp+=1;const n=t.state.selection.main;return t.dispatch({changes:{from:n.from,to:n.to,insert:e}}),!0},vf=t=>e=>{let n=bG(e);return t.compileOrc(n.text),vG(e,n,"CodeMirror-highlight"),!0},xG=t=>{const e={"Ctrl-e":vf(t),"Cmd-e":vf(t),"Ctrl-Enter":vf(t),"Cmd-Enter":vf(t),"Ctrl-h":RP,"Cmd-h":RP,"Ctrl-j":FP,"Cmd-j":FP,"Ctrl-;":kc,"Cmd-;":kc,"Ctrl-Alt-c":kc,"Cmd-Alt-c":kc};return Object.keys(e).map(r=>{const i=e[r];return{key:r,mac:r,run:i,preventDefault:!0}})};var Ep=Boolean(globalThis==null?void 0:globalThis.document)?S.exports.useLayoutEffect:S.exports.useEffect,Yx=S.exports.createContext({});Yx.displayName="ColorModeContext";function Kx(){const t=S.exports.useContext(Yx);if(t===void 0)throw new Error("useColorMode must be used within a ColorModeProvider");return t}var yf={light:"chakra-ui-light",dark:"chakra-ui-dark"};function SG(t={}){const{preventTransition:e=!0}=t,n={setDataset:r=>{const i=e?n.preventTransition():void 0;document.documentElement.dataset.theme=r,document.documentElement.style.colorScheme=r,i==null||i()},setClassName(r){document.body.classList.add(r?yf.dark:yf.light),document.body.classList.remove(r?yf.light:yf.dark)},query(){return window.matchMedia("(prefers-color-scheme: dark)")},getSystemTheme(r){var o;return((o=n.query().matches)!=null?o:r==="dark")?"dark":"light"},addListener(r){const i=n.query(),o=s=>{r(s.matches?"dark":"light")};return typeof i.addListener=="function"?i.addListener(o):i.addEventListener("change",o),()=>{typeof i.removeListener=="function"?i.removeListener(o):i.removeEventListener("change",o)}},preventTransition(){const r=document.createElement("style");return r.appendChild(document.createTextNode("*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}")),document.head.appendChild(r),()=>{window.getComputedStyle(document.body),requestAnimationFrame(()=>{requestAnimationFrame(()=>{document.head.removeChild(r)})})}}};return n}var kG="chakra-ui-color-mode";function SN(t){return{ssr:!1,type:"localStorage",get(e){if(!(globalThis!=null&&globalThis.document))return e;let n;try{n=localStorage.getItem(t)||e}catch{}return n||e},set(e){try{localStorage.setItem(t,e)}catch{}}}}var wG=SN(kG),HP=()=>{};function DP(t,e){return t.type==="cookie"&&t.ssr?t.get(e):e}function kN(t){const{value:e,children:n,options:{useSystemColorMode:r,initialColorMode:i,disableTransitionOnChange:o}={},colorModeManager:s=wG}=t,a=i==="dark"?"dark":"light",[l,c]=S.exports.useState(()=>DP(s,a)),[u,d]=S.exports.useState(()=>DP(s)),{getSystemTheme:f,setClassName:h,setDataset:p,addListener:m}=S.exports.useMemo(()=>SG({preventTransition:o}),[o]),v=i==="system"&&!l?u:l,g=S.exports.useCallback(x=>{const k=x==="system"?f():x;c(k),h(k==="dark"),p(k),s.set(k)},[s,f,h,p]);Ep(()=>{i==="system"&&d(f())},[]),S.exports.useEffect(()=>{const x=s.get();if(x){g(x);return}if(i==="system"){g("system");return}g(a)},[s,a,i,g]);const b=S.exports.useCallback(()=>{g(v==="dark"?"light":"dark")},[v,g]);S.exports.useEffect(()=>{if(!!r)return m(g)},[r,m,g]);const y=S.exports.useMemo(()=>({colorMode:e!=null?e:v,toggleColorMode:e?HP:b,setColorMode:e?HP:g,forced:e!==void 0}),[v,b,g,e]);return N(Yx.Provider,{value:y,children:n})}kN.displayName="ColorModeProvider";var py={exports:{}};(function(t,e){var n=200,r="__lodash_hash_undefined__",i=800,o=16,s=9007199254740991,a="[object Arguments]",l="[object Array]",c="[object AsyncFunction]",u="[object Boolean]",d="[object Date]",f="[object Error]",h="[object Function]",p="[object GeneratorFunction]",m="[object Map]",v="[object Number]",g="[object Null]",b="[object Object]",y="[object Proxy]",x="[object RegExp]",k="[object Set]",P="[object String]",O="[object Undefined]",z="[object WeakMap]",I="[object ArrayBuffer]",E="[object DataView]",X="[object Float32Array]",Y="[object Float64Array]",Q="[object Int8Array]",ae="[object Int16Array]",oe="[object Int32Array]",D="[object Uint8Array]",ee="[object Uint8ClampedArray]",L="[object Uint16Array]",H="[object Uint32Array]",q=/[\\^$.*+?()[\]{}|]/g,le=/^\[object .+?Constructor\]$/,ue=/^(?:0|[1-9]\d*)$/,re={};re[X]=re[Y]=re[Q]=re[ae]=re[oe]=re[D]=re[ee]=re[L]=re[H]=!0,re[a]=re[l]=re[I]=re[u]=re[E]=re[d]=re[f]=re[h]=re[m]=re[v]=re[b]=re[x]=re[k]=re[P]=re[z]=!1;var Te=typeof fi=="object"&&fi&&fi.Object===Object&&fi,Ve=typeof self=="object"&&self&&self.Object===Object&&self,He=Te||Ve||Function("return this")(),Ye=e&&!e.nodeType&&e,rt=Ye&&!0&&t&&!t.nodeType&&t,Xn=rt&&rt.exports===Ye,wr=Xn&&Te.process,Mi=function(){try{var w=rt&&rt.require&&rt.require("util").types;return w||wr&&wr.binding&&wr.binding("util")}catch{}}(),Ke=Mi&&Mi.isTypedArray;function Pr(w,C,M){switch(M.length){case 0:return w.call(C);case 1:return w.call(C,M[0]);case 2:return w.call(C,M[0],M[1]);case 3:return w.call(C,M[0],M[1],M[2])}return w.apply(C,M)}function _s(w,C){for(var M=-1,j=Array(w);++M<w;)j[M]=C(M);return j}function Dl(w){return function(C){return w(C)}}function wd(w,C){return w==null?void 0:w[C]}function Pd(w,C){return function(M){return w(C(M))}}var yg=Array.prototype,xg=Function.prototype,Wn=Object.prototype,Ai=He["__core-js_shared__"],Wo=xg.toString,Rn=Wn.hasOwnProperty,$s=function(){var w=/[^.]+$/.exec(Ai&&Ai.keys&&Ai.keys.IE_PROTO||"");return w?"Symbol(src)_1."+w:""}(),Gl=Wn.toString,Od=Wo.call(Object),Cd=RegExp("^"+Wo.call(Rn).replace(q,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Ro=Xn?He.Buffer:void 0,d2=He.Symbol,f2=He.Uint8Array,h2=Ro?Ro.allocUnsafe:void 0,p2=Pd(Object.getPrototypeOf,Object),m2=Object.create,CL=Wn.propertyIsEnumerable,TL=yg.splice,Fo=d2?d2.toStringTag:void 0,Td=function(){try{var w=wg(Object,"defineProperty");return w({},"",{}),w}catch{}}(),zL=Ro?Ro.isBuffer:void 0,g2=Math.max,VL=Date.now,b2=wg(He,"Map"),jl=wg(Object,"create"),EL=function(){function w(){}return function(C){if(!Do(C))return{};if(m2)return m2(C);w.prototype=C;var M=new w;return w.prototype=void 0,M}}();function Ho(w){var C=-1,M=w==null?0:w.length;for(this.clear();++C<M;){var j=w[C];this.set(j[0],j[1])}}function NL(){this.__data__=jl?jl(null):{},this.size=0}function IL(w){var C=this.has(w)&&delete this.__data__[w];return this.size-=C?1:0,C}function ML(w){var C=this.__data__;if(jl){var M=C[w];return M===r?void 0:M}return Rn.call(C,w)?C[w]:void 0}function AL(w){var C=this.__data__;return jl?C[w]!==void 0:Rn.call(C,w)}function LL(w,C){var M=this.__data__;return this.size+=this.has(w)?0:1,M[w]=jl&&C===void 0?r:C,this}Ho.prototype.clear=NL,Ho.prototype.delete=IL,Ho.prototype.get=ML,Ho.prototype.has=AL,Ho.prototype.set=LL;function ii(w){var C=-1,M=w==null?0:w.length;for(this.clear();++C<M;){var j=w[C];this.set(j[0],j[1])}}function ZL(){this.__data__=[],this.size=0}function XL(w){var C=this.__data__,M=zd(C,w);if(M<0)return!1;var j=C.length-1;return M==j?C.pop():TL.call(C,M,1),--this.size,!0}function WL(w){var C=this.__data__,M=zd(C,w);return M<0?void 0:C[M][1]}function RL(w){return zd(this.__data__,w)>-1}function FL(w,C){var M=this.__data__,j=zd(M,w);return j<0?(++this.size,M.push([w,C])):M[j][1]=C,this}ii.prototype.clear=ZL,ii.prototype.delete=XL,ii.prototype.get=WL,ii.prototype.has=RL,ii.prototype.set=FL;function ea(w){var C=-1,M=w==null?0:w.length;for(this.clear();++C<M;){var j=w[C];this.set(j[0],j[1])}}function HL(){this.size=0,this.__data__={hash:new Ho,map:new(b2||ii),string:new Ho}}function DL(w){var C=Ed(this,w).delete(w);return this.size-=C?1:0,C}function GL(w){return Ed(this,w).get(w)}function jL(w){return Ed(this,w).has(w)}function BL(w,C){var M=Ed(this,w),j=M.size;return M.set(w,C),this.size+=M.size==j?0:1,this}ea.prototype.clear=HL,ea.prototype.delete=DL,ea.prototype.get=GL,ea.prototype.has=jL,ea.prototype.set=BL;function ta(w){var C=this.__data__=new ii(w);this.size=C.size}function YL(){this.__data__=new ii,this.size=0}function KL(w){var C=this.__data__,M=C.delete(w);return this.size=C.size,M}function UL(w){return this.__data__.get(w)}function qL(w){return this.__data__.has(w)}function JL(w,C){var M=this.__data__;if(M instanceof ii){var j=M.__data__;if(!b2||j.length<n-1)return j.push([w,C]),this.size=++M.size,this;M=this.__data__=new ea(j)}return M.set(w,C),this.size=M.size,this}ta.prototype.clear=YL,ta.prototype.delete=KL,ta.prototype.get=UL,ta.prototype.has=qL,ta.prototype.set=JL;function QL(w,C){var M=Cg(w),j=!M&&Og(w),me=!M&&!j&&k2(w),Ee=!M&&!j&&!me&&P2(w),De=M||j||me||Ee,he=De?_s(w.length,String):[],Ge=he.length;for(var Fn in w)(C||Rn.call(w,Fn))&&!(De&&(Fn=="length"||me&&(Fn=="offset"||Fn=="parent")||Ee&&(Fn=="buffer"||Fn=="byteLength"||Fn=="byteOffset")||x2(Fn,Ge)))&&he.push(Fn);return he}function Sg(w,C,M){(M!==void 0&&!Nd(w[C],M)||M===void 0&&!(C in w))&&kg(w,C,M)}function _L(w,C,M){var j=w[C];(!(Rn.call(w,C)&&Nd(j,M))||M===void 0&&!(C in w))&&kg(w,C,M)}function zd(w,C){for(var M=w.length;M--;)if(Nd(w[M][0],C))return M;return-1}function kg(w,C,M){C=="__proto__"&&Td?Td(w,C,{configurable:!0,enumerable:!0,value:M,writable:!0}):w[C]=M}var $L=fZ();function Vd(w){return w==null?w===void 0?O:g:Fo&&Fo in Object(w)?hZ(w):yZ(w)}function v2(w){return Bl(w)&&Vd(w)==a}function eZ(w){if(!Do(w)||bZ(w))return!1;var C=zg(w)?Cd:le;return C.test(wZ(w))}function tZ(w){return Bl(w)&&w2(w.length)&&!!re[Vd(w)]}function nZ(w){if(!Do(w))return vZ(w);var C=S2(w),M=[];for(var j in w)j=="constructor"&&(C||!Rn.call(w,j))||M.push(j);return M}function y2(w,C,M,j,me){w!==C&&$L(C,function(Ee,De){if(me||(me=new ta),Do(Ee))rZ(w,C,De,M,y2,j,me);else{var he=j?j(Pg(w,De),Ee,De+"",w,C,me):void 0;he===void 0&&(he=Ee),Sg(w,De,he)}},O2)}function rZ(w,C,M,j,me,Ee,De){var he=Pg(w,M),Ge=Pg(C,M),Fn=De.get(Ge);if(Fn){Sg(w,M,Fn);return}var bn=Ee?Ee(he,Ge,M+"",w,C,De):void 0,Yl=bn===void 0;if(Yl){var Vg=Cg(Ge),Eg=!Vg&&k2(Ge),T2=!Vg&&!Eg&&P2(Ge);bn=Ge,Vg||Eg||T2?Cg(he)?bn=he:PZ(he)?bn=cZ(he):Eg?(Yl=!1,bn=sZ(Ge,!0)):T2?(Yl=!1,bn=lZ(Ge,!0)):bn=[]:OZ(Ge)||Og(Ge)?(bn=he,Og(he)?bn=CZ(he):(!Do(he)||zg(he))&&(bn=pZ(Ge))):Yl=!1}Yl&&(De.set(Ge,bn),me(bn,Ge,j,Ee,De),De.delete(Ge)),Sg(w,M,bn)}function iZ(w,C){return SZ(xZ(w,C,C2),w+"")}var oZ=Td?function(w,C){return Td(w,"toString",{configurable:!0,enumerable:!1,value:zZ(C),writable:!0})}:C2;function sZ(w,C){if(C)return w.slice();var M=w.length,j=h2?h2(M):new w.constructor(M);return w.copy(j),j}function aZ(w){var C=new w.constructor(w.byteLength);return new f2(C).set(new f2(w)),C}function lZ(w,C){var M=C?aZ(w.buffer):w.buffer;return new w.constructor(M,w.byteOffset,w.length)}function cZ(w,C){var M=-1,j=w.length;for(C||(C=Array(j));++M<j;)C[M]=w[M];return C}function uZ(w,C,M,j){var me=!M;M||(M={});for(var Ee=-1,De=C.length;++Ee<De;){var he=C[Ee],Ge=j?j(M[he],w[he],he,M,w):void 0;Ge===void 0&&(Ge=w[he]),me?kg(M,he,Ge):_L(M,he,Ge)}return M}function dZ(w){return iZ(function(C,M){var j=-1,me=M.length,Ee=me>1?M[me-1]:void 0,De=me>2?M[2]:void 0;for(Ee=w.length>3&&typeof Ee=="function"?(me--,Ee):void 0,De&&mZ(M[0],M[1],De)&&(Ee=me<3?void 0:Ee,me=1),C=Object(C);++j<me;){var he=M[j];he&&w(C,he,j,Ee)}return C})}function fZ(w){return function(C,M,j){for(var me=-1,Ee=Object(C),De=j(C),he=De.length;he--;){var Ge=De[w?he:++me];if(M(Ee[Ge],Ge,Ee)===!1)break}return C}}function Ed(w,C){var M=w.__data__;return gZ(C)?M[typeof C=="string"?"string":"hash"]:M.map}function wg(w,C){var M=wd(w,C);return eZ(M)?M:void 0}function hZ(w){var C=Rn.call(w,Fo),M=w[Fo];try{w[Fo]=void 0;var j=!0}catch{}var me=Gl.call(w);return j&&(C?w[Fo]=M:delete w[Fo]),me}function pZ(w){return typeof w.constructor=="function"&&!S2(w)?EL(p2(w)):{}}function x2(w,C){var M=typeof w;return C=C==null?s:C,!!C&&(M=="number"||M!="symbol"&&ue.test(w))&&w>-1&&w%1==0&&w<C}function mZ(w,C,M){if(!Do(M))return!1;var j=typeof C;return(j=="number"?Tg(M)&&x2(C,M.length):j=="string"&&C in M)?Nd(M[C],w):!1}function gZ(w){var C=typeof w;return C=="string"||C=="number"||C=="symbol"||C=="boolean"?w!=="__proto__":w===null}function bZ(w){return!!$s&&$s in w}function S2(w){var C=w&&w.constructor,M=typeof C=="function"&&C.prototype||Wn;return w===M}function vZ(w){var C=[];if(w!=null)for(var M in Object(w))C.push(M);return C}function yZ(w){return Gl.call(w)}function xZ(w,C,M){return C=g2(C===void 0?w.length-1:C,0),function(){for(var j=arguments,me=-1,Ee=g2(j.length-C,0),De=Array(Ee);++me<Ee;)De[me]=j[C+me];me=-1;for(var he=Array(C+1);++me<C;)he[me]=j[me];return he[C]=M(De),Pr(w,this,he)}}function Pg(w,C){if(!(C==="constructor"&&typeof w[C]=="function")&&C!="__proto__")return w[C]}var SZ=kZ(oZ);function kZ(w){var C=0,M=0;return function(){var j=VL(),me=o-(j-M);if(M=j,me>0){if(++C>=i)return arguments[0]}else C=0;return w.apply(void 0,arguments)}}function wZ(w){if(w!=null){try{return Wo.call(w)}catch{}try{return w+""}catch{}}return""}function Nd(w,C){return w===C||w!==w&&C!==C}var Og=v2(function(){return arguments}())?v2:function(w){return Bl(w)&&Rn.call(w,"callee")&&!CL.call(w,"callee")},Cg=Array.isArray;function Tg(w){return w!=null&&w2(w.length)&&!zg(w)}function PZ(w){return Bl(w)&&Tg(w)}var k2=zL||VZ;function zg(w){if(!Do(w))return!1;var C=Vd(w);return C==h||C==p||C==c||C==y}function w2(w){return typeof w=="number"&&w>-1&&w%1==0&&w<=s}function Do(w){var C=typeof w;return w!=null&&(C=="object"||C=="function")}function Bl(w){return w!=null&&typeof w=="object"}function OZ(w){if(!Bl(w)||Vd(w)!=b)return!1;var C=p2(w);if(C===null)return!0;var M=Rn.call(C,"constructor")&&C.constructor;return typeof M=="function"&&M instanceof M&&Wo.call(M)==Od}var P2=Ke?Dl(Ke):tZ;function CZ(w){return uZ(w,O2(w))}function O2(w){return Tg(w)?QL(w,!0):nZ(w)}var TZ=dZ(function(w,C,M,j){y2(w,C,M,j)});function zZ(w){return function(){return w}}function C2(w){return w}function VZ(){return!1}t.exports=TZ})(py,py.exports);const qn=py.exports;function br(t){const e=typeof t;return t!=null&&(e==="object"||e==="function")&&!Array.isArray(t)}function ds(t,...e){return PG(t)?t(...e):t}var PG=t=>typeof t=="function",OG=t=>/!(important)?$/.test(t),GP=t=>typeof t=="string"?t.replace(/!(important)?$/,"").trim():t,my=(t,e)=>n=>{const r=String(e),i=OG(r),o=GP(r),s=t?`${t}.${o}`:o;let a=br(n.__cssMap)&&s in n.__cssMap?n.__cssMap[s].varRef:e;return a=GP(a),i?`${a} !important`:a};function Xu(t){const{scale:e,transform:n,compose:r}=t;return(o,s)=>{var c;const a=my(e,o)(s);let l=(c=n==null?void 0:n(a,s))!=null?c:a;return r&&(l=r(l,s)),l}}var xf=(...t)=>e=>t.reduce((n,r)=>r(n),e);function sr(t,e){return n=>{const r={property:n,scale:t};return r.transform=Xu({scale:t,transform:e}),r}}var CG=({rtl:t,ltr:e})=>n=>n.direction==="rtl"?t:e;function TG(t){const{property:e,scale:n,transform:r}=t;return{scale:n,property:CG(e),transform:n?Xu({scale:n,compose:r}):r}}var wN=["rotate(var(--chakra-rotate, 0))","scaleX(var(--chakra-scale-x, 1))","scaleY(var(--chakra-scale-y, 1))","skewX(var(--chakra-skew-x, 0))","skewY(var(--chakra-skew-y, 0))"];function zG(){return["translateX(var(--chakra-translate-x, 0))","translateY(var(--chakra-translate-y, 0))",...wN].join(" ")}function VG(){return["translate3d(var(--chakra-translate-x, 0), var(--chakra-translate-y, 0), 0)",...wN].join(" ")}var EG={"--chakra-blur":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-brightness":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-contrast":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-grayscale":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-hue-rotate":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-invert":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-saturate":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-sepia":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-drop-shadow":"var(--chakra-empty,/*!*/ /*!*/)",filter:["var(--chakra-blur)","var(--chakra-brightness)","var(--chakra-contrast)","var(--chakra-grayscale)","var(--chakra-hue-rotate)","var(--chakra-invert)","var(--chakra-saturate)","var(--chakra-sepia)","var(--chakra-drop-shadow)"].join(" ")},NG={backdropFilter:["var(--chakra-backdrop-blur)","var(--chakra-backdrop-brightness)","var(--chakra-backdrop-contrast)","var(--chakra-backdrop-grayscale)","var(--chakra-backdrop-hue-rotate)","var(--chakra-backdrop-invert)","var(--chakra-backdrop-opacity)","var(--chakra-backdrop-saturate)","var(--chakra-backdrop-sepia)"].join(" "),"--chakra-backdrop-blur":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-brightness":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-contrast":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-grayscale":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-hue-rotate":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-invert":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-opacity":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-saturate":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-sepia":"var(--chakra-empty,/*!*/ /*!*/)"};function IG(t){return{"--chakra-ring-offset-shadow":"var(--chakra-ring-inset) 0 0 0 var(--chakra-ring-offset-width) var(--chakra-ring-offset-color)","--chakra-ring-shadow":"var(--chakra-ring-inset) 0 0 0 calc(var(--chakra-ring-width) + var(--chakra-ring-offset-width)) var(--chakra-ring-color)","--chakra-ring-width":t,boxShadow:["var(--chakra-ring-offset-shadow)","var(--chakra-ring-shadow)","var(--chakra-shadow, 0 0 #0000)"].join(", ")}}var MG={"row-reverse":{space:"--chakra-space-x-reverse",divide:"--chakra-divide-x-reverse"},"column-reverse":{space:"--chakra-space-y-reverse",divide:"--chakra-divide-y-reverse"}},PN="& > :not(style) ~ :not(style)",AG={[PN]:{marginInlineStart:"calc(var(--chakra-space-x) * calc(1 - var(--chakra-space-x-reverse)))",marginInlineEnd:"calc(var(--chakra-space-x) * var(--chakra-space-x-reverse))"}},LG={[PN]:{marginTop:"calc(var(--chakra-space-y) * calc(1 - var(--chakra-space-y-reverse)))",marginBottom:"calc(var(--chakra-space-y) * var(--chakra-space-y-reverse))"}},gy={"to-t":"to top","to-tr":"to top right","to-r":"to right","to-br":"to bottom right","to-b":"to bottom","to-bl":"to bottom left","to-l":"to left","to-tl":"to top left"},ZG=new Set(Object.values(gy)),ON=new Set(["none","-moz-initial","inherit","initial","revert","unset"]),XG=t=>t.trim();function WG(t,e){var d;var n;if(t==null||ON.has(t))return t;const r=/(?<type>^[a-z-A-Z]+)\((?<values>(.*))\)/g,{type:i,values:o}=(d=(n=r.exec(t))==null?void 0:n.groups)!=null?d:{};if(!i||!o)return t;const s=i.includes("-gradient")?i:`${i}-gradient`,[a,...l]=o.split(",").map(XG).filter(Boolean);if((l==null?void 0:l.length)===0)return t;const c=a in gy?gy[a]:a;l.unshift(c);const u=l.map(f=>{if(ZG.has(f))return f;const h=f.indexOf(" "),[p,m]=h!==-1?[f.substr(0,h),f.substr(h+1)]:[f],v=CN(m)?m:m&&m.split(" "),g=`colors.${p}`,b=g in e.__cssMap?e.__cssMap[g].varRef:p;return v?[b,...Array.isArray(v)?v:[v]].join(" "):b});return`${s}(${u.join(", ")})`}var CN=t=>typeof t=="string"&&t.includes("(")&&t.includes(")"),RG=(t,e)=>WG(t,e!=null?e:{});function FG(t){return/^var\(--.+\)$/.test(t)}var HG=t=>{const e=parseFloat(t.toString()),n=t.toString().replace(String(e),"");return{unitless:!n,value:e,unit:n}},Vr=t=>e=>`${t}(${e})`,ge={filter(t){return t!=="auto"?t:EG},backdropFilter(t){return t!=="auto"?t:NG},ring(t){return IG(ge.px(t))},bgClip(t){return t==="text"?{color:"transparent",backgroundClip:"text"}:{backgroundClip:t}},transform(t){return t==="auto"?zG():t==="auto-gpu"?VG():t},vh(t){return t==="$100vh"?"var(--chakra-vh)":t},px(t){if(t==null)return t;const{unitless:e}=HG(t);return e||typeof t=="number"?`${t}px`:t},fraction(t){return typeof t!="number"||t>1?t:`${t*100}%`},float(t,e){const n={left:"right",right:"left"};return e.direction==="rtl"?n[t]:t},degree(t){if(FG(t)||t==null)return t;const e=typeof t=="string"&&!t.endsWith("deg");return typeof t=="number"||e?`${t}deg`:t},gradient:RG,blur:Vr("blur"),opacity:Vr("opacity"),brightness:Vr("brightness"),contrast:Vr("contrast"),dropShadow:Vr("drop-shadow"),grayscale:Vr("grayscale"),hueRotate:Vr("hue-rotate"),invert:Vr("invert"),saturate:Vr("saturate"),sepia:Vr("sepia"),bgImage(t){return t==null||CN(t)||ON.has(t)?t:`url(${t})`},outline(t){const e=String(t)==="0"||String(t)==="none";return t!==null&&e?{outline:"2px solid transparent",outlineOffset:"2px"}:{outline:t}},flexDirection(t){var i;const{space:e,divide:n}=(i=MG[t])!=null?i:{},r={flexDirection:t};return e&&(r[e]=1),n&&(r[n]=1),r}},T={borderWidths:sr("borderWidths"),borderStyles:sr("borderStyles"),colors:sr("colors"),borders:sr("borders"),radii:sr("radii",ge.px),space:sr("space",xf(ge.vh,ge.px)),spaceT:sr("space",xf(ge.vh,ge.px)),degreeT(t){return{property:t,transform:ge.degree}},prop(t,e,n){return{property:t,scale:e,...e&&{transform:Xu({scale:e,transform:n})}}},propT(t,e){return{property:t,transform:e}},sizes:sr("sizes",xf(ge.vh,ge.px)),sizesT:sr("sizes",xf(ge.vh,ge.fraction)),shadows:sr("shadows"),logical:TG,blur:sr("blur",ge.blur)},fh={background:T.colors("background"),backgroundColor:T.colors("backgroundColor"),backgroundImage:T.propT("backgroundImage",ge.bgImage),backgroundSize:!0,backgroundPosition:!0,backgroundRepeat:!0,backgroundAttachment:!0,backgroundClip:{transform:ge.bgClip},bgSize:T.prop("backgroundSize"),bgPosition:T.prop("backgroundPosition"),bg:T.colors("background"),bgColor:T.colors("backgroundColor"),bgPos:T.prop("backgroundPosition"),bgRepeat:T.prop("backgroundRepeat"),bgAttachment:T.prop("backgroundAttachment"),bgGradient:T.propT("backgroundImage",ge.gradient),bgClip:{transform:ge.bgClip}};Object.assign(fh,{bgImage:fh.backgroundImage,bgImg:fh.backgroundImage});var ve={border:T.borders("border"),borderWidth:T.borderWidths("borderWidth"),borderStyle:T.borderStyles("borderStyle"),borderColor:T.colors("borderColor"),borderRadius:T.radii("borderRadius"),borderTop:T.borders("borderTop"),borderBlockStart:T.borders("borderBlockStart"),borderTopLeftRadius:T.radii("borderTopLeftRadius"),borderStartStartRadius:T.logical({scale:"radii",property:{ltr:"borderTopLeftRadius",rtl:"borderTopRightRadius"}}),borderEndStartRadius:T.logical({scale:"radii",property:{ltr:"borderBottomLeftRadius",rtl:"borderBottomRightRadius"}}),borderTopRightRadius:T.radii("borderTopRightRadius"),borderStartEndRadius:T.logical({scale:"radii",property:{ltr:"borderTopRightRadius",rtl:"borderTopLeftRadius"}}),borderEndEndRadius:T.logical({scale:"radii",property:{ltr:"borderBottomRightRadius",rtl:"borderBottomLeftRadius"}}),borderRight:T.borders("borderRight"),borderInlineEnd:T.borders("borderInlineEnd"),borderBottom:T.borders("borderBottom"),borderBlockEnd:T.borders("borderBlockEnd"),borderBottomLeftRadius:T.radii("borderBottomLeftRadius"),borderBottomRightRadius:T.radii("borderBottomRightRadius"),borderLeft:T.borders("borderLeft"),borderInlineStart:{property:"borderInlineStart",scale:"borders"},borderInlineStartRadius:T.logical({scale:"radii",property:{ltr:["borderTopLeftRadius","borderBottomLeftRadius"],rtl:["borderTopRightRadius","borderBottomRightRadius"]}}),borderInlineEndRadius:T.logical({scale:"radii",property:{ltr:["borderTopRightRadius","borderBottomRightRadius"],rtl:["borderTopLeftRadius","borderBottomLeftRadius"]}}),borderX:T.borders(["borderLeft","borderRight"]),borderInline:T.borders("borderInline"),borderY:T.borders(["borderTop","borderBottom"]),borderBlock:T.borders("borderBlock"),borderTopWidth:T.borderWidths("borderTopWidth"),borderBlockStartWidth:T.borderWidths("borderBlockStartWidth"),borderTopColor:T.colors("borderTopColor"),borderBlockStartColor:T.colors("borderBlockStartColor"),borderTopStyle:T.borderStyles("borderTopStyle"),borderBlockStartStyle:T.borderStyles("borderBlockStartStyle"),borderBottomWidth:T.borderWidths("borderBottomWidth"),borderBlockEndWidth:T.borderWidths("borderBlockEndWidth"),borderBottomColor:T.colors("borderBottomColor"),borderBlockEndColor:T.colors("borderBlockEndColor"),borderBottomStyle:T.borderStyles("borderBottomStyle"),borderBlockEndStyle:T.borderStyles("borderBlockEndStyle"),borderLeftWidth:T.borderWidths("borderLeftWidth"),borderInlineStartWidth:T.borderWidths("borderInlineStartWidth"),borderLeftColor:T.colors("borderLeftColor"),borderInlineStartColor:T.colors("borderInlineStartColor"),borderLeftStyle:T.borderStyles("borderLeftStyle"),borderInlineStartStyle:T.borderStyles("borderInlineStartStyle"),borderRightWidth:T.borderWidths("borderRightWidth"),borderInlineEndWidth:T.borderWidths("borderInlineEndWidth"),borderRightColor:T.colors("borderRightColor"),borderInlineEndColor:T.colors("borderInlineEndColor"),borderRightStyle:T.borderStyles("borderRightStyle"),borderInlineEndStyle:T.borderStyles("borderInlineEndStyle"),borderTopRadius:T.radii(["borderTopLeftRadius","borderTopRightRadius"]),borderBottomRadius:T.radii(["borderBottomLeftRadius","borderBottomRightRadius"]),borderLeftRadius:T.radii(["borderTopLeftRadius","borderBottomLeftRadius"]),borderRightRadius:T.radii(["borderTopRightRadius","borderBottomRightRadius"])};Object.assign(ve,{rounded:ve.borderRadius,roundedTop:ve.borderTopRadius,roundedTopLeft:ve.borderTopLeftRadius,roundedTopRight:ve.borderTopRightRadius,roundedTopStart:ve.borderStartStartRadius,roundedTopEnd:ve.borderStartEndRadius,roundedBottom:ve.borderBottomRadius,roundedBottomLeft:ve.borderBottomLeftRadius,roundedBottomRight:ve.borderBottomRightRadius,roundedBottomStart:ve.borderEndStartRadius,roundedBottomEnd:ve.borderEndEndRadius,roundedLeft:ve.borderLeftRadius,roundedRight:ve.borderRightRadius,roundedStart:ve.borderInlineStartRadius,roundedEnd:ve.borderInlineEndRadius,borderStart:ve.borderInlineStart,borderEnd:ve.borderInlineEnd,borderTopStartRadius:ve.borderStartStartRadius,borderTopEndRadius:ve.borderStartEndRadius,borderBottomStartRadius:ve.borderEndStartRadius,borderBottomEndRadius:ve.borderEndEndRadius,borderStartRadius:ve.borderInlineStartRadius,borderEndRadius:ve.borderInlineEndRadius,borderStartWidth:ve.borderInlineStartWidth,borderEndWidth:ve.borderInlineEndWidth,borderStartColor:ve.borderInlineStartColor,borderEndColor:ve.borderInlineEndColor,borderStartStyle:ve.borderInlineStartStyle,borderEndStyle:ve.borderInlineEndStyle});var DG={color:T.colors("color"),textColor:T.colors("color"),fill:T.colors("fill"),stroke:T.colors("stroke")},by={boxShadow:T.shadows("boxShadow"),mixBlendMode:!0,blendMode:T.prop("mixBlendMode"),backgroundBlendMode:!0,bgBlendMode:T.prop("backgroundBlendMode"),opacity:!0};Object.assign(by,{shadow:by.boxShadow});var GG={filter:{transform:ge.filter},blur:T.blur("--chakra-blur"),brightness:T.propT("--chakra-brightness",ge.brightness),contrast:T.propT("--chakra-contrast",ge.contrast),hueRotate:T.degreeT("--chakra-hue-rotate"),invert:T.propT("--chakra-invert",ge.invert),saturate:T.propT("--chakra-saturate",ge.saturate),dropShadow:T.propT("--chakra-drop-shadow",ge.dropShadow),backdropFilter:{transform:ge.backdropFilter},backdropBlur:T.blur("--chakra-backdrop-blur"),backdropBrightness:T.propT("--chakra-backdrop-brightness",ge.brightness),backdropContrast:T.propT("--chakra-backdrop-contrast",ge.contrast),backdropHueRotate:T.degreeT("--chakra-backdrop-hue-rotate"),backdropInvert:T.propT("--chakra-backdrop-invert",ge.invert),backdropSaturate:T.propT("--chakra-backdrop-saturate",ge.saturate)},Np={alignItems:!0,alignContent:!0,justifyItems:!0,justifyContent:!0,flexWrap:!0,flexDirection:{transform:ge.flexDirection},experimental_spaceX:{static:AG,transform:Xu({scale:"space",transform:t=>t!==null?{"--chakra-space-x":t}:null})},experimental_spaceY:{static:LG,transform:Xu({scale:"space",transform:t=>t!=null?{"--chakra-space-y":t}:null})},flex:!0,flexFlow:!0,flexGrow:!0,flexShrink:!0,flexBasis:T.sizes("flexBasis"),justifySelf:!0,alignSelf:!0,order:!0,placeItems:!0,placeContent:!0,placeSelf:!0,gap:T.space("gap"),rowGap:T.space("rowGap"),columnGap:T.space("columnGap")};Object.assign(Np,{flexDir:Np.flexDirection});var TN={gridGap:T.space("gridGap"),gridColumnGap:T.space("gridColumnGap"),gridRowGap:T.space("gridRowGap"),gridColumn:!0,gridRow:!0,gridAutoFlow:!0,gridAutoColumns:!0,gridColumnStart:!0,gridColumnEnd:!0,gridRowStart:!0,gridRowEnd:!0,gridAutoRows:!0,gridTemplate:!0,gridTemplateColumns:!0,gridTemplateRows:!0,gridTemplateAreas:!0,gridArea:!0},jG={appearance:!0,cursor:!0,resize:!0,userSelect:!0,pointerEvents:!0,outline:{transform:ge.outline},outlineOffset:!0,outlineColor:T.colors("outlineColor")},Hn={width:T.sizesT("width"),inlineSize:T.sizesT("inlineSize"),height:T.sizes("height"),blockSize:T.sizes("blockSize"),boxSize:T.sizes(["width","height"]),minWidth:T.sizes("minWidth"),minInlineSize:T.sizes("minInlineSize"),minHeight:T.sizes("minHeight"),minBlockSize:T.sizes("minBlockSize"),maxWidth:T.sizes("maxWidth"),maxInlineSize:T.sizes("maxInlineSize"),maxHeight:T.sizes("maxHeight"),maxBlockSize:T.sizes("maxBlockSize"),overflow:!0,overflowX:!0,overflowY:!0,overscrollBehavior:!0,overscrollBehaviorX:!0,overscrollBehaviorY:!0,display:!0,verticalAlign:!0,boxSizing:!0,boxDecorationBreak:!0,float:T.propT("float",ge.float),objectFit:!0,objectPosition:!0,visibility:!0,isolation:!0};Object.assign(Hn,{w:Hn.width,h:Hn.height,minW:Hn.minWidth,maxW:Hn.maxWidth,minH:Hn.minHeight,maxH:Hn.maxHeight,overscroll:Hn.overscrollBehavior,overscrollX:Hn.overscrollBehaviorX,overscrollY:Hn.overscrollBehaviorY});var BG={listStyleType:!0,listStylePosition:!0,listStylePos:T.prop("listStylePosition"),listStyleImage:!0,listStyleImg:T.prop("listStyleImage")};function YG(t,e,n,r){const i=typeof e=="string"?e.split("."):[e];for(r=0;r<i.length&&t;r+=1)t=t[i[r]];return t===void 0?n:t}var KG=t=>{const e=new WeakMap;return(r,i,o,s)=>{if(typeof r>"u")return t(r,i,o);e.has(r)||e.set(r,new Map);const a=e.get(r);if(a.has(i))return a.get(i);const l=t(r,i,o,s);return a.set(i,l),l}},UG=KG(YG),qG={border:"0px",clip:"rect(0, 0, 0, 0)",width:"1px",height:"1px",margin:"-1px",padding:"0px",overflow:"hidden",whiteSpace:"nowrap",position:"absolute"},JG={position:"static",width:"auto",height:"auto",clip:"auto",padding:"0",margin:"0",overflow:"visible",whiteSpace:"normal"},N0=(t,e,n)=>{const r={},i=UG(t,e,{});for(const o in i)o in n&&n[o]!=null||(r[o]=i[o]);return r},QG={srOnly:{transform(t){return t===!0?qG:t==="focusable"?JG:{}}},layerStyle:{processResult:!0,transform:(t,e,n)=>N0(e,`layerStyles.${t}`,n)},textStyle:{processResult:!0,transform:(t,e,n)=>N0(e,`textStyles.${t}`,n)},apply:{processResult:!0,transform:(t,e,n)=>N0(e,t,n)}},Gc={position:!0,pos:T.prop("position"),zIndex:T.prop("zIndex","zIndices"),inset:T.spaceT("inset"),insetX:T.spaceT(["left","right"]),insetInline:T.spaceT("insetInline"),insetY:T.spaceT(["top","bottom"]),insetBlock:T.spaceT("insetBlock"),top:T.spaceT("top"),insetBlockStart:T.spaceT("insetBlockStart"),bottom:T.spaceT("bottom"),insetBlockEnd:T.spaceT("insetBlockEnd"),left:T.spaceT("left"),insetInlineStart:T.logical({scale:"space",property:{ltr:"left",rtl:"right"}}),right:T.spaceT("right"),insetInlineEnd:T.logical({scale:"space",property:{ltr:"right",rtl:"left"}})};Object.assign(Gc,{insetStart:Gc.insetInlineStart,insetEnd:Gc.insetInlineEnd});var _G={ring:{transform:ge.ring},ringColor:T.colors("--chakra-ring-color"),ringOffset:T.prop("--chakra-ring-offset-width"),ringOffsetColor:T.colors("--chakra-ring-offset-color"),ringInset:T.prop("--chakra-ring-inset")},Ze={margin:T.spaceT("margin"),marginTop:T.spaceT("marginTop"),marginBlockStart:T.spaceT("marginBlockStart"),marginRight:T.spaceT("marginRight"),marginInlineEnd:T.spaceT("marginInlineEnd"),marginBottom:T.spaceT("marginBottom"),marginBlockEnd:T.spaceT("marginBlockEnd"),marginLeft:T.spaceT("marginLeft"),marginInlineStart:T.spaceT("marginInlineStart"),marginX:T.spaceT(["marginInlineStart","marginInlineEnd"]),marginInline:T.spaceT("marginInline"),marginY:T.spaceT(["marginTop","marginBottom"]),marginBlock:T.spaceT("marginBlock"),padding:T.space("padding"),paddingTop:T.space("paddingTop"),paddingBlockStart:T.space("paddingBlockStart"),paddingRight:T.space("paddingRight"),paddingBottom:T.space("paddingBottom"),paddingBlockEnd:T.space("paddingBlockEnd"),paddingLeft:T.space("paddingLeft"),paddingInlineStart:T.space("paddingInlineStart"),paddingInlineEnd:T.space("paddingInlineEnd"),paddingX:T.space(["paddingInlineStart","paddingInlineEnd"]),paddingInline:T.space("paddingInline"),paddingY:T.space(["paddingTop","paddingBottom"]),paddingBlock:T.space("paddingBlock")};Object.assign(Ze,{m:Ze.margin,mt:Ze.marginTop,mr:Ze.marginRight,me:Ze.marginInlineEnd,marginEnd:Ze.marginInlineEnd,mb:Ze.marginBottom,ml:Ze.marginLeft,ms:Ze.marginInlineStart,marginStart:Ze.marginInlineStart,mx:Ze.marginX,my:Ze.marginY,p:Ze.padding,pt:Ze.paddingTop,py:Ze.paddingY,px:Ze.paddingX,pb:Ze.paddingBottom,pl:Ze.paddingLeft,ps:Ze.paddingInlineStart,paddingStart:Ze.paddingInlineStart,pr:Ze.paddingRight,pe:Ze.paddingInlineEnd,paddingEnd:Ze.paddingInlineEnd});var $G={textDecorationColor:T.colors("textDecorationColor"),textDecoration:!0,textDecor:{property:"textDecoration"},textDecorationLine:!0,textDecorationStyle:!0,textDecorationThickness:!0,textUnderlineOffset:!0,textShadow:T.shadows("textShadow")},e4={clipPath:!0,transform:T.propT("transform",ge.transform),transformOrigin:!0,translateX:T.spaceT("--chakra-translate-x"),translateY:T.spaceT("--chakra-translate-y"),skewX:T.degreeT("--chakra-skew-x"),skewY:T.degreeT("--chakra-skew-y"),scaleX:T.prop("--chakra-scale-x"),scaleY:T.prop("--chakra-scale-y"),scale:T.prop(["--chakra-scale-x","--chakra-scale-y"]),rotate:T.degreeT("--chakra-rotate")},t4={transition:!0,transitionDelay:!0,animation:!0,willChange:!0,transitionDuration:T.prop("transitionDuration","transition.duration"),transitionProperty:T.prop("transitionProperty","transition.property"),transitionTimingFunction:T.prop("transitionTimingFunction","transition.easing")},n4={fontFamily:T.prop("fontFamily","fonts"),fontSize:T.prop("fontSize","fontSizes",ge.px),fontWeight:T.prop("fontWeight","fontWeights"),lineHeight:T.prop("lineHeight","lineHeights"),letterSpacing:T.prop("letterSpacing","letterSpacings"),textAlign:!0,fontStyle:!0,wordBreak:!0,overflowWrap:!0,textOverflow:!0,textTransform:!0,whiteSpace:!0,noOfLines:{static:{overflow:"hidden",textOverflow:"ellipsis",display:"-webkit-box",WebkitBoxOrient:"vertical",WebkitLineClamp:"var(--chakra-line-clamp)"},property:"--chakra-line-clamp"}},r4={scrollBehavior:!0,scrollSnapAlign:!0,scrollSnapStop:!0,scrollSnapType:!0,scrollMargin:T.spaceT("scrollMargin"),scrollMarginTop:T.spaceT("scrollMarginTop"),scrollMarginBottom:T.spaceT("scrollMarginBottom"),scrollMarginLeft:T.spaceT("scrollMarginLeft"),scrollMarginRight:T.spaceT("scrollMarginRight"),scrollMarginX:T.spaceT(["scrollMarginLeft","scrollMarginRight"]),scrollMarginY:T.spaceT(["scrollMarginTop","scrollMarginBottom"]),scrollPadding:T.spaceT("scrollPadding"),scrollPaddingTop:T.spaceT("scrollPaddingTop"),scrollPaddingBottom:T.spaceT("scrollPaddingBottom"),scrollPaddingLeft:T.spaceT("scrollPaddingLeft"),scrollPaddingRight:T.spaceT("scrollPaddingRight"),scrollPaddingX:T.spaceT(["scrollPaddingLeft","scrollPaddingRight"]),scrollPaddingY:T.spaceT(["scrollPaddingTop","scrollPaddingBottom"])};function zN(t){return br(t)&&t.reference?t.reference:String(t)}var Rm=(t,...e)=>e.map(zN).join(` ${t} `).replace(/calc/g,""),jP=(...t)=>`calc(${Rm("+",...t)})`,BP=(...t)=>`calc(${Rm("-",...t)})`,vy=(...t)=>`calc(${Rm("*",...t)})`,YP=(...t)=>`calc(${Rm("/",...t)})`,KP=t=>{const e=zN(t);return e!=null&&!Number.isNaN(parseFloat(e))?String(e).startsWith("-")?String(e).slice(1):`-${e}`:vy(e,-1)},ns=Object.assign(t=>({add:(...e)=>ns(jP(t,...e)),subtract:(...e)=>ns(BP(t,...e)),multiply:(...e)=>ns(vy(t,...e)),divide:(...e)=>ns(YP(t,...e)),negate:()=>ns(KP(t)),toString:()=>t.toString()}),{add:jP,subtract:BP,multiply:vy,divide:YP,negate:KP});function i4(t,e="-"){return t.replace(/\s+/g,e)}function o4(t){const e=i4(t.toString());return a4(s4(e))}function s4(t){return t.includes("\\.")?t:!Number.isInteger(parseFloat(t.toString()))?t.replace(".","\\."):t}function a4(t){return t.replace(/[!-,/:-@[-^`{-~]/g,"\\$&")}function l4(t,e=""){return[e,t].filter(Boolean).join("-")}function c4(t,e){return`var(${t}${e?`, ${e}`:""})`}function u4(t,e=""){return o4(`--${l4(t,e)}`)}function ze(t,e,n){const r=u4(t,n);return{variable:r,reference:c4(r,e)}}function d4(t){const e=t==null?0:t.length;return e?t[e-1]:void 0}function f4(t){const e=parseFloat(t.toString()),n=t.toString().replace(String(e),"");return{unitless:!n,value:e,unit:n}}function yy(t){if(t==null)return t;const{unitless:e}=f4(t);return e||typeof t=="number"?`${t}px`:t}var VN=(t,e)=>parseInt(t[1],10)>parseInt(e[1],10)?1:-1,Ux=t=>Object.fromEntries(Object.entries(t).sort(VN));function UP(t){const e=Ux(t);return Object.assign(Object.values(e),e)}function h4(t){const e=Object.keys(Ux(t));return new Set(e)}function qP(t){var n;if(!t)return t;t=(n=yy(t))!=null?n:t;const e=t.endsWith("px")?-1:-.0625;return typeof t=="number"?`${t+e}`:t.replace(/(\d+\.?\d*)/u,r=>`${parseFloat(r)+e}`)}function Pc(t,e){const n=["@media screen"];return t&&n.push("and",`(min-width: ${yy(t)})`),e&&n.push("and",`(max-width: ${yy(e)})`),n.join(" ")}function p4(t){var o;if(!t)return null;t.base=(o=t.base)!=null?o:"0px";const e=UP(t),n=Object.entries(t).sort(VN).map(([s,a],l,c)=>{var d;let[,u]=(d=c[l+1])!=null?d:[];return u=parseFloat(u)>0?qP(u):void 0,{_minW:qP(a),breakpoint:s,minW:a,maxW:u,maxWQuery:Pc(null,u),minWQuery:Pc(a),minMaxQuery:Pc(a,u)}}),r=h4(t),i=Array.from(r.values());return{keys:r,normalized:e,isResponsive(s){const a=Object.keys(s);return a.length>0&&a.every(l=>r.has(l))},asObject:Ux(t),asArray:UP(t),details:n,media:[null,...e.map(s=>Pc(s)).slice(1)],toArrayValue(s){if(!br(s))throw new Error("toArrayValue: value must be an object");const a=i.map(l=>{var c;return(c=s[l])!=null?c:null});for(;d4(a)===null;)a.pop();return a},toObjectValue(s){if(!Array.isArray(s))throw new Error("toObjectValue: value must be an array");return s.reduce((a,l,c)=>{const u=i[c];return u!=null&&l!=null&&(a[u]=l),a},{})}}}var wt={hover:(t,e)=>`${t}:hover ${e}, ${t}[data-hover] ${e}`,focus:(t,e)=>`${t}:focus ${e}, ${t}[data-focus] ${e}`,focusVisible:(t,e)=>`${t}:focus-visible ${e}`,focusWithin:(t,e)=>`${t}:focus-within ${e}`,active:(t,e)=>`${t}:active ${e}, ${t}[data-active] ${e}`,disabled:(t,e)=>`${t}:disabled ${e}, ${t}[data-disabled] ${e}`,invalid:(t,e)=>`${t}:invalid ${e}, ${t}[data-invalid] ${e}`,checked:(t,e)=>`${t}:checked ${e}, ${t}[data-checked] ${e}`,indeterminate:(t,e)=>`${t}:indeterminate ${e}, ${t}[aria-checked=mixed] ${e}, ${t}[data-indeterminate] ${e}`,readOnly:(t,e)=>`${t}:read-only ${e}, ${t}[readonly] ${e}, ${t}[data-read-only] ${e}`,expanded:(t,e)=>`${t}:read-only ${e}, ${t}[aria-expanded=true] ${e}, ${t}[data-expanded] ${e}`,placeholderShown:(t,e)=>`${t}:placeholder-shown ${e}`},Zi=t=>EN(e=>t(e,"&"),"[role=group]","[data-group]",".group"),oi=t=>EN(e=>t(e,"~ &"),"[data-peer]",".peer"),EN=(t,...e)=>e.map(t).join(", "),Fm={_hover:"&:hover, &[data-hover]",_active:"&:active, &[data-active]",_focus:"&:focus, &[data-focus]",_highlighted:"&[data-highlighted]",_focusWithin:"&:focus-within",_focusVisible:"&:focus-visible, &[data-focus-visible]",_disabled:"&:disabled, &[disabled], &[aria-disabled=true], &[data-disabled]",_readOnly:"&[aria-readonly=true], &[readonly], &[data-readonly]",_before:"&::before",_after:"&::after",_empty:"&:empty",_expanded:"&[aria-expanded=true], &[data-expanded]",_checked:"&[aria-checked=true], &[data-checked]",_grabbed:"&[aria-grabbed=true], &[data-grabbed]",_pressed:"&[aria-pressed=true], &[data-pressed]",_invalid:"&[aria-invalid=true], &[data-invalid]",_valid:"&[data-valid], &[data-state=valid]",_loading:"&[data-loading], &[aria-busy=true]",_selected:"&[aria-selected=true], &[data-selected]",_hidden:"&[hidden], &[data-hidden]",_autofill:"&:-webkit-autofill",_even:"&:nth-of-type(even)",_odd:"&:nth-of-type(odd)",_first:"&:first-of-type",_last:"&:last-of-type",_notFirst:"&:not(:first-of-type)",_notLast:"&:not(:last-of-type)",_visited:"&:visited",_activeLink:"&[aria-current=page]",_activeStep:"&[aria-current=step]",_indeterminate:"&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]",_groupHover:Zi(wt.hover),_peerHover:oi(wt.hover),_groupFocus:Zi(wt.focus),_peerFocus:oi(wt.focus),_groupFocusVisible:Zi(wt.focusVisible),_peerFocusVisible:oi(wt.focusVisible),_groupActive:Zi(wt.active),_peerActive:oi(wt.active),_groupDisabled:Zi(wt.disabled),_peerDisabled:oi(wt.disabled),_groupInvalid:Zi(wt.invalid),_peerInvalid:oi(wt.invalid),_groupChecked:Zi(wt.checked),_peerChecked:oi(wt.checked),_groupFocusWithin:Zi(wt.focusWithin),_peerFocusWithin:oi(wt.focusWithin),_peerPlaceholderShown:oi(wt.placeholderShown),_placeholder:"&::placeholder",_placeholderShown:"&:placeholder-shown",_fullScreen:"&:fullscreen",_selection:"&::selection",_rtl:"[dir=rtl] &, &[dir=rtl]",_ltr:"[dir=ltr] &, &[dir=ltr]",_mediaDark:"@media (prefers-color-scheme: dark)",_mediaReduceMotion:"@media (prefers-reduced-motion: reduce)",_dark:".chakra-ui-dark &:not([data-theme]),[data-theme=dark] &:not([data-theme]),&[data-theme=dark]",_light:".chakra-ui-light &:not([data-theme]),[data-theme=light] &:not([data-theme]),&[data-theme=light]"},m4=Object.keys(Fm);function JP(t,e){return ze(String(t).replace(/\./g,"-"),void 0,e)}function g4(t,e){let n={};const r={};for(const[i,o]of Object.entries(t)){const{isSemantic:s,value:a}=o,{variable:l,reference:c}=JP(i,e==null?void 0:e.cssVarPrefix);if(!s){if(i.startsWith("space")){const f=i.split("."),[h,...p]=f,m=`${h}.-${p.join(".")}`,v=ns.negate(a),g=ns.negate(c);r[m]={value:v,var:l,varRef:g}}n[l]=a,r[i]={value:a,var:l,varRef:c};continue}const u=f=>{const p=[String(i).split(".")[0],f].join(".");if(!t[p])return f;const{reference:v}=JP(p,e==null?void 0:e.cssVarPrefix);return v},d=br(a)?a:{default:a};n=qn(n,Object.entries(d).reduce((f,[h,p])=>{var b;var m;const v=u(p);if(h==="default")return f[l]=v,f;const g=(b=(m=Fm)==null?void 0:m[h])!=null?b:h;return f[g]={[l]:v},f},{})),r[i]={value:c,var:l,varRef:c}}return{cssVars:n,cssMap:r}}function b4(t,e=[]){const n=Object.assign({},t);for(const r of e)r in n&&delete n[r];return n}function v4(t,e){const n={};for(const r of e)r in t&&(n[r]=t[r]);return n}var y4=["colors","borders","borderWidths","borderStyles","fonts","fontSizes","fontWeights","letterSpacings","lineHeights","radii","space","shadows","sizes","zIndices","transition","blur"];function x4(t){return v4(t,y4)}function S4(t){return t.semanticTokens}function k4(t){const{__cssMap:e,__cssVars:n,__breakpoints:r,...i}=t;return i}function w4({tokens:t,semanticTokens:e}){var i,o;const n=Object.entries((i=xy(t))!=null?i:{}).map(([s,a])=>[s,{isSemantic:!1,value:a}]),r=Object.entries((o=xy(e,1))!=null?o:{}).map(([s,a])=>[s,{isSemantic:!0,value:a}]);return Object.fromEntries([...n,...r])}function xy(t,e=1/0){return!br(t)&&!Array.isArray(t)||!e?t:Object.entries(t).reduce((n,[r,i])=>(br(i)||Array.isArray(i)?Object.entries(xy(i,e-1)).forEach(([o,s])=>{n[`${r}.${o}`]=s}):n[r]=i,n),{})}function P4(t){var e;const n=k4(t),r=x4(n),i=S4(n),o=w4({tokens:r,semanticTokens:i}),s=(e=n.config)==null?void 0:e.cssVarPrefix,{cssMap:a,cssVars:l}=g4(o,{cssVarPrefix:s});return Object.assign(n,{__cssVars:{...{"--chakra-ring-inset":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-ring-offset-width":"0px","--chakra-ring-offset-color":"#fff","--chakra-ring-color":"rgba(66, 153, 225, 0.6)","--chakra-ring-offset-shadow":"0 0 #0000","--chakra-ring-shadow":"0 0 #0000","--chakra-space-x-reverse":"0","--chakra-space-y-reverse":"0"},...l},__cssMap:a,__breakpoints:p4(n.breakpoints)}),n}var qx=qn({},fh,ve,DG,Np,Hn,GG,_G,jG,TN,QG,Gc,by,Ze,r4,n4,$G,e4,BG,t4);Object.assign({},Ze,Hn,Np,TN,Gc);var O4=[...Object.keys(qx),...m4],C4={...qx,...Fm},T4=t=>t in C4,z4=t=>e=>{if(!e.__breakpoints)return t;const{isResponsive:n,toArrayValue:r,media:i}=e.__breakpoints,o={};for(const s in t){let a=ds(t[s],e);if(a==null)continue;if(a=br(a)&&n(a)?r(a):a,!Array.isArray(a)){o[s]=a;continue}const l=a.slice(0,i.length).length;for(let c=0;c<l;c+=1){const u=i==null?void 0:i[c];if(!u){o[s]=a[c];continue}o[u]=o[u]||{},a[c]!=null&&(o[u][s]=a[c])}}return o};function V4(t){const e=[];let n="",r=!1;for(let i=0;i<t.length;i++){const o=t[i];o==="("?(r=!0,n+=o):o===")"?(r=!1,n+=o):o===","&&!r?(e.push(n),n=""):n+=o}return n=n.trim(),n&&e.push(n),e}function E4(t){return/^var\(--.+\)$/.test(t)}var N4=(t,e)=>t.startsWith("--")&&typeof e=="string"&&!E4(e),I4=(t,e)=>{var s,a;if(e==null)return e;const n=l=>{var c,u;return(u=(c=t.__cssMap)==null?void 0:c[l])==null?void 0:u.varRef},r=l=>{var c;return(c=n(l))!=null?c:l},[i,o]=V4(e);return e=(a=(s=n(i))!=null?s:r(o))!=null?a:r(e),e};function M4(t){const{configs:e={},pseudos:n={},theme:r}=t,i=(o,s=!1)=>{var d,f;var a;const l=ds(o,r),c=z4(l)(r);let u={};for(let h in c){const p=c[h];let m=ds(p,r);h in n&&(h=n[h]),N4(h,m)&&(m=I4(r,m));let v=e[h];if(v===!0&&(v={property:h}),br(m)){u[h]=(d=u[h])!=null?d:{},u[h]=qn({},u[h],i(m,!0));continue}let g=(f=(a=v==null?void 0:v.transform)==null?void 0:a.call(v,m,r,l))!=null?f:m;g=v!=null&&v.processResult?i(g,!0):g;const b=ds(v==null?void 0:v.property,r);if(!s&&(v==null?void 0:v.static)){const y=ds(v.static,r);u=qn({},u,y)}if(b&&Array.isArray(b)){for(const y of b)u[y]=g;continue}if(b){b==="&"&&br(g)?u=qn({},u,g):u[b]=g;continue}if(br(g)){u=qn({},u,g);continue}u[h]=g}return u};return i}var NN=t=>e=>M4({theme:e,pseudos:Fm,configs:qx})(t);function Fe(t){return{definePartsStyle(e){return e},defineMultiStyleConfig(e){return{parts:t,...e}}}}function A4(t,e){if(Array.isArray(t))return t;if(br(t))return e(t);if(t!=null)return[t]}function L4(t,e){for(let n=e+1;n<t.length;n++)if(t[n]!=null)return n;return-1}function Z4(t){const e=t.__breakpoints;return function(r,i,o,s){var a,l;if(!e)return;const c={},u=A4(o,e.toArrayValue);if(!u)return c;const d=u.length,f=d===1,h=!!r.parts;for(let p=0;p<d;p++){const m=e.details[p],v=e.details[L4(u,p)],g=Pc(m.minW,v==null?void 0:v._minW),b=ds((a=r[i])==null?void 0:a[u[p]],s);if(!!b){if(h){(l=r.parts)==null||l.forEach(y=>{qn(c,{[y]:f?b[y]:{[g]:b[y]}})});continue}if(!h){f?qn(c,b):c[g]=b;continue}c[g]=b}}return c}}function X4(t){return e=>{var s;const{variant:n,size:r,theme:i}=e,o=Z4(i);return qn({},ds((s=t.baseStyle)!=null?s:{},e),o(t,"sizes",r,e),o(t,"variants",n,e))}}function W4(t,e,n){var o;var r,i;return(o=(i=(r=t.__cssMap)==null?void 0:r[`${e}.${n}`])==null?void 0:i.varRef)!=null?o:n}function ut(t){return b4(t,["styleConfig","size","variant","colorScheme"])}function R4(t){if(t.sheet)return t.sheet;for(var e=0;e<document.styleSheets.length;e++)if(document.styleSheets[e].ownerNode===t)return document.styleSheets[e]}function F4(t){var e=document.createElement("style");return e.setAttribute("data-emotion",t.key),t.nonce!==void 0&&e.setAttribute("nonce",t.nonce),e.appendChild(document.createTextNode("")),e.setAttribute("data-s",""),e}var H4=function(){function t(n){var r=this;this._insertTag=function(i){var o;r.tags.length===0?r.insertionPoint?o=r.insertionPoint.nextSibling:r.prepend?o=r.container.firstChild:o=r.before:o=r.tags[r.tags.length-1].nextSibling,r.container.insertBefore(i,o),r.tags.push(i)},this.isSpeedy=n.speedy===void 0?!0:n.speedy,this.tags=[],this.ctr=0,this.nonce=n.nonce,this.key=n.key,this.container=n.container,this.prepend=n.prepend,this.insertionPoint=n.insertionPoint,this.before=null}var e=t.prototype;return e.hydrate=function(r){r.forEach(this._insertTag)},e.insert=function(r){this.ctr%(this.isSpeedy?65e3:1)===0&&this._insertTag(F4(this));var i=this.tags[this.tags.length-1];if(this.isSpeedy){var o=R4(i);try{o.insertRule(r,o.cssRules.length)}catch{}}else i.appendChild(document.createTextNode(r));this.ctr++},e.flush=function(){this.tags.forEach(function(r){return r.parentNode&&r.parentNode.removeChild(r)}),this.tags=[],this.ctr=0},t}(),Wt="-ms-",Ip="-moz-",ye="-webkit-",IN="comm",Jx="rule",Qx="decl",D4="@import",MN="@keyframes",G4=Math.abs,Hm=String.fromCharCode,j4=Object.assign;function B4(t,e){return Ct(t,0)^45?(((e<<2^Ct(t,0))<<2^Ct(t,1))<<2^Ct(t,2))<<2^Ct(t,3):0}function AN(t){return t.trim()}function Y4(t,e){return(t=e.exec(t))?t[0]:t}function ke(t,e,n){return t.replace(e,n)}function Sy(t,e){return t.indexOf(e)}function Ct(t,e){return t.charCodeAt(e)|0}function Wu(t,e,n){return t.slice(e,n)}function Ar(t){return t.length}function _x(t){return t.length}function Sf(t,e){return e.push(t),t}function K4(t,e){return t.map(e).join("")}var Dm=1,xl=1,LN=0,mn=0,at=0,Xl="";function Gm(t,e,n,r,i,o,s){return{value:t,root:e,parent:n,type:r,props:i,children:o,line:Dm,column:xl,length:s,return:""}}function sc(t,e){return j4(Gm("",null,null,"",null,null,0),t,{length:-t.length},e)}function U4(){return at}function q4(){return at=mn>0?Ct(Xl,--mn):0,xl--,at===10&&(xl=1,Dm--),at}function Vn(){return at=mn<LN?Ct(Xl,mn++):0,xl++,at===10&&(xl=1,Dm++),at}function Kr(){return Ct(Xl,mn)}function hh(){return mn}function hd(t,e){return Wu(Xl,t,e)}function Ru(t){switch(t){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function ZN(t){return Dm=xl=1,LN=Ar(Xl=t),mn=0,[]}function XN(t){return Xl="",t}function ph(t){return AN(hd(mn-1,ky(t===91?t+2:t===40?t+1:t)))}function J4(t){for(;(at=Kr())&&at<33;)Vn();return Ru(t)>2||Ru(at)>3?"":" "}function Q4(t,e){for(;--e&&Vn()&&!(at<48||at>102||at>57&&at<65||at>70&&at<97););return hd(t,hh()+(e<6&&Kr()==32&&Vn()==32))}function ky(t){for(;Vn();)switch(at){case t:return mn;case 34:case 39:t!==34&&t!==39&&ky(at);break;case 40:t===41&&ky(t);break;case 92:Vn();break}return mn}function _4(t,e){for(;Vn()&&t+at!==47+10;)if(t+at===42+42&&Kr()===47)break;return"/*"+hd(e,mn-1)+"*"+Hm(t===47?t:Vn())}function $4(t){for(;!Ru(Kr());)Vn();return hd(t,mn)}function ej(t){return XN(mh("",null,null,null,[""],t=ZN(t),0,[0],t))}function mh(t,e,n,r,i,o,s,a,l){for(var c=0,u=0,d=s,f=0,h=0,p=0,m=1,v=1,g=1,b=0,y="",x=i,k=o,P=r,O=y;v;)switch(p=b,b=Vn()){case 40:if(p!=108&&Ct(O,d-1)==58){Sy(O+=ke(ph(b),"&","&\f"),"&\f")!=-1&&(g=-1);break}case 34:case 39:case 91:O+=ph(b);break;case 9:case 10:case 13:case 32:O+=J4(p);break;case 92:O+=Q4(hh()-1,7);continue;case 47:switch(Kr()){case 42:case 47:Sf(tj(_4(Vn(),hh()),e,n),l);break;default:O+="/"}break;case 123*m:a[c++]=Ar(O)*g;case 125*m:case 59:case 0:switch(b){case 0:case 125:v=0;case 59+u:h>0&&Ar(O)-d&&Sf(h>32?_P(O+";",r,n,d-1):_P(ke(O," ","")+";",r,n,d-2),l);break;case 59:O+=";";default:if(Sf(P=QP(O,e,n,c,u,i,a,y,x=[],k=[],d),o),b===123)if(u===0)mh(O,e,P,P,x,o,d,a,k);else switch(f===99&&Ct(O,3)===110?100:f){case 100:case 109:case 115:mh(t,P,P,r&&Sf(QP(t,P,P,0,0,i,a,y,i,x=[],d),k),i,k,d,a,r?x:k);break;default:mh(O,P,P,P,[""],k,0,a,k)}}c=u=h=0,m=g=1,y=O="",d=s;break;case 58:d=1+Ar(O),h=p;default:if(m<1){if(b==123)--m;else if(b==125&&m++==0&&q4()==125)continue}switch(O+=Hm(b),b*m){case 38:g=u>0?1:(O+="\f",-1);break;case 44:a[c++]=(Ar(O)-1)*g,g=1;break;case 64:Kr()===45&&(O+=ph(Vn())),f=Kr(),u=d=Ar(y=O+=$4(hh())),b++;break;case 45:p===45&&Ar(O)==2&&(m=0)}}return o}function QP(t,e,n,r,i,o,s,a,l,c,u){for(var d=i-1,f=i===0?o:[""],h=_x(f),p=0,m=0,v=0;p<r;++p)for(var g=0,b=Wu(t,d+1,d=G4(m=s[p])),y=t;g<h;++g)(y=AN(m>0?f[g]+" "+b:ke(b,/&\f/g,f[g])))&&(l[v++]=y);return Gm(t,e,n,i===0?Jx:a,l,c,u)}function tj(t,e,n){return Gm(t,e,n,IN,Hm(U4()),Wu(t,2,-2),0)}function _P(t,e,n,r){return Gm(t,e,n,Qx,Wu(t,0,r),Wu(t,r+1,-1),r)}function Ba(t,e){for(var n="",r=_x(t),i=0;i<r;i++)n+=e(t[i],i,t,e)||"";return n}function nj(t,e,n,r){switch(t.type){case D4:case Qx:return t.return=t.return||t.value;case IN:return"";case MN:return t.return=t.value+"{"+Ba(t.children,r)+"}";case Jx:t.value=t.props.join(",")}return Ar(n=Ba(t.children,r))?t.return=t.value+"{"+n+"}":""}function rj(t){var e=_x(t);return function(n,r,i,o){for(var s="",a=0;a<e;a++)s+=t[a](n,r,i,o)||"";return s}}function ij(t){return function(e){e.root||(e=e.return)&&t(e)}}var $P=function(e){var n=new WeakMap;return function(r){if(n.has(r))return n.get(r);var i=e(r);return n.set(r,i),i}};function WN(t){var e=Object.create(null);return function(n){return e[n]===void 0&&(e[n]=t(n)),e[n]}}var oj=function(e,n,r){for(var i=0,o=0;i=o,o=Kr(),i===38&&o===12&&(n[r]=1),!Ru(o);)Vn();return hd(e,mn)},sj=function(e,n){var r=-1,i=44;do switch(Ru(i)){case 0:i===38&&Kr()===12&&(n[r]=1),e[r]+=oj(mn-1,n,r);break;case 2:e[r]+=ph(i);break;case 4:if(i===44){e[++r]=Kr()===58?"&\f":"",n[r]=e[r].length;break}default:e[r]+=Hm(i)}while(i=Vn());return e},aj=function(e,n){return XN(sj(ZN(e),n))},e5=new WeakMap,lj=function(e){if(!(e.type!=="rule"||!e.parent||e.length<1)){for(var n=e.value,r=e.parent,i=e.column===r.column&&e.line===r.line;r.type!=="rule";)if(r=r.parent,!r)return;if(!(e.props.length===1&&n.charCodeAt(0)!==58&&!e5.get(r))&&!i){e5.set(e,!0);for(var o=[],s=aj(n,o),a=r.props,l=0,c=0;l<s.length;l++)for(var u=0;u<a.length;u++,c++)e.props[c]=o[l]?s[l].replace(/&\f/g,a[u]):a[u]+" "+s[l]}}},cj=function(e){if(e.type==="decl"){var n=e.value;n.charCodeAt(0)===108&&n.charCodeAt(2)===98&&(e.return="",e.value="")}};function RN(t,e){switch(B4(t,e)){case 5103:return ye+"print-"+t+t;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return ye+t+t;case 5349:case 4246:case 4810:case 6968:case 2756:return ye+t+Ip+t+Wt+t+t;case 6828:case 4268:return ye+t+Wt+t+t;case 6165:return ye+t+Wt+"flex-"+t+t;case 5187:return ye+t+ke(t,/(\w+).+(:[^]+)/,ye+"box-$1$2"+Wt+"flex-$1$2")+t;case 5443:return ye+t+Wt+"flex-item-"+ke(t,/flex-|-self/,"")+t;case 4675:return ye+t+Wt+"flex-line-pack"+ke(t,/align-content|flex-|-self/,"")+t;case 5548:return ye+t+Wt+ke(t,"shrink","negative")+t;case 5292:return ye+t+Wt+ke(t,"basis","preferred-size")+t;case 6060:return ye+"box-"+ke(t,"-grow","")+ye+t+Wt+ke(t,"grow","positive")+t;case 4554:return ye+ke(t,/([^-])(transform)/g,"$1"+ye+"$2")+t;case 6187:return ke(ke(ke(t,/(zoom-|grab)/,ye+"$1"),/(image-set)/,ye+"$1"),t,"")+t;case 5495:case 3959:return ke(t,/(image-set\([^]*)/,ye+"$1$`$1");case 4968:return ke(ke(t,/(.+:)(flex-)?(.*)/,ye+"box-pack:$3"+Wt+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+ye+t+t;case 4095:case 3583:case 4068:case 2532:return ke(t,/(.+)-inline(.+)/,ye+"$1$2")+t;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(Ar(t)-1-e>6)switch(Ct(t,e+1)){case 109:if(Ct(t,e+4)!==45)break;case 102:return ke(t,/(.+:)(.+)-([^]+)/,"$1"+ye+"$2-$3$1"+Ip+(Ct(t,e+3)==108?"$3":"$2-$3"))+t;case 115:return~Sy(t,"stretch")?RN(ke(t,"stretch","fill-available"),e)+t:t}break;case 4949:if(Ct(t,e+1)!==115)break;case 6444:switch(Ct(t,Ar(t)-3-(~Sy(t,"!important")&&10))){case 107:return ke(t,":",":"+ye)+t;case 101:return ke(t,/(.+:)([^;!]+)(;|!.+)?/,"$1"+ye+(Ct(t,14)===45?"inline-":"")+"box$3$1"+ye+"$2$3$1"+Wt+"$2box$3")+t}break;case 5936:switch(Ct(t,e+11)){case 114:return ye+t+Wt+ke(t,/[svh]\w+-[tblr]{2}/,"tb")+t;case 108:return ye+t+Wt+ke(t,/[svh]\w+-[tblr]{2}/,"tb-rl")+t;case 45:return ye+t+Wt+ke(t,/[svh]\w+-[tblr]{2}/,"lr")+t}return ye+t+Wt+t+t}return t}var uj=function(e,n,r,i){if(e.length>-1&&!e.return)switch(e.type){case Qx:e.return=RN(e.value,e.length);break;case MN:return Ba([sc(e,{value:ke(e.value,"@","@"+ye)})],i);case Jx:if(e.length)return K4(e.props,function(o){switch(Y4(o,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return Ba([sc(e,{props:[ke(o,/:(read-\w+)/,":"+Ip+"$1")]})],i);case"::placeholder":return Ba([sc(e,{props:[ke(o,/:(plac\w+)/,":"+ye+"input-$1")]}),sc(e,{props:[ke(o,/:(plac\w+)/,":"+Ip+"$1")]}),sc(e,{props:[ke(o,/:(plac\w+)/,Wt+"input-$1")]})],i)}return""})}},dj=[uj],fj=function(e){var n=e.key;if(n==="css"){var r=document.querySelectorAll("style[data-emotion]:not([data-s])");Array.prototype.forEach.call(r,function(m){var v=m.getAttribute("data-emotion");v.indexOf(" ")!==-1&&(document.head.appendChild(m),m.setAttribute("data-s",""))})}var i=e.stylisPlugins||dj,o={},s,a=[];s=e.container||document.head,Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="'+n+' "]'),function(m){for(var v=m.getAttribute("data-emotion").split(" "),g=1;g<v.length;g++)o[v[g]]=!0;a.push(m)});var l,c=[lj,cj];{var u,d=[nj,ij(function(m){u.insert(m)})],f=rj(c.concat(i,d)),h=function(v){return Ba(ej(v),f)};l=function(v,g,b,y){u=b,h(v?v+"{"+g.styles+"}":g.styles),y&&(p.inserted[g.name]=!0)}}var p={key:n,sheet:new H4({key:n,container:s,nonce:e.nonce,speedy:e.speedy,prepend:e.prepend,insertionPoint:e.insertionPoint}),nonce:e.nonce,inserted:o,registered:{},insert:l};return p.sheet.hydrate(a),p},FN={exports:{}},Ce={};/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var kt=typeof Symbol=="function"&&Symbol.for,$x=kt?Symbol.for("react.element"):60103,eS=kt?Symbol.for("react.portal"):60106,jm=kt?Symbol.for("react.fragment"):60107,Bm=kt?Symbol.for("react.strict_mode"):60108,Ym=kt?Symbol.for("react.profiler"):60114,Km=kt?Symbol.for("react.provider"):60109,Um=kt?Symbol.for("react.context"):60110,tS=kt?Symbol.for("react.async_mode"):60111,qm=kt?Symbol.for("react.concurrent_mode"):60111,Jm=kt?Symbol.for("react.forward_ref"):60112,Qm=kt?Symbol.for("react.suspense"):60113,hj=kt?Symbol.for("react.suspense_list"):60120,_m=kt?Symbol.for("react.memo"):60115,$m=kt?Symbol.for("react.lazy"):60116,pj=kt?Symbol.for("react.block"):60121,mj=kt?Symbol.for("react.fundamental"):60117,gj=kt?Symbol.for("react.responder"):60118,bj=kt?Symbol.for("react.scope"):60119;function Ln(t){if(typeof t=="object"&&t!==null){var e=t.$$typeof;switch(e){case $x:switch(t=t.type,t){case tS:case qm:case jm:case Ym:case Bm:case Qm:return t;default:switch(t=t&&t.$$typeof,t){case Um:case Jm:case $m:case _m:case Km:return t;default:return e}}case eS:return e}}}function HN(t){return Ln(t)===qm}Ce.AsyncMode=tS;Ce.ConcurrentMode=qm;Ce.ContextConsumer=Um;Ce.ContextProvider=Km;Ce.Element=$x;Ce.ForwardRef=Jm;Ce.Fragment=jm;Ce.Lazy=$m;Ce.Memo=_m;Ce.Portal=eS;Ce.Profiler=Ym;Ce.StrictMode=Bm;Ce.Suspense=Qm;Ce.isAsyncMode=function(t){return HN(t)||Ln(t)===tS};Ce.isConcurrentMode=HN;Ce.isContextConsumer=function(t){return Ln(t)===Um};Ce.isContextProvider=function(t){return Ln(t)===Km};Ce.isElement=function(t){return typeof t=="object"&&t!==null&&t.$$typeof===$x};Ce.isForwardRef=function(t){return Ln(t)===Jm};Ce.isFragment=function(t){return Ln(t)===jm};Ce.isLazy=function(t){return Ln(t)===$m};Ce.isMemo=function(t){return Ln(t)===_m};Ce.isPortal=function(t){return Ln(t)===eS};Ce.isProfiler=function(t){return Ln(t)===Ym};Ce.isStrictMode=function(t){return Ln(t)===Bm};Ce.isSuspense=function(t){return Ln(t)===Qm};Ce.isValidElementType=function(t){return typeof t=="string"||typeof t=="function"||t===jm||t===qm||t===Ym||t===Bm||t===Qm||t===hj||typeof t=="object"&&t!==null&&(t.$$typeof===$m||t.$$typeof===_m||t.$$typeof===Km||t.$$typeof===Um||t.$$typeof===Jm||t.$$typeof===mj||t.$$typeof===gj||t.$$typeof===bj||t.$$typeof===pj)};Ce.typeOf=Ln;(function(t){t.exports=Ce})(FN);var DN=FN.exports,vj={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},yj={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},GN={};GN[DN.ForwardRef]=vj;GN[DN.Memo]=yj;var xj=!0;function Sj(t,e,n){var r="";return n.split(" ").forEach(function(i){t[i]!==void 0?e.push(t[i]+";"):r+=i+" "}),r}var jN=function(e,n,r){var i=e.key+"-"+n.name;(r===!1||xj===!1)&&e.registered[i]===void 0&&(e.registered[i]=n.styles)},BN=function(e,n,r){jN(e,n,r);var i=e.key+"-"+n.name;if(e.inserted[n.name]===void 0){var o=n;do e.insert(n===o?"."+i:"",o,e.sheet,!0),o=o.next;while(o!==void 0)}};function kj(t){for(var e=0,n,r=0,i=t.length;i>=4;++r,i-=4)n=t.charCodeAt(r)&255|(t.charCodeAt(++r)&255)<<8|(t.charCodeAt(++r)&255)<<16|(t.charCodeAt(++r)&255)<<24,n=(n&65535)*1540483477+((n>>>16)*59797<<16),n^=n>>>24,e=(n&65535)*1540483477+((n>>>16)*59797<<16)^(e&65535)*1540483477+((e>>>16)*59797<<16);switch(i){case 3:e^=(t.charCodeAt(r+2)&255)<<16;case 2:e^=(t.charCodeAt(r+1)&255)<<8;case 1:e^=t.charCodeAt(r)&255,e=(e&65535)*1540483477+((e>>>16)*59797<<16)}return e^=e>>>13,e=(e&65535)*1540483477+((e>>>16)*59797<<16),((e^e>>>15)>>>0).toString(36)}var wj={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},Pj=/[A-Z]|^ms/g,Oj=/_EMO_([^_]+?)_([^]*?)_EMO_/g,YN=function(e){return e.charCodeAt(1)===45},t5=function(e){return e!=null&&typeof e!="boolean"},I0=WN(function(t){return YN(t)?t:t.replace(Pj,"-$&").toLowerCase()}),n5=function(e,n){switch(e){case"animation":case"animationName":if(typeof n=="string")return n.replace(Oj,function(r,i,o){return Lr={name:i,styles:o,next:Lr},i})}return wj[e]!==1&&!YN(e)&&typeof n=="number"&&n!==0?n+"px":n};function Fu(t,e,n){if(n==null)return"";if(n.__emotion_styles!==void 0)return n;switch(typeof n){case"boolean":return"";case"object":{if(n.anim===1)return Lr={name:n.name,styles:n.styles,next:Lr},n.name;if(n.styles!==void 0){var r=n.next;if(r!==void 0)for(;r!==void 0;)Lr={name:r.name,styles:r.styles,next:Lr},r=r.next;var i=n.styles+";";return i}return Cj(t,e,n)}case"function":{if(t!==void 0){var o=Lr,s=n(t);return Lr=o,Fu(t,e,s)}break}}if(e==null)return n;var a=e[n];return a!==void 0?a:n}function Cj(t,e,n){var r="";if(Array.isArray(n))for(var i=0;i<n.length;i++)r+=Fu(t,e,n[i])+";";else for(var o in n){var s=n[o];if(typeof s!="object")e!=null&&e[s]!==void 0?r+=o+"{"+e[s]+"}":t5(s)&&(r+=I0(o)+":"+n5(o,s)+";");else if(Array.isArray(s)&&typeof s[0]=="string"&&(e==null||e[s[0]]===void 0))for(var a=0;a<s.length;a++)t5(s[a])&&(r+=I0(o)+":"+n5(o,s[a])+";");else{var l=Fu(t,e,s);switch(o){case"animation":case"animationName":{r+=I0(o)+":"+l+";";break}default:r+=o+"{"+l+"}"}}}return r}var r5=/label:\s*([^\s;\n{]+)\s*(;|$)/g,Lr,nS=function(e,n,r){if(e.length===1&&typeof e[0]=="object"&&e[0]!==null&&e[0].styles!==void 0)return e[0];var i=!0,o="";Lr=void 0;var s=e[0];s==null||s.raw===void 0?(i=!1,o+=Fu(r,n,s)):o+=s[0];for(var a=1;a<e.length;a++)o+=Fu(r,n,e[a]),i&&(o+=s[a]);r5.lastIndex=0;for(var l="",c;(c=r5.exec(o))!==null;)l+="-"+c[1];var u=kj(o)+l;return{name:u,styles:o,next:Lr}},Tj=function(e){return e()},KN=I2["useInsertionEffect"]?I2["useInsertionEffect"]:!1,zj=KN||Tj,i5=KN||S.exports.useLayoutEffect,UN=S.exports.createContext(typeof HTMLElement<"u"?fj({key:"css"}):null);UN.Provider;var qN=function(e){return S.exports.forwardRef(function(n,r){var i=S.exports.useContext(UN);return e(n,i,r)})},Hu=S.exports.createContext({}),Vj=function(e,n){if(typeof n=="function"){var r=n(e);return r}return bl({},e,n)},Ej=$P(function(t){return $P(function(e){return Vj(t,e)})}),Nj=function(e){var n=S.exports.useContext(Hu);return e.theme!==n&&(n=Ej(n)(e.theme)),S.exports.createElement(Hu.Provider,{value:n},e.children)},eg=qN(function(t,e){var n=t.styles,r=nS([n],void 0,S.exports.useContext(Hu)),i=S.exports.useRef();return i5(function(){var o=e.key+"-global",s=new e.sheet.constructor({key:o,nonce:e.sheet.nonce,container:e.sheet.container,speedy:e.sheet.isSpeedy}),a=!1,l=document.querySelector('style[data-emotion="'+o+" "+r.name+'"]');return e.sheet.tags.length&&(s.before=e.sheet.tags[0]),l!==null&&(a=!0,l.setAttribute("data-emotion",o),s.hydrate([l])),i.current=[s,a],function(){s.flush()}},[e]),i5(function(){var o=i.current,s=o[0],a=o[1];if(a){o[1]=!1;return}if(r.next!==void 0&&BN(e,r.next,!0),s.tags.length){var l=s.tags[s.tags.length-1].nextElementSibling;s.before=l,s.flush()}e.insert("",r,s,!1)},[e,r.name]),null});function Ij(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return nS(e)}var Mj=function(){var e=Ij.apply(void 0,arguments),n="animation-"+e.name;return{name:n,styles:"@keyframes "+n+"{"+e.styles+"}",anim:1,toString:function(){return"_EMO_"+this.name+"_"+this.styles+"_EMO_"}}};function Aj(t){return typeof t=="function"}function Lj(t,e){const n={};return Object.keys(t).forEach(r=>{e.includes(r)||(n[r]=t[r])}),n}function Zj(t,e,n,r){const i=typeof e=="string"?e.split("."):[e];for(r=0;r<i.length&&t;r+=1)t=t[i[r]];return t===void 0?n:t}var Xj=t=>{const e=new WeakMap;return(r,i,o,s)=>{if(typeof r>"u")return t(r,i,o);e.has(r)||e.set(r,new Map);const a=e.get(r);if(a.has(i))return a.get(i);const l=t(r,i,o,s);return a.set(i,l),l}},JN=Xj(Zj);function QN(t,e){const n={};return Object.keys(t).forEach(r=>{const i=t[r];e(i,r,t)&&(n[r]=i)}),n}var _N=t=>QN(t,e=>e!=null);function Wj(){return!!(typeof window<"u"&&window.document&&window.document.createElement)}var Rj=Wj();function $N(t,...e){return Aj(t)?t(...e):t}function Fj(...t){return function(n){t.some(r=>(r==null||r(n),n==null?void 0:n.defaultPrevented))}}Object.freeze(["base","sm","md","lg","xl","2xl"]);function Hj(t={}){const{strict:e=!0,errorMessage:n="useContext: `context` is undefined. Seems you forgot to wrap component within the Provider",name:r}=t,i=S.exports.createContext(void 0);i.displayName=r;function o(){var s;const a=S.exports.useContext(i);if(!a&&e){const l=new Error(n);throw l.name="ContextError",(s=Error.captureStackTrace)==null||s.call(Error,l,o),l}return a}return[i.Provider,o,i]}var Dj=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,Gj=WN(function(t){return Dj.test(t)||t.charCodeAt(0)===111&&t.charCodeAt(1)===110&&t.charCodeAt(2)<91}),jj=Gj,Bj=function(e){return e!=="theme"},o5=function(e){return typeof e=="string"&&e.charCodeAt(0)>96?jj:Bj},s5=function(e,n,r){var i;if(n){var o=n.shouldForwardProp;i=e.__emotion_forwardProp&&o?function(s){return e.__emotion_forwardProp(s)&&o(s)}:o}return typeof i!="function"&&r&&(i=e.__emotion_forwardProp),i},Yj=function(e){var n=e.cache,r=e.serialized,i=e.isStringTag;return jN(n,r,i),zj(function(){return BN(n,r,i)}),null},Kj=function t(e,n){var r=e.__emotion_real===e,i=r&&e.__emotion_base||e,o,s;n!==void 0&&(o=n.label,s=n.target);var a=s5(e,n,r),l=a||o5(i),c=!l("as");return function(){var u=arguments,d=r&&e.__emotion_styles!==void 0?e.__emotion_styles.slice(0):[];if(o!==void 0&&d.push("label:"+o+";"),u[0]==null||u[0].raw===void 0)d.push.apply(d,u);else{d.push(u[0][0]);for(var f=u.length,h=1;h<f;h++)d.push(u[h],u[0][h])}var p=qN(function(m,v,g){var b=c&&m.as||i,y="",x=[],k=m;if(m.theme==null){k={};for(var P in m)k[P]=m[P];k.theme=S.exports.useContext(Hu)}typeof m.className=="string"?y=Sj(v.registered,x,m.className):m.className!=null&&(y=m.className+" ");var O=nS(d.concat(x),v.registered,k);y+=v.key+"-"+O.name,s!==void 0&&(y+=" "+s);var z=c&&a===void 0?o5(b):l,I={};for(var E in m)c&&E==="as"||z(E)&&(I[E]=m[E]);return I.className=y,I.ref=g,S.exports.createElement(S.exports.Fragment,null,S.exports.createElement(Yj,{cache:v,serialized:O,isStringTag:typeof b=="string"}),S.exports.createElement(b,I))});return p.displayName=o!==void 0?o:"Styled("+(typeof i=="string"?i:i.displayName||i.name||"Component")+")",p.defaultProps=e.defaultProps,p.__emotion_real=p,p.__emotion_base=i,p.__emotion_styles=d,p.__emotion_forwardProp=a,Object.defineProperty(p,"toString",{value:function(){return"."+s}}),p.withComponent=function(m,v){return t(m,bl({},n,v,{shouldForwardProp:s5(p,v,!0)})).apply(void 0,d)},p}},Uj=["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"],wy=Kj.bind();Uj.forEach(function(t){wy[t]=wy(t)});function we(t,e={}){let n=!1;function r(){if(!n){n=!0;return}throw new Error("[anatomy] .part(...) should only be called once. Did you mean to use .extend(...) ?")}function i(...u){r();for(const d of u)e[d]=l(d);return we(t,e)}function o(...u){for(const d of u)d in e||(e[d]=l(d));return we(t,e)}function s(){return Object.fromEntries(Object.entries(e).map(([d,f])=>[d,f.selector]))}function a(){return Object.fromEntries(Object.entries(e).map(([d,f])=>[d,f.className]))}function l(u){const h=`chakra-${(["container","root"].includes(u!=null?u:"")?[t]:[t,u]).filter(Boolean).join("__")}`;return{className:h,selector:`.${h}`,toString:()=>u}}return{parts:i,toPart:l,extend:o,selectors:s,classnames:a,get keys(){return Object.keys(e)},__type:{}}}var qj=we("accordion").parts("root","container","button","panel").extend("icon"),Jj=we("alert").parts("title","description","container").extend("icon","spinner"),Qj=we("avatar").parts("label","badge","container").extend("excessLabel","group"),_j=we("breadcrumb").parts("link","item","container").extend("separator");we("button").parts();var $j=we("checkbox").parts("control","icon","container").extend("label");we("progress").parts("track","filledTrack").extend("label");var eB=we("drawer").parts("overlay","dialogContainer","dialog").extend("header","closeButton","body","footer"),tB=we("editable").parts("preview","input","textarea"),nB=we("form").parts("container","requiredIndicator","helperText"),rB=we("formError").parts("text","icon"),iB=we("input").parts("addon","field","element"),oB=we("list").parts("container","item","icon"),sB=we("menu").parts("button","list","item").extend("groupTitle","command","divider"),aB=we("modal").parts("overlay","dialogContainer","dialog").extend("header","closeButton","body","footer"),lB=we("numberinput").parts("root","field","stepperGroup","stepper");we("pininput").parts("field");var cB=we("popover").parts("content","header","body","footer").extend("popper","arrow","closeButton"),uB=we("progress").parts("label","filledTrack","track"),dB=we("radio").parts("container","control","label"),fB=we("select").parts("field","icon"),hB=we("slider").parts("container","track","thumb","filledTrack","mark"),pB=we("stat").parts("container","label","helpText","number","icon"),mB=we("switch").parts("container","track","thumb"),gB=we("table").parts("table","thead","tbody","tr","th","td","tfoot","caption"),bB=we("tabs").parts("root","tab","tablist","tabpanel","tabpanels","indicator"),vB=we("tag").parts("container","label","closeButton"),yB=we("card").parts("container","header","body","footer");function It(t,e){xB(t)&&(t="100%");var n=SB(t);return t=e===360?t:Math.min(e,Math.max(0,parseFloat(t))),n&&(t=parseInt(String(t*e),10)/100),Math.abs(t-e)<1e-6?1:(e===360?t=(t<0?t%e+e:t%e)/parseFloat(String(e)):t=t%e/parseFloat(String(e)),t)}function kf(t){return Math.min(1,Math.max(0,t))}function xB(t){return typeof t=="string"&&t.indexOf(".")!==-1&&parseFloat(t)===1}function SB(t){return typeof t=="string"&&t.indexOf("%")!==-1}function eI(t){return t=parseFloat(t),(isNaN(t)||t<0||t>1)&&(t=1),t}function wf(t){return t<=1?"".concat(Number(t)*100,"%"):t}function fs(t){return t.length===1?"0"+t:String(t)}function kB(t,e,n){return{r:It(t,255)*255,g:It(e,255)*255,b:It(n,255)*255}}function a5(t,e,n){t=It(t,255),e=It(e,255),n=It(n,255);var r=Math.max(t,e,n),i=Math.min(t,e,n),o=0,s=0,a=(r+i)/2;if(r===i)s=0,o=0;else{var l=r-i;switch(s=a>.5?l/(2-r-i):l/(r+i),r){case t:o=(e-n)/l+(e<n?6:0);break;case e:o=(n-t)/l+2;break;case n:o=(t-e)/l+4;break}o/=6}return{h:o,s,l:a}}function M0(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*(6*n):n<1/2?e:n<2/3?t+(e-t)*(2/3-n)*6:t}function wB(t,e,n){var r,i,o;if(t=It(t,360),e=It(e,100),n=It(n,100),e===0)i=n,o=n,r=n;else{var s=n<.5?n*(1+e):n+e-n*e,a=2*n-s;r=M0(a,s,t+1/3),i=M0(a,s,t),o=M0(a,s,t-1/3)}return{r:r*255,g:i*255,b:o*255}}function l5(t,e,n){t=It(t,255),e=It(e,255),n=It(n,255);var r=Math.max(t,e,n),i=Math.min(t,e,n),o=0,s=r,a=r-i,l=r===0?0:a/r;if(r===i)o=0;else{switch(r){case t:o=(e-n)/a+(e<n?6:0);break;case e:o=(n-t)/a+2;break;case n:o=(t-e)/a+4;break}o/=6}return{h:o,s:l,v:s}}function PB(t,e,n){t=It(t,360)*6,e=It(e,100),n=It(n,100);var r=Math.floor(t),i=t-r,o=n*(1-e),s=n*(1-i*e),a=n*(1-(1-i)*e),l=r%6,c=[n,s,o,o,a,n][l],u=[a,n,n,s,o,o][l],d=[o,o,a,n,n,s][l];return{r:c*255,g:u*255,b:d*255}}function c5(t,e,n,r){var i=[fs(Math.round(t).toString(16)),fs(Math.round(e).toString(16)),fs(Math.round(n).toString(16))];return r&&i[0].startsWith(i[0].charAt(1))&&i[1].startsWith(i[1].charAt(1))&&i[2].startsWith(i[2].charAt(1))?i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0):i.join("")}function OB(t,e,n,r,i){var o=[fs(Math.round(t).toString(16)),fs(Math.round(e).toString(16)),fs(Math.round(n).toString(16)),fs(CB(r))];return i&&o[0].startsWith(o[0].charAt(1))&&o[1].startsWith(o[1].charAt(1))&&o[2].startsWith(o[2].charAt(1))&&o[3].startsWith(o[3].charAt(1))?o[0].charAt(0)+o[1].charAt(0)+o[2].charAt(0)+o[3].charAt(0):o.join("")}function CB(t){return Math.round(parseFloat(t)*255).toString(16)}function u5(t){return yn(t)/255}function yn(t){return parseInt(t,16)}function TB(t){return{r:t>>16,g:(t&65280)>>8,b:t&255}}var Py={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",goldenrod:"#daa520",gold:"#ffd700",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavenderblush:"#fff0f5",lavender:"#e6e6fa",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};function zB(t){var e={r:0,g:0,b:0},n=1,r=null,i=null,o=null,s=!1,a=!1;return typeof t=="string"&&(t=NB(t)),typeof t=="object"&&(si(t.r)&&si(t.g)&&si(t.b)?(e=kB(t.r,t.g,t.b),s=!0,a=String(t.r).substr(-1)==="%"?"prgb":"rgb"):si(t.h)&&si(t.s)&&si(t.v)?(r=wf(t.s),i=wf(t.v),e=PB(t.h,r,i),s=!0,a="hsv"):si(t.h)&&si(t.s)&&si(t.l)&&(r=wf(t.s),o=wf(t.l),e=wB(t.h,r,o),s=!0,a="hsl"),Object.prototype.hasOwnProperty.call(t,"a")&&(n=t.a)),n=eI(n),{ok:s,format:t.format||a,r:Math.min(255,Math.max(e.r,0)),g:Math.min(255,Math.max(e.g,0)),b:Math.min(255,Math.max(e.b,0)),a:n}}var VB="[-\\+]?\\d+%?",EB="[-\\+]?\\d*\\.\\d+%?",oo="(?:".concat(EB,")|(?:").concat(VB,")"),A0="[\\s|\\(]+(".concat(oo,")[,|\\s]+(").concat(oo,")[,|\\s]+(").concat(oo,")\\s*\\)?"),L0="[\\s|\\(]+(".concat(oo,")[,|\\s]+(").concat(oo,")[,|\\s]+(").concat(oo,")[,|\\s]+(").concat(oo,")\\s*\\)?"),ur={CSS_UNIT:new RegExp(oo),rgb:new RegExp("rgb"+A0),rgba:new RegExp("rgba"+L0),hsl:new RegExp("hsl"+A0),hsla:new RegExp("hsla"+L0),hsv:new RegExp("hsv"+A0),hsva:new RegExp("hsva"+L0),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/};function NB(t){if(t=t.trim().toLowerCase(),t.length===0)return!1;var e=!1;if(Py[t])t=Py[t],e=!0;else if(t==="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var n=ur.rgb.exec(t);return n?{r:n[1],g:n[2],b:n[3]}:(n=ur.rgba.exec(t),n?{r:n[1],g:n[2],b:n[3],a:n[4]}:(n=ur.hsl.exec(t),n?{h:n[1],s:n[2],l:n[3]}:(n=ur.hsla.exec(t),n?{h:n[1],s:n[2],l:n[3],a:n[4]}:(n=ur.hsv.exec(t),n?{h:n[1],s:n[2],v:n[3]}:(n=ur.hsva.exec(t),n?{h:n[1],s:n[2],v:n[3],a:n[4]}:(n=ur.hex8.exec(t),n?{r:yn(n[1]),g:yn(n[2]),b:yn(n[3]),a:u5(n[4]),format:e?"name":"hex8"}:(n=ur.hex6.exec(t),n?{r:yn(n[1]),g:yn(n[2]),b:yn(n[3]),format:e?"name":"hex"}:(n=ur.hex4.exec(t),n?{r:yn(n[1]+n[1]),g:yn(n[2]+n[2]),b:yn(n[3]+n[3]),a:u5(n[4]+n[4]),format:e?"name":"hex8"}:(n=ur.hex3.exec(t),n?{r:yn(n[1]+n[1]),g:yn(n[2]+n[2]),b:yn(n[3]+n[3]),format:e?"name":"hex"}:!1)))))))))}function si(t){return Boolean(ur.CSS_UNIT.exec(String(t)))}var pd=function(){function t(e,n){e===void 0&&(e=""),n===void 0&&(n={});var r;if(e instanceof t)return e;typeof e=="number"&&(e=TB(e)),this.originalInput=e;var i=zB(e);this.originalInput=e,this.r=i.r,this.g=i.g,this.b=i.b,this.a=i.a,this.roundA=Math.round(100*this.a)/100,this.format=(r=n.format)!==null&&r!==void 0?r:i.format,this.gradientType=n.gradientType,this.r<1&&(this.r=Math.round(this.r)),this.g<1&&(this.g=Math.round(this.g)),this.b<1&&(this.b=Math.round(this.b)),this.isValid=i.ok}return t.prototype.isDark=function(){return this.getBrightness()<128},t.prototype.isLight=function(){return!this.isDark()},t.prototype.getBrightness=function(){var e=this.toRgb();return(e.r*299+e.g*587+e.b*114)/1e3},t.prototype.getLuminance=function(){var e=this.toRgb(),n,r,i,o=e.r/255,s=e.g/255,a=e.b/255;return o<=.03928?n=o/12.92:n=Math.pow((o+.055)/1.055,2.4),s<=.03928?r=s/12.92:r=Math.pow((s+.055)/1.055,2.4),a<=.03928?i=a/12.92:i=Math.pow((a+.055)/1.055,2.4),.2126*n+.7152*r+.0722*i},t.prototype.getAlpha=function(){return this.a},t.prototype.setAlpha=function(e){return this.a=eI(e),this.roundA=Math.round(100*this.a)/100,this},t.prototype.toHsv=function(){var e=l5(this.r,this.g,this.b);return{h:e.h*360,s:e.s,v:e.v,a:this.a}},t.prototype.toHsvString=function(){var e=l5(this.r,this.g,this.b),n=Math.round(e.h*360),r=Math.round(e.s*100),i=Math.round(e.v*100);return this.a===1?"hsv(".concat(n,", ").concat(r,"%, ").concat(i,"%)"):"hsva(".concat(n,", ").concat(r,"%, ").concat(i,"%, ").concat(this.roundA,")")},t.prototype.toHsl=function(){var e=a5(this.r,this.g,this.b);return{h:e.h*360,s:e.s,l:e.l,a:this.a}},t.prototype.toHslString=function(){var e=a5(this.r,this.g,this.b),n=Math.round(e.h*360),r=Math.round(e.s*100),i=Math.round(e.l*100);return this.a===1?"hsl(".concat(n,", ").concat(r,"%, ").concat(i,"%)"):"hsla(".concat(n,", ").concat(r,"%, ").concat(i,"%, ").concat(this.roundA,")")},t.prototype.toHex=function(e){return e===void 0&&(e=!1),c5(this.r,this.g,this.b,e)},t.prototype.toHexString=function(e){return e===void 0&&(e=!1),"#"+this.toHex(e)},t.prototype.toHex8=function(e){return e===void 0&&(e=!1),OB(this.r,this.g,this.b,this.a,e)},t.prototype.toHex8String=function(e){return e===void 0&&(e=!1),"#"+this.toHex8(e)},t.prototype.toRgb=function(){return{r:Math.round(this.r),g:Math.round(this.g),b:Math.round(this.b),a:this.a}},t.prototype.toRgbString=function(){var e=Math.round(this.r),n=Math.round(this.g),r=Math.round(this.b);return this.a===1?"rgb(".concat(e,", ").concat(n,", ").concat(r,")"):"rgba(".concat(e,", ").concat(n,", ").concat(r,", ").concat(this.roundA,")")},t.prototype.toPercentageRgb=function(){var e=function(n){return"".concat(Math.round(It(n,255)*100),"%")};return{r:e(this.r),g:e(this.g),b:e(this.b),a:this.a}},t.prototype.toPercentageRgbString=function(){var e=function(n){return Math.round(It(n,255)*100)};return this.a===1?"rgb(".concat(e(this.r),"%, ").concat(e(this.g),"%, ").concat(e(this.b),"%)"):"rgba(".concat(e(this.r),"%, ").concat(e(this.g),"%, ").concat(e(this.b),"%, ").concat(this.roundA,")")},t.prototype.toName=function(){if(this.a===0)return"transparent";if(this.a<1)return!1;for(var e="#"+c5(this.r,this.g,this.b,!1),n=0,r=Object.entries(Py);n<r.length;n++){var i=r[n],o=i[0],s=i[1];if(e===s)return o}return!1},t.prototype.toString=function(e){var n=Boolean(e);e=e!=null?e:this.format;var r=!1,i=this.a<1&&this.a>=0,o=!n&&i&&(e.startsWith("hex")||e==="name");return o?e==="name"&&this.a===0?this.toName():this.toRgbString():(e==="rgb"&&(r=this.toRgbString()),e==="prgb"&&(r=this.toPercentageRgbString()),(e==="hex"||e==="hex6")&&(r=this.toHexString()),e==="hex3"&&(r=this.toHexString(!0)),e==="hex4"&&(r=this.toHex8String(!0)),e==="hex8"&&(r=this.toHex8String()),e==="name"&&(r=this.toName()),e==="hsl"&&(r=this.toHslString()),e==="hsv"&&(r=this.toHsvString()),r||this.toHexString())},t.prototype.toNumber=function(){return(Math.round(this.r)<<16)+(Math.round(this.g)<<8)+Math.round(this.b)},t.prototype.clone=function(){return new t(this.toString())},t.prototype.lighten=function(e){e===void 0&&(e=10);var n=this.toHsl();return n.l+=e/100,n.l=kf(n.l),new t(n)},t.prototype.brighten=function(e){e===void 0&&(e=10);var n=this.toRgb();return n.r=Math.max(0,Math.min(255,n.r-Math.round(255*-(e/100)))),n.g=Math.max(0,Math.min(255,n.g-Math.round(255*-(e/100)))),n.b=Math.max(0,Math.min(255,n.b-Math.round(255*-(e/100)))),new t(n)},t.prototype.darken=function(e){e===void 0&&(e=10);var n=this.toHsl();return n.l-=e/100,n.l=kf(n.l),new t(n)},t.prototype.tint=function(e){return e===void 0&&(e=10),this.mix("white",e)},t.prototype.shade=function(e){return e===void 0&&(e=10),this.mix("black",e)},t.prototype.desaturate=function(e){e===void 0&&(e=10);var n=this.toHsl();return n.s-=e/100,n.s=kf(n.s),new t(n)},t.prototype.saturate=function(e){e===void 0&&(e=10);var n=this.toHsl();return n.s+=e/100,n.s=kf(n.s),new t(n)},t.prototype.greyscale=function(){return this.desaturate(100)},t.prototype.spin=function(e){var n=this.toHsl(),r=(n.h+e)%360;return n.h=r<0?360+r:r,new t(n)},t.prototype.mix=function(e,n){n===void 0&&(n=50);var r=this.toRgb(),i=new t(e).toRgb(),o=n/100,s={r:(i.r-r.r)*o+r.r,g:(i.g-r.g)*o+r.g,b:(i.b-r.b)*o+r.b,a:(i.a-r.a)*o+r.a};return new t(s)},t.prototype.analogous=function(e,n){e===void 0&&(e=6),n===void 0&&(n=30);var r=this.toHsl(),i=360/n,o=[this];for(r.h=(r.h-(i*e>>1)+720)%360;--e;)r.h=(r.h+i)%360,o.push(new t(r));return o},t.prototype.complement=function(){var e=this.toHsl();return e.h=(e.h+180)%360,new t(e)},t.prototype.monochromatic=function(e){e===void 0&&(e=6);for(var n=this.toHsv(),r=n.h,i=n.s,o=n.v,s=[],a=1/e;e--;)s.push(new t({h:r,s:i,v:o})),o=(o+a)%1;return s},t.prototype.splitcomplement=function(){var e=this.toHsl(),n=e.h;return[this,new t({h:(n+72)%360,s:e.s,l:e.l}),new t({h:(n+216)%360,s:e.s,l:e.l})]},t.prototype.onBackground=function(e){var n=this.toRgb(),r=new t(e).toRgb();return new t({r:r.r+(n.r-r.r)*n.a,g:r.g+(n.g-r.g)*n.a,b:r.b+(n.b-r.b)*n.a})},t.prototype.triad=function(){return this.polyad(3)},t.prototype.tetrad=function(){return this.polyad(4)},t.prototype.polyad=function(e){for(var n=this.toHsl(),r=n.h,i=[this],o=360/e,s=1;s<e;s++)i.push(new t({h:(r+s*o)%360,s:n.s,l:n.l}));return i},t.prototype.equals=function(e){return this.toRgbString()===new t(e).toRgbString()},t}();function tI(t){if(t===void 0&&(t={}),t.count!==void 0&&t.count!==null){var e=t.count,n=[];for(t.count=void 0;e>n.length;)t.count=null,t.seed&&(t.seed+=1),n.push(tI(t));return t.count=e,n}var r=IB(t.hue,t.seed),i=MB(r,t),o=AB(r,i,t),s={h:r,s:i,v:o};return t.alpha!==void 0&&(s.a=t.alpha),new pd(s)}function IB(t,e){var n=ZB(t),r=Mp(n,e);return r<0&&(r=360+r),r}function MB(t,e){if(e.hue==="monochrome")return 0;if(e.luminosity==="random")return Mp([0,100],e.seed);var n=nI(t).saturationRange,r=n[0],i=n[1];switch(e.luminosity){case"bright":r=55;break;case"dark":r=i-10;break;case"light":i=55;break}return Mp([r,i],e.seed)}function AB(t,e,n){var r=LB(t,e),i=100;switch(n.luminosity){case"dark":i=r+20;break;case"light":r=(i+r)/2;break;case"random":r=0,i=100;break}return Mp([r,i],n.seed)}function LB(t,e){for(var n=nI(t).lowerBounds,r=0;r<n.length-1;r++){var i=n[r][0],o=n[r][1],s=n[r+1][0],a=n[r+1][1];if(e>=i&&e<=s){var l=(a-o)/(s-i),c=o-l*i;return l*e+c}}return 0}function ZB(t){var e=parseInt(t,10);if(!Number.isNaN(e)&&e<360&&e>0)return[e,e];if(typeof t=="string"){var n=iI.find(function(s){return s.name===t});if(n){var r=rI(n);if(r.hueRange)return r.hueRange}var i=new pd(t);if(i.isValid){var o=i.toHsv().h;return[o,o]}}return[0,360]}function nI(t){t>=334&&t<=360&&(t-=360);for(var e=0,n=iI;e<n.length;e++){var r=n[e],i=rI(r);if(i.hueRange&&t>=i.hueRange[0]&&t<=i.hueRange[1])return i}throw Error("Color not found")}function Mp(t,e){if(e===void 0)return Math.floor(t[0]+Math.random()*(t[1]+1-t[0]));var n=t[1]||1,r=t[0]||0;e=(e*9301+49297)%233280;var i=e/233280;return Math.floor(r+i*(n-r))}function rI(t){var e=t.lowerBounds[0][0],n=t.lowerBounds[t.lowerBounds.length-1][0],r=t.lowerBounds[t.lowerBounds.length-1][1],i=t.lowerBounds[0][1];return{name:t.name,hueRange:t.hueRange,lowerBounds:t.lowerBounds,saturationRange:[e,n],brightnessRange:[r,i]}}var iI=[{name:"monochrome",hueRange:null,lowerBounds:[[0,0],[100,0]]},{name:"red",hueRange:[-26,18],lowerBounds:[[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]},{name:"orange",hueRange:[19,46],lowerBounds:[[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]},{name:"yellow",hueRange:[47,62],lowerBounds:[[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]},{name:"green",hueRange:[63,178],lowerBounds:[[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]},{name:"blue",hueRange:[179,257],lowerBounds:[[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]},{name:"purple",hueRange:[258,282],lowerBounds:[[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]},{name:"pink",hueRange:[283,334],lowerBounds:[[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]}];function XB(t,e,n,r,i){for(e=e.split?e.split("."):e,r=0;r<e.length;r++)t=t?t[e[r]]:i;return t===i?n:t}var WB=t=>Object.keys(t).length===0,Jt=(t,e,n)=>{const r=XB(t,`colors.${e}`,e),{isValid:i}=new pd(r);return i?r:n},RB=t=>e=>{const n=Jt(e,t);return new pd(n).isDark()?"dark":"light"},FB=t=>e=>RB(t)(e)==="dark",Sl=(t,e)=>n=>{const r=Jt(n,t);return new pd(r).setAlpha(e).toRgbString()};function d5(t="1rem",e="rgba(255, 255, 255, 0.15)"){return{backgroundImage:`linear-gradient(
    45deg,
    ${e} 25%,
    transparent 25%,
    transparent 50%,
    ${e} 50%,
    ${e} 75%,
    transparent 75%,
    transparent
  )`,backgroundSize:`${t} ${t}`}}function HB(t){const e=tI().toHexString();return!t||WB(t)?e:t.string&&t.colors?GB(t.string,t.colors):t.string&&!t.colors?DB(t.string):t.colors&&!t.string?jB(t.colors):e}function DB(t){let e=0;if(t.length===0)return e.toString();for(let r=0;r<t.length;r+=1)e=t.charCodeAt(r)+((e<<5)-e),e=e&e;let n="#";for(let r=0;r<3;r+=1){const i=e>>r*8&255;n+=`00${i.toString(16)}`.substr(-2)}return n}function GB(t,e){let n=0;if(t.length===0)return e[0];for(let r=0;r<t.length;r+=1)n=t.charCodeAt(r)+((n<<5)-n),n=n&n;return n=(n%e.length+e.length)%e.length,e[n]}function jB(t){return t[Math.floor(Math.random()*t.length)]}function te(t,e){return n=>n.colorMode==="dark"?e:t}function rS(t){const{orientation:e,vertical:n,horizontal:r}=t;return e?e==="vertical"?n:r:{}}function BB(t){const e=typeof t;return t!=null&&(e==="object"||e==="function")&&!Array.isArray(t)}function oI(t){return BB(t)&&t.reference?t.reference:String(t)}var tg=(t,...e)=>e.map(oI).join(` ${t} `).replace(/calc/g,""),f5=(...t)=>`calc(${tg("+",...t)})`,h5=(...t)=>`calc(${tg("-",...t)})`,Oy=(...t)=>`calc(${tg("*",...t)})`,p5=(...t)=>`calc(${tg("/",...t)})`,m5=t=>{const e=oI(t);return e!=null&&!Number.isNaN(parseFloat(e))?String(e).startsWith("-")?String(e).slice(1):`-${e}`:Oy(e,-1)},pi=Object.assign(t=>({add:(...e)=>pi(f5(t,...e)),subtract:(...e)=>pi(h5(t,...e)),multiply:(...e)=>pi(Oy(t,...e)),divide:(...e)=>pi(p5(t,...e)),negate:()=>pi(m5(t)),toString:()=>t.toString()}),{add:f5,subtract:h5,multiply:Oy,divide:p5,negate:m5});function YB(t){return!Number.isInteger(parseFloat(t.toString()))}function KB(t,e="-"){return t.replace(/\s+/g,e)}function sI(t){const e=KB(t.toString());return e.includes("\\.")?t:YB(t)?e.replace(".","\\."):t}function UB(t,e=""){return[e,sI(t)].filter(Boolean).join("-")}function qB(t,e){return`var(${sI(t)}${e?`, ${e}`:""})`}function JB(t,e=""){return`--${UB(t,e)}`}function gt(t,e){const n=JB(t,e==null?void 0:e.prefix);return{variable:n,reference:qB(n,QB(e==null?void 0:e.fallback))}}function QB(t){return typeof t=="string"?t:t==null?void 0:t.reference}var{definePartsStyle:_B,defineMultiStyleConfig:$B}=Fe(qj.keys),eY={borderTopWidth:"1px",borderColor:"inherit",_last:{borderBottomWidth:"1px"}},tY={transitionProperty:"common",transitionDuration:"normal",fontSize:"md",_focusVisible:{boxShadow:"outline"},_hover:{bg:"blackAlpha.50"},_disabled:{opacity:.4,cursor:"not-allowed"},px:"4",py:"2"},nY={pt:"2",px:"4",pb:"5"},rY={fontSize:"1.25em"},iY=_B({container:eY,button:tY,panel:nY,icon:rY}),oY=$B({baseStyle:iY}),{definePartsStyle:md,defineMultiStyleConfig:sY}=Fe(Jj.keys),En=ze("alert-fg"),Ti=ze("alert-bg"),aY=md({container:{bg:Ti.reference,px:"4",py:"3"},title:{fontWeight:"bold",lineHeight:"6",marginEnd:"2"},description:{lineHeight:"6"},icon:{color:En.reference,flexShrink:0,marginEnd:"3",w:"5",h:"6"},spinner:{color:En.reference,flexShrink:0,marginEnd:"3",w:"5",h:"5"}});function iS(t){const{theme:e,colorScheme:n}=t,r=Sl(`${n}.200`,.16)(e);return{light:`colors.${n}.100`,dark:r}}var lY=md(t=>{const{colorScheme:e}=t,n=iS(t);return{container:{[En.variable]:`colors.${e}.500`,[Ti.variable]:n.light,_dark:{[En.variable]:`colors.${e}.200`,[Ti.variable]:n.dark}}}}),cY=md(t=>{const{colorScheme:e}=t,n=iS(t);return{container:{[En.variable]:`colors.${e}.500`,[Ti.variable]:n.light,_dark:{[En.variable]:`colors.${e}.200`,[Ti.variable]:n.dark},paddingStart:"3",borderStartWidth:"4px",borderStartColor:En.reference}}}),uY=md(t=>{const{colorScheme:e}=t,n=iS(t);return{container:{[En.variable]:`colors.${e}.500`,[Ti.variable]:n.light,_dark:{[En.variable]:`colors.${e}.200`,[Ti.variable]:n.dark},pt:"2",borderTopWidth:"4px",borderTopColor:En.reference}}}),dY=md(t=>{const{colorScheme:e}=t;return{container:{[En.variable]:"colors.white",[Ti.variable]:`colors.${e}.500`,_dark:{[En.variable]:"colors.gray.900",[Ti.variable]:`colors.${e}.200`},color:En.reference}}}),fY={subtle:lY,"left-accent":cY,"top-accent":uY,solid:dY},hY=sY({baseStyle:aY,variants:fY,defaultProps:{variant:"subtle",colorScheme:"blue"}}),aI={px:"1px",.5:"0.125rem",1:"0.25rem",1.5:"0.375rem",2:"0.5rem",2.5:"0.625rem",3:"0.75rem",3.5:"0.875rem",4:"1rem",5:"1.25rem",6:"1.5rem",7:"1.75rem",8:"2rem",9:"2.25rem",10:"2.5rem",12:"3rem",14:"3.5rem",16:"4rem",20:"5rem",24:"6rem",28:"7rem",32:"8rem",36:"9rem",40:"10rem",44:"11rem",48:"12rem",52:"13rem",56:"14rem",60:"15rem",64:"16rem",72:"18rem",80:"20rem",96:"24rem"},pY={max:"max-content",min:"min-content",full:"100%","3xs":"14rem","2xs":"16rem",xs:"20rem",sm:"24rem",md:"28rem",lg:"32rem",xl:"36rem","2xl":"42rem","3xl":"48rem","4xl":"56rem","5xl":"64rem","6xl":"72rem","7xl":"80rem","8xl":"90rem",prose:"60ch"},mY={sm:"640px",md:"768px",lg:"1024px",xl:"1280px"},gY={...aI,...pY,container:mY},lI=gY,bY=t=>typeof t=="function";function $t(t,...e){return bY(t)?t(...e):t}var{definePartsStyle:cI,defineMultiStyleConfig:vY}=Fe(Qj.keys),Ya=ze("avatar-border-color"),Z0=ze("avatar-bg"),yY={borderRadius:"full",border:"0.2em solid",[Ya.variable]:"white",_dark:{[Ya.variable]:"colors.gray.800"},borderColor:Ya.reference},xY={[Z0.variable]:"colors.gray.200",_dark:{[Z0.variable]:"colors.whiteAlpha.400"},bgColor:Z0.reference},g5=ze("avatar-background"),SY=t=>{const{name:e,theme:n}=t,r=e?HB({string:e}):"colors.gray.400",i=FB(r)(n);let o="white";return i||(o="gray.800"),{bg:g5.reference,"&:not([data-loaded])":{[g5.variable]:r},color:o,[Ya.variable]:"colors.white",_dark:{[Ya.variable]:"colors.gray.800"},borderColor:Ya.reference,verticalAlign:"top"}},kY=cI(t=>({badge:$t(yY,t),excessLabel:$t(xY,t),container:$t(SY,t)}));function Xi(t){const e=t!=="100%"?lI[t]:void 0;return cI({container:{width:t,height:t,fontSize:`calc(${e!=null?e:t} / 2.5)`},excessLabel:{width:t,height:t},label:{fontSize:`calc(${e!=null?e:t} / 2.5)`,lineHeight:t!=="100%"?e!=null?e:t:void 0}})}var wY={"2xs":Xi(4),xs:Xi(6),sm:Xi(8),md:Xi(12),lg:Xi(16),xl:Xi(24),"2xl":Xi(32),full:Xi("100%")},PY=vY({baseStyle:kY,sizes:wY,defaultProps:{size:"md"}}),OY={px:1,textTransform:"uppercase",fontSize:"xs",borderRadius:"sm",fontWeight:"bold"},Ka=ze("badge-bg"),Dr=ze("badge-color"),CY=t=>{const{colorScheme:e,theme:n}=t,r=Sl(`${e}.500`,.6)(n);return{[Ka.variable]:`colors.${e}.500`,[Dr.variable]:"colors.white",_dark:{[Ka.variable]:r,[Dr.variable]:"colors.whiteAlpha.800"},bg:Ka.reference,color:Dr.reference}},TY=t=>{const{colorScheme:e,theme:n}=t,r=Sl(`${e}.200`,.16)(n);return{[Ka.variable]:`colors.${e}.100`,[Dr.variable]:`colors.${e}.800`,_dark:{[Ka.variable]:r,[Dr.variable]:`colors.${e}.200`},bg:Ka.reference,color:Dr.reference}},zY=t=>{const{colorScheme:e,theme:n}=t,r=Sl(`${e}.200`,.8)(n);return{[Dr.variable]:`colors.${e}.500`,_dark:{[Dr.variable]:r},color:Dr.reference,boxShadow:`inset 0 0 0px 1px ${Dr.reference}`}},VY={solid:CY,subtle:TY,outline:zY},jc={baseStyle:OY,variants:VY,defaultProps:{variant:"subtle",colorScheme:"gray"}},{defineMultiStyleConfig:EY,definePartsStyle:NY}=Fe(_j.keys),IY={transitionProperty:"common",transitionDuration:"fast",transitionTimingFunction:"ease-out",cursor:"pointer",textDecoration:"none",outline:"none",color:"inherit",_hover:{textDecoration:"underline"},_focusVisible:{boxShadow:"outline"}},MY=NY({link:IY}),AY=EY({baseStyle:MY}),LY={lineHeight:"1.2",borderRadius:"md",fontWeight:"semibold",transitionProperty:"common",transitionDuration:"normal",_focusVisible:{boxShadow:"outline"},_disabled:{opacity:.4,cursor:"not-allowed",boxShadow:"none"},_hover:{_disabled:{bg:"initial"}}},uI=t=>{const{colorScheme:e,theme:n}=t;if(e==="gray")return{color:te("inherit","whiteAlpha.900")(t),_hover:{bg:te("gray.100","whiteAlpha.200")(t)},_active:{bg:te("gray.200","whiteAlpha.300")(t)}};const r=Sl(`${e}.200`,.12)(n),i=Sl(`${e}.200`,.24)(n);return{color:te(`${e}.600`,`${e}.200`)(t),bg:"transparent",_hover:{bg:te(`${e}.50`,r)(t)},_active:{bg:te(`${e}.100`,i)(t)}}},ZY=t=>{const{colorScheme:e}=t,n=te("gray.200","whiteAlpha.300")(t);return{border:"1px solid",borderColor:e==="gray"?n:"currentColor",".chakra-button__group[data-attached] > &:not(:last-of-type)":{marginEnd:"-1px"},...$t(uI,t)}},XY={yellow:{bg:"yellow.400",color:"black",hoverBg:"yellow.500",activeBg:"yellow.600"},cyan:{bg:"cyan.400",color:"black",hoverBg:"cyan.500",activeBg:"cyan.600"}},WY=t=>{var a;const{colorScheme:e}=t;if(e==="gray"){const l=te("gray.100","whiteAlpha.200")(t);return{bg:l,_hover:{bg:te("gray.200","whiteAlpha.300")(t),_disabled:{bg:l}},_active:{bg:te("gray.300","whiteAlpha.400")(t)}}}const{bg:n=`${e}.500`,color:r="white",hoverBg:i=`${e}.600`,activeBg:o=`${e}.700`}=(a=XY[e])!=null?a:{},s=te(n,`${e}.200`)(t);return{bg:s,color:te(r,"gray.800")(t),_hover:{bg:te(i,`${e}.300`)(t),_disabled:{bg:s}},_active:{bg:te(o,`${e}.400`)(t)}}},RY=t=>{const{colorScheme:e}=t;return{padding:0,height:"auto",lineHeight:"normal",verticalAlign:"baseline",color:te(`${e}.500`,`${e}.200`)(t),_hover:{textDecoration:"underline",_disabled:{textDecoration:"none"}},_active:{color:te(`${e}.700`,`${e}.500`)(t)}}},FY={bg:"none",color:"inherit",display:"inline",lineHeight:"inherit",m:"0",p:"0"},HY={ghost:uI,outline:ZY,solid:WY,link:RY,unstyled:FY},DY={lg:{h:"12",minW:"12",fontSize:"lg",px:"6"},md:{h:"10",minW:"10",fontSize:"md",px:"4"},sm:{h:"8",minW:"8",fontSize:"sm",px:"3"},xs:{h:"6",minW:"6",fontSize:"xs",px:"2"}},GY={baseStyle:LY,variants:HY,sizes:DY,defaultProps:{variant:"solid",size:"md",colorScheme:"gray"}},{definePartsStyle:xs,defineMultiStyleConfig:jY}=Fe(yB.keys),Ap=ze("card-bg"),Ua=ze("card-padding"),BY=xs({container:{[Ap.variable]:"chakra-body-bg",backgroundColor:Ap.reference,color:"chakra-body-text"},body:{padding:Ua.reference,flex:"1 1 0%"},header:{padding:Ua.reference},footer:{padding:Ua.reference}}),YY={sm:xs({container:{borderRadius:"base",[Ua.variable]:"space.3"}}),md:xs({container:{borderRadius:"md",[Ua.variable]:"space.5"}}),lg:xs({container:{borderRadius:"xl",[Ua.variable]:"space.7"}})},KY={elevated:xs({container:{boxShadow:"base",_dark:{[Ap.variable]:"colors.gray.700"}}}),outline:xs({container:{borderWidth:"1px",borderColor:"chakra-border-color"}}),filled:xs({container:{[Ap.variable]:"colors.chakra-subtle-bg"}}),unstyled:{body:{padding:0},header:{padding:0},footer:{padding:0}}},UY=jY({baseStyle:BY,variants:KY,sizes:YY,defaultProps:{variant:"elevated",size:"md"}}),{definePartsStyle:gh,defineMultiStyleConfig:qY}=Fe($j.keys),Bc=ze("checkbox-size"),JY=t=>{const{colorScheme:e}=t;return{w:Bc.reference,h:Bc.reference,transitionProperty:"box-shadow",transitionDuration:"normal",border:"2px solid",borderRadius:"sm",borderColor:"inherit",color:"white",_checked:{bg:te(`${e}.500`,`${e}.200`)(t),borderColor:te(`${e}.500`,`${e}.200`)(t),color:te("white","gray.900")(t),_hover:{bg:te(`${e}.600`,`${e}.300`)(t),borderColor:te(`${e}.600`,`${e}.300`)(t)},_disabled:{borderColor:te("gray.200","transparent")(t),bg:te("gray.200","whiteAlpha.300")(t),color:te("gray.500","whiteAlpha.500")(t)}},_indeterminate:{bg:te(`${e}.500`,`${e}.200`)(t),borderColor:te(`${e}.500`,`${e}.200`)(t),color:te("white","gray.900")(t)},_disabled:{bg:te("gray.100","whiteAlpha.100")(t),borderColor:te("gray.100","transparent")(t)},_focusVisible:{boxShadow:"outline"},_invalid:{borderColor:te("red.500","red.300")(t)}}},QY={_disabled:{cursor:"not-allowed"}},_Y={userSelect:"none",_disabled:{opacity:.4}},$Y={transitionProperty:"transform",transitionDuration:"normal"},eK=gh(t=>({icon:$Y,container:QY,control:$t(JY,t),label:_Y})),tK={sm:gh({control:{[Bc.variable]:"sizes.3"},label:{fontSize:"sm"},icon:{fontSize:"3xs"}}),md:gh({control:{[Bc.variable]:"sizes.4"},label:{fontSize:"md"},icon:{fontSize:"2xs"}}),lg:gh({control:{[Bc.variable]:"sizes.5"},label:{fontSize:"lg"},icon:{fontSize:"2xs"}})},Lp=qY({baseStyle:eK,sizes:tK,defaultProps:{size:"md",colorScheme:"blue"}}),Yc=gt("close-button-size"),ac=gt("close-button-bg"),nK={w:[Yc.reference],h:[Yc.reference],borderRadius:"md",transitionProperty:"common",transitionDuration:"normal",_disabled:{opacity:.4,cursor:"not-allowed",boxShadow:"none"},_hover:{[ac.variable]:"colors.blackAlpha.100",_dark:{[ac.variable]:"colors.whiteAlpha.100"}},_active:{[ac.variable]:"colors.blackAlpha.200",_dark:{[ac.variable]:"colors.whiteAlpha.200"}},_focusVisible:{boxShadow:"outline"},bg:ac.reference},rK={lg:{[Yc.variable]:"sizes.10",fontSize:"md"},md:{[Yc.variable]:"sizes.8",fontSize:"xs"},sm:{[Yc.variable]:"sizes.6",fontSize:"2xs"}},iK={baseStyle:nK,sizes:rK,defaultProps:{size:"md"}},{variants:oK,defaultProps:sK}=jc,aK={fontFamily:"mono",fontSize:"sm",px:"0.2em",borderRadius:"sm"},lK={baseStyle:aK,variants:oK,defaultProps:sK},cK={w:"100%",mx:"auto",maxW:"prose",px:"4"},uK={baseStyle:cK},dK={opacity:.6,borderColor:"inherit"},fK={borderStyle:"solid"},hK={borderStyle:"dashed"},pK={solid:fK,dashed:hK},mK={baseStyle:dK,variants:pK,defaultProps:{variant:"solid"}},{definePartsStyle:Cy,defineMultiStyleConfig:gK}=Fe(eB.keys),X0=ze("drawer-bg"),W0=ze("drawer-box-shadow");function oa(t){return Cy(t==="full"?{dialog:{maxW:"100vw",h:"100vh"}}:{dialog:{maxW:t}})}var bK={bg:"blackAlpha.600",zIndex:"overlay"},vK={display:"flex",zIndex:"modal",justifyContent:"center"},yK=t=>{const{isFullHeight:e}=t;return{...e&&{height:"100vh"},zIndex:"modal",maxH:"100vh",color:"inherit",[X0.variable]:"colors.white",[W0.variable]:"shadows.lg",_dark:{[X0.variable]:"colors.gray.700",[W0.variable]:"shadows.dark-lg"},bg:X0.reference,boxShadow:W0.reference}},xK={px:"6",py:"4",fontSize:"xl",fontWeight:"semibold"},SK={position:"absolute",top:"2",insetEnd:"3"},kK={px:"6",py:"2",flex:"1",overflow:"auto"},wK={px:"6",py:"4"},PK=Cy(t=>({overlay:bK,dialogContainer:vK,dialog:$t(yK,t),header:xK,closeButton:SK,body:kK,footer:wK})),OK={xs:oa("xs"),sm:oa("md"),md:oa("lg"),lg:oa("2xl"),xl:oa("4xl"),full:oa("full")},CK=gK({baseStyle:PK,sizes:OK,defaultProps:{size:"xs"}}),{definePartsStyle:TK,defineMultiStyleConfig:zK}=Fe(tB.keys),VK={borderRadius:"md",py:"1",transitionProperty:"common",transitionDuration:"normal"},EK={borderRadius:"md",py:"1",transitionProperty:"common",transitionDuration:"normal",width:"full",_focusVisible:{boxShadow:"outline"},_placeholder:{opacity:.6}},NK={borderRadius:"md",py:"1",transitionProperty:"common",transitionDuration:"normal",width:"full",_focusVisible:{boxShadow:"outline"},_placeholder:{opacity:.6}},IK=TK({preview:VK,input:EK,textarea:NK}),MK=zK({baseStyle:IK}),{definePartsStyle:AK,defineMultiStyleConfig:LK}=Fe(nB.keys),qa=ze("form-control-color"),ZK={marginStart:"1",[qa.variable]:"colors.red.500",_dark:{[qa.variable]:"colors.red.300"},color:qa.reference},XK={mt:"2",[qa.variable]:"colors.gray.600",_dark:{[qa.variable]:"colors.whiteAlpha.600"},color:qa.reference,lineHeight:"normal",fontSize:"sm"},WK=AK({container:{width:"100%",position:"relative"},requiredIndicator:ZK,helperText:XK}),RK=LK({baseStyle:WK}),{definePartsStyle:FK,defineMultiStyleConfig:HK}=Fe(rB.keys),Ja=ze("form-error-color"),DK={[Ja.variable]:"colors.red.500",_dark:{[Ja.variable]:"colors.red.300"},color:Ja.reference,mt:"2",fontSize:"sm",lineHeight:"normal"},GK={marginEnd:"0.5em",[Ja.variable]:"colors.red.500",_dark:{[Ja.variable]:"colors.red.300"},color:Ja.reference},jK=FK({text:DK,icon:GK}),BK=HK({baseStyle:jK}),YK={fontSize:"md",marginEnd:"3",mb:"2",fontWeight:"medium",transitionProperty:"common",transitionDuration:"normal",opacity:1,_disabled:{opacity:.4}},KK={baseStyle:YK},UK={fontFamily:"heading",fontWeight:"bold"},qK={"4xl":{fontSize:["6xl",null,"7xl"],lineHeight:1},"3xl":{fontSize:["5xl",null,"6xl"],lineHeight:1},"2xl":{fontSize:["4xl",null,"5xl"],lineHeight:[1.2,null,1]},xl:{fontSize:["3xl",null,"4xl"],lineHeight:[1.33,null,1.2]},lg:{fontSize:["2xl",null,"3xl"],lineHeight:[1.33,null,1.2]},md:{fontSize:"xl",lineHeight:1.2},sm:{fontSize:"md",lineHeight:1.2},xs:{fontSize:"sm",lineHeight:1.2}},JK={baseStyle:UK,sizes:qK,defaultProps:{size:"xl"}},{definePartsStyle:bi,defineMultiStyleConfig:QK}=Fe(iB.keys),_K=bi({field:{width:"100%",minWidth:0,outline:0,position:"relative",appearance:"none",transitionProperty:"common",transitionDuration:"normal",_disabled:{opacity:.4,cursor:"not-allowed"}}}),Wi={lg:{fontSize:"lg",px:"4",h:"12",borderRadius:"md"},md:{fontSize:"md",px:"4",h:"10",borderRadius:"md"},sm:{fontSize:"sm",px:"3",h:"8",borderRadius:"sm"},xs:{fontSize:"xs",px:"2",h:"6",borderRadius:"sm"}},$K={lg:bi({field:Wi.lg,addon:Wi.lg}),md:bi({field:Wi.md,addon:Wi.md}),sm:bi({field:Wi.sm,addon:Wi.sm}),xs:bi({field:Wi.xs,addon:Wi.xs})};function oS(t){const{focusBorderColor:e,errorBorderColor:n}=t;return{focusBorderColor:e||te("blue.500","blue.300")(t),errorBorderColor:n||te("red.500","red.300")(t)}}var eU=bi(t=>{const{theme:e}=t,{focusBorderColor:n,errorBorderColor:r}=oS(t);return{field:{border:"1px solid",borderColor:"inherit",bg:"inherit",_hover:{borderColor:te("gray.300","whiteAlpha.400")(t)},_readOnly:{boxShadow:"none !important",userSelect:"all"},_invalid:{borderColor:Jt(e,r),boxShadow:`0 0 0 1px ${Jt(e,r)}`},_focusVisible:{zIndex:1,borderColor:Jt(e,n),boxShadow:`0 0 0 1px ${Jt(e,n)}`}},addon:{border:"1px solid",borderColor:te("inherit","whiteAlpha.50")(t),bg:te("gray.100","whiteAlpha.300")(t)}}}),tU=bi(t=>{const{theme:e}=t,{focusBorderColor:n,errorBorderColor:r}=oS(t);return{field:{border:"2px solid",borderColor:"transparent",bg:te("gray.100","whiteAlpha.50")(t),_hover:{bg:te("gray.200","whiteAlpha.100")(t)},_readOnly:{boxShadow:"none !important",userSelect:"all"},_invalid:{borderColor:Jt(e,r)},_focusVisible:{bg:"transparent",borderColor:Jt(e,n)}},addon:{border:"2px solid",borderColor:"transparent",bg:te("gray.100","whiteAlpha.50")(t)}}}),nU=bi(t=>{const{theme:e}=t,{focusBorderColor:n,errorBorderColor:r}=oS(t);return{field:{borderBottom:"1px solid",borderColor:"inherit",borderRadius:"0",px:"0",bg:"transparent",_readOnly:{boxShadow:"none !important",userSelect:"all"},_invalid:{borderColor:Jt(e,r),boxShadow:`0px 1px 0px 0px ${Jt(e,r)}`},_focusVisible:{borderColor:Jt(e,n),boxShadow:`0px 1px 0px 0px ${Jt(e,n)}`}},addon:{borderBottom:"2px solid",borderColor:"inherit",borderRadius:"0",px:"0",bg:"transparent"}}}),rU=bi({field:{bg:"transparent",px:"0",height:"auto"},addon:{bg:"transparent",px:"0",height:"auto"}}),iU={outline:eU,filled:tU,flushed:nU,unstyled:rU},xe=QK({baseStyle:_K,sizes:$K,variants:iU,defaultProps:{size:"md",variant:"outline"}}),R0=ze("kbd-bg"),oU={[R0.variable]:"colors.gray.100",_dark:{[R0.variable]:"colors.whiteAlpha.100"},bg:R0.reference,borderRadius:"md",borderWidth:"1px",borderBottomWidth:"3px",fontSize:"0.8em",fontWeight:"bold",lineHeight:"normal",px:"0.4em",whiteSpace:"nowrap"},sU={baseStyle:oU},aU={transitionProperty:"common",transitionDuration:"fast",transitionTimingFunction:"ease-out",cursor:"pointer",textDecoration:"none",outline:"none",color:"inherit",_hover:{textDecoration:"underline"},_focusVisible:{boxShadow:"outline"}},lU={baseStyle:aU},{defineMultiStyleConfig:cU,definePartsStyle:uU}=Fe(oB.keys),dU={marginEnd:"2",display:"inline",verticalAlign:"text-bottom"},fU=uU({icon:dU}),hU=cU({baseStyle:fU}),{defineMultiStyleConfig:pU,definePartsStyle:mU}=Fe(sB.keys),Mr=ze("menu-bg"),F0=ze("menu-shadow"),gU={[Mr.variable]:"#fff",[F0.variable]:"shadows.sm",_dark:{[Mr.variable]:"colors.gray.700",[F0.variable]:"shadows.dark-lg"},color:"inherit",minW:"3xs",py:"2",zIndex:1,borderRadius:"md",borderWidth:"1px",bg:Mr.reference,boxShadow:F0.reference},bU={py:"1.5",px:"3",transitionProperty:"background",transitionDuration:"ultra-fast",transitionTimingFunction:"ease-in",_focus:{[Mr.variable]:"colors.gray.100",_dark:{[Mr.variable]:"colors.whiteAlpha.100"}},_active:{[Mr.variable]:"colors.gray.200",_dark:{[Mr.variable]:"colors.whiteAlpha.200"}},_expanded:{[Mr.variable]:"colors.gray.100",_dark:{[Mr.variable]:"colors.whiteAlpha.100"}},_disabled:{opacity:.4,cursor:"not-allowed"},bg:Mr.reference},vU={mx:4,my:2,fontWeight:"semibold",fontSize:"sm"},yU={opacity:.6},xU={border:0,borderBottom:"1px solid",borderColor:"inherit",my:"2",opacity:.6},SU={transitionProperty:"common",transitionDuration:"normal"},kU=mU({button:SU,list:gU,item:bU,groupTitle:vU,command:yU,divider:xU}),wU=pU({baseStyle:kU}),{defineMultiStyleConfig:PU,definePartsStyle:Ty}=Fe(aB.keys),OU={bg:"blackAlpha.600",zIndex:"modal"},CU=t=>{const{isCentered:e,scrollBehavior:n}=t;return{display:"flex",zIndex:"modal",justifyContent:"center",alignItems:e?"center":"flex-start",overflow:n==="inside"?"hidden":"auto"}},TU=t=>{const{scrollBehavior:e}=t;return{borderRadius:"md",bg:te("white","gray.700")(t),color:"inherit",my:"16",zIndex:"modal",maxH:e==="inside"?"calc(100% - 7.5rem)":void 0,boxShadow:te("lg","dark-lg")(t)}},zU={px:"6",py:"4",fontSize:"xl",fontWeight:"semibold"},VU={position:"absolute",top:"2",insetEnd:"3"},EU=t=>{const{scrollBehavior:e}=t;return{px:"6",py:"2",flex:"1",overflow:e==="inside"?"auto":void 0}},NU={px:"6",py:"4"},IU=Ty(t=>({overlay:OU,dialogContainer:$t(CU,t),dialog:$t(TU,t),header:zU,closeButton:VU,body:$t(EU,t),footer:NU}));function ar(t){return Ty(t==="full"?{dialog:{maxW:"100vw",minH:"$100vh",my:"0",borderRadius:"0"}}:{dialog:{maxW:t}})}var MU={xs:ar("xs"),sm:ar("sm"),md:ar("md"),lg:ar("lg"),xl:ar("xl"),"2xl":ar("2xl"),"3xl":ar("3xl"),"4xl":ar("4xl"),"5xl":ar("5xl"),"6xl":ar("6xl"),full:ar("full")},AU=PU({baseStyle:IU,sizes:MU,defaultProps:{size:"md"}}),LU={letterSpacings:{tighter:"-0.05em",tight:"-0.025em",normal:"0",wide:"0.025em",wider:"0.05em",widest:"0.1em"},lineHeights:{normal:"normal",none:1,shorter:1.25,short:1.375,base:1.5,tall:1.625,taller:"2",3:".75rem",4:"1rem",5:"1.25rem",6:"1.5rem",7:"1.75rem",8:"2rem",9:"2.25rem",10:"2.5rem"},fontWeights:{hairline:100,thin:200,light:300,normal:400,medium:500,semibold:600,bold:700,extrabold:800,black:900},fonts:{heading:'-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace'},fontSizes:{"3xs":"0.45rem","2xs":"0.625rem",xs:"0.75rem",sm:"0.875rem",md:"1rem",lg:"1.125rem",xl:"1.25rem","2xl":"1.5rem","3xl":"1.875rem","4xl":"2.25rem","5xl":"3rem","6xl":"3.75rem","7xl":"4.5rem","8xl":"6rem","9xl":"8rem"}},dI=LU,{defineMultiStyleConfig:ZU,definePartsStyle:fI}=Fe(lB.keys),sS=gt("number-input-stepper-width"),hI=gt("number-input-input-padding"),XU=pi(sS).add("0.5rem").toString(),H0=gt("number-input-bg"),D0=gt("number-input-color"),G0=gt("number-input-border-color"),WU={[sS.variable]:"sizes.6",[hI.variable]:XU},RU=t=>{var n;var e;return(n=(e=$t(xe.baseStyle,t))==null?void 0:e.field)!=null?n:{}},FU={width:sS.reference},HU={borderStart:"1px solid",borderStartColor:G0.reference,color:D0.reference,bg:H0.reference,[D0.variable]:"colors.chakra-body-text",[G0.variable]:"colors.chakra-border-color",_dark:{[D0.variable]:"colors.whiteAlpha.800",[G0.variable]:"colors.whiteAlpha.300"},_active:{[H0.variable]:"colors.gray.200",_dark:{[H0.variable]:"colors.whiteAlpha.300"}},_disabled:{opacity:.4,cursor:"not-allowed"}},DU=fI(t=>{var e;return{root:WU,field:(e=$t(RU,t))!=null?e:{},stepperGroup:FU,stepper:HU}});function Pf(t){var a;var e,n;const r=(e=xe.sizes)==null?void 0:e[t],i={lg:"md",md:"md",sm:"sm",xs:"sm"},o=(a=(n=r.field)==null?void 0:n.fontSize)!=null?a:"md",s=dI.fontSizes[o];return fI({field:{...r.field,paddingInlineEnd:hI.reference,verticalAlign:"top"},stepper:{fontSize:pi(s).multiply(.75).toString(),_first:{borderTopEndRadius:i[t]},_last:{borderBottomEndRadius:i[t],mt:"-1px",borderTopWidth:1}}})}var GU={xs:Pf("xs"),sm:Pf("sm"),md:Pf("md"),lg:Pf("lg")},jU=ZU({baseStyle:DU,sizes:GU,variants:xe.variants,defaultProps:xe.defaultProps}),b5,BU={...(b5=xe.baseStyle)==null?void 0:b5.field,textAlign:"center"},YU={lg:{fontSize:"lg",w:12,h:12,borderRadius:"md"},md:{fontSize:"md",w:10,h:10,borderRadius:"md"},sm:{fontSize:"sm",w:8,h:8,borderRadius:"sm"},xs:{fontSize:"xs",w:6,h:6,borderRadius:"sm"}},v5,A9,KU={outline:t=>{var r;var e,n;return(r=(n=$t((e=xe.variants)==null?void 0:e.outline,t))==null?void 0:n.field)!=null?r:{}},flushed:t=>{var r;var e,n;return(r=(n=$t((e=xe.variants)==null?void 0:e.flushed,t))==null?void 0:n.field)!=null?r:{}},filled:t=>{var r;var e,n;return(r=(n=$t((e=xe.variants)==null?void 0:e.filled,t))==null?void 0:n.field)!=null?r:{}},unstyled:(A9=(v5=xe.variants)==null?void 0:v5.unstyled.field)!=null?A9:{}},UU={baseStyle:BU,sizes:YU,variants:KU,defaultProps:xe.defaultProps},{defineMultiStyleConfig:qU,definePartsStyle:JU}=Fe(cB.keys),Of=gt("popper-bg"),QU=gt("popper-arrow-bg"),y5=gt("popper-arrow-shadow-color"),_U={zIndex:10},$U={[Of.variable]:"colors.white",bg:Of.reference,[QU.variable]:Of.reference,[y5.variable]:"colors.gray.200",_dark:{[Of.variable]:"colors.gray.700",[y5.variable]:"colors.whiteAlpha.300"},width:"xs",border:"1px solid",borderColor:"inherit",borderRadius:"md",boxShadow:"sm",zIndex:"inherit",_focusVisible:{outline:0,boxShadow:"outline"}},eq={px:3,py:2,borderBottomWidth:"1px"},tq={px:3,py:2},nq={px:3,py:2,borderTopWidth:"1px"},rq={position:"absolute",borderRadius:"md",top:1,insetEnd:2,padding:2},iq=JU({popper:_U,content:$U,header:eq,body:tq,footer:nq,closeButton:rq}),oq=qU({baseStyle:iq}),{defineMultiStyleConfig:sq,definePartsStyle:Oc}=Fe(uB.keys),aq=t=>{const{colorScheme:e,theme:n,isIndeterminate:r,hasStripe:i}=t,o=te(d5(),d5("1rem","rgba(0,0,0,0.1)"))(t),s=te(`${e}.500`,`${e}.200`)(t),a=`linear-gradient(
    to right,
    transparent 0%,
    ${Jt(n,s)} 50%,
    transparent 100%
  )`;return{...!r&&i&&o,...r?{bgImage:a}:{bgColor:s}}},lq={lineHeight:"1",fontSize:"0.25em",fontWeight:"bold",color:"white"},cq=t=>({bg:te("gray.100","whiteAlpha.300")(t)}),uq=t=>({transitionProperty:"common",transitionDuration:"slow",...aq(t)}),dq=Oc(t=>({label:lq,filledTrack:uq(t),track:cq(t)})),fq={xs:Oc({track:{h:"1"}}),sm:Oc({track:{h:"2"}}),md:Oc({track:{h:"3"}}),lg:Oc({track:{h:"4"}})},hq=sq({sizes:fq,baseStyle:dq,defaultProps:{size:"md",colorScheme:"blue"}}),{defineMultiStyleConfig:pq,definePartsStyle:bh}=Fe(dB.keys),mq=t=>{var e;const n=(e=$t(Lp.baseStyle,t))==null?void 0:e.control;return{...n,borderRadius:"full",_checked:{...n==null?void 0:n._checked,_before:{content:'""',display:"inline-block",pos:"relative",w:"50%",h:"50%",borderRadius:"50%",bg:"currentColor"}}}},gq=bh(t=>{var e,n,r,i;return{label:(n=(e=Lp).baseStyle)==null?void 0:n.call(e,t).label,container:(i=(r=Lp).baseStyle)==null?void 0:i.call(r,t).container,control:mq(t)}}),bq={md:bh({control:{w:"4",h:"4"},label:{fontSize:"md"}}),lg:bh({control:{w:"5",h:"5"},label:{fontSize:"lg"}}),sm:bh({control:{width:"3",height:"3"},label:{fontSize:"sm"}})},vq=pq({baseStyle:gq,sizes:bq,defaultProps:{size:"md",colorScheme:"blue"}}),{defineMultiStyleConfig:yq,definePartsStyle:xq}=Fe(fB.keys),Cf=ze("select-bg"),x5,Sq={...(x5=xe.baseStyle)==null?void 0:x5.field,appearance:"none",paddingBottom:"1px",lineHeight:"normal",bg:Cf.reference,[Cf.variable]:"colors.white",_dark:{[Cf.variable]:"colors.gray.700"},"> option, > optgroup":{bg:Cf.reference}},kq={width:"6",height:"100%",insetEnd:"2",position:"relative",color:"currentColor",fontSize:"xl",_disabled:{opacity:.5}},wq=xq({field:Sq,icon:kq}),Tf={paddingInlineEnd:"8"},S5,k5,w5,P5,O5,C5,T5,z5,Pq={lg:{...(S5=xe.sizes)==null?void 0:S5.lg,field:{...(k5=xe.sizes)==null?void 0:k5.lg.field,...Tf}},md:{...(w5=xe.sizes)==null?void 0:w5.md,field:{...(P5=xe.sizes)==null?void 0:P5.md.field,...Tf}},sm:{...(O5=xe.sizes)==null?void 0:O5.sm,field:{...(C5=xe.sizes)==null?void 0:C5.sm.field,...Tf}},xs:{...(T5=xe.sizes)==null?void 0:T5.xs,field:{...(z5=xe.sizes)==null?void 0:z5.xs.field,...Tf},icon:{insetEnd:"1"}}},Oq=yq({baseStyle:wq,sizes:Pq,variants:xe.variants,defaultProps:xe.defaultProps}),j0=ze("skeleton-start-color"),B0=ze("skeleton-end-color"),Cq={[j0.variable]:"colors.gray.100",[B0.variable]:"colors.gray.400",_dark:{[j0.variable]:"colors.gray.800",[B0.variable]:"colors.gray.600"},background:j0.reference,borderColor:B0.reference,opacity:.7,borderRadius:"sm"},Tq={baseStyle:Cq},Y0=ze("skip-link-bg"),zq={borderRadius:"md",fontWeight:"semibold",_focusVisible:{boxShadow:"outline",padding:"4",position:"fixed",top:"6",insetStart:"6",[Y0.variable]:"colors.white",_dark:{[Y0.variable]:"colors.gray.700"},bg:Y0.reference}},Vq={baseStyle:zq},{defineMultiStyleConfig:Eq,definePartsStyle:ng}=Fe(hB.keys),Du=ze("slider-thumb-size"),Gu=ze("slider-track-size"),Ji=ze("slider-bg"),Nq=t=>{const{orientation:e}=t;return{display:"inline-block",position:"relative",cursor:"pointer",_disabled:{opacity:.6,cursor:"default",pointerEvents:"none"},...rS({orientation:e,vertical:{h:"100%"},horizontal:{w:"100%"}})}},Iq=t=>({...rS({orientation:t.orientation,horizontal:{h:Gu.reference},vertical:{w:Gu.reference}}),overflow:"hidden",borderRadius:"sm",[Ji.variable]:"colors.gray.200",_dark:{[Ji.variable]:"colors.whiteAlpha.200"},_disabled:{[Ji.variable]:"colors.gray.300",_dark:{[Ji.variable]:"colors.whiteAlpha.300"}},bg:Ji.reference}),Mq=t=>{const{orientation:e}=t;return{...rS({orientation:e,vertical:{left:"50%",transform:"translateX(-50%)",_active:{transform:"translateX(-50%) scale(1.15)"}},horizontal:{top:"50%",transform:"translateY(-50%)",_active:{transform:"translateY(-50%) scale(1.15)"}}}),w:Du.reference,h:Du.reference,display:"flex",alignItems:"center",justifyContent:"center",position:"absolute",outline:0,zIndex:1,borderRadius:"full",bg:"white",boxShadow:"base",border:"1px solid",borderColor:"transparent",transitionProperty:"transform",transitionDuration:"normal",_focusVisible:{boxShadow:"outline"},_disabled:{bg:"gray.300"}}},Aq=t=>{const{colorScheme:e}=t;return{width:"inherit",height:"inherit",[Ji.variable]:`colors.${e}.500`,_dark:{[Ji.variable]:`colors.${e}.200`},bg:Ji.reference}},Lq=ng(t=>({container:Nq(t),track:Iq(t),thumb:Mq(t),filledTrack:Aq(t)})),Zq=ng({container:{[Du.variable]:"sizes.4",[Gu.variable]:"sizes.1"}}),Xq=ng({container:{[Du.variable]:"sizes.3.5",[Gu.variable]:"sizes.1"}}),Wq=ng({container:{[Du.variable]:"sizes.2.5",[Gu.variable]:"sizes.0.5"}}),Rq={lg:Zq,md:Xq,sm:Wq},Fq=Eq({baseStyle:Lq,sizes:Rq,defaultProps:{size:"md",colorScheme:"blue"}}),rs=gt("spinner-size"),Hq={width:[rs.reference],height:[rs.reference]},Dq={xs:{[rs.variable]:"sizes.3"},sm:{[rs.variable]:"sizes.4"},md:{[rs.variable]:"sizes.6"},lg:{[rs.variable]:"sizes.8"},xl:{[rs.variable]:"sizes.12"}},Gq={baseStyle:Hq,sizes:Dq,defaultProps:{size:"md"}},{defineMultiStyleConfig:jq,definePartsStyle:pI}=Fe(pB.keys),Bq={fontWeight:"medium"},Yq={opacity:.8,marginBottom:"2"},Kq={verticalAlign:"baseline",fontWeight:"semibold"},Uq={marginEnd:1,w:"3.5",h:"3.5",verticalAlign:"middle"},qq=pI({container:{},label:Bq,helpText:Yq,number:Kq,icon:Uq}),Jq={md:pI({label:{fontSize:"sm"},helpText:{fontSize:"sm"},number:{fontSize:"2xl"}})},Qq=jq({baseStyle:qq,sizes:Jq,defaultProps:{size:"md"}}),{defineMultiStyleConfig:_q,definePartsStyle:vh}=Fe(mB.keys),Kc=gt("switch-track-width"),Ss=gt("switch-track-height"),K0=gt("switch-track-diff"),$q=pi.subtract(Kc,Ss),zy=gt("switch-thumb-x"),lc=gt("switch-bg"),eJ=t=>{const{colorScheme:e}=t;return{borderRadius:"full",p:"0.5",width:[Kc.reference],height:[Ss.reference],transitionProperty:"common",transitionDuration:"fast",[lc.variable]:"colors.gray.300",_dark:{[lc.variable]:"colors.whiteAlpha.400"},_focusVisible:{boxShadow:"outline"},_disabled:{opacity:.4,cursor:"not-allowed"},_checked:{[lc.variable]:`colors.${e}.500`,_dark:{[lc.variable]:`colors.${e}.200`}},bg:lc.reference}},tJ={bg:"white",transitionProperty:"transform",transitionDuration:"normal",borderRadius:"inherit",width:[Ss.reference],height:[Ss.reference],_checked:{transform:`translateX(${zy.reference})`}},nJ=vh(t=>({container:{[K0.variable]:$q,[zy.variable]:K0.reference,_rtl:{[zy.variable]:pi(K0).negate().toString()}},track:eJ(t),thumb:tJ})),rJ={sm:vh({container:{[Kc.variable]:"1.375rem",[Ss.variable]:"sizes.3"}}),md:vh({container:{[Kc.variable]:"1.875rem",[Ss.variable]:"sizes.4"}}),lg:vh({container:{[Kc.variable]:"2.875rem",[Ss.variable]:"sizes.6"}})},iJ=_q({baseStyle:nJ,sizes:rJ,defaultProps:{size:"md",colorScheme:"blue"}}),{defineMultiStyleConfig:oJ,definePartsStyle:Qa}=Fe(gB.keys),sJ=Qa({table:{fontVariantNumeric:"lining-nums tabular-nums",borderCollapse:"collapse",width:"full"},th:{fontFamily:"heading",fontWeight:"bold",textTransform:"uppercase",letterSpacing:"wider",textAlign:"start"},td:{textAlign:"start"},caption:{mt:4,fontFamily:"heading",textAlign:"center",fontWeight:"medium"}}),Zp={"&[data-is-numeric=true]":{textAlign:"end"}},aJ=Qa(t=>{const{colorScheme:e}=t;return{th:{color:te("gray.600","gray.400")(t),borderBottom:"1px",borderColor:te(`${e}.100`,`${e}.700`)(t),...Zp},td:{borderBottom:"1px",borderColor:te(`${e}.100`,`${e}.700`)(t),...Zp},caption:{color:te("gray.600","gray.100")(t)},tfoot:{tr:{"&:last-of-type":{th:{borderBottomWidth:0}}}}}}),lJ=Qa(t=>{const{colorScheme:e}=t;return{th:{color:te("gray.600","gray.400")(t),borderBottom:"1px",borderColor:te(`${e}.100`,`${e}.700`)(t),...Zp},td:{borderBottom:"1px",borderColor:te(`${e}.100`,`${e}.700`)(t),...Zp},caption:{color:te("gray.600","gray.100")(t)},tbody:{tr:{"&:nth-of-type(odd)":{"th, td":{borderBottomWidth:"1px",borderColor:te(`${e}.100`,`${e}.700`)(t)},td:{background:te(`${e}.100`,`${e}.700`)(t)}}}},tfoot:{tr:{"&:last-of-type":{th:{borderBottomWidth:0}}}}}}),cJ={simple:aJ,striped:lJ,unstyled:{}},uJ={sm:Qa({th:{px:"4",py:"1",lineHeight:"4",fontSize:"xs"},td:{px:"4",py:"2",fontSize:"sm",lineHeight:"4"},caption:{px:"4",py:"2",fontSize:"xs"}}),md:Qa({th:{px:"6",py:"3",lineHeight:"4",fontSize:"xs"},td:{px:"6",py:"4",lineHeight:"5"},caption:{px:"6",py:"2",fontSize:"sm"}}),lg:Qa({th:{px:"8",py:"4",lineHeight:"5",fontSize:"sm"},td:{px:"8",py:"5",lineHeight:"6"},caption:{px:"6",py:"2",fontSize:"md"}})},dJ=oJ({baseStyle:sJ,variants:cJ,sizes:uJ,defaultProps:{variant:"simple",size:"md",colorScheme:"gray"}}),sn=ze("tabs-color"),pr=ze("tabs-bg"),zf=ze("tabs-border-color"),{defineMultiStyleConfig:fJ,definePartsStyle:Ur}=Fe(bB.keys),hJ=t=>{const{orientation:e}=t;return{display:e==="vertical"?"flex":"block"}},pJ=t=>{const{isFitted:e}=t;return{flex:e?1:void 0,transitionProperty:"common",transitionDuration:"normal",_focusVisible:{zIndex:1,boxShadow:"outline"},_disabled:{cursor:"not-allowed",opacity:.4}}},mJ=t=>{const{align:e="start",orientation:n}=t;return{justifyContent:{end:"flex-end",center:"center",start:"flex-start"}[e],flexDirection:n==="vertical"?"column":"row"}},gJ={p:4},bJ=Ur(t=>({root:hJ(t),tab:pJ(t),tablist:mJ(t),tabpanel:gJ})),vJ={sm:Ur({tab:{py:1,px:4,fontSize:"sm"}}),md:Ur({tab:{fontSize:"md",py:2,px:4}}),lg:Ur({tab:{fontSize:"lg",py:3,px:4}})},yJ=Ur(t=>{const{colorScheme:e,orientation:n}=t,r=n==="vertical",i=n==="vertical"?"borderStart":"borderBottom",o=r?"marginStart":"marginBottom";return{tablist:{[i]:"2px solid",borderColor:"inherit"},tab:{[i]:"2px solid",borderColor:"transparent",[o]:"-2px",_selected:{[sn.variable]:`colors.${e}.600`,_dark:{[sn.variable]:`colors.${e}.300`},borderColor:"currentColor"},_active:{[pr.variable]:"colors.gray.200",_dark:{[pr.variable]:"colors.whiteAlpha.300"}},_disabled:{_active:{bg:"none"}},color:sn.reference,bg:pr.reference}}}),xJ=Ur(t=>{const{colorScheme:e}=t;return{tab:{borderTopRadius:"md",border:"1px solid",borderColor:"transparent",mb:"-1px",[zf.reference]:"transparent",_selected:{[sn.variable]:`colors.${e}.600`,[zf.variable]:"colors.white",_dark:{[sn.variable]:`colors.${e}.300`,[zf.variable]:"colors.gray.800"},borderColor:"inherit",borderBottomColor:zf.reference},color:sn.reference},tablist:{mb:"-1px",borderBottom:"1px solid",borderColor:"inherit"}}}),SJ=Ur(t=>{const{colorScheme:e}=t;return{tab:{border:"1px solid",borderColor:"inherit",[pr.variable]:"colors.gray.50",_dark:{[pr.variable]:"colors.whiteAlpha.50"},mb:"-1px",_notLast:{marginEnd:"-1px"},_selected:{[pr.variable]:"colors.white",[sn.variable]:`colors.${e}.600`,_dark:{[pr.variable]:"colors.gray.800",[sn.variable]:`colors.${e}.300`},borderColor:"inherit",borderTopColor:"currentColor",borderBottomColor:"transparent"},color:sn.reference,bg:pr.reference},tablist:{mb:"-1px",borderBottom:"1px solid",borderColor:"inherit"}}}),kJ=Ur(t=>{const{colorScheme:e,theme:n}=t;return{tab:{borderRadius:"full",fontWeight:"semibold",color:"gray.600",_selected:{color:Jt(n,`${e}.700`),bg:Jt(n,`${e}.100`)}}}}),wJ=Ur(t=>{const{colorScheme:e}=t;return{tab:{borderRadius:"full",fontWeight:"semibold",[sn.variable]:"colors.gray.600",_dark:{[sn.variable]:"inherit"},_selected:{[sn.variable]:"colors.white",[pr.variable]:`colors.${e}.600`,_dark:{[sn.variable]:"colors.gray.800",[pr.variable]:`colors.${e}.300`}},color:sn.reference,bg:pr.reference}}}),PJ=Ur({}),OJ={line:yJ,enclosed:xJ,"enclosed-colored":SJ,"soft-rounded":kJ,"solid-rounded":wJ,unstyled:PJ},CJ=fJ({baseStyle:bJ,sizes:vJ,variants:OJ,defaultProps:{size:"md",variant:"line",colorScheme:"blue"}}),{defineMultiStyleConfig:TJ,definePartsStyle:ks}=Fe(vB.keys),zJ={fontWeight:"medium",lineHeight:1.2,outline:0,borderRadius:"md",_focusVisible:{boxShadow:"outline"}},VJ={lineHeight:1.2,overflow:"visible"},EJ={fontSize:"lg",w:"5",h:"5",transitionProperty:"common",transitionDuration:"normal",borderRadius:"full",marginStart:"1.5",marginEnd:"-1",opacity:.5,_disabled:{opacity:.4},_focusVisible:{boxShadow:"outline",bg:"rgba(0, 0, 0, 0.14)"},_hover:{opacity:.8},_active:{opacity:1}},NJ=ks({container:zJ,label:VJ,closeButton:EJ}),IJ={sm:ks({container:{minH:"5",minW:"5",fontSize:"xs",px:"2"},closeButton:{marginEnd:"-2px",marginStart:"0.35rem"}}),md:ks({container:{minH:"6",minW:"6",fontSize:"sm",px:"2"}}),lg:ks({container:{minH:"8",minW:"8",fontSize:"md",px:"3"}})},MJ={subtle:ks(t=>{var e;return{container:(e=jc.variants)==null?void 0:e.subtle(t)}}),solid:ks(t=>{var e;return{container:(e=jc.variants)==null?void 0:e.solid(t)}}),outline:ks(t=>{var e;return{container:(e=jc.variants)==null?void 0:e.outline(t)}})},AJ=TJ({variants:MJ,baseStyle:NJ,sizes:IJ,defaultProps:{size:"md",variant:"subtle",colorScheme:"gray"}}),V5,LJ={...(V5=xe.baseStyle)==null?void 0:V5.field,paddingY:"2",minHeight:"20",lineHeight:"short",verticalAlign:"top"},E5,L9,ZJ={outline:t=>{var n;var e;return(n=(e=xe.variants)==null?void 0:e.outline(t).field)!=null?n:{}},flushed:t=>{var n;var e;return(n=(e=xe.variants)==null?void 0:e.flushed(t).field)!=null?n:{}},filled:t=>{var n;var e;return(n=(e=xe.variants)==null?void 0:e.filled(t).field)!=null?n:{}},unstyled:(L9=(E5=xe.variants)==null?void 0:E5.unstyled.field)!=null?L9:{}},N5,I5,M5,A5,Z9,X9,W9,R9,XJ={xs:(Z9=(N5=xe.sizes)==null?void 0:N5.xs.field)!=null?Z9:{},sm:(X9=(I5=xe.sizes)==null?void 0:I5.sm.field)!=null?X9:{},md:(W9=(M5=xe.sizes)==null?void 0:M5.md.field)!=null?W9:{},lg:(R9=(A5=xe.sizes)==null?void 0:A5.lg.field)!=null?R9:{}},WJ={baseStyle:LJ,sizes:XJ,variants:ZJ,defaultProps:{size:"md",variant:"outline"}},Vf=gt("tooltip-bg"),U0=gt("tooltip-fg"),RJ=gt("popper-arrow-bg"),FJ={bg:Vf.reference,color:U0.reference,[Vf.variable]:"colors.gray.700",[U0.variable]:"colors.whiteAlpha.900",_dark:{[Vf.variable]:"colors.gray.300",[U0.variable]:"colors.gray.900"},[RJ.variable]:Vf.reference,px:"2",py:"0.5",borderRadius:"sm",fontWeight:"medium",fontSize:"sm",boxShadow:"md",maxW:"xs",zIndex:"tooltip"},HJ={baseStyle:FJ},DJ={Accordion:oY,Alert:hY,Avatar:PY,Badge:jc,Breadcrumb:AY,Button:GY,Checkbox:Lp,CloseButton:iK,Code:lK,Container:uK,Divider:mK,Drawer:CK,Editable:MK,Form:RK,FormError:BK,FormLabel:KK,Heading:JK,Input:xe,Kbd:sU,Link:lU,List:hU,Menu:wU,Modal:AU,NumberInput:jU,PinInput:UU,Popover:oq,Progress:hq,Radio:vq,Select:Oq,Skeleton:Tq,SkipLink:Vq,Slider:Fq,Spinner:Gq,Stat:Qq,Switch:iJ,Table:dJ,Tabs:CJ,Tag:AJ,Textarea:WJ,Tooltip:HJ,Card:UY},GJ={none:0,"1px":"1px solid","2px":"2px solid","4px":"4px solid","8px":"8px solid"},jJ=GJ,BJ={base:"0em",sm:"30em",md:"48em",lg:"62em",xl:"80em","2xl":"96em"},YJ=BJ,KJ={transparent:"transparent",current:"currentColor",black:"#000000",white:"#FFFFFF",whiteAlpha:{50:"rgba(255, 255, 255, 0.04)",100:"rgba(255, 255, 255, 0.06)",200:"rgba(255, 255, 255, 0.08)",300:"rgba(255, 255, 255, 0.16)",400:"rgba(255, 255, 255, 0.24)",500:"rgba(255, 255, 255, 0.36)",600:"rgba(255, 255, 255, 0.48)",700:"rgba(255, 255, 255, 0.64)",800:"rgba(255, 255, 255, 0.80)",900:"rgba(255, 255, 255, 0.92)"},blackAlpha:{50:"rgba(0, 0, 0, 0.04)",100:"rgba(0, 0, 0, 0.06)",200:"rgba(0, 0, 0, 0.08)",300:"rgba(0, 0, 0, 0.16)",400:"rgba(0, 0, 0, 0.24)",500:"rgba(0, 0, 0, 0.36)",600:"rgba(0, 0, 0, 0.48)",700:"rgba(0, 0, 0, 0.64)",800:"rgba(0, 0, 0, 0.80)",900:"rgba(0, 0, 0, 0.92)"},gray:{50:"#F7FAFC",100:"#EDF2F7",200:"#E2E8F0",300:"#CBD5E0",400:"#A0AEC0",500:"#718096",600:"#4A5568",700:"#2D3748",800:"#1A202C",900:"#171923"},red:{50:"#FFF5F5",100:"#FED7D7",200:"#FEB2B2",300:"#FC8181",400:"#F56565",500:"#E53E3E",600:"#C53030",700:"#9B2C2C",800:"#822727",900:"#63171B"},orange:{50:"#FFFAF0",100:"#FEEBC8",200:"#FBD38D",300:"#F6AD55",400:"#ED8936",500:"#DD6B20",600:"#C05621",700:"#9C4221",800:"#7B341E",900:"#652B19"},yellow:{50:"#FFFFF0",100:"#FEFCBF",200:"#FAF089",300:"#F6E05E",400:"#ECC94B",500:"#D69E2E",600:"#B7791F",700:"#975A16",800:"#744210",900:"#5F370E"},green:{50:"#F0FFF4",100:"#C6F6D5",200:"#9AE6B4",300:"#68D391",400:"#48BB78",500:"#38A169",600:"#2F855A",700:"#276749",800:"#22543D",900:"#1C4532"},teal:{50:"#E6FFFA",100:"#B2F5EA",200:"#81E6D9",300:"#4FD1C5",400:"#38B2AC",500:"#319795",600:"#2C7A7B",700:"#285E61",800:"#234E52",900:"#1D4044"},blue:{50:"#ebf8ff",100:"#bee3f8",200:"#90cdf4",300:"#63b3ed",400:"#4299e1",500:"#3182ce",600:"#2b6cb0",700:"#2c5282",800:"#2a4365",900:"#1A365D"},cyan:{50:"#EDFDFD",100:"#C4F1F9",200:"#9DECF9",300:"#76E4F7",400:"#0BC5EA",500:"#00B5D8",600:"#00A3C4",700:"#0987A0",800:"#086F83",900:"#065666"},purple:{50:"#FAF5FF",100:"#E9D8FD",200:"#D6BCFA",300:"#B794F4",400:"#9F7AEA",500:"#805AD5",600:"#6B46C1",700:"#553C9A",800:"#44337A",900:"#322659"},pink:{50:"#FFF5F7",100:"#FED7E2",200:"#FBB6CE",300:"#F687B3",400:"#ED64A6",500:"#D53F8C",600:"#B83280",700:"#97266D",800:"#702459",900:"#521B41"},linkedin:{50:"#E8F4F9",100:"#CFEDFB",200:"#9BDAF3",300:"#68C7EC",400:"#34B3E4",500:"#00A0DC",600:"#008CC9",700:"#0077B5",800:"#005E93",900:"#004471"},facebook:{50:"#E8F4F9",100:"#D9DEE9",200:"#B7C2DA",300:"#6482C0",400:"#4267B2",500:"#385898",600:"#314E89",700:"#29487D",800:"#223B67",900:"#1E355B"},messenger:{50:"#D0E6FF",100:"#B9DAFF",200:"#A2CDFF",300:"#7AB8FF",400:"#2E90FF",500:"#0078FF",600:"#0063D1",700:"#0052AC",800:"#003C7E",900:"#002C5C"},whatsapp:{50:"#dffeec",100:"#b9f5d0",200:"#90edb3",300:"#65e495",400:"#3cdd78",500:"#22c35e",600:"#179848",700:"#0c6c33",800:"#01421c",900:"#001803"},twitter:{50:"#E5F4FD",100:"#C8E9FB",200:"#A8DCFA",300:"#83CDF7",400:"#57BBF5",500:"#1DA1F2",600:"#1A94DA",700:"#1681BF",800:"#136B9E",900:"#0D4D71"},telegram:{50:"#E3F2F9",100:"#C5E4F3",200:"#A2D4EC",300:"#7AC1E4",400:"#47A9DA",500:"#0088CC",600:"#007AB8",700:"#006BA1",800:"#005885",900:"#003F5E"}},UJ=KJ,qJ={none:"0",sm:"0.125rem",base:"0.25rem",md:"0.375rem",lg:"0.5rem",xl:"0.75rem","2xl":"1rem","3xl":"1.5rem",full:"9999px"},JJ=qJ,QJ={xs:"0 0 0 1px rgba(0, 0, 0, 0.05)",sm:"0 1px 2px 0 rgba(0, 0, 0, 0.05)",base:"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",md:"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",lg:"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",xl:"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)","2xl":"0 25px 50px -12px rgba(0, 0, 0, 0.25)",outline:"0 0 0 3px rgba(66, 153, 225, 0.6)",inner:"inset 0 2px 4px 0 rgba(0,0,0,0.06)",none:"none","dark-lg":"rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 5px 10px, rgba(0, 0, 0, 0.4) 0px 15px 40px"},_J=QJ,$J={common:"background-color, border-color, color, fill, stroke, opacity, box-shadow, transform",colors:"background-color, border-color, color, fill, stroke",dimensions:"width, height",position:"left, right, top, bottom",background:"background-color, background-image, background-position"},eQ={"ease-in":"cubic-bezier(0.4, 0, 1, 1)","ease-out":"cubic-bezier(0, 0, 0.2, 1)","ease-in-out":"cubic-bezier(0.4, 0, 0.2, 1)"},tQ={"ultra-fast":"50ms",faster:"100ms",fast:"150ms",normal:"200ms",slow:"300ms",slower:"400ms","ultra-slow":"500ms"},nQ={property:$J,easing:eQ,duration:tQ},rQ=nQ,iQ={hide:-1,auto:"auto",base:0,docked:10,dropdown:1e3,sticky:1100,banner:1200,overlay:1300,modal:1400,popover:1500,skipLink:1600,toast:1700,tooltip:1800},oQ=iQ,sQ={none:0,sm:"4px",base:"8px",md:"12px",lg:"16px",xl:"24px","2xl":"40px","3xl":"64px"},aQ=sQ,lQ={breakpoints:YJ,zIndices:oQ,radii:JJ,blur:aQ,colors:UJ,...dI,sizes:lI,shadows:_J,space:aI,borders:jJ,transition:rQ},cQ={colors:{"chakra-body-text":{_light:"gray.800",_dark:"whiteAlpha.900"},"chakra-body-bg":{_light:"white",_dark:"gray.800"},"chakra-border-color":{_light:"gray.200",_dark:"whiteAlpha.300"},"chakra-subtle-bg":{_light:"gray.100",_dark:"gray.700"},"chakra-placeholder-color":{_light:"gray.500",_dark:"whiteAlpha.400"}}},uQ={global:{body:{fontFamily:"body",color:"chakra-body-text",bg:"chakra-body-bg",transitionProperty:"background-color",transitionDuration:"normal",lineHeight:"base"},"*::placeholder":{color:"chakra-placeholder-color"},"*, *::before, &::after":{borderColor:"chakra-border-color",wordWrap:"break-word"}}};function dQ(t){const e=typeof t;return t!=null&&(e==="object"||e==="function")&&!Array.isArray(t)}var fQ=["borders","breakpoints","colors","components","config","direction","fonts","fontSizes","fontWeights","letterSpacings","lineHeights","radii","shadows","sizes","space","styles","transition","zIndices"];function hQ(t){return dQ(t)?fQ.every(e=>Object.prototype.hasOwnProperty.call(t,e)):!1}var pQ="ltr",mQ={useSystemColorMode:!1,initialColorMode:"light",cssVarPrefix:"chakra"},mI={semanticTokens:cQ,direction:pQ,...lQ,components:DJ,styles:uQ,config:mQ};function Cc(t){return typeof t=="function"}function gQ(...t){return e=>t.reduce((n,r)=>r(n),e)}function bQ(...t){let e=[...t],n=t[t.length-1];return hQ(n)&&e.length>1?e=e.slice(0,e.length-1):n=mI,gQ(...e.map(r=>i=>Cc(r)?r(i):vQ(i,r)))(n)}function vQ(...t){return qn({},...t,gI)}function gI(t,e,n,r){if((Cc(t)||Cc(e))&&Object.prototype.hasOwnProperty.call(r,n))return(...i)=>{const o=Cc(t)?t(...i):t,s=Cc(e)?e(...i):e;return qn({},o,s,gI)}}var yQ=typeof Element<"u",xQ=typeof Map=="function",SQ=typeof Set=="function",kQ=typeof ArrayBuffer=="function"&&!!ArrayBuffer.isView;function yh(t,e){if(t===e)return!0;if(t&&e&&typeof t=="object"&&typeof e=="object"){if(t.constructor!==e.constructor)return!1;var n,r,i;if(Array.isArray(t)){if(n=t.length,n!=e.length)return!1;for(r=n;r--!==0;)if(!yh(t[r],e[r]))return!1;return!0}var o;if(xQ&&t instanceof Map&&e instanceof Map){if(t.size!==e.size)return!1;for(o=t.entries();!(r=o.next()).done;)if(!e.has(r.value[0]))return!1;for(o=t.entries();!(r=o.next()).done;)if(!yh(r.value[1],e.get(r.value[0])))return!1;return!0}if(SQ&&t instanceof Set&&e instanceof Set){if(t.size!==e.size)return!1;for(o=t.entries();!(r=o.next()).done;)if(!e.has(r.value[0]))return!1;return!0}if(kQ&&ArrayBuffer.isView(t)&&ArrayBuffer.isView(e)){if(n=t.length,n!=e.length)return!1;for(r=n;r--!==0;)if(t[r]!==e[r])return!1;return!0}if(t.constructor===RegExp)return t.source===e.source&&t.flags===e.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===e.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===e.toString();if(i=Object.keys(t),n=i.length,n!==Object.keys(e).length)return!1;for(r=n;r--!==0;)if(!Object.prototype.hasOwnProperty.call(e,i[r]))return!1;if(yQ&&t instanceof Element)return!1;for(r=n;r--!==0;)if(!((i[r]==="_owner"||i[r]==="__v"||i[r]==="__o")&&t.$$typeof)&&!yh(t[i[r]],e[i[r]]))return!1;return!0}return t!==t&&e!==e}var wQ=function(e,n){try{return yh(e,n)}catch(r){if((r.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw r}};function aS(){const t=S.exports.useContext(Hu);if(!t)throw Error("useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`");return t}function PQ(){const t=Kx(),e=aS();return{...t,theme:e}}function OQ(t,e,n){var i,o;if(e==null)return e;const r=s=>{var a,l;return(l=(a=t.__breakpoints)==null?void 0:a.asArray)==null?void 0:l[s]};return(o=(i=r(e))!=null?i:r(n))!=null?o:n}function CQ(t,e,n){var i,o;if(e==null)return e;const r=s=>{var a,l;return(l=(a=t.__cssMap)==null?void 0:a[s])==null?void 0:l.value};return(o=(i=r(e))!=null?i:r(n))!=null?o:n}function TQ(t,e,n){const r=Array.isArray(e)?e:[e],i=Array.isArray(n)?n:[n];return o=>{const s=i.filter(Boolean),a=r.map((l,c)=>{var d,f;if(t==="breakpoints")return OQ(o,l,(d=s[c])!=null?d:l);const u=`${t}.${l}`;return CQ(o,u,(f=s[c])!=null?f:l)});return Array.isArray(e)?a:a[0]}}function zQ(t){const{cssVarsRoot:e,theme:n,children:r}=t,i=S.exports.useMemo(()=>P4(n),[n]);return tt(Nj,{theme:i,children:[N(VQ,{root:e}),r]})}function VQ({root:t=":host, :root"}){const e=[t,"[data-theme]"].join(",");return N(eg,{styles:n=>({[e]:n.__cssVars})})}Hj({name:"StylesContext",errorMessage:"useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` "});function EQ(){const{colorMode:t}=Kx();return N(eg,{styles:e=>{const n=JN(e,"styles.global"),r=$N(n,{theme:e,colorMode:t});return r?NN(r)(e):void 0}})}var NQ=new Set([...O4,"textStyle","layerStyle","apply","noOfLines","focusBorderColor","errorBorderColor","as","__css","css","sx"]),IQ=new Set(["htmlWidth","htmlHeight","htmlSize"]);function MQ(t){return IQ.has(t)||!NQ.has(t)}var AQ=({baseStyle:t})=>e=>{const{theme:n,css:r,__css:i,sx:o,...s}=e,a=QN(s,(d,f)=>T4(f)),l=$N(t,e),c=Object.assign({},i,l,_N(a),o),u=NN(c)(e.theme);return r?[u,r]:u};function q0(t,e){const{baseStyle:n,...r}=e!=null?e:{};r.shouldForwardProp||(r.shouldForwardProp=MQ);const i=AQ({baseStyle:n}),o=wy(t,r)(i);return R.forwardRef(function(l,c){const{colorMode:u,forced:d}=Kx();return R.createElement(o,{ref:c,"data-theme":d?u:void 0,...l})})}function J(t){return S.exports.forwardRef(t)}function bI(t,e={}){var u;const{styleConfig:n,...r}=e,{theme:i,colorMode:o}=PQ(),s=t?JN(i,`components.${t}`):void 0,a=n||s,l=qn({theme:i,colorMode:o},(u=a==null?void 0:a.defaultProps)!=null?u:{},_N(Lj(r,["children"]))),c=S.exports.useRef({});if(a){const f=X4(a)(l);wQ(c.current,f)||(c.current=f)}return c.current}function gn(t,e={}){return bI(t,e)}function js(t,e={}){return bI(t,e)}function LQ(){const t=new Map;return new Proxy(q0,{apply(e,n,r){return q0(...r)},get(e,n){return t.has(n)||t.set(n,q0(n)),t.get(n)}})}var K=LQ();function ZQ(t,e){return`${t} returned \`undefined\`. Seems you forgot to wrap component within ${e}`}function Zn(t={}){const{name:e,strict:n=!0,hookName:r="useContext",providerName:i="Provider",errorMessage:o}=t,s=S.exports.createContext(void 0);s.displayName=e;function a(){var l;const c=S.exports.useContext(s);if(!c&&n){const u=new Error(o!=null?o:ZQ(r,i));throw u.name="ContextError",(l=Error.captureStackTrace)==null||l.call(Error,u,a),u}return c}return[s.Provider,a,s]}function XQ(t,e){if(t!=null){if(typeof t=="function"){t(e);return}try{t.current=e}catch{throw new Error(`Cannot assign value '${e}' to ref '${t}'`)}}}function Co(...t){return e=>{t.forEach(n=>{XQ(n,e)})}}function WQ(...t){return S.exports.useMemo(()=>Co(...t),t)}var st=(...t)=>t.filter(Boolean).join(" "),L5={path:tt("g",{stroke:"currentColor",strokeWidth:"1.5",children:[N("path",{strokeLinecap:"round",fill:"none",d:"M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"}),N("path",{fill:"currentColor",strokeLinecap:"round",d:"M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"}),N("circle",{fill:"none",strokeMiterlimit:"10",cx:"12",cy:"12",r:"11.25"})]}),viewBox:"0 0 24 24"},Bs=J((t,e)=>{const{as:n,viewBox:r,color:i="currentColor",focusable:o=!1,children:s,className:a,__css:l,...c}=t,u=st("chakra-icon",a),d={w:"1em",h:"1em",display:"inline-block",lineHeight:"1em",flexShrink:0,color:i,...l},f={ref:e,focusable:o,className:u,__css:d},h=r!=null?r:L5.viewBox;if(n&&typeof n!="string")return R.createElement(K.svg,{as:n,...f,...c});const p=s!=null?s:L5.path;return R.createElement(K.svg,{verticalAlign:"middle",viewBox:h,...f,...c},p)});Bs.displayName="Icon";function Xp(t,e=[]){const n=S.exports.useRef(t);return S.exports.useEffect(()=>{n.current=t}),S.exports.useCallback((...r)=>{var i;return(i=n.current)==null?void 0:i.call(n,...r)},e)}const lS=S.exports.createContext({transformPagePoint:t=>t,isStatic:!1,reducedMotion:"never"}),rg=S.exports.createContext({});function RQ(){return S.exports.useContext(rg).visualElement}const Wl=S.exports.createContext(null),Ys=typeof document<"u",Wp=Ys?S.exports.useLayoutEffect:S.exports.useEffect,vI=S.exports.createContext({strict:!1});function FQ(t,e,n,r){const i=RQ(),o=S.exports.useContext(vI),s=S.exports.useContext(Wl),a=S.exports.useContext(lS).reducedMotion,l=S.exports.useRef();r=r||o.renderer,!l.current&&r&&(l.current=r(t,{visualState:e,parent:i,props:n,presenceId:s?s.id:void 0,blockInitialAnimation:s?s.initial===!1:!1,reducedMotionConfig:a}));const c=l.current;return Wp(()=>{c&&c.render()}),S.exports.useEffect(()=>{c&&c.animationState&&c.animationState.animateChanges()}),Wp(()=>()=>c&&c.notify("Unmount"),[]),c}function Na(t){return typeof t=="object"&&Object.prototype.hasOwnProperty.call(t,"current")}function HQ(t,e,n){return S.exports.useCallback(r=>{r&&t.mount&&t.mount(r),e&&(r?e.mount(r):e.unmount()),n&&(typeof n=="function"?n(r):Na(n)&&(n.current=r))},[e])}function ju(t){return typeof t=="string"||Array.isArray(t)}function ig(t){return typeof t=="object"&&typeof t.start=="function"}const DQ=["initial","animate","exit","whileHover","whileDrag","whileTap","whileFocus","whileInView"];function og(t){return ig(t.animate)||DQ.some(e=>ju(t[e]))}function yI(t){return Boolean(og(t)||t.variants)}function GQ(t,e){if(og(t)){const{initial:n,animate:r}=t;return{initial:n===!1||ju(n)?n:void 0,animate:ju(r)?r:void 0}}return t.inherit!==!1?e:{}}function jQ(t){const{initial:e,animate:n}=GQ(t,S.exports.useContext(rg));return S.exports.useMemo(()=>({initial:e,animate:n}),[Z5(e),Z5(n)])}function Z5(t){return Array.isArray(t)?t.join(" "):t}const ai=t=>({isEnabled:e=>t.some(n=>!!e[n])}),Bu={measureLayout:ai(["layout","layoutId","drag"]),animation:ai(["animate","exit","variants","whileHover","whileTap","whileFocus","whileDrag","whileInView"]),exit:ai(["exit"]),drag:ai(["drag","dragControls"]),focus:ai(["whileFocus"]),hover:ai(["whileHover","onHoverStart","onHoverEnd"]),tap:ai(["whileTap","onTap","onTapStart","onTapCancel"]),pan:ai(["onPan","onPanStart","onPanSessionStart","onPanEnd"]),inView:ai(["whileInView","onViewportEnter","onViewportLeave"])};function BQ(t){for(const e in t)e==="projectionNodeConstructor"?Bu.projectionNodeConstructor=t[e]:Bu[e].Component=t[e]}function sg(t){const e=S.exports.useRef(null);return e.current===null&&(e.current=t()),e.current}const Uc={hasAnimatedSinceResize:!0,hasEverUpdated:!1};let YQ=1;function KQ(){return sg(()=>{if(Uc.hasEverUpdated)return YQ++})}const cS=S.exports.createContext({});class UQ extends R.Component{getSnapshotBeforeUpdate(){const{visualElement:e,props:n}=this.props;return e&&e.setProps(n),null}componentDidUpdate(){}render(){return this.props.children}}const xI=S.exports.createContext({}),qQ=Symbol.for("motionComponentSymbol");function JQ({preloadedFeatures:t,createVisualElement:e,projectionNodeConstructor:n,useRender:r,useVisualState:i,Component:o}){t&&BQ(t);function s(l,c){const u={...S.exports.useContext(lS),...l,layoutId:QQ(l)},{isStatic:d}=u;let f=null;const h=jQ(l),p=d?void 0:KQ(),m=i(l,d);if(!d&&Ys){h.visualElement=FQ(o,m,u,e);const v=S.exports.useContext(vI).strict,g=S.exports.useContext(xI);h.visualElement&&(f=h.visualElement.loadFeatures(u,v,t,p,n||Bu.projectionNodeConstructor,g))}return tt(UQ,{visualElement:h.visualElement,props:u,children:[f,N(rg.Provider,{value:h,children:r(o,l,p,HQ(m,h.visualElement,c),m,d,h.visualElement)})]})}const a=S.exports.forwardRef(s);return a[qQ]=o,a}function QQ({layoutId:t}){const e=S.exports.useContext(cS).id;return e&&t!==void 0?e+"-"+t:t}function _Q(t){function e(r,i={}){return JQ(t(r,i))}if(typeof Proxy>"u")return e;const n=new Map;return new Proxy(e,{get:(r,i)=>(n.has(i)||n.set(i,e(i)),n.get(i))})}const $Q=["animate","circle","defs","desc","ellipse","g","image","line","filter","marker","mask","metadata","path","pattern","polygon","polyline","rect","stop","switch","symbol","text","tspan","use","view"];function uS(t){return typeof t!="string"||t.includes("-")?!1:!!($Q.indexOf(t)>-1||/[A-Z]/.test(t))}const Rp={};function e_(t){Object.assign(Rp,t)}const Fp=["transformPerspective","x","y","z","translateX","translateY","translateZ","scale","scaleX","scaleY","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY"],Rl=new Set(Fp);function SI(t,{layout:e,layoutId:n}){return Rl.has(t)||t.startsWith("origin")||(e||n!==void 0)&&(!!Rp[t]||t==="opacity")}const $r=t=>!!(t!=null&&t.getVelocity),t_={x:"translateX",y:"translateY",z:"translateZ",transformPerspective:"perspective"},n_=(t,e)=>Fp.indexOf(t)-Fp.indexOf(e);function r_({transform:t,transformKeys:e},{enableHardwareAcceleration:n=!0,allowTransformNone:r=!0},i,o){let s="";e.sort(n_);for(const a of e)s+=`${t_[a]||a}(${t[a]}) `;return n&&!t.z&&(s+="translateZ(0)"),s=s.trim(),o?s=o(t,i?"":s):r&&i&&(s="none"),s}function kI(t){return t.startsWith("--")}const i_=(t,e)=>e&&typeof t=="number"?e.transform(t):t,wI=(t,e)=>n=>Math.max(Math.min(n,e),t),qc=t=>t%1?Number(t.toFixed(5)):t,Yu=/(-)?([\d]*\.?[\d])+/g,Vy=/(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi,o_=/^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;function gd(t){return typeof t=="string"}const Ks={test:t=>typeof t=="number",parse:parseFloat,transform:t=>t},Jc=Object.assign(Object.assign({},Ks),{transform:wI(0,1)}),Ef=Object.assign(Object.assign({},Ks),{default:1}),bd=t=>({test:e=>gd(e)&&e.endsWith(t)&&e.split(" ").length===1,parse:parseFloat,transform:e=>`${e}${t}`}),Fi=bd("deg"),qr=bd("%"),ne=bd("px"),s_=bd("vh"),a_=bd("vw"),X5=Object.assign(Object.assign({},qr),{parse:t=>qr.parse(t)/100,transform:t=>qr.transform(t*100)}),dS=(t,e)=>n=>Boolean(gd(n)&&o_.test(n)&&n.startsWith(t)||e&&Object.prototype.hasOwnProperty.call(n,e)),PI=(t,e,n)=>r=>{if(!gd(r))return r;const[i,o,s,a]=r.match(Yu);return{[t]:parseFloat(i),[e]:parseFloat(o),[n]:parseFloat(s),alpha:a!==void 0?parseFloat(a):1}},hs={test:dS("hsl","hue"),parse:PI("hue","saturation","lightness"),transform:({hue:t,saturation:e,lightness:n,alpha:r=1})=>"hsla("+Math.round(t)+", "+qr.transform(qc(e))+", "+qr.transform(qc(n))+", "+qc(Jc.transform(r))+")"},l_=wI(0,255),J0=Object.assign(Object.assign({},Ks),{transform:t=>Math.round(l_(t))}),so={test:dS("rgb","red"),parse:PI("red","green","blue"),transform:({red:t,green:e,blue:n,alpha:r=1})=>"rgba("+J0.transform(t)+", "+J0.transform(e)+", "+J0.transform(n)+", "+qc(Jc.transform(r))+")"};function c_(t){let e="",n="",r="",i="";return t.length>5?(e=t.substr(1,2),n=t.substr(3,2),r=t.substr(5,2),i=t.substr(7,2)):(e=t.substr(1,1),n=t.substr(2,1),r=t.substr(3,1),i=t.substr(4,1),e+=e,n+=n,r+=r,i+=i),{red:parseInt(e,16),green:parseInt(n,16),blue:parseInt(r,16),alpha:i?parseInt(i,16)/255:1}}const Ey={test:dS("#"),parse:c_,transform:so.transform},Bt={test:t=>so.test(t)||Ey.test(t)||hs.test(t),parse:t=>so.test(t)?so.parse(t):hs.test(t)?hs.parse(t):Ey.parse(t),transform:t=>gd(t)?t:t.hasOwnProperty("red")?so.transform(t):hs.transform(t)},OI="${c}",CI="${n}";function u_(t){var e,n,r,i;return isNaN(t)&&gd(t)&&((n=(e=t.match(Yu))===null||e===void 0?void 0:e.length)!==null&&n!==void 0?n:0)+((i=(r=t.match(Vy))===null||r===void 0?void 0:r.length)!==null&&i!==void 0?i:0)>0}function TI(t){typeof t=="number"&&(t=`${t}`);const e=[];let n=0;const r=t.match(Vy);r&&(n=r.length,t=t.replace(Vy,OI),e.push(...r.map(Bt.parse)));const i=t.match(Yu);return i&&(t=t.replace(Yu,CI),e.push(...i.map(Ks.parse))),{values:e,numColors:n,tokenised:t}}function zI(t){return TI(t).values}function VI(t){const{values:e,numColors:n,tokenised:r}=TI(t),i=e.length;return o=>{let s=r;for(let a=0;a<i;a++)s=s.replace(a<n?OI:CI,a<n?Bt.transform(o[a]):qc(o[a]));return s}}const d_=t=>typeof t=="number"?0:t;function f_(t){const e=zI(t);return VI(t)(e.map(d_))}const zi={test:u_,parse:zI,createTransformer:VI,getAnimatableNone:f_},h_=new Set(["brightness","contrast","saturate","opacity"]);function p_(t){let[e,n]=t.slice(0,-1).split("(");if(e==="drop-shadow")return t;const[r]=n.match(Yu)||[];if(!r)return t;const i=n.replace(r,"");let o=h_.has(e)?1:0;return r!==n&&(o*=100),e+"("+o+i+")"}const m_=/([a-z-]*)\(.*?\)/g,Ny=Object.assign(Object.assign({},zi),{getAnimatableNone:t=>{const e=t.match(m_);return e?e.map(p_).join(" "):t}}),W5={...Ks,transform:Math.round},EI={borderWidth:ne,borderTopWidth:ne,borderRightWidth:ne,borderBottomWidth:ne,borderLeftWidth:ne,borderRadius:ne,radius:ne,borderTopLeftRadius:ne,borderTopRightRadius:ne,borderBottomRightRadius:ne,borderBottomLeftRadius:ne,width:ne,maxWidth:ne,height:ne,maxHeight:ne,size:ne,top:ne,right:ne,bottom:ne,left:ne,padding:ne,paddingTop:ne,paddingRight:ne,paddingBottom:ne,paddingLeft:ne,margin:ne,marginTop:ne,marginRight:ne,marginBottom:ne,marginLeft:ne,rotate:Fi,rotateX:Fi,rotateY:Fi,rotateZ:Fi,scale:Ef,scaleX:Ef,scaleY:Ef,scaleZ:Ef,skew:Fi,skewX:Fi,skewY:Fi,distance:ne,translateX:ne,translateY:ne,translateZ:ne,x:ne,y:ne,z:ne,perspective:ne,transformPerspective:ne,opacity:Jc,originX:X5,originY:X5,originZ:ne,zIndex:W5,fillOpacity:Jc,strokeOpacity:Jc,numOctaves:W5};function fS(t,e,n,r){const{style:i,vars:o,transform:s,transformKeys:a,transformOrigin:l}=t;a.length=0;let c=!1,u=!1,d=!0;for(const f in e){const h=e[f];if(kI(f)){o[f]=h;continue}const p=EI[f],m=i_(h,p);if(Rl.has(f)){if(c=!0,s[f]=m,a.push(f),!d)continue;h!==(p.default||0)&&(d=!1)}else f.startsWith("origin")?(u=!0,l[f]=m):i[f]=m}if(e.transform||(c||r?i.transform=r_(t,n,d,r):i.transform&&(i.transform="none")),u){const{originX:f="50%",originY:h="50%",originZ:p=0}=l;i.transformOrigin=`${f} ${h} ${p}`}}const hS=()=>({style:{},transform:{},transformKeys:[],transformOrigin:{},vars:{}});function NI(t,e,n){for(const r in e)!$r(e[r])&&!SI(r,n)&&(t[r]=e[r])}function g_({transformTemplate:t},e,n){return S.exports.useMemo(()=>{const r=hS();return fS(r,e,{enableHardwareAcceleration:!n},t),Object.assign({},r.vars,r.style)},[e])}function b_(t,e,n){const r=t.style||{},i={};return NI(i,r,t),Object.assign(i,g_(t,e,n)),t.transformValues?t.transformValues(i):i}function v_(t,e,n){const r={},i=b_(t,e,n);return t.drag&&t.dragListener!==!1&&(r.draggable=!1,i.userSelect=i.WebkitUserSelect=i.WebkitTouchCallout="none",i.touchAction=t.drag===!0?"none":`pan-${t.drag==="x"?"y":"x"}`),r.style=i,r}const y_=["animate","exit","variants","whileHover","whileTap","whileFocus","whileDrag","whileInView"],x_=["whileTap","onTap","onTapStart","onTapCancel"],S_=["onPan","onPanStart","onPanSessionStart","onPanEnd"],k_=["whileInView","onViewportEnter","onViewportLeave","viewport"],w_=new Set(["initial","style","values","variants","transition","transformTemplate","transformValues","custom","inherit","layout","layoutId","layoutDependency","onLayoutAnimationStart","onLayoutAnimationComplete","onLayoutMeasure","onBeforeLayoutMeasure","onAnimationStart","onAnimationComplete","onUpdate","onDragStart","onDrag","onDragEnd","onMeasureDragConstraints","onDirectionLock","onDragTransitionEnd","drag","dragControls","dragListener","dragConstraints","dragDirectionLock","dragSnapToOrigin","_dragX","_dragY","dragElastic","dragMomentum","dragPropagation","dragTransition","onHoverStart","onHoverEnd","layoutScroll",...k_,...x_,...y_,...S_]);function Hp(t){return w_.has(t)}let II=t=>!Hp(t);function P_(t){!t||(II=e=>e.startsWith("on")?!Hp(e):t(e))}try{P_(require("@emotion/is-prop-valid").default)}catch{}function O_(t,e,n){const r={};for(const i in t)(II(i)||n===!0&&Hp(i)||!e&&!Hp(i)||t.draggable&&i.startsWith("onDrag"))&&(r[i]=t[i]);return r}function R5(t,e,n){return typeof t=="string"?t:ne.transform(e+n*t)}function C_(t,e,n){const r=R5(e,t.x,t.width),i=R5(n,t.y,t.height);return`${r} ${i}`}const T_={offset:"stroke-dashoffset",array:"stroke-dasharray"},z_={offset:"strokeDashoffset",array:"strokeDasharray"};function V_(t,e,n=1,r=0,i=!0){t.pathLength=1;const o=i?T_:z_;t[o.offset]=ne.transform(-r);const s=ne.transform(e),a=ne.transform(n);t[o.array]=`${s} ${a}`}function pS(t,{attrX:e,attrY:n,originX:r,originY:i,pathLength:o,pathSpacing:s=1,pathOffset:a=0,...l},c,u){fS(t,l,c,u),t.attrs=t.style,t.style={};const{attrs:d,style:f,dimensions:h}=t;d.transform&&(h&&(f.transform=d.transform),delete d.transform),h&&(r!==void 0||i!==void 0||f.transform)&&(f.transformOrigin=C_(h,r!==void 0?r:.5,i!==void 0?i:.5)),e!==void 0&&(d.x=e),n!==void 0&&(d.y=n),o!==void 0&&V_(d,o,s,a,!1)}const MI=()=>({...hS(),attrs:{}});function E_(t,e){const n=S.exports.useMemo(()=>{const r=MI();return pS(r,e,{enableHardwareAcceleration:!1},t.transformTemplate),{...r.attrs,style:{...r.style}}},[e]);if(t.style){const r={};NI(r,t.style,t),n.style={...r,...n.style}}return n}function N_(t=!1){return(n,r,i,o,{latestValues:s},a)=>{const c=(uS(n)?E_:v_)(r,s,a),d={...O_(r,typeof n=="string",t),...c,ref:o};return i&&(d["data-projection-id"]=i),S.exports.createElement(n,d)}}const AI=t=>t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();function LI(t,{style:e,vars:n},r,i){Object.assign(t.style,e,i&&i.getProjectionStyles(r));for(const o in n)t.style.setProperty(o,n[o])}const ZI=new Set(["baseFrequency","diffuseConstant","kernelMatrix","kernelUnitLength","keySplines","keyTimes","limitingConeAngle","markerHeight","markerWidth","numOctaves","targetX","targetY","surfaceScale","specularConstant","specularExponent","stdDeviation","tableValues","viewBox","gradientTransform","pathLength"]);function XI(t,e,n,r){LI(t,e,void 0,r);for(const i in e.attrs)t.setAttribute(ZI.has(i)?i:AI(i),e.attrs[i])}function mS(t){const{style:e}=t,n={};for(const r in e)($r(e[r])||SI(r,t))&&(n[r]=e[r]);return n}function WI(t){const e=mS(t);for(const n in t)if($r(t[n])){const r=n==="x"||n==="y"?"attr"+n.toUpperCase():n;e[r]=t[n]}return e}function gS(t,e,n,r={},i={}){return typeof e=="function"&&(e=e(n!==void 0?n:t.custom,r,i)),typeof e=="string"&&(e=t.variants&&t.variants[e]),typeof e=="function"&&(e=e(n!==void 0?n:t.custom,r,i)),e}const Ku=t=>Array.isArray(t),I_=t=>Boolean(t&&typeof t=="object"&&t.mix&&t.toValue),RI=t=>Ku(t)?t[t.length-1]||0:t;function xh(t){const e=$r(t)?t.get():t;return I_(e)?e.toValue():e}function M_({scrapeMotionValuesFromProps:t,createRenderState:e,onMount:n},r,i,o){const s={latestValues:A_(r,i,o,t),renderState:e()};return n&&(s.mount=a=>n(r,a,s)),s}const FI=t=>(e,n)=>{const r=S.exports.useContext(rg),i=S.exports.useContext(Wl),o=()=>M_(t,e,r,i);return n?o():sg(o)};function A_(t,e,n,r){const i={},o=r(t);for(const f in o)i[f]=xh(o[f]);let{initial:s,animate:a}=t;const l=og(t),c=yI(t);e&&c&&!l&&t.inherit!==!1&&(s===void 0&&(s=e.initial),a===void 0&&(a=e.animate));let u=n?n.initial===!1:!1;u=u||s===!1;const d=u?a:s;return d&&typeof d!="boolean"&&!ig(d)&&(Array.isArray(d)?d:[d]).forEach(h=>{const p=gS(t,h);if(!p)return;const{transitionEnd:m,transition:v,...g}=p;for(const b in g){let y=g[b];if(Array.isArray(y)){const x=u?y.length-1:0;y=y[x]}y!==null&&(i[b]=y)}for(const b in m)i[b]=m[b]}),i}const L_={useVisualState:FI({scrapeMotionValuesFromProps:WI,createRenderState:MI,onMount:(t,e,{renderState:n,latestValues:r})=>{try{n.dimensions=typeof e.getBBox=="function"?e.getBBox():e.getBoundingClientRect()}catch{n.dimensions={x:0,y:0,width:0,height:0}}pS(n,r,{enableHardwareAcceleration:!1},t.transformTemplate),XI(e,n)}})},Z_={useVisualState:FI({scrapeMotionValuesFromProps:mS,createRenderState:hS})};function X_(t,{forwardMotionProps:e=!1},n,r,i){return{...uS(t)?L_:Z_,preloadedFeatures:n,useRender:N_(e),createVisualElement:r,projectionNodeConstructor:i,Component:t}}var Ie;(function(t){t.Animate="animate",t.Hover="whileHover",t.Tap="whileTap",t.Drag="whileDrag",t.Focus="whileFocus",t.InView="whileInView",t.Exit="exit"})(Ie||(Ie={}));function ag(t,e,n,r={passive:!0}){return t.addEventListener(e,n,r),()=>t.removeEventListener(e,n)}function Iy(t,e,n,r){S.exports.useEffect(()=>{const i=t.current;if(n&&i)return ag(i,e,n,r)},[t,e,n,r])}function W_({whileFocus:t,visualElement:e}){const{animationState:n}=e,r=()=>{n&&n.setActive(Ie.Focus,!0)},i=()=>{n&&n.setActive(Ie.Focus,!1)};Iy(e,"focus",t?r:void 0),Iy(e,"blur",t?i:void 0)}function HI(t){return typeof PointerEvent<"u"&&t instanceof PointerEvent?t.pointerType==="mouse":t instanceof MouseEvent}function DI(t){return!!t.touches}function R_(t){return e=>{const n=e instanceof MouseEvent;(!n||n&&e.button===0)&&t(e)}}const F_={pageX:0,pageY:0};function H_(t,e="page"){const r=t.touches[0]||t.changedTouches[0]||F_;return{x:r[e+"X"],y:r[e+"Y"]}}function D_(t,e="page"){return{x:t[e+"X"],y:t[e+"Y"]}}function bS(t,e="page"){return{point:DI(t)?H_(t,e):D_(t,e)}}const GI=(t,e=!1)=>{const n=r=>t(r,bS(r));return e?R_(n):n},G_=()=>Ys&&window.onpointerdown===null,j_=()=>Ys&&window.ontouchstart===null,B_=()=>Ys&&window.onmousedown===null,Y_={pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointercancel:"mousecancel",pointerover:"mouseover",pointerout:"mouseout",pointerenter:"mouseenter",pointerleave:"mouseleave"},K_={pointerdown:"touchstart",pointermove:"touchmove",pointerup:"touchend",pointercancel:"touchcancel"};function jI(t){return G_()?t:j_()?K_[t]:B_()?Y_[t]:t}function _a(t,e,n,r){return ag(t,jI(e),GI(n,e==="pointerdown"),r)}function Dp(t,e,n,r){return Iy(t,jI(e),n&&GI(n,e==="pointerdown"),r)}function BI(t){let e=null;return()=>{const n=()=>{e=null};return e===null?(e=t,n):!1}}const F5=BI("dragHorizontal"),H5=BI("dragVertical");function YI(t){let e=!1;if(t==="y")e=H5();else if(t==="x")e=F5();else{const n=F5(),r=H5();n&&r?e=()=>{n(),r()}:(n&&n(),r&&r())}return e}function KI(){const t=YI(!0);return t?(t(),!1):!0}function D5(t,e,n){return(r,i)=>{!HI(r)||KI()||(t.animationState&&t.animationState.setActive(Ie.Hover,e),n&&n(r,i))}}function U_({onHoverStart:t,onHoverEnd:e,whileHover:n,visualElement:r}){Dp(r,"pointerenter",t||n?D5(r,!0,t):void 0,{passive:!t}),Dp(r,"pointerleave",e||n?D5(r,!1,e):void 0,{passive:!e})}const UI=(t,e)=>e?t===e?!0:UI(t,e.parentElement):!1;function vS(t){return S.exports.useEffect(()=>()=>t(),[])}function qI(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]]);return n}var q_=function(){},Gp=function(){};const jp=(t,e,n)=>Math.min(Math.max(n,t),e),Q0=.001,J_=.01,G5=10,Q_=.05,__=1;function $_({duration:t=800,bounce:e=.25,velocity:n=0,mass:r=1}){let i,o;q_(t<=G5*1e3);let s=1-e;s=jp(Q_,__,s),t=jp(J_,G5,t/1e3),s<1?(i=c=>{const u=c*s,d=u*t,f=u-n,h=My(c,s),p=Math.exp(-d);return Q0-f/h*p},o=c=>{const d=c*s*t,f=d*n+n,h=Math.pow(s,2)*Math.pow(c,2)*t,p=Math.exp(-d),m=My(Math.pow(c,2),s);return(-i(c)+Q0>0?-1:1)*((f-h)*p)/m}):(i=c=>{const u=Math.exp(-c*t),d=(c-n)*t+1;return-Q0+u*d},o=c=>{const u=Math.exp(-c*t),d=(n-c)*(t*t);return u*d});const a=5/t,l=t$(i,o,a);if(t=t*1e3,isNaN(l))return{stiffness:100,damping:10,duration:t};{const c=Math.pow(l,2)*r;return{stiffness:c,damping:s*2*Math.sqrt(r*c),duration:t}}}const e$=12;function t$(t,e,n){let r=n;for(let i=1;i<e$;i++)r=r-t(r)/e(r);return r}function My(t,e){return t*Math.sqrt(1-e*e)}const n$=["duration","bounce"],r$=["stiffness","damping","mass"];function j5(t,e){return e.some(n=>t[n]!==void 0)}function i$(t){let e=Object.assign({velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1},t);if(!j5(t,r$)&&j5(t,n$)){const n=$_(t);e=Object.assign(Object.assign(Object.assign({},e),n),{velocity:0,mass:1}),e.isResolvedFromDuration=!0}return e}function yS(t){var{from:e=0,to:n=1,restSpeed:r=2,restDelta:i}=t,o=qI(t,["from","to","restSpeed","restDelta"]);const s={done:!1,value:e};let{stiffness:a,damping:l,mass:c,velocity:u,duration:d,isResolvedFromDuration:f}=i$(o),h=B5,p=B5;function m(){const v=u?-(u/1e3):0,g=n-e,b=l/(2*Math.sqrt(a*c)),y=Math.sqrt(a/c)/1e3;if(i===void 0&&(i=Math.min(Math.abs(n-e)/100,.4)),b<1){const x=My(y,b);h=k=>{const P=Math.exp(-b*y*k);return n-P*((v+b*y*g)/x*Math.sin(x*k)+g*Math.cos(x*k))},p=k=>{const P=Math.exp(-b*y*k);return b*y*P*(Math.sin(x*k)*(v+b*y*g)/x+g*Math.cos(x*k))-P*(Math.cos(x*k)*(v+b*y*g)-x*g*Math.sin(x*k))}}else if(b===1)h=x=>n-Math.exp(-y*x)*(g+(v+y*g)*x);else{const x=y*Math.sqrt(b*b-1);h=k=>{const P=Math.exp(-b*y*k),O=Math.min(x*k,300);return n-P*((v+b*y*g)*Math.sinh(O)+x*g*Math.cosh(O))/x}}}return m(),{next:v=>{const g=h(v);if(f)s.done=v>=d;else{const b=p(v)*1e3,y=Math.abs(b)<=r,x=Math.abs(n-g)<=i;s.done=y&&x}return s.value=s.done?n:g,s},flipTarget:()=>{u=-u,[e,n]=[n,e],m()}}}yS.needsInterpolation=(t,e)=>typeof t=="string"||typeof e=="string";const B5=t=>0,Uu=(t,e,n)=>{const r=e-t;return r===0?1:(n-t)/r},et=(t,e,n)=>-n*t+n*e+t;function _0(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*(2/3-n)*6:t}function Y5({hue:t,saturation:e,lightness:n,alpha:r}){t/=360,e/=100,n/=100;let i=0,o=0,s=0;if(!e)i=o=s=n;else{const a=n<.5?n*(1+e):n+e-n*e,l=2*n-a;i=_0(l,a,t+1/3),o=_0(l,a,t),s=_0(l,a,t-1/3)}return{red:Math.round(i*255),green:Math.round(o*255),blue:Math.round(s*255),alpha:r}}const o$=(t,e,n)=>{const r=t*t,i=e*e;return Math.sqrt(Math.max(0,n*(i-r)+r))},s$=[Ey,so,hs],K5=t=>s$.find(e=>e.test(t)),JI=(t,e)=>{let n=K5(t),r=K5(e),i=n.parse(t),o=r.parse(e);n===hs&&(i=Y5(i),n=so),r===hs&&(o=Y5(o),r=so);const s=Object.assign({},i);return a=>{for(const l in s)l!=="alpha"&&(s[l]=o$(i[l],o[l],a));return s.alpha=et(i.alpha,o.alpha,a),n.transform(s)}},Ay=t=>typeof t=="number",a$=(t,e)=>n=>e(t(n)),lg=(...t)=>t.reduce(a$);function QI(t,e){return Ay(t)?n=>et(t,e,n):Bt.test(t)?JI(t,e):$I(t,e)}const _I=(t,e)=>{const n=[...t],r=n.length,i=t.map((o,s)=>QI(o,e[s]));return o=>{for(let s=0;s<r;s++)n[s]=i[s](o);return n}},l$=(t,e)=>{const n=Object.assign(Object.assign({},t),e),r={};for(const i in n)t[i]!==void 0&&e[i]!==void 0&&(r[i]=QI(t[i],e[i]));return i=>{for(const o in r)n[o]=r[o](i);return n}};function U5(t){const e=zi.parse(t),n=e.length;let r=0,i=0,o=0;for(let s=0;s<n;s++)r||typeof e[s]=="number"?r++:e[s].hue!==void 0?o++:i++;return{parsed:e,numNumbers:r,numRGB:i,numHSL:o}}const $I=(t,e)=>{const n=zi.createTransformer(e),r=U5(t),i=U5(e);return r.numHSL===i.numHSL&&r.numRGB===i.numRGB&&r.numNumbers>=i.numNumbers?lg(_I(r.parsed,i.parsed),n):s=>`${s>0?e:t}`},c$=(t,e)=>n=>et(t,e,n);function u$(t){if(typeof t=="number")return c$;if(typeof t=="string")return Bt.test(t)?JI:$I;if(Array.isArray(t))return _I;if(typeof t=="object")return l$}function d$(t,e,n){const r=[],i=n||u$(t[0]),o=t.length-1;for(let s=0;s<o;s++){let a=i(t[s],t[s+1]);if(e){const l=Array.isArray(e)?e[s]:e;a=lg(l,a)}r.push(a)}return r}function f$([t,e],[n]){return r=>n(Uu(t,e,r))}function h$(t,e){const n=t.length,r=n-1;return i=>{let o=0,s=!1;if(i<=t[0]?s=!0:i>=t[r]&&(o=r-1,s=!0),!s){let l=1;for(;l<n&&!(t[l]>i||l===r);l++);o=l-1}const a=Uu(t[o],t[o+1],i);return e[o](a)}}function eM(t,e,{clamp:n=!0,ease:r,mixer:i}={}){const o=t.length;Gp(o===e.length),Gp(!r||!Array.isArray(r)||r.length===o-1),t[0]>t[o-1]&&(t=[].concat(t),e=[].concat(e),t.reverse(),e.reverse());const s=d$(e,r,i),a=o===2?f$(t,s):h$(t,s);return n?l=>a(jp(t[0],t[o-1],l)):a}const cg=t=>e=>1-t(1-e),xS=t=>e=>e<=.5?t(2*e)/2:(2-t(2*(1-e)))/2,p$=t=>e=>Math.pow(e,t),tM=t=>e=>e*e*((t+1)*e-t),m$=t=>{const e=tM(t);return n=>(n*=2)<1?.5*e(n):.5*(2-Math.pow(2,-10*(n-1)))},nM=1.525,g$=4/11,b$=8/11,v$=9/10,SS=t=>t,kS=p$(2),y$=cg(kS),rM=xS(kS),iM=t=>1-Math.sin(Math.acos(t)),wS=cg(iM),x$=xS(wS),PS=tM(nM),S$=cg(PS),k$=xS(PS),w$=m$(nM),P$=4356/361,O$=35442/1805,C$=16061/1805,Bp=t=>{if(t===1||t===0)return t;const e=t*t;return t<g$?7.5625*e:t<b$?9.075*e-9.9*t+3.4:t<v$?P$*e-O$*t+C$:10.8*t*t-20.52*t+10.72},T$=cg(Bp),z$=t=>t<.5?.5*(1-Bp(1-t*2)):.5*Bp(t*2-1)+.5;function V$(t,e){return t.map(()=>e||rM).splice(0,t.length-1)}function E$(t){const e=t.length;return t.map((n,r)=>r!==0?r/(e-1):0)}function N$(t,e){return t.map(n=>n*e)}function Sh({from:t=0,to:e=1,ease:n,offset:r,duration:i=300}){const o={done:!1,value:t},s=Array.isArray(e)?e:[t,e],a=N$(r&&r.length===s.length?r:E$(s),i);function l(){return eM(a,s,{ease:Array.isArray(n)?n:V$(s,n)})}let c=l();return{next:u=>(o.value=c(u),o.done=u>=i,o),flipTarget:()=>{s.reverse(),c=l()}}}function I$({velocity:t=0,from:e=0,power:n=.8,timeConstant:r=350,restDelta:i=.5,modifyTarget:o}){const s={done:!1,value:e};let a=n*t;const l=e+a,c=o===void 0?l:o(l);return c!==l&&(a=c-e),{next:u=>{const d=-a*Math.exp(-u/r);return s.done=!(d>i||d<-i),s.value=s.done?c:c+d,s},flipTarget:()=>{}}}const q5={keyframes:Sh,spring:yS,decay:I$};function M$(t){if(Array.isArray(t.to))return Sh;if(q5[t.type])return q5[t.type];const e=new Set(Object.keys(t));return e.has("ease")||e.has("duration")&&!e.has("dampingRatio")?Sh:e.has("dampingRatio")||e.has("stiffness")||e.has("mass")||e.has("damping")||e.has("restSpeed")||e.has("restDelta")?yS:Sh}const oM=1/60*1e3,A$=typeof performance<"u"?()=>performance.now():()=>Date.now(),sM=typeof window<"u"?t=>window.requestAnimationFrame(t):t=>setTimeout(()=>t(A$()),oM);function L$(t){let e=[],n=[],r=0,i=!1,o=!1;const s=new WeakSet,a={schedule:(l,c=!1,u=!1)=>{const d=u&&i,f=d?e:n;return c&&s.add(l),f.indexOf(l)===-1&&(f.push(l),d&&i&&(r=e.length)),l},cancel:l=>{const c=n.indexOf(l);c!==-1&&n.splice(c,1),s.delete(l)},process:l=>{if(i){o=!0;return}if(i=!0,[e,n]=[n,e],n.length=0,r=e.length,r)for(let c=0;c<r;c++){const u=e[c];u(l),s.has(u)&&(a.schedule(u),t())}i=!1,o&&(o=!1,a.process(l))}};return a}const Z$=40;let Ly=!0,qu=!1,Zy=!1;const $a={delta:0,timestamp:0},vd=["read","update","preRender","render","postRender"],ug=vd.reduce((t,e)=>(t[e]=L$(()=>qu=!0),t),{}),X$=vd.reduce((t,e)=>{const n=ug[e];return t[e]=(r,i=!1,o=!1)=>(qu||F$(),n.schedule(r,i,o)),t},{}),W$=vd.reduce((t,e)=>(t[e]=ug[e].cancel,t),{});vd.reduce((t,e)=>(t[e]=()=>ug[e].process($a),t),{});const R$=t=>ug[t].process($a),aM=t=>{qu=!1,$a.delta=Ly?oM:Math.max(Math.min(t-$a.timestamp,Z$),1),$a.timestamp=t,Zy=!0,vd.forEach(R$),Zy=!1,qu&&(Ly=!1,sM(aM))},F$=()=>{qu=!0,Ly=!0,Zy||sM(aM)},H$=()=>$a;function lM(t,e,n=0){return t-e-n}function D$(t,e,n=0,r=!0){return r?lM(e+-t,e,n):e-(t-e)+n}function G$(t,e,n,r){return r?t>=e+n:t<=-n}const j$=t=>{const e=({delta:n})=>t(n);return{start:()=>X$.update(e,!0),stop:()=>W$.update(e)}};function cM(t){var e,n,{from:r,autoplay:i=!0,driver:o=j$,elapsed:s=0,repeat:a=0,repeatType:l="loop",repeatDelay:c=0,onPlay:u,onStop:d,onComplete:f,onRepeat:h,onUpdate:p}=t,m=qI(t,["from","autoplay","driver","elapsed","repeat","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate"]);let{to:v}=m,g,b=0,y=m.duration,x,k=!1,P=!0,O;const z=M$(m);!((n=(e=z).needsInterpolation)===null||n===void 0)&&n.call(e,r,v)&&(O=eM([0,100],[r,v],{clamp:!1}),r=0,v=100);const I=z(Object.assign(Object.assign({},m),{from:r,to:v}));function E(){b++,l==="reverse"?(P=b%2===0,s=D$(s,y,c,P)):(s=lM(s,y,c),l==="mirror"&&I.flipTarget()),k=!1,h&&h()}function X(){g.stop(),f&&f()}function Y(ae){if(P||(ae=-ae),s+=ae,!k){const oe=I.next(Math.max(0,s));x=oe.value,O&&(x=O(x)),k=P?oe.done:s<=0}p==null||p(x),k&&(b===0&&(y!=null||(y=s)),b<a?G$(s,y,c,P)&&E():X())}function Q(){u==null||u(),g=o(Y),g.start()}return i&&Q(),{stop:()=>{d==null||d(),g.stop()}}}function uM(t,e){return e?t*(1e3/e):0}function B$({from:t=0,velocity:e=0,min:n,max:r,power:i=.8,timeConstant:o=750,bounceStiffness:s=500,bounceDamping:a=10,restDelta:l=1,modifyTarget:c,driver:u,onUpdate:d,onComplete:f,onStop:h}){let p;function m(y){return n!==void 0&&y<n||r!==void 0&&y>r}function v(y){return n===void 0?r:r===void 0||Math.abs(n-y)<Math.abs(r-y)?n:r}function g(y){p==null||p.stop(),p=cM(Object.assign(Object.assign({},y),{driver:u,onUpdate:x=>{var k;d==null||d(x),(k=y.onUpdate)===null||k===void 0||k.call(y,x)},onComplete:f,onStop:h}))}function b(y){g(Object.assign({type:"spring",stiffness:s,damping:a,restDelta:l},y))}if(m(t))b({from:t,velocity:e,to:v(t)});else{let y=i*e+t;typeof c<"u"&&(y=c(y));const x=v(y),k=x===n?-1:1;let P,O;const z=I=>{P=O,O=I,e=uM(I-P,H$().delta),(k===1&&I>x||k===-1&&I<x)&&b({from:I,to:x,velocity:e})};g({type:"decay",from:t,velocity:e,timeConstant:o,power:i,restDelta:l,modifyTarget:c,onUpdate:m(y)?z:void 0})}return{stop:()=>p==null?void 0:p.stop()}}const Xy=t=>t.hasOwnProperty("x")&&t.hasOwnProperty("y"),J5=t=>Xy(t)&&t.hasOwnProperty("z"),Nf=(t,e)=>Math.abs(t-e);function OS(t,e){if(Ay(t)&&Ay(e))return Nf(t,e);if(Xy(t)&&Xy(e)){const n=Nf(t.x,e.x),r=Nf(t.y,e.y),i=J5(t)&&J5(e)?Nf(t.z,e.z):0;return Math.sqrt(Math.pow(n,2)+Math.pow(r,2)+Math.pow(i,2))}}const dM=(t,e)=>1-3*e+3*t,fM=(t,e)=>3*e-6*t,hM=t=>3*t,Yp=(t,e,n)=>((dM(e,n)*t+fM(e,n))*t+hM(e))*t,pM=(t,e,n)=>3*dM(e,n)*t*t+2*fM(e,n)*t+hM(e),Y$=1e-7,K$=10;function U$(t,e,n,r,i){let o,s,a=0;do s=e+(n-e)/2,o=Yp(s,r,i)-t,o>0?n=s:e=s;while(Math.abs(o)>Y$&&++a<K$);return s}const q$=8,J$=.001;function Q$(t,e,n,r){for(let i=0;i<q$;++i){const o=pM(e,n,r);if(o===0)return e;const s=Yp(e,n,r)-t;e-=s/o}return e}const kh=11,If=1/(kh-1);function _$(t,e,n,r){if(t===e&&n===r)return SS;const i=new Float32Array(kh);for(let s=0;s<kh;++s)i[s]=Yp(s*If,t,n);function o(s){let a=0,l=1;const c=kh-1;for(;l!==c&&i[l]<=s;++l)a+=If;--l;const u=(s-i[l])/(i[l+1]-i[l]),d=a+u*If,f=pM(d,t,n);return f>=J$?Q$(s,d,t,n):f===0?d:U$(s,a,a+If,t,n)}return s=>s===0||s===1?s:Yp(o(s),e,r)}function $$({onTap:t,onTapStart:e,onTapCancel:n,whileTap:r,visualElement:i}){const o=t||e||n||r,s=S.exports.useRef(!1),a=S.exports.useRef(null),l={passive:!(e||t||n||h)};function c(){a.current&&a.current(),a.current=null}function u(){return c(),s.current=!1,i.animationState&&i.animationState.setActive(Ie.Tap,!1),!KI()}function d(p,m){!u()||(UI(i.current,p.target)?t&&t(p,m):n&&n(p,m))}function f(p,m){!u()||n&&n(p,m)}function h(p,m){c(),!s.current&&(s.current=!0,a.current=lg(_a(window,"pointerup",d,l),_a(window,"pointercancel",f,l)),i.animationState&&i.animationState.setActive(Ie.Tap,!0),e&&e(p,m))}Dp(i,"pointerdown",o?h:void 0,l),vS(c)}const eee="production",mM=typeof process>"u"||process.env===void 0?eee:"production",Q5=new Set;function gM(t,e,n){t||Q5.has(e)||(console.warn(e),n&&console.warn(n),Q5.add(e))}const Wy=new WeakMap,$0=new WeakMap,tee=t=>{const e=Wy.get(t.target);e&&e(t)},nee=t=>{t.forEach(tee)};function ree({root:t,...e}){const n=t||document;$0.has(n)||$0.set(n,{});const r=$0.get(n),i=JSON.stringify(e);return r[i]||(r[i]=new IntersectionObserver(nee,{root:t,...e})),r[i]}function iee(t,e,n){const r=ree(e);return Wy.set(t,n),r.observe(t),()=>{Wy.delete(t),r.unobserve(t)}}function oee({visualElement:t,whileInView:e,onViewportEnter:n,onViewportLeave:r,viewport:i={}}){const o=S.exports.useRef({hasEnteredView:!1,isInView:!1});let s=Boolean(e||n||r);i.once&&o.current.hasEnteredView&&(s=!1),(typeof IntersectionObserver>"u"?lee:aee)(s,o.current,t,i)}const see={some:0,all:1};function aee(t,e,n,{root:r,margin:i,amount:o="some",once:s}){S.exports.useEffect(()=>{if(!t||!n.current)return;const a={root:r==null?void 0:r.current,rootMargin:i,threshold:typeof o=="number"?o:see[o]},l=c=>{const{isIntersecting:u}=c;if(e.isInView===u||(e.isInView=u,s&&!u&&e.hasEnteredView))return;u&&(e.hasEnteredView=!0),n.animationState&&n.animationState.setActive(Ie.InView,u);const d=n.getProps(),f=u?d.onViewportEnter:d.onViewportLeave;f&&f(c)};return iee(n.current,a,l)},[t,r,i,o])}function lee(t,e,n,{fallback:r=!0}){S.exports.useEffect(()=>{!t||!r||(mM!=="production"&&gM(!1,"IntersectionObserver not available on this device. whileInView animations will trigger on mount."),requestAnimationFrame(()=>{e.hasEnteredView=!0;const{onViewportEnter:i}=n.getProps();i&&i(null),n.animationState&&n.animationState.setActive(Ie.InView,!0)}))},[t])}const ao=t=>e=>(t(e),null),cee={inView:ao(oee),tap:ao($$),focus:ao(W_),hover:ao(U_)};function CS(){const t=S.exports.useContext(Wl);if(t===null)return[!0,null];const{isPresent:e,onExitComplete:n,register:r}=t,i=S.exports.useId();return S.exports.useEffect(()=>r(i),[]),!e&&n?[!1,()=>n&&n(i)]:[!0]}function uee(){return dee(S.exports.useContext(Wl))}function dee(t){return t===null?!0:t.isPresent}function bM(t,e){if(!Array.isArray(e))return!1;const n=e.length;if(n!==t.length)return!1;for(let r=0;r<n;r++)if(e[r]!==t[r])return!1;return!0}const Kp=t=>t*1e3,fee={linear:SS,easeIn:kS,easeInOut:rM,easeOut:y$,circIn:iM,circInOut:x$,circOut:wS,backIn:PS,backInOut:k$,backOut:S$,anticipate:w$,bounceIn:T$,bounceInOut:z$,bounceOut:Bp},_5=t=>{if(Array.isArray(t)){Gp(t.length===4);const[e,n,r,i]=t;return _$(e,n,r,i)}else if(typeof t=="string")return fee[t];return t},hee=t=>Array.isArray(t)&&typeof t[0]!="number",$5=(t,e)=>t==="zIndex"?!1:!!(typeof e=="number"||Array.isArray(e)||typeof e=="string"&&zi.test(e)&&!e.startsWith("url(")),jo=()=>({type:"spring",stiffness:500,damping:25,restSpeed:10}),Mf=t=>({type:"spring",stiffness:550,damping:t===0?2*Math.sqrt(550):30,restSpeed:10}),eb=()=>({type:"keyframes",ease:"linear",duration:.3}),pee=t=>({type:"keyframes",duration:.8,values:t}),e3={x:jo,y:jo,z:jo,rotate:jo,rotateX:jo,rotateY:jo,rotateZ:jo,scaleX:Mf,scaleY:Mf,scale:Mf,opacity:eb,backgroundColor:eb,color:eb,default:Mf},mee=(t,e)=>{let n;return Ku(e)?n=pee:n=e3[t]||e3.default,{to:e,...n(e)}},gee={...EI,color:Bt,backgroundColor:Bt,outlineColor:Bt,fill:Bt,stroke:Bt,borderColor:Bt,borderTopColor:Bt,borderRightColor:Bt,borderBottomColor:Bt,borderLeftColor:Bt,filter:Ny,WebkitFilter:Ny},TS=t=>gee[t];function zS(t,e){var n;let r=TS(t);return r!==Ny&&(r=zi),(n=r.getAnimatableNone)===null||n===void 0?void 0:n.call(r,e)}const bee={current:!1},vM=1/60*1e3,vee=typeof performance<"u"?()=>performance.now():()=>Date.now(),yM=typeof window<"u"?t=>window.requestAnimationFrame(t):t=>setTimeout(()=>t(vee()),vM);function yee(t){let e=[],n=[],r=0,i=!1,o=!1;const s=new WeakSet,a={schedule:(l,c=!1,u=!1)=>{const d=u&&i,f=d?e:n;return c&&s.add(l),f.indexOf(l)===-1&&(f.push(l),d&&i&&(r=e.length)),l},cancel:l=>{const c=n.indexOf(l);c!==-1&&n.splice(c,1),s.delete(l)},process:l=>{if(i){o=!0;return}if(i=!0,[e,n]=[n,e],n.length=0,r=e.length,r)for(let c=0;c<r;c++){const u=e[c];u(l),s.has(u)&&(a.schedule(u),t())}i=!1,o&&(o=!1,a.process(l))}};return a}const xee=40;let Ry=!0,Ju=!1,Fy=!1;const el={delta:0,timestamp:0},yd=["read","update","preRender","render","postRender"],dg=yd.reduce((t,e)=>(t[e]=yee(()=>Ju=!0),t),{}),vr=yd.reduce((t,e)=>{const n=dg[e];return t[e]=(r,i=!1,o=!1)=>(Ju||kee(),n.schedule(r,i,o)),t},{}),Zs=yd.reduce((t,e)=>(t[e]=dg[e].cancel,t),{}),tb=yd.reduce((t,e)=>(t[e]=()=>dg[e].process(el),t),{}),See=t=>dg[t].process(el),xM=t=>{Ju=!1,el.delta=Ry?vM:Math.max(Math.min(t-el.timestamp,xee),1),el.timestamp=t,Fy=!0,yd.forEach(See),Fy=!1,Ju&&(Ry=!1,yM(xM))},kee=()=>{Ju=!0,Ry=!0,Fy||yM(xM)},Hy=()=>el;function SM(t,e){const n=performance.now(),r=({timestamp:i})=>{const o=i-n;o>=e&&(Zs.read(r),t(o-e))};return vr.read(r,!0),()=>Zs.read(r)}function wee({when:t,delay:e,delayChildren:n,staggerChildren:r,staggerDirection:i,repeat:o,repeatType:s,repeatDelay:a,from:l,...c}){return!!Object.keys(c).length}function Pee({ease:t,times:e,yoyo:n,flip:r,loop:i,...o}){const s={...o};return e&&(s.offset=e),o.duration&&(s.duration=Kp(o.duration)),o.repeatDelay&&(s.repeatDelay=Kp(o.repeatDelay)),t&&(s.ease=hee(t)?t.map(_5):_5(t)),o.type==="tween"&&(s.type="keyframes"),(n||i||r)&&(n?s.repeatType="reverse":i?s.repeatType="loop":r&&(s.repeatType="mirror"),s.repeat=i||n||r||o.repeat),o.type!=="spring"&&(s.type="keyframes"),s}function Oee(t,e){var n,r;return(r=(n=(VS(t,e)||{}).delay)!==null&&n!==void 0?n:t.delay)!==null&&r!==void 0?r:0}function Cee(t){return Array.isArray(t.to)&&t.to[0]===null&&(t.to=[...t.to],t.to[0]=t.from),t}function Tee(t,e,n){return Array.isArray(e.to)&&t.duration===void 0&&(t.duration=.8),Cee(e),wee(t)||(t={...t,...mee(n,e.to)}),{...e,...Pee(t)}}function zee(t,e,n,r,i){const o=VS(r,t)||{};let s=o.from!==void 0?o.from:e.get();const a=$5(t,n);s==="none"&&a&&typeof n=="string"?s=zS(t,n):t3(s)&&typeof n=="string"?s=n3(n):!Array.isArray(n)&&t3(n)&&typeof s=="string"&&(n=n3(s));const l=$5(t,s);function c(){const d={from:s,to:n,velocity:e.getVelocity(),onComplete:i,onUpdate:f=>e.set(f)};return o.type==="inertia"||o.type==="decay"?B$({...d,...o}):cM({...Tee(o,d,t),onUpdate:f=>{d.onUpdate(f),o.onUpdate&&o.onUpdate(f)},onComplete:()=>{d.onComplete(),o.onComplete&&o.onComplete()}})}function u(){const d=RI(n);return e.set(d),i(),o.onUpdate&&o.onUpdate(d),o.onComplete&&o.onComplete(),{stop:()=>{}}}return!l||!a||o.type===!1?u:c}function t3(t){return t===0||typeof t=="string"&&parseFloat(t)===0&&t.indexOf(" ")===-1}function n3(t){return typeof t=="number"?0:zS("",t)}function VS(t,e){return t[e]||t.default||t}function ES(t,e,n,r={}){return bee.current&&(r={type:!1}),e.start(i=>{let o;const s=zee(t,e,n,r,i),a=Oee(r,t),l=()=>o=s();let c;return a?c=SM(l,Kp(a)):l(),()=>{c&&c(),o&&o.stop()}})}const Vee=t=>/^\-?\d*\.?\d+$/.test(t),Eee=t=>/^0[^.\s]+$/.test(t);function NS(t,e){t.indexOf(e)===-1&&t.push(e)}function IS(t,e){const n=t.indexOf(e);n>-1&&t.splice(n,1)}class Qc{constructor(){this.subscriptions=[]}add(e){return NS(this.subscriptions,e),()=>IS(this.subscriptions,e)}notify(e,n,r){const i=this.subscriptions.length;if(!!i)if(i===1)this.subscriptions[0](e,n,r);else for(let o=0;o<i;o++){const s=this.subscriptions[o];s&&s(e,n,r)}}getSize(){return this.subscriptions.length}clear(){this.subscriptions.length=0}}const Nee=t=>!isNaN(parseFloat(t));class Iee{constructor(e){this.version="7.6.12",this.timeDelta=0,this.lastUpdated=0,this.updateSubscribers=new Qc,this.velocityUpdateSubscribers=new Qc,this.renderSubscribers=new Qc,this.canTrackVelocity=!1,this.updateAndNotify=(n,r=!0)=>{this.prev=this.current,this.current=n;const{delta:i,timestamp:o}=Hy();this.lastUpdated!==o&&(this.timeDelta=i,this.lastUpdated=o,vr.postRender(this.scheduleVelocityCheck)),this.prev!==this.current&&this.updateSubscribers.notify(this.current),this.velocityUpdateSubscribers.getSize()&&this.velocityUpdateSubscribers.notify(this.getVelocity()),r&&this.renderSubscribers.notify(this.current)},this.scheduleVelocityCheck=()=>vr.postRender(this.velocityCheck),this.velocityCheck=({timestamp:n})=>{n!==this.lastUpdated&&(this.prev=this.current,this.velocityUpdateSubscribers.notify(this.getVelocity()))},this.hasAnimated=!1,this.prev=this.current=e,this.canTrackVelocity=Nee(this.current)}onChange(e){return this.updateSubscribers.add(e)}clearListeners(){this.updateSubscribers.clear()}onRenderRequest(e){return e(this.get()),this.renderSubscribers.add(e)}attach(e){this.passiveEffect=e}set(e,n=!0){!n||!this.passiveEffect?this.updateAndNotify(e,n):this.passiveEffect(e,this.updateAndNotify)}get(){return this.current}getPrevious(){return this.prev}getVelocity(){return this.canTrackVelocity?uM(parseFloat(this.current)-parseFloat(this.prev),this.timeDelta):0}start(e){return this.stop(),new Promise(n=>{this.hasAnimated=!0,this.stopAnimation=e(n)}).then(()=>this.clearAnimation())}stop(){this.stopAnimation&&this.stopAnimation(),this.clearAnimation()}isAnimating(){return!!this.stopAnimation}clearAnimation(){this.stopAnimation=null}destroy(){this.updateSubscribers.clear(),this.renderSubscribers.clear(),this.stop()}}function kl(t){return new Iee(t)}const kM=t=>e=>e.test(t),Mee={test:t=>t==="auto",parse:t=>t},wM=[Ks,ne,qr,Fi,a_,s_,Mee],cc=t=>wM.find(kM(t)),Aee=[...wM,Bt,zi],Lee=t=>Aee.find(kM(t));function Zee(t){const e={};return t.values.forEach((n,r)=>e[r]=n.get()),e}function Xee(t){const e={};return t.values.forEach((n,r)=>e[r]=n.getVelocity()),e}function fg(t,e,n){const r=t.getProps();return gS(r,e,n!==void 0?n:r.custom,Zee(t),Xee(t))}function Wee(t,e,n){t.hasValue(e)?t.getValue(e).set(n):t.addValue(e,kl(n))}function Ree(t,e){const n=fg(t,e);let{transitionEnd:r={},transition:i={},...o}=n?t.makeTargetAnimatable(n,!1):{};o={...o,...r};for(const s in o){const a=RI(o[s]);Wee(t,s,a)}}function Fee(t,e,n){var r,i;const o=Object.keys(e).filter(a=>!t.hasValue(a)),s=o.length;if(!!s)for(let a=0;a<s;a++){const l=o[a],c=e[l];let u=null;Array.isArray(c)&&(u=c[0]),u===null&&(u=(i=(r=n[l])!==null&&r!==void 0?r:t.readValue(l))!==null&&i!==void 0?i:e[l]),u!=null&&(typeof u=="string"&&(Vee(u)||Eee(u))?u=parseFloat(u):!Lee(u)&&zi.test(c)&&(u=zS(l,c)),t.addValue(l,kl(u)),n[l]===void 0&&(n[l]=u),u!==null&&t.setBaseTarget(l,u))}}function Hee(t,e){return e?(e[t]||e.default||e).from:void 0}function Dee(t,e,n){var r;const i={};for(const o in t){const s=Hee(o,e);i[o]=s!==void 0?s:(r=n.getValue(o))===null||r===void 0?void 0:r.get()}return i}function Up(t){return Boolean($r(t)&&t.add)}function Gee(t,e,n={}){t.notify("AnimationStart",e);let r;if(Array.isArray(e)){const i=e.map(o=>Dy(t,o,n));r=Promise.all(i)}else if(typeof e=="string")r=Dy(t,e,n);else{const i=typeof e=="function"?fg(t,e,n.custom):e;r=PM(t,i,n)}return r.then(()=>t.notify("AnimationComplete",e))}function Dy(t,e,n={}){var r;const i=fg(t,e,n.custom);let{transition:o=t.getDefaultTransition()||{}}=i||{};n.transitionOverride&&(o=n.transitionOverride);const s=i?()=>PM(t,i,n):()=>Promise.resolve(),a=!((r=t.variantChildren)===null||r===void 0)&&r.size?(c=0)=>{const{delayChildren:u=0,staggerChildren:d,staggerDirection:f}=o;return jee(t,e,u+c,d,f,n)}:()=>Promise.resolve(),{when:l}=o;if(l){const[c,u]=l==="beforeChildren"?[s,a]:[a,s];return c().then(u)}else return Promise.all([s(),a(n.delay)])}function PM(t,e,{delay:n=0,transitionOverride:r,type:i}={}){var o;let{transition:s=t.getDefaultTransition(),transitionEnd:a,...l}=t.makeTargetAnimatable(e);const c=t.getValue("willChange");r&&(s=r);const u=[],d=i&&((o=t.animationState)===null||o===void 0?void 0:o.getState()[i]);for(const f in l){const h=t.getValue(f),p=l[f];if(!h||p===void 0||d&&Yee(d,f))continue;let m={delay:n,...s};t.shouldReduceMotion&&Rl.has(f)&&(m={...m,type:!1,delay:0});let v=ES(f,h,p,m);Up(c)&&(c.add(f),v=v.then(()=>c.remove(f))),u.push(v)}return Promise.all(u).then(()=>{a&&Ree(t,a)})}function jee(t,e,n=0,r=0,i=1,o){const s=[],a=(t.variantChildren.size-1)*r,l=i===1?(c=0)=>c*r:(c=0)=>a-c*r;return Array.from(t.variantChildren).sort(Bee).forEach((c,u)=>{s.push(Dy(c,e,{...o,delay:n+l(u)}).then(()=>c.notify("AnimationComplete",e)))}),Promise.all(s)}function Bee(t,e){return t.sortNodePosition(e)}function Yee({protectedKeys:t,needsAnimating:e},n){const r=t.hasOwnProperty(n)&&e[n]!==!0;return e[n]=!1,r}const MS=[Ie.Animate,Ie.InView,Ie.Focus,Ie.Hover,Ie.Tap,Ie.Drag,Ie.Exit],Kee=[...MS].reverse(),Uee=MS.length;function qee(t){return e=>Promise.all(e.map(({animation:n,options:r})=>Gee(t,n,r)))}function Jee(t){let e=qee(t);const n=_ee();let r=!0;const i=(l,c)=>{const u=fg(t,c);if(u){const{transition:d,transitionEnd:f,...h}=u;l={...l,...h,...f}}return l};function o(l){e=l(t)}function s(l,c){var u;const d=t.getProps(),f=t.getVariantContext(!0)||{},h=[],p=new Set;let m={},v=1/0;for(let b=0;b<Uee;b++){const y=Kee[b],x=n[y],k=(u=d[y])!==null&&u!==void 0?u:f[y],P=ju(k),O=y===c?x.isActive:null;O===!1&&(v=b);let z=k===f[y]&&k!==d[y]&&P;if(z&&r&&t.manuallyAnimateOnMount&&(z=!1),x.protectedKeys={...m},!x.isActive&&O===null||!k&&!x.prevProp||ig(k)||typeof k=="boolean")continue;const I=Qee(x.prevProp,k);let E=I||y===c&&x.isActive&&!z&&P||b>v&&P;const X=Array.isArray(k)?k:[k];let Y=X.reduce(i,{});O===!1&&(Y={});const{prevResolvedValues:Q={}}=x,ae={...Q,...Y},oe=D=>{E=!0,p.delete(D),x.needsAnimating[D]=!0};for(const D in ae){const ee=Y[D],L=Q[D];m.hasOwnProperty(D)||(ee!==L?Ku(ee)&&Ku(L)?!bM(ee,L)||I?oe(D):x.protectedKeys[D]=!0:ee!==void 0?oe(D):p.add(D):ee!==void 0&&p.has(D)?oe(D):x.protectedKeys[D]=!0)}x.prevProp=k,x.prevResolvedValues=Y,x.isActive&&(m={...m,...Y}),r&&t.blockInitialAnimation&&(E=!1),E&&!z&&h.push(...X.map(D=>({animation:D,options:{type:y,...l}})))}if(p.size){const b={};p.forEach(y=>{const x=t.getBaseTarget(y);x!==void 0&&(b[y]=x)}),h.push({animation:b})}let g=Boolean(h.length);return r&&d.initial===!1&&!t.manuallyAnimateOnMount&&(g=!1),r=!1,g?e(h):Promise.resolve()}function a(l,c,u){var d;if(n[l].isActive===c)return Promise.resolve();(d=t.variantChildren)===null||d===void 0||d.forEach(h=>{var p;return(p=h.animationState)===null||p===void 0?void 0:p.setActive(l,c)}),n[l].isActive=c;const f=s(u,l);for(const h in n)n[h].protectedKeys={};return f}return{animateChanges:s,setActive:a,setAnimateFunction:o,getState:()=>n}}function Qee(t,e){return typeof e=="string"?e!==t:Array.isArray(e)?!bM(e,t):!1}function Bo(t=!1){return{isActive:t,protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}function _ee(){return{[Ie.Animate]:Bo(!0),[Ie.InView]:Bo(),[Ie.Hover]:Bo(),[Ie.Tap]:Bo(),[Ie.Drag]:Bo(),[Ie.Focus]:Bo(),[Ie.Exit]:Bo()}}const $ee={animation:ao(({visualElement:t,animate:e})=>{t.animationState||(t.animationState=Jee(t)),ig(e)&&S.exports.useEffect(()=>e.subscribe(t),[e])}),exit:ao(t=>{const{custom:e,visualElement:n}=t,[r,i]=CS(),o=S.exports.useContext(Wl);S.exports.useEffect(()=>{n.isPresent=r;const s=n.animationState&&n.animationState.setActive(Ie.Exit,!r,{custom:o&&o.custom||e});s&&!r&&s.then(i)},[r])})};class OM{constructor(e,n,{transformPagePoint:r}={}){if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.updatePoint=()=>{if(!(this.lastMoveEvent&&this.lastMoveEventInfo))return;const c=rb(this.lastMoveEventInfo,this.history),u=this.startEvent!==null,d=OS(c.offset,{x:0,y:0})>=3;if(!u&&!d)return;const{point:f}=c,{timestamp:h}=Hy();this.history.push({...f,timestamp:h});const{onStart:p,onMove:m}=this.handlers;u||(p&&p(this.lastMoveEvent,c),this.startEvent=this.lastMoveEvent),m&&m(this.lastMoveEvent,c)},this.handlePointerMove=(c,u)=>{if(this.lastMoveEvent=c,this.lastMoveEventInfo=nb(u,this.transformPagePoint),HI(c)&&c.buttons===0){this.handlePointerUp(c,u);return}vr.update(this.updatePoint,!0)},this.handlePointerUp=(c,u)=>{this.end();const{onEnd:d,onSessionEnd:f}=this.handlers,h=rb(nb(u,this.transformPagePoint),this.history);this.startEvent&&d&&d(c,h),f&&f(c,h)},DI(e)&&e.touches.length>1)return;this.handlers=n,this.transformPagePoint=r;const i=bS(e),o=nb(i,this.transformPagePoint),{point:s}=o,{timestamp:a}=Hy();this.history=[{...s,timestamp:a}];const{onSessionStart:l}=n;l&&l(e,rb(o,this.history)),this.removeListeners=lg(_a(window,"pointermove",this.handlePointerMove),_a(window,"pointerup",this.handlePointerUp),_a(window,"pointercancel",this.handlePointerUp))}updateHandlers(e){this.handlers=e}end(){this.removeListeners&&this.removeListeners(),Zs.update(this.updatePoint)}}function nb(t,e){return e?{point:e(t.point)}:t}function r3(t,e){return{x:t.x-e.x,y:t.y-e.y}}function rb({point:t},e){return{point:t,delta:r3(t,CM(e)),offset:r3(t,ete(e)),velocity:tte(e,.1)}}function ete(t){return t[0]}function CM(t){return t[t.length-1]}function tte(t,e){if(t.length<2)return{x:0,y:0};let n=t.length-1,r=null;const i=CM(t);for(;n>=0&&(r=t[n],!(i.timestamp-r.timestamp>Kp(e)));)n--;if(!r)return{x:0,y:0};const o=(i.timestamp-r.timestamp)/1e3;if(o===0)return{x:0,y:0};const s={x:(i.x-r.x)/o,y:(i.y-r.y)/o};return s.x===1/0&&(s.x=0),s.y===1/0&&(s.y=0),s}function In(t){return t.max-t.min}function i3(t,e=0,n=.01){return OS(t,e)<n}function o3(t,e,n,r=.5){t.origin=r,t.originPoint=et(e.min,e.max,t.origin),t.scale=In(n)/In(e),(i3(t.scale,1,1e-4)||isNaN(t.scale))&&(t.scale=1),t.translate=et(n.min,n.max,t.origin)-t.originPoint,(i3(t.translate)||isNaN(t.translate))&&(t.translate=0)}function _c(t,e,n,r){o3(t.x,e.x,n.x,r==null?void 0:r.originX),o3(t.y,e.y,n.y,r==null?void 0:r.originY)}function s3(t,e,n){t.min=n.min+e.min,t.max=t.min+In(e)}function nte(t,e,n){s3(t.x,e.x,n.x),s3(t.y,e.y,n.y)}function a3(t,e,n){t.min=e.min-n.min,t.max=t.min+In(e)}function $c(t,e,n){a3(t.x,e.x,n.x),a3(t.y,e.y,n.y)}function rte(t,{min:e,max:n},r){return e!==void 0&&t<e?t=r?et(e,t,r.min):Math.max(t,e):n!==void 0&&t>n&&(t=r?et(n,t,r.max):Math.min(t,n)),t}function l3(t,e,n){return{min:e!==void 0?t.min+e:void 0,max:n!==void 0?t.max+n-(t.max-t.min):void 0}}function ite(t,{top:e,left:n,bottom:r,right:i}){return{x:l3(t.x,n,i),y:l3(t.y,e,r)}}function c3(t,e){let n=e.min-t.min,r=e.max-t.max;return e.max-e.min<t.max-t.min&&([n,r]=[r,n]),{min:n,max:r}}function ote(t,e){return{x:c3(t.x,e.x),y:c3(t.y,e.y)}}function ste(t,e){let n=.5;const r=In(t),i=In(e);return i>r?n=Uu(e.min,e.max-r,t.min):r>i&&(n=Uu(t.min,t.max-i,e.min)),jp(0,1,n)}function ate(t,e){const n={};return e.min!==void 0&&(n.min=e.min-t.min),e.max!==void 0&&(n.max=e.max-t.min),n}const Gy=.35;function lte(t=Gy){return t===!1?t=0:t===!0&&(t=Gy),{x:u3(t,"left","right"),y:u3(t,"top","bottom")}}function u3(t,e,n){return{min:d3(t,e),max:d3(t,n)}}function d3(t,e){var n;return typeof t=="number"?t:(n=t[e])!==null&&n!==void 0?n:0}const f3=()=>({translate:0,scale:1,origin:0,originPoint:0}),eu=()=>({x:f3(),y:f3()}),h3=()=>({min:0,max:0}),dt=()=>({x:h3(),y:h3()});function Ir(t){return[t("x"),t("y")]}function TM({top:t,left:e,right:n,bottom:r}){return{x:{min:e,max:n},y:{min:t,max:r}}}function cte({x:t,y:e}){return{top:e.min,right:t.max,bottom:e.max,left:t.min}}function ute(t,e){if(!e)return t;const n=e({x:t.left,y:t.top}),r=e({x:t.right,y:t.bottom});return{top:n.y,left:n.x,bottom:r.y,right:r.x}}function ib(t){return t===void 0||t===1}function jy({scale:t,scaleX:e,scaleY:n}){return!ib(t)||!ib(e)||!ib(n)}function qo(t){return jy(t)||zM(t)||t.z||t.rotate||t.rotateX||t.rotateY}function zM(t){return p3(t.x)||p3(t.y)}function p3(t){return t&&t!=="0%"}function qp(t,e,n){const r=t-n,i=e*r;return n+i}function m3(t,e,n,r,i){return i!==void 0&&(t=qp(t,i,r)),qp(t,n,r)+e}function By(t,e=0,n=1,r,i){t.min=m3(t.min,e,n,r,i),t.max=m3(t.max,e,n,r,i)}function VM(t,{x:e,y:n}){By(t.x,e.translate,e.scale,e.originPoint),By(t.y,n.translate,n.scale,n.originPoint)}function dte(t,e,n,r=!1){var i,o;const s=n.length;if(!s)return;e.x=e.y=1;let a,l;for(let c=0;c<s;c++)a=n[c],l=a.projectionDelta,((o=(i=a.instance)===null||i===void 0?void 0:i.style)===null||o===void 0?void 0:o.display)!=="contents"&&(r&&a.options.layoutScroll&&a.scroll&&a!==a.root&&Ia(t,{x:-a.scroll.offset.x,y:-a.scroll.offset.y}),l&&(e.x*=l.x.scale,e.y*=l.y.scale,VM(t,l)),r&&qo(a.latestValues)&&Ia(t,a.latestValues))}function Bi(t,e){t.min=t.min+e,t.max=t.max+e}function g3(t,e,[n,r,i]){const o=e[i]!==void 0?e[i]:.5,s=et(t.min,t.max,o);By(t,e[n],e[r],s,e.scale)}const fte=["x","scaleX","originX"],hte=["y","scaleY","originY"];function Ia(t,e){g3(t.x,e,fte),g3(t.y,e,hte)}function EM(t,e){return TM(ute(t.getBoundingClientRect(),e))}function pte(t,e,n){const r=EM(t,n),{scroll:i}=e;return i&&(Bi(r.x,i.offset.x),Bi(r.y,i.offset.y)),r}const mte=new WeakMap;class gte{constructor(e){this.openGlobalLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic=dt(),this.visualElement=e}start(e,{snapToCursor:n=!1}={}){if(this.visualElement.isPresent===!1)return;const r=a=>{this.stopAnimation(),n&&this.snapToCursor(bS(a,"page").point)},i=(a,l)=>{var c;const{drag:u,dragPropagation:d,onDragStart:f}=this.getProps();u&&!d&&(this.openGlobalLock&&this.openGlobalLock(),this.openGlobalLock=YI(u),!this.openGlobalLock)||(this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),Ir(h=>{var p,m;let v=this.getAxisMotionValue(h).get()||0;if(qr.test(v)){const g=(m=(p=this.visualElement.projection)===null||p===void 0?void 0:p.layout)===null||m===void 0?void 0:m.layoutBox[h];g&&(v=In(g)*(parseFloat(v)/100))}this.originPoint[h]=v}),f==null||f(a,l),(c=this.visualElement.animationState)===null||c===void 0||c.setActive(Ie.Drag,!0))},o=(a,l)=>{const{dragPropagation:c,dragDirectionLock:u,onDirectionLock:d,onDrag:f}=this.getProps();if(!c&&!this.openGlobalLock)return;const{offset:h}=l;if(u&&this.currentDirection===null){this.currentDirection=bte(h),this.currentDirection!==null&&(d==null||d(this.currentDirection));return}this.updateAxis("x",l.point,h),this.updateAxis("y",l.point,h),this.visualElement.render(),f==null||f(a,l)},s=(a,l)=>this.stop(a,l);this.panSession=new OM(e,{onSessionStart:r,onStart:i,onMove:o,onSessionEnd:s},{transformPagePoint:this.visualElement.getTransformPagePoint()})}stop(e,n){const r=this.isDragging;if(this.cancel(),!r)return;const{velocity:i}=n;this.startAnimation(i);const{onDragEnd:o}=this.getProps();o==null||o(e,n)}cancel(){var e,n;this.isDragging=!1,this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!1),(e=this.panSession)===null||e===void 0||e.end(),this.panSession=void 0;const{dragPropagation:r}=this.getProps();!r&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),(n=this.visualElement.animationState)===null||n===void 0||n.setActive(Ie.Drag,!1)}updateAxis(e,n,r){const{drag:i}=this.getProps();if(!r||!Af(e,i,this.currentDirection))return;const o=this.getAxisMotionValue(e);let s=this.originPoint[e]+r[e];this.constraints&&this.constraints[e]&&(s=rte(s,this.constraints[e],this.elastic[e])),o.set(s)}resolveConstraints(){const{dragConstraints:e,dragElastic:n}=this.getProps(),{layout:r}=this.visualElement.projection||{},i=this.constraints;e&&Na(e)?this.constraints||(this.constraints=this.resolveRefConstraints()):e&&r?this.constraints=ite(r.layoutBox,e):this.constraints=!1,this.elastic=lte(n),i!==this.constraints&&r&&this.constraints&&!this.hasMutatedConstraints&&Ir(o=>{this.getAxisMotionValue(o)&&(this.constraints[o]=ate(r.layoutBox[o],this.constraints[o]))})}resolveRefConstraints(){const{dragConstraints:e,onMeasureDragConstraints:n}=this.getProps();if(!e||!Na(e))return!1;const r=e.current,{projection:i}=this.visualElement;if(!i||!i.layout)return!1;const o=pte(r,i.root,this.visualElement.getTransformPagePoint());let s=ote(i.layout.layoutBox,o);if(n){const a=n(cte(s));this.hasMutatedConstraints=!!a,a&&(s=TM(a))}return s}startAnimation(e){const{drag:n,dragMomentum:r,dragElastic:i,dragTransition:o,dragSnapToOrigin:s,onDragTransitionEnd:a}=this.getProps(),l=this.constraints||{},c=Ir(u=>{var d;if(!Af(u,n,this.currentDirection))return;let f=(d=l==null?void 0:l[u])!==null&&d!==void 0?d:{};s&&(f={min:0,max:0});const h=i?200:1e6,p=i?40:1e7,m={type:"inertia",velocity:r?e[u]:0,bounceStiffness:h,bounceDamping:p,timeConstant:750,restDelta:1,restSpeed:10,...o,...f};return this.startAxisValueAnimation(u,m)});return Promise.all(c).then(a)}startAxisValueAnimation(e,n){const r=this.getAxisMotionValue(e);return ES(e,r,0,n)}stopAnimation(){Ir(e=>this.getAxisMotionValue(e).stop())}getAxisMotionValue(e){var n,r;const i="_drag"+e.toUpperCase(),o=this.visualElement.getProps()[i];return o||this.visualElement.getValue(e,(r=(n=this.visualElement.getProps().initial)===null||n===void 0?void 0:n[e])!==null&&r!==void 0?r:0)}snapToCursor(e){Ir(n=>{const{drag:r}=this.getProps();if(!Af(n,r,this.currentDirection))return;const{projection:i}=this.visualElement,o=this.getAxisMotionValue(n);if(i&&i.layout){const{min:s,max:a}=i.layout.layoutBox[n];o.set(e[n]-et(s,a,.5))}})}scalePositionWithinConstraints(){var e;if(!this.visualElement.current)return;const{drag:n,dragConstraints:r}=this.getProps(),{projection:i}=this.visualElement;if(!Na(r)||!i||!this.constraints)return;this.stopAnimation();const o={x:0,y:0};Ir(a=>{const l=this.getAxisMotionValue(a);if(l){const c=l.get();o[a]=ste({min:c,max:c},this.constraints[a])}});const{transformTemplate:s}=this.visualElement.getProps();this.visualElement.current.style.transform=s?s({},""):"none",(e=i.root)===null||e===void 0||e.updateScroll(),i.updateLayout(),this.resolveConstraints(),Ir(a=>{if(!Af(a,n,null))return;const l=this.getAxisMotionValue(a),{min:c,max:u}=this.constraints[a];l.set(et(c,u,o[a]))})}addListeners(){var e;if(!this.visualElement.current)return;mte.set(this.visualElement,this);const n=this.visualElement.current,r=_a(n,"pointerdown",c=>{const{drag:u,dragListener:d=!0}=this.getProps();u&&d&&this.start(c)}),i=()=>{const{dragConstraints:c}=this.getProps();Na(c)&&(this.constraints=this.resolveRefConstraints())},{projection:o}=this.visualElement,s=o.addEventListener("measure",i);o&&!o.layout&&((e=o.root)===null||e===void 0||e.updateScroll(),o.updateLayout()),i();const a=ag(window,"resize",()=>this.scalePositionWithinConstraints()),l=o.addEventListener("didUpdate",({delta:c,hasLayoutChanged:u})=>{this.isDragging&&u&&(Ir(d=>{const f=this.getAxisMotionValue(d);!f||(this.originPoint[d]+=c[d].translate,f.set(f.get()+c[d].translate))}),this.visualElement.render())});return()=>{a(),r(),s(),l==null||l()}}getProps(){const e=this.visualElement.getProps(),{drag:n=!1,dragDirectionLock:r=!1,dragPropagation:i=!1,dragConstraints:o=!1,dragElastic:s=Gy,dragMomentum:a=!0}=e;return{...e,drag:n,dragDirectionLock:r,dragPropagation:i,dragConstraints:o,dragElastic:s,dragMomentum:a}}}function Af(t,e,n){return(e===!0||e===t)&&(n===null||n===t)}function bte(t,e=10){let n=null;return Math.abs(t.y)>e?n="y":Math.abs(t.x)>e&&(n="x"),n}function vte(t){const{dragControls:e,visualElement:n}=t,r=sg(()=>new gte(n));S.exports.useEffect(()=>e&&e.subscribe(r),[r,e]),S.exports.useEffect(()=>r.addListeners(),[r])}function yte({onPan:t,onPanStart:e,onPanEnd:n,onPanSessionStart:r,visualElement:i}){const o=t||e||n||r,s=S.exports.useRef(null),{transformPagePoint:a}=S.exports.useContext(lS),l={onSessionStart:r,onStart:e,onMove:t,onEnd:(u,d)=>{s.current=null,n&&n(u,d)}};S.exports.useEffect(()=>{s.current!==null&&s.current.updateHandlers(l)});function c(u){s.current=new OM(u,l,{transformPagePoint:a})}Dp(i,"pointerdown",o&&c),vS(()=>s.current&&s.current.end())}const xte={pan:ao(yte),drag:ao(vte)};function Yy(t){return typeof t=="string"&&t.startsWith("var(--")}const NM=/var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;function Ste(t){const e=NM.exec(t);if(!e)return[,];const[,n,r]=e;return[n,r]}function Ky(t,e,n=1){const[r,i]=Ste(t);if(!r)return;const o=window.getComputedStyle(e).getPropertyValue(r);return o?o.trim():Yy(i)?Ky(i,e,n+1):i}function kte(t,{...e},n){const r=t.current;if(!(r instanceof Element))return{target:e,transitionEnd:n};n&&(n={...n}),t.values.forEach(i=>{const o=i.get();if(!Yy(o))return;const s=Ky(o,r);s&&i.set(s)});for(const i in e){const o=e[i];if(!Yy(o))continue;const s=Ky(o,r);!s||(e[i]=s,n&&n[i]===void 0&&(n[i]=o))}return{target:e,transitionEnd:n}}const wte=new Set(["width","height","top","left","right","bottom","x","y"]),IM=t=>wte.has(t),Pte=t=>Object.keys(t).some(IM),MM=(t,e)=>{t.set(e,!1),t.set(e)},b3=t=>t===Ks||t===ne;var v3;(function(t){t.width="width",t.height="height",t.left="left",t.right="right",t.top="top",t.bottom="bottom"})(v3||(v3={}));const y3=(t,e)=>parseFloat(t.split(", ")[e]),x3=(t,e)=>(n,{transform:r})=>{if(r==="none"||!r)return 0;const i=r.match(/^matrix3d\((.+)\)$/);if(i)return y3(i[1],e);{const o=r.match(/^matrix\((.+)\)$/);return o?y3(o[1],t):0}},Ote=new Set(["x","y","z"]),Cte=Fp.filter(t=>!Ote.has(t));function Tte(t){const e=[];return Cte.forEach(n=>{const r=t.getValue(n);r!==void 0&&(e.push([n,r.get()]),r.set(n.startsWith("scale")?1:0))}),e.length&&t.render(),e}const S3={width:({x:t},{paddingLeft:e="0",paddingRight:n="0"})=>t.max-t.min-parseFloat(e)-parseFloat(n),height:({y:t},{paddingTop:e="0",paddingBottom:n="0"})=>t.max-t.min-parseFloat(e)-parseFloat(n),top:(t,{top:e})=>parseFloat(e),left:(t,{left:e})=>parseFloat(e),bottom:({y:t},{top:e})=>parseFloat(e)+(t.max-t.min),right:({x:t},{left:e})=>parseFloat(e)+(t.max-t.min),x:x3(4,13),y:x3(5,14)},zte=(t,e,n)=>{const r=e.measureViewportBox(),i=e.current,o=getComputedStyle(i),{display:s}=o,a={};s==="none"&&e.setStaticValue("display",t.display||"block"),n.forEach(c=>{a[c]=S3[c](r,o)}),e.render();const l=e.measureViewportBox();return n.forEach(c=>{const u=e.getValue(c);MM(u,a[c]),t[c]=S3[c](l,o)}),t},Vte=(t,e,n={},r={})=>{e={...e},r={...r};const i=Object.keys(e).filter(IM);let o=[],s=!1;const a=[];if(i.forEach(l=>{const c=t.getValue(l);if(!t.hasValue(l))return;let u=n[l],d=cc(u);const f=e[l];let h;if(Ku(f)){const p=f.length,m=f[0]===null?1:0;u=f[m],d=cc(u);for(let v=m;v<p;v++)h?Gp(cc(f[v])===h):h=cc(f[v])}else h=cc(f);if(d!==h)if(b3(d)&&b3(h)){const p=c.get();typeof p=="string"&&c.set(parseFloat(p)),typeof f=="string"?e[l]=parseFloat(f):Array.isArray(f)&&h===ne&&(e[l]=f.map(parseFloat))}else(d==null?void 0:d.transform)&&(h==null?void 0:h.transform)&&(u===0||f===0)?u===0?c.set(h.transform(u)):e[l]=d.transform(f):(s||(o=Tte(t),s=!0),a.push(l),r[l]=r[l]!==void 0?r[l]:e[l],MM(c,f))}),a.length){const l=a.indexOf("height")>=0?window.pageYOffset:null,c=zte(e,t,a);return o.length&&o.forEach(([u,d])=>{t.getValue(u).set(d)}),t.render(),Ys&&l!==null&&window.scrollTo({top:l}),{target:c,transitionEnd:r}}else return{target:e,transitionEnd:r}};function Ete(t,e,n,r){return Pte(e)?Vte(t,e,n,r):{target:e,transitionEnd:r}}const Nte=(t,e,n,r)=>{const i=kte(t,e,r);return e=i.target,r=i.transitionEnd,Ete(t,e,n,r)},Uy={current:null},AM={current:!1};function Ite(){if(AM.current=!0,!!Ys)if(window.matchMedia){const t=window.matchMedia("(prefers-reduced-motion)"),e=()=>Uy.current=t.matches;t.addListener(e),e()}else Uy.current=!1}function Mte(t,e,n){const{willChange:r}=e;for(const i in e){const o=e[i],s=n[i];if($r(o))t.addValue(i,o),Up(r)&&r.add(i);else if($r(s))t.addValue(i,kl(o)),Up(r)&&r.remove(i);else if(s!==o)if(t.hasValue(i)){const a=t.getValue(i);!a.hasAnimated&&a.set(o)}else{const a=t.getStaticValue(i);t.addValue(i,kl(a!==void 0?a:o))}}for(const i in n)e[i]===void 0&&t.removeValue(i);return e}const LM=Object.keys(Bu),Ate=LM.length,k3=["AnimationStart","AnimationComplete","Update","Unmount","BeforeLayoutMeasure","LayoutMeasure","LayoutAnimationStart","LayoutAnimationComplete"];class Lte{constructor({parent:e,props:n,reducedMotionConfig:r,visualState:i},o={}){this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.isPresent=!0,this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify("Update",this.latestValues),this.render=()=>{!this.current||(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.scheduleRender=()=>vr.render(this.render,!1,!0);const{latestValues:s,renderState:a}=i;this.latestValues=s,this.baseTarget={...s},this.initialValues=n.initial?{...s}:{},this.renderState=a,this.parent=e,this.props=n,this.depth=e?e.depth+1:0,this.reducedMotionConfig=r,this.options=o,this.isControllingVariants=og(n),this.isVariantNode=yI(n),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=Boolean(e&&e.current);const{willChange:l,...c}=this.scrapeMotionValuesFromProps(n);for(const u in c){const d=c[u];s[u]!==void 0&&$r(d)&&(d.set(s[u],!1),Up(l)&&l.add(u))}}scrapeMotionValuesFromProps(e){return{}}mount(e){var n;this.current=e,this.projection&&this.projection.mount(e),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=(n=this.parent)===null||n===void 0?void 0:n.addVariantChild(this)),this.values.forEach((r,i)=>this.bindToMotionValue(i,r)),AM.current||Ite(),this.shouldReduceMotion=this.reducedMotionConfig==="never"?!1:this.reducedMotionConfig==="always"?!0:Uy.current,this.parent&&this.parent.children.add(this),this.setProps(this.props)}unmount(){var e,n,r;(e=this.projection)===null||e===void 0||e.unmount(),Zs.update(this.notifyUpdate),Zs.render(this.render),this.valueSubscriptions.forEach(i=>i()),(n=this.removeFromVariantTree)===null||n===void 0||n.call(this),(r=this.parent)===null||r===void 0||r.children.delete(this);for(const i in this.events)this.events[i].clear();this.current=null}bindToMotionValue(e,n){const r=Rl.has(e),i=n.onChange(s=>{this.latestValues[e]=s,this.props.onUpdate&&vr.update(this.notifyUpdate,!1,!0),r&&this.projection&&(this.projection.isTransformDirty=!0)}),o=n.onRenderRequest(this.scheduleRender);this.valueSubscriptions.set(e,()=>{i(),o()})}sortNodePosition(e){return!this.current||!this.sortInstanceNodePosition||this.type!==e.type?0:this.sortInstanceNodePosition(this.current,e.current)}loadFeatures(e,n,r,i,o,s){const a=[];for(let l=0;l<Ate;l++){const c=LM[l],{isEnabled:u,Component:d}=Bu[c];u(e)&&d&&a.push(S.exports.createElement(d,{key:c,...e,visualElement:this}))}if(!this.projection&&o){this.projection=new o(i,this.latestValues,this.parent&&this.parent.projection);const{layoutId:l,layout:c,drag:u,dragConstraints:d,layoutScroll:f}=e;this.projection.setOptions({layoutId:l,layout:c,alwaysMeasureLayout:Boolean(u)||d&&Na(d),visualElement:this,scheduleRender:()=>this.scheduleRender(),animationType:typeof c=="string"?c:"both",initialPromotionConfig:s,layoutScroll:f})}return a}triggerBuild(){this.build(this.renderState,this.latestValues,this.options,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):dt()}getStaticValue(e){return this.latestValues[e]}setStaticValue(e,n){this.latestValues[e]=n}makeTargetAnimatable(e,n=!0){return this.makeTargetAnimatableFromInstance(e,this.props,n)}setProps(e){(e.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.props=e;for(let n=0;n<k3.length;n++){const r=k3[n];this.propEventSubscriptions[r]&&(this.propEventSubscriptions[r](),delete this.propEventSubscriptions[r]);const i=e["on"+r];i&&(this.propEventSubscriptions[r]=this.on(r,i))}this.prevMotionValues=Mte(this,this.scrapeMotionValuesFromProps(e),this.prevMotionValues)}getProps(){return this.props}getVariant(e){var n;return(n=this.props.variants)===null||n===void 0?void 0:n[e]}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){var e;return this.isVariantNode?this:(e=this.parent)===null||e===void 0?void 0:e.getClosestVariantNode()}getVariantContext(e=!1){var n,r;if(e)return(n=this.parent)===null||n===void 0?void 0:n.getVariantContext();if(!this.isControllingVariants){const o=((r=this.parent)===null||r===void 0?void 0:r.getVariantContext())||{};return this.props.initial!==void 0&&(o.initial=this.props.initial),o}const i={};for(let o=0;o<Zte;o++){const s=ZM[o],a=this.props[s];(ju(a)||a===!1)&&(i[s]=a)}return i}addVariantChild(e){var n;const r=this.getClosestVariantNode();if(r)return(n=r.variantChildren)===null||n===void 0||n.add(e),()=>r.variantChildren.delete(e)}addValue(e,n){this.hasValue(e)&&this.removeValue(e),this.values.set(e,n),this.latestValues[e]=n.get(),this.bindToMotionValue(e,n)}removeValue(e){var n;this.values.delete(e),(n=this.valueSubscriptions.get(e))===null||n===void 0||n(),this.valueSubscriptions.delete(e),delete this.latestValues[e],this.removeValueFromRenderState(e,this.renderState)}hasValue(e){return this.values.has(e)}getValue(e,n){if(this.props.values&&this.props.values[e])return this.props.values[e];let r=this.values.get(e);return r===void 0&&n!==void 0&&(r=kl(n),this.addValue(e,r)),r}readValue(e){return this.latestValues[e]!==void 0||!this.current?this.latestValues[e]:this.readValueFromInstance(this.current,e,this.options)}setBaseTarget(e,n){this.baseTarget[e]=n}getBaseTarget(e){var n;const{initial:r}=this.props,i=typeof r=="string"||typeof r=="object"?(n=gS(this.props,r))===null||n===void 0?void 0:n[e]:void 0;if(r&&i!==void 0)return i;const o=this.getBaseTargetFromProps(this.props,e);return o!==void 0&&!$r(o)?o:this.initialValues[e]!==void 0&&i===void 0?void 0:this.baseTarget[e]}on(e,n){return this.events[e]||(this.events[e]=new Qc),this.events[e].add(n)}notify(e,...n){var r;(r=this.events[e])===null||r===void 0||r.notify(...n)}}const ZM=["initial",...MS],Zte=ZM.length;class XM extends Lte{sortInstanceNodePosition(e,n){return e.compareDocumentPosition(n)&2?1:-1}getBaseTargetFromProps(e,n){var r;return(r=e.style)===null||r===void 0?void 0:r[n]}removeValueFromRenderState(e,{vars:n,style:r}){delete n[e],delete r[e]}makeTargetAnimatableFromInstance({transition:e,transitionEnd:n,...r},{transformValues:i},o){let s=Dee(r,e||{},this);if(i&&(n&&(n=i(n)),r&&(r=i(r)),s&&(s=i(s))),o){Fee(this,r,s);const a=Nte(this,r,s,n);n=a.transitionEnd,r=a.target}return{transition:e,transitionEnd:n,...r}}}function Xte(t){return window.getComputedStyle(t)}class Wte extends XM{readValueFromInstance(e,n){if(Rl.has(n)){const r=TS(n);return r&&r.default||0}else{const r=Xte(e),i=(kI(n)?r.getPropertyValue(n):r[n])||0;return typeof i=="string"?i.trim():i}}measureInstanceViewportBox(e,{transformPagePoint:n}){return EM(e,n)}build(e,n,r,i){fS(e,n,r,i.transformTemplate)}scrapeMotionValuesFromProps(e){return mS(e)}renderInstance(e,n,r,i){LI(e,n,r,i)}}class Rte extends XM{getBaseTargetFromProps(e,n){return e[n]}readValueFromInstance(e,n){var r;return Rl.has(n)?((r=TS(n))===null||r===void 0?void 0:r.default)||0:(n=ZI.has(n)?n:AI(n),e.getAttribute(n))}measureInstanceViewportBox(){return dt()}scrapeMotionValuesFromProps(e){return WI(e)}build(e,n,r,i){pS(e,n,r,i.transformTemplate)}renderInstance(e,n,r,i){XI(e,n,r,i)}}const Fte=(t,e)=>uS(t)?new Rte(e,{enableHardwareAcceleration:!1}):new Wte(e,{enableHardwareAcceleration:!0});function w3(t,e){return e.max===e.min?0:t/(e.max-e.min)*100}const uc={correct:(t,e)=>{if(!e.target)return t;if(typeof t=="string")if(ne.test(t))t=parseFloat(t);else return t;const n=w3(t,e.target.x),r=w3(t,e.target.y);return`${n}% ${r}%`}},P3="_$css",Hte={correct:(t,{treeScale:e,projectionDelta:n})=>{const r=t,i=t.includes("var("),o=[];i&&(t=t.replace(NM,h=>(o.push(h),P3)));const s=zi.parse(t);if(s.length>5)return r;const a=zi.createTransformer(t),l=typeof s[0]!="number"?1:0,c=n.x.scale*e.x,u=n.y.scale*e.y;s[0+l]/=c,s[1+l]/=u;const d=et(c,u,.5);typeof s[2+l]=="number"&&(s[2+l]/=d),typeof s[3+l]=="number"&&(s[3+l]/=d);let f=a(s);if(i){let h=0;f=f.replace(P3,()=>{const p=o[h];return h++,p})}return f}};class Dte extends R.Component{componentDidMount(){const{visualElement:e,layoutGroup:n,switchLayoutGroup:r,layoutId:i}=this.props,{projection:o}=e;e_(jte),o&&(n.group&&n.group.add(o),r&&r.register&&i&&r.register(o),o.root.didUpdate(),o.addEventListener("animationComplete",()=>{this.safeToRemove()}),o.setOptions({...o.options,onExitComplete:()=>this.safeToRemove()})),Uc.hasEverUpdated=!0}getSnapshotBeforeUpdate(e){const{layoutDependency:n,visualElement:r,drag:i,isPresent:o}=this.props,s=r.projection;return s&&(s.isPresent=o,i||e.layoutDependency!==n||n===void 0?s.willUpdate():this.safeToRemove(),e.isPresent!==o&&(o?s.promote():s.relegate()||vr.postRender(()=>{var a;!((a=s.getStack())===null||a===void 0)&&a.members.length||this.safeToRemove()}))),null}componentDidUpdate(){const{projection:e}=this.props.visualElement;e&&(e.root.didUpdate(),!e.currentAnimation&&e.isLead()&&this.safeToRemove())}componentWillUnmount(){const{visualElement:e,layoutGroup:n,switchLayoutGroup:r}=this.props,{projection:i}=e;i&&(i.scheduleCheckAfterUnmount(),n!=null&&n.group&&n.group.remove(i),r!=null&&r.deregister&&r.deregister(i))}safeToRemove(){const{safeToRemove:e}=this.props;e==null||e()}render(){return null}}function Gte(t){const[e,n]=CS(),r=S.exports.useContext(cS);return N(Dte,{...t,layoutGroup:r,switchLayoutGroup:S.exports.useContext(xI),isPresent:e,safeToRemove:n})}const jte={borderRadius:{...uc,applyTo:["borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"]},borderTopLeftRadius:uc,borderTopRightRadius:uc,borderBottomLeftRadius:uc,borderBottomRightRadius:uc,boxShadow:Hte},Bte={measureLayout:Gte};function Yte(t,e,n={}){const r=$r(t)?t:kl(t);return ES("",r,e,n),{stop:()=>r.stop(),isAnimating:()=>r.isAnimating()}}const WM=["TopLeft","TopRight","BottomLeft","BottomRight"],Kte=WM.length,O3=t=>typeof t=="string"?parseFloat(t):t,C3=t=>typeof t=="number"||ne.test(t);function Ute(t,e,n,r,i,o){var s,a,l,c;i?(t.opacity=et(0,(s=n.opacity)!==null&&s!==void 0?s:1,qte(r)),t.opacityExit=et((a=e.opacity)!==null&&a!==void 0?a:1,0,Jte(r))):o&&(t.opacity=et((l=e.opacity)!==null&&l!==void 0?l:1,(c=n.opacity)!==null&&c!==void 0?c:1,r));for(let u=0;u<Kte;u++){const d=`border${WM[u]}Radius`;let f=T3(e,d),h=T3(n,d);if(f===void 0&&h===void 0)continue;f||(f=0),h||(h=0),f===0||h===0||C3(f)===C3(h)?(t[d]=Math.max(et(O3(f),O3(h),r),0),(qr.test(h)||qr.test(f))&&(t[d]+="%")):t[d]=h}(e.rotate||n.rotate)&&(t.rotate=et(e.rotate||0,n.rotate||0,r))}function T3(t,e){var n;return(n=t[e])!==null&&n!==void 0?n:t.borderRadius}const qte=RM(0,.5,wS),Jte=RM(.5,.95,SS);function RM(t,e,n){return r=>r<t?0:r>e?1:n(Uu(t,e,r))}function z3(t,e){t.min=e.min,t.max=e.max}function lr(t,e){z3(t.x,e.x),z3(t.y,e.y)}function V3(t,e,n,r,i){return t-=e,t=qp(t,1/n,r),i!==void 0&&(t=qp(t,1/i,r)),t}function Qte(t,e=0,n=1,r=.5,i,o=t,s=t){if(qr.test(e)&&(e=parseFloat(e),e=et(s.min,s.max,e/100)-s.min),typeof e!="number")return;let a=et(o.min,o.max,r);t===o&&(a-=e),t.min=V3(t.min,e,n,a,i),t.max=V3(t.max,e,n,a,i)}function E3(t,e,[n,r,i],o,s){Qte(t,e[n],e[r],e[i],e.scale,o,s)}const _te=["x","scaleX","originX"],$te=["y","scaleY","originY"];function N3(t,e,n,r){E3(t.x,e,_te,n==null?void 0:n.x,r==null?void 0:r.x),E3(t.y,e,$te,n==null?void 0:n.y,r==null?void 0:r.y)}function I3(t){return t.translate===0&&t.scale===1}function FM(t){return I3(t.x)&&I3(t.y)}function HM(t,e){return t.x.min===e.x.min&&t.x.max===e.x.max&&t.y.min===e.y.min&&t.y.max===e.y.max}function M3(t){return In(t.x)/In(t.y)}function ene(t,e,n=.1){return OS(t,e)<=n}class tne{constructor(){this.members=[]}add(e){NS(this.members,e),e.scheduleRender()}remove(e){if(IS(this.members,e),e===this.prevLead&&(this.prevLead=void 0),e===this.lead){const n=this.members[this.members.length-1];n&&this.promote(n)}}relegate(e){const n=this.members.findIndex(i=>e===i);if(n===0)return!1;let r;for(let i=n;i>=0;i--){const o=this.members[i];if(o.isPresent!==!1){r=o;break}}return r?(this.promote(r),!0):!1}promote(e,n){var r;const i=this.lead;if(e!==i&&(this.prevLead=i,this.lead=e,e.show(),i)){i.instance&&i.scheduleRender(),e.scheduleRender(),e.resumeFrom=i,n&&(e.resumeFrom.preserveOpacity=!0),i.snapshot&&(e.snapshot=i.snapshot,e.snapshot.latestValues=i.animationValues||i.latestValues),!((r=e.root)===null||r===void 0)&&r.isUpdating&&(e.isLayoutDirty=!0);const{crossfade:o}=e.options;o===!1&&i.hide()}}exitAnimationComplete(){this.members.forEach(e=>{var n,r,i,o,s;(r=(n=e.options).onExitComplete)===null||r===void 0||r.call(n),(s=(i=e.resumingFrom)===null||i===void 0?void 0:(o=i.options).onExitComplete)===null||s===void 0||s.call(o)})}scheduleRender(){this.members.forEach(e=>{e.instance&&e.scheduleRender(!1)})}removeLeadSnapshot(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)}}function A3(t,e,n){let r="";const i=t.x.translate/e.x,o=t.y.translate/e.y;if((i||o)&&(r=`translate3d(${i}px, ${o}px, 0) `),(e.x!==1||e.y!==1)&&(r+=`scale(${1/e.x}, ${1/e.y}) `),n){const{rotate:l,rotateX:c,rotateY:u}=n;l&&(r+=`rotate(${l}deg) `),c&&(r+=`rotateX(${c}deg) `),u&&(r+=`rotateY(${u}deg) `)}const s=t.x.scale*e.x,a=t.y.scale*e.y;return(s!==1||a!==1)&&(r+=`scale(${s}, ${a})`),r||"none"}const nne=(t,e)=>t.depth-e.depth;class rne{constructor(){this.children=[],this.isDirty=!1}add(e){NS(this.children,e),this.isDirty=!0}remove(e){IS(this.children,e),this.isDirty=!0}forEach(e){this.isDirty&&this.children.sort(nne),this.isDirty=!1,this.children.forEach(e)}}const L3=["","X","Y","Z"],Z3=1e3;let ine=0;function DM({attachResizeListener:t,defaultParent:e,measureScroll:n,checkIsScrollRoot:r,resetTransform:i}){return class{constructor(s,a={},l=e==null?void 0:e()){this.id=ine++,this.animationId=0,this.children=new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.isTransformDirty=!1,this.isProjectionDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.treeScale={x:1,y:1},this.eventHandlers=new Map,this.potentialNodes=new Map,this.checkUpdateFailed=()=>{this.isUpdating&&(this.isUpdating=!1,this.clearAllSnapshots())},this.updateProjection=()=>{this.nodes.forEach(ane),this.nodes.forEach(une),this.nodes.forEach(dne)},this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=new Map,this.elementId=s,this.latestValues=a,this.root=l?l.root||l:this,this.path=l?[...l.path,l]:[],this.parent=l,this.depth=l?l.depth+1:0,s&&this.root.registerPotentialNode(s,this);for(let c=0;c<this.path.length;c++)this.path[c].shouldResetTransform=!0;this.root===this&&(this.nodes=new rne)}addEventListener(s,a){return this.eventHandlers.has(s)||this.eventHandlers.set(s,new Qc),this.eventHandlers.get(s).add(a)}notifyListeners(s,...a){const l=this.eventHandlers.get(s);l==null||l.notify(...a)}hasListeners(s){return this.eventHandlers.has(s)}registerPotentialNode(s,a){this.potentialNodes.set(s,a)}mount(s,a=!1){var l;if(this.instance)return;this.isSVG=s instanceof SVGElement&&s.tagName!=="svg",this.instance=s;const{layoutId:c,layout:u,visualElement:d}=this.options;if(d&&!d.current&&d.mount(s),this.root.nodes.add(this),(l=this.parent)===null||l===void 0||l.children.add(this),this.elementId&&this.root.potentialNodes.delete(this.elementId),a&&(u||c)&&(this.isLayoutDirty=!0),t){let f;const h=()=>this.root.updateBlockedByResize=!1;t(s,()=>{this.root.updateBlockedByResize=!0,f&&f(),f=SM(h,250),Uc.hasAnimatedSinceResize&&(Uc.hasAnimatedSinceResize=!1,this.nodes.forEach(W3))})}c&&this.root.registerSharedNode(c,this),this.options.animate!==!1&&d&&(c||u)&&this.addEventListener("didUpdate",({delta:f,hasLayoutChanged:h,hasRelativeTargetChanged:p,layout:m})=>{var v,g,b,y,x;if(this.isTreeAnimationBlocked()){this.target=void 0,this.relativeTarget=void 0;return}const k=(g=(v=this.options.transition)!==null&&v!==void 0?v:d.getDefaultTransition())!==null&&g!==void 0?g:gne,{onLayoutAnimationStart:P,onLayoutAnimationComplete:O}=d.getProps(),z=!this.targetLayout||!HM(this.targetLayout,m)||p,I=!h&&p;if(((b=this.resumeFrom)===null||b===void 0?void 0:b.instance)||I||h&&(z||!this.currentAnimation)){this.resumeFrom&&(this.resumingFrom=this.resumeFrom,this.resumingFrom.resumingFrom=void 0),this.setAnimationOrigin(f,I);const E={...VS(k,"layout"),onPlay:P,onComplete:O};d.shouldReduceMotion&&(E.delay=0,E.type=!1),this.startAnimation(E)}else!h&&this.animationProgress===0&&W3(this),this.isLead()&&((x=(y=this.options).onExitComplete)===null||x===void 0||x.call(y));this.targetLayout=m})}unmount(){var s,a;this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this),(s=this.getStack())===null||s===void 0||s.remove(this),(a=this.parent)===null||a===void 0||a.children.delete(this),this.instance=void 0,Zs.preRender(this.updateProjection)}blockUpdate(){this.updateManuallyBlocked=!0}unblockUpdate(){this.updateManuallyBlocked=!1}isUpdateBlocked(){return this.updateManuallyBlocked||this.updateBlockedByResize}isTreeAnimationBlocked(){var s;return this.isAnimationBlocked||((s=this.parent)===null||s===void 0?void 0:s.isTreeAnimationBlocked())||!1}startUpdate(){var s;this.isUpdateBlocked()||(this.isUpdating=!0,(s=this.nodes)===null||s===void 0||s.forEach(fne),this.animationId++)}willUpdate(s=!0){var a,l,c;if(this.root.isUpdateBlocked()){(l=(a=this.options).onExitComplete)===null||l===void 0||l.call(a);return}if(!this.root.isUpdating&&this.root.startUpdate(),this.isLayoutDirty)return;this.isLayoutDirty=!0;for(let h=0;h<this.path.length;h++){const p=this.path[h];p.shouldResetTransform=!0,p.updateScroll("snapshot")}const{layoutId:u,layout:d}=this.options;if(u===void 0&&!d)return;const f=(c=this.options.visualElement)===null||c===void 0?void 0:c.getProps().transformTemplate;this.prevTransformTemplateValue=f==null?void 0:f(this.latestValues,""),this.updateSnapshot(),s&&this.notifyListeners("willUpdate")}didUpdate(){if(this.isUpdateBlocked()){this.unblockUpdate(),this.clearAllSnapshots(),this.nodes.forEach(X3);return}!this.isUpdating||(this.isUpdating=!1,this.potentialNodes.size&&(this.potentialNodes.forEach(bne),this.potentialNodes.clear()),this.nodes.forEach(cne),this.nodes.forEach(one),this.nodes.forEach(sne),this.clearAllSnapshots(),tb.update(),tb.preRender(),tb.render())}clearAllSnapshots(){this.nodes.forEach(lne),this.sharedNodes.forEach(hne)}scheduleUpdateProjection(){vr.preRender(this.updateProjection,!1,!0)}scheduleCheckAfterUnmount(){vr.postRender(()=>{this.isLayoutDirty?this.root.didUpdate():this.root.checkUpdateFailed()})}updateSnapshot(){this.snapshot||!this.instance||(this.snapshot=this.measure())}updateLayout(){var s;if(!this.instance||(this.updateScroll(),!(this.options.alwaysMeasureLayout&&this.isLead())&&!this.isLayoutDirty))return;if(this.resumeFrom&&!this.resumeFrom.instance)for(let l=0;l<this.path.length;l++)this.path[l].updateScroll();const a=this.layout;this.layout=this.measure(!1),this.layoutCorrected=dt(),this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners("measure",this.layout.layoutBox),(s=this.options.visualElement)===null||s===void 0||s.notify("LayoutMeasure",this.layout.layoutBox,a==null?void 0:a.layoutBox)}updateScroll(s="measure"){let a=Boolean(this.options.layoutScroll&&this.instance);this.scroll&&this.scroll.animationId===this.root.animationId&&this.scroll.phase===s&&(a=!1),a&&(this.scroll={animationId:this.root.animationId,phase:s,isRoot:r(this.instance),offset:n(this.instance)})}resetTransform(){var s;if(!i)return;const a=this.isLayoutDirty||this.shouldResetTransform,l=this.projectionDelta&&!FM(this.projectionDelta),c=(s=this.options.visualElement)===null||s===void 0?void 0:s.getProps().transformTemplate,u=c==null?void 0:c(this.latestValues,""),d=u!==this.prevTransformTemplateValue;a&&(l||qo(this.latestValues)||d)&&(i(this.instance,u),this.shouldResetTransform=!1,this.scheduleRender())}measure(s=!0){const a=this.measurePageBox();let l=this.removeElementScroll(a);return s&&(l=this.removeTransform(l)),vne(l),{animationId:this.root.animationId,measuredBox:a,layoutBox:l,latestValues:{},source:this.id}}measurePageBox(){const{visualElement:s}=this.options;if(!s)return dt();const a=s.measureViewportBox(),{scroll:l}=this.root;return l&&(Bi(a.x,l.offset.x),Bi(a.y,l.offset.y)),a}removeElementScroll(s){const a=dt();lr(a,s);for(let l=0;l<this.path.length;l++){const c=this.path[l],{scroll:u,options:d}=c;if(c!==this.root&&u&&d.layoutScroll){if(u.isRoot){lr(a,s);const{scroll:f}=this.root;f&&(Bi(a.x,-f.offset.x),Bi(a.y,-f.offset.y))}Bi(a.x,u.offset.x),Bi(a.y,u.offset.y)}}return a}applyTransform(s,a=!1){const l=dt();lr(l,s);for(let c=0;c<this.path.length;c++){const u=this.path[c];!a&&u.options.layoutScroll&&u.scroll&&u!==u.root&&Ia(l,{x:-u.scroll.offset.x,y:-u.scroll.offset.y}),qo(u.latestValues)&&Ia(l,u.latestValues)}return qo(this.latestValues)&&Ia(l,this.latestValues),l}removeTransform(s){var a;const l=dt();lr(l,s);for(let c=0;c<this.path.length;c++){const u=this.path[c];if(!u.instance||!qo(u.latestValues))continue;jy(u.latestValues)&&u.updateSnapshot();const d=dt(),f=u.measurePageBox();lr(d,f),N3(l,u.latestValues,(a=u.snapshot)===null||a===void 0?void 0:a.layoutBox,d)}return qo(this.latestValues)&&N3(l,this.latestValues),l}setTargetDelta(s){this.targetDelta=s,this.isProjectionDirty=!0,this.root.scheduleUpdateProjection()}setOptions(s){this.options={...this.options,...s,crossfade:s.crossfade!==void 0?s.crossfade:!0}}clearMeasurements(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1}resolveTargetDelta(){var s;const a=this.getLead();if(this.isProjectionDirty||(this.isProjectionDirty=a.isProjectionDirty),this.isTransformDirty||(this.isTransformDirty=a.isTransformDirty),!this.isProjectionDirty&&!this.attemptToResolveRelativeTarget)return;const{layout:l,layoutId:c}=this.options;if(!(!this.layout||!(l||c))){if(!this.targetDelta&&!this.relativeTarget){const u=this.getClosestProjectingParent();u&&u.layout?(this.relativeParent=u,this.relativeTarget=dt(),this.relativeTargetOrigin=dt(),$c(this.relativeTargetOrigin,this.layout.layoutBox,u.layout.layoutBox),lr(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}if(!(!this.relativeTarget&&!this.targetDelta)&&(this.target||(this.target=dt(),this.targetWithTransforms=dt()),this.relativeTarget&&this.relativeTargetOrigin&&((s=this.relativeParent)===null||s===void 0?void 0:s.target)?nte(this.target,this.relativeTarget,this.relativeParent.target):this.targetDelta?(Boolean(this.resumingFrom)?this.target=this.applyTransform(this.layout.layoutBox):lr(this.target,this.layout.layoutBox),VM(this.target,this.targetDelta)):lr(this.target,this.layout.layoutBox),this.attemptToResolveRelativeTarget)){this.attemptToResolveRelativeTarget=!1;const u=this.getClosestProjectingParent();u&&Boolean(u.resumingFrom)===Boolean(this.resumingFrom)&&!u.options.layoutScroll&&u.target?(this.relativeParent=u,this.relativeTarget=dt(),this.relativeTargetOrigin=dt(),$c(this.relativeTargetOrigin,this.target,u.target),lr(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}}}getClosestProjectingParent(){if(!(!this.parent||jy(this.parent.latestValues)||zM(this.parent.latestValues)))return(this.parent.relativeTarget||this.parent.targetDelta)&&this.parent.layout?this.parent:this.parent.getClosestProjectingParent()}calcProjection(){var s;const{isProjectionDirty:a,isTransformDirty:l}=this;this.isProjectionDirty=this.isTransformDirty=!1;const c=this.getLead(),u=Boolean(this.resumingFrom)||this!==c;let d=!0;if(a&&(d=!1),u&&l&&(d=!1),d)return;const{layout:f,layoutId:h}=this.options;if(this.isTreeAnimating=Boolean(((s=this.parent)===null||s===void 0?void 0:s.isTreeAnimating)||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!this.layout||!(f||h))return;lr(this.layoutCorrected,this.layout.layoutBox),dte(this.layoutCorrected,this.treeScale,this.path,u);const{target:p}=c;if(!p)return;this.projectionDelta||(this.projectionDelta=eu(),this.projectionDeltaWithTransform=eu());const m=this.treeScale.x,v=this.treeScale.y,g=this.projectionTransform;_c(this.projectionDelta,this.layoutCorrected,p,this.latestValues),this.projectionTransform=A3(this.projectionDelta,this.treeScale),(this.projectionTransform!==g||this.treeScale.x!==m||this.treeScale.y!==v)&&(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners("projectionUpdate",p))}hide(){this.isVisible=!1}show(){this.isVisible=!0}scheduleRender(s=!0){var a,l,c;(l=(a=this.options).scheduleRender)===null||l===void 0||l.call(a),s&&((c=this.getStack())===null||c===void 0||c.scheduleRender()),this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)}setAnimationOrigin(s,a=!1){var l,c;const u=this.snapshot,d=(u==null?void 0:u.latestValues)||{},f={...this.latestValues},h=eu();this.relativeTarget=this.relativeTargetOrigin=void 0,this.attemptToResolveRelativeTarget=!a;const p=dt(),m=(u==null?void 0:u.source)!==((l=this.layout)===null||l===void 0?void 0:l.source),v=(((c=this.getStack())===null||c===void 0?void 0:c.members.length)||0)<=1,g=Boolean(m&&!v&&this.options.crossfade===!0&&!this.path.some(mne));this.animationProgress=0,this.mixTargetDelta=b=>{var y;const x=b/1e3;R3(h.x,s.x,x),R3(h.y,s.y,x),this.setTargetDelta(h),this.relativeTarget&&this.relativeTargetOrigin&&this.layout&&((y=this.relativeParent)===null||y===void 0?void 0:y.layout)&&($c(p,this.layout.layoutBox,this.relativeParent.layout.layoutBox),pne(this.relativeTarget,this.relativeTargetOrigin,p,x)),m&&(this.animationValues=f,Ute(f,d,this.latestValues,x,g,v)),this.root.scheduleUpdateProjection(),this.scheduleRender(),this.animationProgress=x},this.mixTargetDelta(0)}startAnimation(s){var a,l;this.notifyListeners("animationStart"),(a=this.currentAnimation)===null||a===void 0||a.stop(),this.resumingFrom&&((l=this.resumingFrom.currentAnimation)===null||l===void 0||l.stop()),this.pendingAnimation&&(Zs.update(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=vr.update(()=>{Uc.hasAnimatedSinceResize=!0,this.currentAnimation=Yte(0,Z3,{...s,onUpdate:c=>{var u;this.mixTargetDelta(c),(u=s.onUpdate)===null||u===void 0||u.call(s,c)},onComplete:()=>{var c;(c=s.onComplete)===null||c===void 0||c.call(s),this.completeAnimation()}}),this.resumingFrom&&(this.resumingFrom.currentAnimation=this.currentAnimation),this.pendingAnimation=void 0})}completeAnimation(){var s;this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0),(s=this.getStack())===null||s===void 0||s.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners("animationComplete")}finishAnimation(){var s;this.currentAnimation&&((s=this.mixTargetDelta)===null||s===void 0||s.call(this,Z3),this.currentAnimation.stop()),this.completeAnimation()}applyTransformsToTarget(){const s=this.getLead();let{targetWithTransforms:a,target:l,layout:c,latestValues:u}=s;if(!(!a||!l||!c)){if(this!==s&&this.layout&&c&&GM(this.options.animationType,this.layout.layoutBox,c.layoutBox)){l=this.target||dt();const d=In(this.layout.layoutBox.x);l.x.min=s.target.x.min,l.x.max=l.x.min+d;const f=In(this.layout.layoutBox.y);l.y.min=s.target.y.min,l.y.max=l.y.min+f}lr(a,l),Ia(a,u),_c(this.projectionDeltaWithTransform,this.layoutCorrected,a,u)}}registerSharedNode(s,a){var l,c,u;this.sharedNodes.has(s)||this.sharedNodes.set(s,new tne),this.sharedNodes.get(s).add(a),a.promote({transition:(l=a.options.initialPromotionConfig)===null||l===void 0?void 0:l.transition,preserveFollowOpacity:(u=(c=a.options.initialPromotionConfig)===null||c===void 0?void 0:c.shouldPreserveFollowOpacity)===null||u===void 0?void 0:u.call(c,a)})}isLead(){const s=this.getStack();return s?s.lead===this:!0}getLead(){var s;const{layoutId:a}=this.options;return a?((s=this.getStack())===null||s===void 0?void 0:s.lead)||this:this}getPrevLead(){var s;const{layoutId:a}=this.options;return a?(s=this.getStack())===null||s===void 0?void 0:s.prevLead:void 0}getStack(){const{layoutId:s}=this.options;if(s)return this.root.sharedNodes.get(s)}promote({needsReset:s,transition:a,preserveFollowOpacity:l}={}){const c=this.getStack();c&&c.promote(this,l),s&&(this.projectionDelta=void 0,this.needsReset=!0),a&&this.setOptions({transition:a})}relegate(){const s=this.getStack();return s?s.relegate(this):!1}resetRotation(){const{visualElement:s}=this.options;if(!s)return;let a=!1;const{latestValues:l}=s;if((l.rotate||l.rotateX||l.rotateY||l.rotateZ)&&(a=!0),!a)return;const c={};for(let u=0;u<L3.length;u++){const d="rotate"+L3[u];l[d]&&(c[d]=l[d],s.setStaticValue(d,0))}s==null||s.render();for(const u in c)s.setStaticValue(u,c[u]);s.scheduleRender()}getProjectionStyles(s={}){var a,l,c;const u={};if(!this.instance||this.isSVG)return u;if(this.isVisible)u.visibility="";else return{visibility:"hidden"};const d=(a=this.options.visualElement)===null||a===void 0?void 0:a.getProps().transformTemplate;if(this.needsReset)return this.needsReset=!1,u.opacity="",u.pointerEvents=xh(s.pointerEvents)||"",u.transform=d?d(this.latestValues,""):"none",u;const f=this.getLead();if(!this.projectionDelta||!this.layout||!f.target){const v={};return this.options.layoutId&&(v.opacity=this.latestValues.opacity!==void 0?this.latestValues.opacity:1,v.pointerEvents=xh(s.pointerEvents)||""),this.hasProjected&&!qo(this.latestValues)&&(v.transform=d?d({},""):"none",this.hasProjected=!1),v}const h=f.animationValues||f.latestValues;this.applyTransformsToTarget(),u.transform=A3(this.projectionDeltaWithTransform,this.treeScale,h),d&&(u.transform=d(h,u.transform));const{x:p,y:m}=this.projectionDelta;u.transformOrigin=`${p.origin*100}% ${m.origin*100}% 0`,f.animationValues?u.opacity=f===this?(c=(l=h.opacity)!==null&&l!==void 0?l:this.latestValues.opacity)!==null&&c!==void 0?c:1:this.preserveOpacity?this.latestValues.opacity:h.opacityExit:u.opacity=f===this?h.opacity!==void 0?h.opacity:"":h.opacityExit!==void 0?h.opacityExit:0;for(const v in Rp){if(h[v]===void 0)continue;const{correct:g,applyTo:b}=Rp[v],y=g(h[v],f);if(b){const x=b.length;for(let k=0;k<x;k++)u[b[k]]=y}else u[v]=y}return this.options.layoutId&&(u.pointerEvents=f===this?xh(s.pointerEvents)||"":"none"),u}clearSnapshot(){this.resumeFrom=this.snapshot=void 0}resetTree(){this.root.nodes.forEach(s=>{var a;return(a=s.currentAnimation)===null||a===void 0?void 0:a.stop()}),this.root.nodes.forEach(X3),this.root.sharedNodes.clear()}}}function one(t){t.updateLayout()}function sne(t){var e,n,r;const i=((e=t.resumeFrom)===null||e===void 0?void 0:e.snapshot)||t.snapshot;if(t.isLead()&&t.layout&&i&&t.hasListeners("didUpdate")){const{layoutBox:o,measuredBox:s}=t.layout,{animationType:a}=t.options,l=i.source!==t.layout.source;a==="size"?Ir(h=>{const p=l?i.measuredBox[h]:i.layoutBox[h],m=In(p);p.min=o[h].min,p.max=p.min+m}):GM(a,i.layoutBox,o)&&Ir(h=>{const p=l?i.measuredBox[h]:i.layoutBox[h],m=In(o[h]);p.max=p.min+m});const c=eu();_c(c,o,i.layoutBox);const u=eu();l?_c(u,t.applyTransform(s,!0),i.measuredBox):_c(u,o,i.layoutBox);const d=!FM(c);let f=!1;if(!t.resumeFrom){const h=t.getClosestProjectingParent();if(h&&!h.resumeFrom){const{snapshot:p,layout:m}=h;if(p&&m){const v=dt();$c(v,i.layoutBox,p.layoutBox);const g=dt();$c(g,o,m.layoutBox),HM(v,g)||(f=!0)}}}t.notifyListeners("didUpdate",{layout:o,snapshot:i,delta:u,layoutDelta:c,hasLayoutChanged:d,hasRelativeTargetChanged:f})}else t.isLead()&&((r=(n=t.options).onExitComplete)===null||r===void 0||r.call(n));t.options.transition=void 0}function ane(t){t.isProjectionDirty||(t.isProjectionDirty=Boolean(t.parent&&t.parent.isProjectionDirty)),t.isTransformDirty||(t.isTransformDirty=Boolean(t.parent&&t.parent.isTransformDirty))}function lne(t){t.clearSnapshot()}function X3(t){t.clearMeasurements()}function cne(t){const{visualElement:e}=t.options;e!=null&&e.getProps().onBeforeLayoutMeasure&&e.notify("BeforeLayoutMeasure"),t.resetTransform()}function W3(t){t.finishAnimation(),t.targetDelta=t.relativeTarget=t.target=void 0}function une(t){t.resolveTargetDelta()}function dne(t){t.calcProjection()}function fne(t){t.resetRotation()}function hne(t){t.removeLeadSnapshot()}function R3(t,e,n){t.translate=et(e.translate,0,n),t.scale=et(e.scale,1,n),t.origin=e.origin,t.originPoint=e.originPoint}function F3(t,e,n,r){t.min=et(e.min,n.min,r),t.max=et(e.max,n.max,r)}function pne(t,e,n,r){F3(t.x,e.x,n.x,r),F3(t.y,e.y,n.y,r)}function mne(t){return t.animationValues&&t.animationValues.opacityExit!==void 0}const gne={duration:.45,ease:[.4,0,.1,1]};function bne(t,e){let n=t.root;for(let o=t.path.length-1;o>=0;o--)if(Boolean(t.path[o].instance)){n=t.path[o];break}const i=(n&&n!==t.root?n.instance:document).querySelector(`[data-projection-id="${e}"]`);i&&t.mount(i,!0)}function H3(t){t.min=Math.round(t.min),t.max=Math.round(t.max)}function vne(t){H3(t.x),H3(t.y)}function GM(t,e,n){return t==="position"||t==="preserve-aspect"&&!ene(M3(e),M3(n),.2)}const yne=DM({attachResizeListener:(t,e)=>ag(t,"resize",e),measureScroll:()=>({x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}),checkIsScrollRoot:()=>!0}),ob={current:void 0},xne=DM({measureScroll:t=>({x:t.scrollLeft,y:t.scrollTop}),defaultParent:()=>{if(!ob.current){const t=new yne(0,{});t.mount(window),t.setOptions({layoutScroll:!0}),ob.current=t}return ob.current},resetTransform:(t,e)=>{t.style.transform=e!==void 0?e:"none"},checkIsScrollRoot:t=>Boolean(window.getComputedStyle(t).position==="fixed")}),Sne={...$ee,...cee,...xte,...Bte},Ii=_Q((t,e)=>X_(t,e,Sne,Fte,xne));function jM(){const t=S.exports.useRef(!1);return Wp(()=>(t.current=!0,()=>{t.current=!1}),[]),t}function kne(){const t=jM(),[e,n]=S.exports.useState(0),r=S.exports.useCallback(()=>{t.current&&n(e+1)},[e]);return[S.exports.useCallback(()=>vr.postRender(r),[r]),e]}class wne extends S.exports.Component{getSnapshotBeforeUpdate(e){const n=this.props.childRef.current;if(n&&e.isPresent&&!this.props.isPresent){const r=this.props.sizeRef.current;r.height=n.offsetHeight||0,r.width=n.offsetWidth||0,r.top=n.offsetTop,r.left=n.offsetLeft}return null}componentDidUpdate(){}render(){return this.props.children}}function Pne({children:t,isPresent:e}){const n=S.exports.useId(),r=S.exports.useRef(null),i=S.exports.useRef({width:0,height:0,top:0,left:0});return S.exports.useInsertionEffect(()=>{const{width:o,height:s,top:a,left:l}=i.current;if(e||!r.current||!o||!s)return;r.current.dataset.motionPopId=n;const c=document.createElement("style");return document.head.appendChild(c),c.sheet&&c.sheet.insertRule(`
          [data-motion-pop-id="${n}"] {
            position: absolute !important;
            width: ${o}px !important;
            height: ${s}px !important;
            top: ${a}px !important;
            left: ${l}px !important;
          }
        `),()=>{document.head.removeChild(c)}},[e]),N(wne,{isPresent:e,childRef:r,sizeRef:i,children:S.exports.cloneElement(t,{ref:r})})}const sb=({children:t,initial:e,isPresent:n,onExitComplete:r,custom:i,presenceAffectsLayout:o,mode:s})=>{const a=sg(One),l=S.exports.useId(),c=S.exports.useMemo(()=>({id:l,initial:e,isPresent:n,custom:i,onExitComplete:u=>{a.set(u,!0);for(const d of a.values())if(!d)return;r&&r()},register:u=>(a.set(u,!1),()=>a.delete(u))}),o?void 0:[n]);return S.exports.useMemo(()=>{a.forEach((u,d)=>a.set(d,!1))},[n]),S.exports.useEffect(()=>{!n&&!a.size&&r&&r()},[n]),s==="popLayout"&&(t=N(Pne,{isPresent:n,children:t})),N(Wl.Provider,{value:c,children:t})};function One(){return new Map}const pa=t=>t.key||"";function Cne(t,e){t.forEach(n=>{const r=pa(n);e.set(r,n)})}function Tne(t){const e=[];return S.exports.Children.forEach(t,n=>{S.exports.isValidElement(n)&&e.push(n)}),e}const Zo=({children:t,custom:e,initial:n=!0,onExitComplete:r,exitBeforeEnter:i,presenceAffectsLayout:o=!0,mode:s="sync"})=>{i&&(s="wait",gM(!1,"Replace exitBeforeEnter with mode='wait'"));let[a]=kne();const l=S.exports.useContext(cS).forceRender;l&&(a=l);const c=jM(),u=Tne(t);let d=u;const f=new Set,h=S.exports.useRef(d),p=S.exports.useRef(new Map).current,m=S.exports.useRef(!0);if(Wp(()=>{m.current=!1,Cne(u,p),h.current=d}),vS(()=>{m.current=!0,p.clear(),f.clear()}),m.current)return N(_r,{children:d.map(y=>N(sb,{isPresent:!0,initial:n?void 0:!1,presenceAffectsLayout:o,mode:s,children:y},pa(y)))});d=[...d];const v=h.current.map(pa),g=u.map(pa),b=v.length;for(let y=0;y<b;y++){const x=v[y];g.indexOf(x)===-1&&f.add(x)}return s==="wait"&&f.size&&(d=[]),f.forEach(y=>{if(g.indexOf(y)!==-1)return;const x=p.get(y);if(!x)return;const k=v.indexOf(y),P=()=>{p.delete(y),f.delete(y);const O=h.current.findIndex(z=>z.key===y);if(h.current.splice(O,1),!f.size){if(h.current=u,c.current===!1)return;a(),r&&r()}};d.splice(k,0,N(sb,{isPresent:!1,onExitComplete:P,custom:e,presenceAffectsLayout:o,mode:s,children:x},pa(x)))}),d=d.map(y=>{const x=y.key;return f.has(x)?y:N(sb,{isPresent:!0,presenceAffectsLayout:o,mode:s,children:y},pa(y))}),mM!=="production"&&s==="wait"&&d.length>1&&console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to "wait". This will lead to odd visual behaviour.`),N(_r,{children:f.size?d:d.map(y=>S.exports.cloneElement(y))})};var Wr=function(){return Wr=Object.assign||function(e){for(var n,r=1,i=arguments.length;r<i;r++){n=arguments[r];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},Wr.apply(this,arguments)};function BM(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]]);return n}function zne(t,e,n){if(n||arguments.length===2)for(var r=0,i=e.length,o;r<i;r++)(o||!(r in e))&&(o||(o=Array.prototype.slice.call(e,0,r)),o[r]=e[r]);return t.concat(o||Array.prototype.slice.call(e))}var xd=(...t)=>t.filter(Boolean).join(" ");function Vne(){return!1}var Ene=t=>{const{condition:e,message:n}=t;e&&Vne()&&console.warn(n)},ps={ease:[.25,.1,.25,1],easeIn:[.4,0,1,1],easeOut:[0,0,.2,1],easeInOut:[.4,0,.2,1]},dc={scale:{enter:{scale:1},exit:{scale:.95}},fade:{enter:{opacity:1},exit:{opacity:0}},pushLeft:{enter:{x:"100%"},exit:{x:"-30%"}},pushRight:{enter:{x:"-100%"},exit:{x:"30%"}},pushUp:{enter:{y:"100%"},exit:{y:"-30%"}},pushDown:{enter:{y:"-100%"},exit:{y:"30%"}},slideLeft:{position:{left:0,top:0,bottom:0,width:"100%"},enter:{x:0,y:0},exit:{x:"-100%",y:0}},slideRight:{position:{right:0,top:0,bottom:0,width:"100%"},enter:{x:0,y:0},exit:{x:"100%",y:0}},slideUp:{position:{top:0,left:0,right:0,maxWidth:"100vw"},enter:{x:0,y:0},exit:{x:0,y:"-100%"}},slideDown:{position:{bottom:0,left:0,right:0,maxWidth:"100vw"},enter:{x:0,y:0},exit:{x:0,y:"100%"}}};function qy(t){var n;switch((n=t==null?void 0:t.direction)!=null?n:"right"){case"right":return dc.slideRight;case"left":return dc.slideLeft;case"bottom":return dc.slideDown;case"top":return dc.slideUp;default:return dc.slideRight}}var ws={enter:{duration:.2,ease:ps.easeOut},exit:{duration:.1,ease:ps.easeIn}},yr={enter:(t,e)=>({...t,delay:typeof e=="number"?e:e==null?void 0:e.enter}),exit:(t,e)=>({...t,delay:typeof e=="number"?e:e==null?void 0:e.exit})},Nne=t=>t!=null&&parseInt(t.toString(),10)>0,D3={exit:{height:{duration:.2,ease:ps.ease},opacity:{duration:.3,ease:ps.ease}},enter:{height:{duration:.3,ease:ps.ease},opacity:{duration:.4,ease:ps.ease}}},Ine={exit:({animateOpacity:t,startingHeight:e,transition:n,transitionEnd:r,delay:i})=>{var o;return{...t&&{opacity:Nne(e)?1:0},height:e,transitionEnd:r==null?void 0:r.exit,transition:(o=n==null?void 0:n.exit)!=null?o:yr.exit(D3.exit,i)}},enter:({animateOpacity:t,endingHeight:e,transition:n,transitionEnd:r,delay:i})=>{var o;return{...t&&{opacity:1},height:e,transitionEnd:r==null?void 0:r.enter,transition:(o=n==null?void 0:n.enter)!=null?o:yr.enter(D3.enter,i)}}},Mne=S.exports.forwardRef((t,e)=>{const{in:n,unmountOnExit:r,animateOpacity:i=!0,startingHeight:o=0,endingHeight:s="auto",style:a,className:l,transition:c,transitionEnd:u,...d}=t,[f,h]=S.exports.useState(!1);S.exports.useEffect(()=>{const b=setTimeout(()=>{h(!0)});return()=>clearTimeout(b)},[]),Ene({condition:Boolean(o>0&&r),message:"startingHeight and unmountOnExit are mutually exclusive. You can't use them together"});const p=parseFloat(o.toString())>0,m={startingHeight:o,endingHeight:s,animateOpacity:i,transition:f?c:{enter:{duration:0}},transitionEnd:{enter:u==null?void 0:u.enter,exit:r?u==null?void 0:u.exit:{...u==null?void 0:u.exit,display:p?"block":"none"}}},v=r?n:!0,g=n||r?"enter":"exit";return N(Zo,{initial:!1,custom:m,children:v&&R.createElement(Ii.div,{ref:e,...d,className:xd("chakra-collapse",l),style:{overflow:"hidden",display:"block",...a},custom:m,variants:Ine,initial:r?"exit":!1,animate:g,exit:"exit"})})});Mne.displayName="Collapse";var Ane={enter:({transition:t,transitionEnd:e,delay:n}={})=>{var r;return{opacity:1,transition:(r=t==null?void 0:t.enter)!=null?r:yr.enter(ws.enter,n),transitionEnd:e==null?void 0:e.enter}},exit:({transition:t,transitionEnd:e,delay:n}={})=>{var r;return{opacity:0,transition:(r=t==null?void 0:t.exit)!=null?r:yr.exit(ws.exit,n),transitionEnd:e==null?void 0:e.exit}}},YM={initial:"exit",animate:"enter",exit:"exit",variants:Ane},Lne=S.exports.forwardRef(function(e,n){const{unmountOnExit:r,in:i,className:o,transition:s,transitionEnd:a,delay:l,...c}=e,u=i||r?"enter":"exit",d=r?i&&r:!0,f={transition:s,transitionEnd:a,delay:l};return N(Zo,{custom:f,children:d&&R.createElement(Ii.div,{ref:n,className:xd("chakra-fade",o),custom:f,...YM,animate:u,...c})})});Lne.displayName="Fade";var Zne={exit:({reverse:t,initialScale:e,transition:n,transitionEnd:r,delay:i})=>{var o;return{opacity:0,...t?{scale:e,transitionEnd:r==null?void 0:r.exit}:{transitionEnd:{scale:e,...r==null?void 0:r.exit}},transition:(o=n==null?void 0:n.exit)!=null?o:yr.exit(ws.exit,i)}},enter:({transitionEnd:t,transition:e,delay:n})=>{var r;return{opacity:1,scale:1,transition:(r=e==null?void 0:e.enter)!=null?r:yr.enter(ws.enter,n),transitionEnd:t==null?void 0:t.enter}}},KM={initial:"exit",animate:"enter",exit:"exit",variants:Zne},Xne=S.exports.forwardRef(function(e,n){const{unmountOnExit:r,in:i,reverse:o=!0,initialScale:s=.95,className:a,transition:l,transitionEnd:c,delay:u,...d}=e,f=r?i&&r:!0,h=i||r?"enter":"exit",p={initialScale:s,reverse:o,transition:l,transitionEnd:c,delay:u};return N(Zo,{custom:p,children:f&&R.createElement(Ii.div,{ref:n,className:xd("chakra-offset-slide",a),...KM,animate:h,custom:p,...d})})});Xne.displayName="ScaleFade";var G3={exit:{duration:.15,ease:ps.easeInOut},enter:{type:"spring",damping:25,stiffness:180}},Wne={exit:({direction:t,transition:e,transitionEnd:n,delay:r})=>{var o;const{exit:i}=qy({direction:t});return{...i,transition:(o=e==null?void 0:e.exit)!=null?o:yr.exit(G3.exit,r),transitionEnd:n==null?void 0:n.exit}},enter:({direction:t,transitionEnd:e,transition:n,delay:r})=>{var o;const{enter:i}=qy({direction:t});return{...i,transition:(o=n==null?void 0:n.enter)!=null?o:yr.enter(G3.enter,r),transitionEnd:e==null?void 0:e.enter}}},UM=S.exports.forwardRef(function(e,n){const{direction:r="right",style:i,unmountOnExit:o,in:s,className:a,transition:l,transitionEnd:c,delay:u,motionProps:d,...f}=e,h=qy({direction:r}),p=Object.assign({position:"fixed"},h.position,i),m=o?s&&o:!0,v=s||o?"enter":"exit",g={transitionEnd:c,transition:l,direction:r,delay:u};return N(Zo,{custom:g,children:m&&R.createElement(Ii.div,{...f,ref:n,initial:"exit",className:xd("chakra-slide",a),animate:v,exit:"exit",custom:g,variants:Wne,style:p,...d})})});UM.displayName="Slide";var Rne={initial:({offsetX:t,offsetY:e,transition:n,transitionEnd:r,delay:i})=>{var o;return{opacity:0,x:t,y:e,transition:(o=n==null?void 0:n.exit)!=null?o:yr.exit(ws.exit,i),transitionEnd:r==null?void 0:r.exit}},enter:({transition:t,transitionEnd:e,delay:n})=>{var r;return{opacity:1,x:0,y:0,transition:(r=t==null?void 0:t.enter)!=null?r:yr.enter(ws.enter,n),transitionEnd:e==null?void 0:e.enter}},exit:({offsetY:t,offsetX:e,transition:n,transitionEnd:r,reverse:i,delay:o})=>{var a;const s={x:e,y:t};return{opacity:0,transition:(a=n==null?void 0:n.exit)!=null?a:yr.exit(ws.exit,o),...i?{...s,transitionEnd:r==null?void 0:r.exit}:{transitionEnd:{...s,...r==null?void 0:r.exit}}}}},Jy={initial:"initial",animate:"enter",exit:"exit",variants:Rne},Fne=S.exports.forwardRef(function(e,n){const{unmountOnExit:r,in:i,reverse:o=!0,className:s,offsetX:a=0,offsetY:l=8,transition:c,transitionEnd:u,delay:d,...f}=e,h=r?i&&r:!0,p=i||r?"enter":"exit",m={offsetX:a,offsetY:l,reverse:o,transition:c,transitionEnd:u,delay:d};return N(Zo,{custom:m,children:h&&R.createElement(Ii.div,{ref:n,className:xd("chakra-offset-slide",s),custom:m,...Jy,animate:p,...f})})});Fne.displayName="SlideFade";var Hne=(...t)=>t.filter(Boolean).join(" "),Dne=Mj({"0%":{transform:"rotate(0deg)"},"100%":{transform:"rotate(360deg)"}}),AS=J((t,e)=>{const n=gn("Spinner",t),{label:r="Loading...",thickness:i="2px",speed:o="0.45s",emptyColor:s="transparent",className:a,...l}=ut(t),c=Hne("chakra-spinner",a),u={display:"inline-block",borderColor:"currentColor",borderStyle:"solid",borderRadius:"99999px",borderWidth:i,borderBottomColor:s,borderLeftColor:s,animation:`${Dne} ${o} linear infinite`,...n};return R.createElement(K.div,{ref:e,__css:u,className:c,...l},r&&R.createElement(K.span,{srOnly:!0},r))});AS.displayName="Spinner";var hg=(...t)=>t.filter(Boolean).join(" ");function Gne(t){return N(Bs,{viewBox:"0 0 24 24",...t,children:N("path",{fill:"currentColor",d:"M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"})})}function jne(t){return N(Bs,{viewBox:"0 0 24 24",...t,children:N("path",{fill:"currentColor",d:"M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"})})}function j3(t){return N(Bs,{viewBox:"0 0 24 24",...t,children:N("path",{fill:"currentColor",d:"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"})})}var[Bne,Yne]=Zn({name:"AlertContext",hookName:"useAlertContext",providerName:"<Alert />"}),[Kne,LS]=Zn({name:"AlertStylesContext",hookName:"useAlertStyles",providerName:"<Alert />"}),qM={info:{icon:jne,colorScheme:"blue"},warning:{icon:j3,colorScheme:"orange"},success:{icon:Gne,colorScheme:"green"},error:{icon:j3,colorScheme:"red"},loading:{icon:AS,colorScheme:"blue"}};function Une(t){return qM[t].colorScheme}function qne(t){return qM[t].icon}var JM=J(function(e,n){var c;const{status:r="info",addRole:i=!0,...o}=ut(e),s=(c=e.colorScheme)!=null?c:Une(r),a=js("Alert",{...e,colorScheme:s}),l={width:"100%",display:"flex",alignItems:"center",position:"relative",overflow:"hidden",...a.container};return R.createElement(Bne,{value:{status:r}},R.createElement(Kne,{value:a},R.createElement(K.div,{role:i?"alert":void 0,ref:n,...o,className:hg("chakra-alert",e.className),__css:l})))});JM.displayName="Alert";var QM=J(function(e,n){const i={display:"inline",...LS().description};return R.createElement(K.div,{ref:n,...e,className:hg("chakra-alert__desc",e.className),__css:i})});QM.displayName="AlertDescription";function _M(t){const{status:e}=Yne(),n=qne(e),r=LS(),i=e==="loading"?r.spinner:r.icon;return R.createElement(K.span,{display:"inherit",...t,className:hg("chakra-alert__icon",t.className),__css:i},t.children||N(n,{h:"100%",w:"100%"}))}_M.displayName="AlertIcon";var $M=J(function(e,n){const r=LS();return R.createElement(K.div,{ref:n,...e,className:hg("chakra-alert__title",e.className),__css:r.title})});$M.displayName="AlertTitle";function ZS(t){return S.exports.Children.toArray(t).filter(e=>S.exports.isValidElement(e))}var pg=(...t)=>t.filter(Boolean).join(" "),B3=t=>t?"":void 0,[Jne,Qne]=Zn({strict:!1,name:"ButtonGroupContext"});function Qy(t){const{children:e,className:n,...r}=t,i=S.exports.isValidElement(e)?S.exports.cloneElement(e,{"aria-hidden":!0,focusable:!1}):e,o=pg("chakra-button__icon",n);return R.createElement(K.span,{display:"inline-flex",alignSelf:"center",flexShrink:0,...r,className:o},i)}Qy.displayName="ButtonIcon";function _y(t){const{label:e,placement:n,spacing:r="0.5rem",children:i=N(AS,{color:"currentColor",width:"1em",height:"1em"}),className:o,__css:s,...a}=t,l=pg("chakra-button__spinner",o),c=n==="start"?"marginEnd":"marginStart",u=S.exports.useMemo(()=>({display:"flex",alignItems:"center",position:e?"relative":"absolute",[c]:e?r:0,fontSize:"1em",lineHeight:"normal",...s}),[s,e,c,r]);return R.createElement(K.div,{className:l,...a,__css:u},i)}_y.displayName="ButtonSpinner";function _ne(t){const[e,n]=S.exports.useState(!t);return{ref:S.exports.useCallback(o=>{!o||n(o.tagName==="BUTTON")},[]),type:e?"button":void 0}}var mg=J((t,e)=>{const n=Qne(),r=gn("Button",{...n,...t}),{isDisabled:i=n==null?void 0:n.isDisabled,isLoading:o,isActive:s,children:a,leftIcon:l,rightIcon:c,loadingText:u,iconSpacing:d="0.5rem",type:f,spinner:h,spinnerPlacement:p="start",className:m,as:v,...g}=ut(t),b=S.exports.useMemo(()=>{const P={...r==null?void 0:r._focus,zIndex:1};return{display:"inline-flex",appearance:"none",alignItems:"center",justifyContent:"center",userSelect:"none",position:"relative",whiteSpace:"nowrap",verticalAlign:"middle",outline:"none",...r,...!!n&&{_focus:P}}},[r,n]),{ref:y,type:x}=_ne(v),k={rightIcon:c,leftIcon:l,iconSpacing:d,children:a};return R.createElement(K.button,{disabled:i||o,ref:WQ(e,y),as:v,type:f!=null?f:x,"data-active":B3(s),"data-loading":B3(o),__css:b,className:pg("chakra-button",m),...g},o&&p==="start"&&N(_y,{className:"chakra-button__spinner--start",label:u,placement:"start",spacing:d,children:h}),o?u||R.createElement(K.span,{opacity:0},N(Y3,{...k})):N(Y3,{...k}),o&&p==="end"&&N(_y,{className:"chakra-button__spinner--end",label:u,placement:"end",spacing:d,children:h}))});mg.displayName="Button";function Y3(t){const{leftIcon:e,rightIcon:n,children:r,iconSpacing:i}=t;return tt(_r,{children:[e&&N(Qy,{marginEnd:i,children:e}),r,n&&N(Qy,{marginStart:i,children:n})]})}var $ne=J(function(e,n){const{size:r,colorScheme:i,variant:o,className:s,spacing:a="0.5rem",isAttached:l,isDisabled:c,...u}=e,d=pg("chakra-button__group",s),f=S.exports.useMemo(()=>({size:r,colorScheme:i,variant:o,isDisabled:c}),[r,i,o,c]);let h={display:"inline-flex"};return l?h={...h,"> *:first-of-type:not(:last-of-type)":{borderEndRadius:0},"> *:not(:first-of-type):not(:last-of-type)":{borderRadius:0},"> *:not(:first-of-type):last-of-type":{borderStartRadius:0}}:h={...h,"& > *:not(style) ~ *:not(style)":{marginStart:a}},R.createElement(Jne,{value:f},R.createElement(K.div,{ref:n,role:"group",__css:h,className:d,"data-attached":l?"":void 0,...u}))});$ne.displayName="ButtonGroup";var Jo=J((t,e)=>{const{icon:n,children:r,isRound:i,"aria-label":o,...s}=t,a=n||r,l=S.exports.isValidElement(a)?S.exports.cloneElement(a,{"aria-hidden":!0,focusable:!1}):null;return N(mg,{padding:"0",borderRadius:i?"full":void 0,ref:e,"aria-label":o,...s,children:l})});Jo.displayName="IconButton";var Fl=(...t)=>t.filter(Boolean).join(" "),Lf=t=>t?"":void 0,ab=t=>t?!0:void 0;function K3(...t){return function(n){t.some(r=>(r==null||r(n),n==null?void 0:n.defaultPrevented))}}var[ere,eA]=Zn({name:"FormControlStylesContext",errorMessage:`useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in "<FormControl />" `}),[tre,Hl]=Zn({strict:!1,name:"FormControlContext"});function nre(t){const{id:e,isRequired:n,isInvalid:r,isDisabled:i,isReadOnly:o,...s}=t,a=S.exports.useId(),l=e||`field-${a}`,c=`${l}-label`,u=`${l}-feedback`,d=`${l}-helptext`,[f,h]=S.exports.useState(!1),[p,m]=S.exports.useState(!1),[v,g]=S.exports.useState(!1),b=S.exports.useCallback((O={},z=null)=>({id:d,...O,ref:Co(z,I=>{!I||m(!0)})}),[d]),y=S.exports.useCallback((O={},z=null)=>{var I,E;return{...O,ref:z,"data-focus":Lf(v),"data-disabled":Lf(i),"data-invalid":Lf(r),"data-readonly":Lf(o),id:(I=O.id)!=null?I:c,htmlFor:(E=O.htmlFor)!=null?E:l}},[l,i,v,r,o,c]),x=S.exports.useCallback((O={},z=null)=>({id:u,...O,ref:Co(z,I=>{!I||h(!0)}),"aria-live":"polite"}),[u]),k=S.exports.useCallback((O={},z=null)=>({...O,...s,ref:z,role:"group"}),[s]),P=S.exports.useCallback((O={},z=null)=>({...O,ref:z,role:"presentation","aria-hidden":!0,children:O.children||"*"}),[]);return{isRequired:!!n,isInvalid:!!r,isReadOnly:!!o,isDisabled:!!i,isFocused:!!v,onFocus:()=>g(!0),onBlur:()=>g(!1),hasFeedbackText:f,setHasFeedbackText:h,hasHelpText:p,setHasHelpText:m,id:l,labelId:c,feedbackId:u,helpTextId:d,htmlProps:s,getHelpTextProps:b,getErrorMessageProps:x,getRootProps:k,getLabelProps:y,getRequiredIndicatorProps:P}}var rre=J(function(e,n){const r=js("Form",e),i=ut(e),{getRootProps:o,htmlProps:s,...a}=nre(i),l=Fl("chakra-form-control",e.className);return R.createElement(tre,{value:a},R.createElement(ere,{value:r},R.createElement(K.div,{...o({},n),className:l,__css:r.container})))});rre.displayName="FormControl";var ire=J(function(e,n){const r=Hl(),i=eA(),o=Fl("chakra-form__helper-text",e.className);return R.createElement(K.div,{...r==null?void 0:r.getHelpTextProps(e,n),__css:i.helperText,className:o})});ire.displayName="FormHelperText";function ore(t){const{isDisabled:e,isInvalid:n,isReadOnly:r,isRequired:i,...o}=sre(t);return{...o,disabled:e,readOnly:r,required:i,"aria-invalid":ab(n),"aria-required":ab(i),"aria-readonly":ab(r)}}function sre(t){var p,m,v;const e=Hl(),{id:n,disabled:r,readOnly:i,required:o,isRequired:s,isInvalid:a,isReadOnly:l,isDisabled:c,onFocus:u,onBlur:d,...f}=t,h=t["aria-describedby"]?[t["aria-describedby"]]:[];return(e==null?void 0:e.hasFeedbackText)&&(e==null?void 0:e.isInvalid)&&h.push(e.feedbackId),e!=null&&e.hasHelpText&&h.push(e.helpTextId),{...f,"aria-describedby":h.join(" ")||void 0,id:n!=null?n:e==null?void 0:e.id,isDisabled:(p=r!=null?r:c)!=null?p:e==null?void 0:e.isDisabled,isReadOnly:(m=i!=null?i:l)!=null?m:e==null?void 0:e.isReadOnly,isRequired:(v=o!=null?o:s)!=null?v:e==null?void 0:e.isRequired,isInvalid:a!=null?a:e==null?void 0:e.isInvalid,onFocus:K3(e==null?void 0:e.onFocus,u),onBlur:K3(e==null?void 0:e.onBlur,d)}}var[are,lre]=Zn({name:"FormErrorStylesContext",errorMessage:`useFormErrorStyles returned is 'undefined'. Seems you forgot to wrap the components in "<FormError />" `}),cre=J((t,e)=>{const n=js("FormError",t),r=ut(t),i=Hl();return i!=null&&i.isInvalid?R.createElement(are,{value:n},R.createElement(K.div,{...i==null?void 0:i.getErrorMessageProps(r,e),className:Fl("chakra-form__error-message",t.className),__css:{display:"flex",alignItems:"center",...n.text}})):null});cre.displayName="FormErrorMessage";var ure=J((t,e)=>{const n=lre(),r=Hl();if(!(r!=null&&r.isInvalid))return null;const i=Fl("chakra-form__error-icon",t.className);return N(Bs,{ref:e,"aria-hidden":!0,...t,__css:n.icon,className:i,children:N("path",{fill:"currentColor",d:"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"})})});ure.displayName="FormErrorIcon";var dre=J(function(e,n){var f;const r=gn("FormLabel",e),i=ut(e),{className:o,children:s,requiredIndicator:a=N(tA,{}),optionalIndicator:l=null,...c}=i,u=Hl(),d=(f=u==null?void 0:u.getLabelProps(c,n))!=null?f:{ref:n,...c};return R.createElement(K.label,{...d,className:Fl("chakra-form__label",i.className),__css:{display:"block",textAlign:"start",...r}},s,u!=null&&u.isRequired?a:l)});dre.displayName="FormLabel";var tA=J(function(e,n){const r=Hl(),i=eA();if(!(r!=null&&r.isRequired))return null;const o=Fl("chakra-form__required-indicator",e.className);return R.createElement(K.span,{...r==null?void 0:r.getRequiredIndicatorProps(e,n),__css:i.requiredIndicator,className:o})});tA.displayName="RequiredIndicator";function U3(t,e){const n=S.exports.useRef(!1),r=S.exports.useRef(!1);S.exports.useEffect(()=>{if(n.current&&r.current)return t();r.current=!0},e),S.exports.useEffect(()=>(n.current=!0,()=>{n.current=!1}),[])}function fre(t){return N(Bs,{focusable:"false","aria-hidden":!0,...t,children:N("path",{fill:"currentColor",d:"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"})})}var XS=J(function(e,n){const r=gn("CloseButton",e),{children:i,isDisabled:o,__css:s,...a}=ut(e),l={outline:0,display:"flex",alignItems:"center",justifyContent:"center",flexShrink:0};return R.createElement(K.button,{type:"button","aria-label":"Close",ref:n,disabled:o,__css:{...l,...r,...s},...a},i||N(fre,{width:"1em",height:"1em"}))});XS.displayName="CloseButton";var nA=`
  :root {
    --chakra-vh: 100vh;
  }

  @supports (height: -webkit-fill-available) {
    :root {
      --chakra-vh: -webkit-fill-available;
    }
  }

  @supports (height: -moz-fill-available) {
    :root {
      --chakra-vh: -moz-fill-available;
    }
  }

  @supports (height: 100dvh) {
    :root {
      --chakra-vh: 100dvh;
    }
  }
`,hre=()=>N(eg,{styles:nA}),pre=()=>N(eg,{styles:`
      html {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        font-family: system-ui, sans-serif;
        -webkit-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
        -moz-osx-font-smoothing: grayscale;
        touch-action: manipulation;
      }

      body {
        position: relative;
        min-height: 100%;
        font-feature-settings: 'kern';
      }

      *,
      *::before,
      *::after {
        border-width: 0;
        border-style: solid;
        box-sizing: border-box;
      }

      main {
        display: block;
      }

      hr {
        border-top-width: 1px;
        box-sizing: content-box;
        height: 0;
        overflow: visible;
      }

      pre,
      code,
      kbd,
      samp {
        font-family: SFMono-Regular,  Menlo, Monaco, Consolas, monospace;
        font-size: 1em;
      }

      a {
        background-color: transparent;
        color: inherit;
        text-decoration: inherit;
      }

      abbr[title] {
        border-bottom: none;
        text-decoration: underline;
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
      }

      b,
      strong {
        font-weight: bold;
      }

      small {
        font-size: 80%;
      }

      sub,
      sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
      }

      sub {
        bottom: -0.25em;
      }

      sup {
        top: -0.5em;
      }

      img {
        border-style: none;
      }

      button,
      input,
      optgroup,
      select,
      textarea {
        font-family: inherit;
        font-size: 100%;
        line-height: 1.15;
        margin: 0;
      }

      button,
      input {
        overflow: visible;
      }

      button,
      select {
        text-transform: none;
      }

      button::-moz-focus-inner,
      [type="button"]::-moz-focus-inner,
      [type="reset"]::-moz-focus-inner,
      [type="submit"]::-moz-focus-inner {
        border-style: none;
        padding: 0;
      }

      fieldset {
        padding: 0.35em 0.75em 0.625em;
      }

      legend {
        box-sizing: border-box;
        color: inherit;
        display: table;
        max-width: 100%;
        padding: 0;
        white-space: normal;
      }

      progress {
        vertical-align: baseline;
      }

      textarea {
        overflow: auto;
      }

      [type="checkbox"],
      [type="radio"] {
        box-sizing: border-box;
        padding: 0;
      }

      [type="number"]::-webkit-inner-spin-button,
      [type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none !important;
      }

      input[type="number"] {
        -moz-appearance: textfield;
      }

      [type="search"] {
        -webkit-appearance: textfield;
        outline-offset: -2px;
      }

      [type="search"]::-webkit-search-decoration {
        -webkit-appearance: none !important;
      }

      ::-webkit-file-upload-button {
        -webkit-appearance: button;
        font: inherit;
      }

      details {
        display: block;
      }

      summary {
        display: list-item;
      }

      template {
        display: none;
      }

      [hidden] {
        display: none !important;
      }

      body,
      blockquote,
      dl,
      dd,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      hr,
      figure,
      p,
      pre {
        margin: 0;
      }

      button {
        background: transparent;
        padding: 0;
      }

      fieldset {
        margin: 0;
        padding: 0;
      }

      ol,
      ul {
        margin: 0;
        padding: 0;
      }

      textarea {
        resize: vertical;
      }

      button,
      [role="button"] {
        cursor: pointer;
      }

      button::-moz-focus-inner {
        border: 0 !important;
      }

      table {
        border-collapse: collapse;
      }

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-size: inherit;
        font-weight: inherit;
      }

      button,
      input,
      optgroup,
      select,
      textarea {
        padding: 0;
        line-height: inherit;
        color: inherit;
      }

      img,
      svg,
      video,
      canvas,
      audio,
      iframe,
      embed,
      object {
        display: block;
      }

      img,
      video {
        max-width: 100%;
        height: auto;
      }

      [data-js-focus-visible] :focus:not([data-focus-visible-added]):not([data-focus-visible-disabled]) {
        outline: none;
        box-shadow: none;
      }

      select::-ms-expand {
        display: none;
      }

      ${nA}
    `});function lb(t,e,n,r){const i=Xp(n);return S.exports.useEffect(()=>{const o=typeof t=="function"?t():t!=null?t:document;if(!(!n||!o))return o.addEventListener(e,i,r),()=>{o.removeEventListener(e,i,r)}},[e,t,r,i,n]),()=>{const o=typeof t=="function"?t():t!=null?t:document;o==null||o.removeEventListener(e,i,r)}}var mre=Rj?S.exports.useLayoutEffect:S.exports.useEffect;function q3(t,e=[]){const n=S.exports.useRef(t);return mre(()=>{n.current=t}),S.exports.useCallback((...r)=>{var i;return(i=n.current)==null?void 0:i.call(n,...r)},e)}function gre(t,e){const n=t!==void 0;return[n,n&&typeof t<"u"?t:e]}function bre(t,e){const n=S.exports.useId();return S.exports.useMemo(()=>t||[e,n].filter(Boolean).join("-"),[t,e,n])}function vre(t={}){const{onClose:e,onOpen:n,isOpen:r,id:i}=t,o=q3(n),s=q3(e),[a,l]=S.exports.useState(t.defaultIsOpen||!1),[c,u]=gre(r,a),d=bre(i,"disclosure"),f=S.exports.useCallback(()=>{c||l(!1),s==null||s()},[c,s]),h=S.exports.useCallback(()=>{c||l(!0),o==null||o()},[c,o]),p=S.exports.useCallback(()=>{(u?f:h)()},[u,h,f]);return{isOpen:!!u,onOpen:h,onClose:f,onToggle:p,isControlled:c,getButtonProps:(m={})=>({...m,"aria-expanded":u,"aria-controls":d,onClick:Fj(m.onClick,p)}),getDisclosureProps:(m={})=>({...m,hidden:!u,id:d})}}function WS(t){const e=Object.assign({},t);for(let n in e)e[n]===void 0&&delete e[n];return e}var RS=J(function(e,n){const{htmlSize:r,...i}=e,o=js("Input",i),s=ut(i),a=ore(s),l=st("chakra-input",e.className);return R.createElement(K.input,{size:r,...a,__css:o.field,ref:n,className:l})});RS.displayName="Input";RS.id="Input";var[yre,rA]=Zn({name:"InputGroupStylesContext",errorMessage:`useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in "<InputGroup />" `}),iA=J(function(e,n){const r=js("Input",e),{children:i,className:o,...s}=ut(e),a=st("chakra-input__group",o),l={},c=ZS(i),u=r.field;c.forEach(f=>{var h,p;!r||(u&&f.type.id==="InputLeftElement"&&(l.paddingStart=(h=u.height)!=null?h:u.h),u&&f.type.id==="InputRightElement"&&(l.paddingEnd=(p=u.height)!=null?p:u.h),f.type.id==="InputRightAddon"&&(l.borderEndRadius=0),f.type.id==="InputLeftAddon"&&(l.borderStartRadius=0))});const d=c.map(f=>{var h,p;const m=WS({size:((h=f.props)==null?void 0:h.size)||e.size,variant:((p=f.props)==null?void 0:p.variant)||e.variant});return f.type.id!=="Input"?S.exports.cloneElement(f,m):S.exports.cloneElement(f,Object.assign(m,l,f.props))});return R.createElement(K.div,{className:a,ref:n,__css:{width:"100%",display:"flex",position:"relative"},...s},N(yre,{value:r,children:d}))});iA.displayName="InputGroup";var xre={left:{marginEnd:"-1px",borderEndRadius:0,borderEndColor:"transparent"},right:{marginStart:"-1px",borderStartRadius:0,borderStartColor:"transparent"}},Sre=K("div",{baseStyle:{flex:"0 0 auto",width:"auto",display:"flex",alignItems:"center",whiteSpace:"nowrap"}}),FS=J(function(e,n){var a;const{placement:r="left",...i}=e,o=(a=xre[r])!=null?a:{},s=rA();return N(Sre,{ref:n,...i,__css:{...s.addon,...o}})});FS.displayName="InputAddon";var HS=J(function(e,n){return N(FS,{ref:n,placement:"left",...e,className:st("chakra-input__left-addon",e.className)})});HS.displayName="InputLeftAddon";HS.id="InputLeftAddon";var oA=J(function(e,n){return N(FS,{ref:n,placement:"right",...e,className:st("chakra-input__right-addon",e.className)})});oA.displayName="InputRightAddon";oA.id="InputRightAddon";var kre=K("div",{baseStyle:{display:"flex",alignItems:"center",justifyContent:"center",position:"absolute",top:"0",zIndex:2}}),gg=J(function(e,n){var c,u;const{placement:r="left",...i}=e,o=rA(),s=o.field,l={[r==="left"?"insetStart":"insetEnd"]:"0",width:(c=s==null?void 0:s.height)!=null?c:s==null?void 0:s.h,height:(u=s==null?void 0:s.height)!=null?u:s==null?void 0:s.h,fontSize:s==null?void 0:s.fontSize,...o.element};return N(kre,{ref:n,__css:l,...i})});gg.id="InputElement";gg.displayName="InputElement";var sA=J(function(e,n){const{className:r,...i}=e,o=st("chakra-input__left-element",r);return N(gg,{ref:n,placement:"left",className:o,...i})});sA.id="InputLeftElement";sA.displayName="InputLeftElement";var aA=J(function(e,n){const{className:r,...i}=e,o=st("chakra-input__right-element",r);return N(gg,{ref:n,placement:"right",className:o,...i})});aA.id="InputRightElement";aA.displayName="InputRightElement";function wre(t){const e=typeof t;return t!=null&&(e==="object"||e==="function")&&!Array.isArray(t)}Object.freeze(["base","sm","md","lg","xl","2xl"]);function To(t,e){return Array.isArray(t)?t.map(n=>n===null?null:e(n)):wre(t)?Object.keys(t).reduce((n,r)=>(n[r]=e(t[r]),n),{}):t!=null?e(t):null}var Pre=J(function(t,e){const{ratio:n=4/3,children:r,className:i,...o}=t,s=S.exports.Children.only(r),a=st("chakra-aspect-ratio",i);return R.createElement(K.div,{ref:e,position:"relative",className:a,_before:{height:0,content:'""',display:"block",paddingBottom:To(n,l=>`${1/l*100}%`)},__css:{"& > *:not(style)":{overflow:"hidden",position:"absolute",top:"0",right:"0",bottom:"0",left:"0",display:"flex",justifyContent:"center",alignItems:"center",width:"100%",height:"100%"},"& > img, & > video":{objectFit:"cover"}},...o},s)});Pre.displayName="AspectRatio";var Ore=J(function(e,n){const r=gn("Badge",e),{className:i,...o}=ut(e);return R.createElement(K.span,{ref:n,className:st("chakra-badge",e.className),...o,__css:{display:"inline-block",whiteSpace:"nowrap",verticalAlign:"middle",...r}})});Ore.displayName="Badge";var wl=K("div");wl.displayName="Box";var lA=J(function(e,n){const{size:r,centerContent:i=!0,...o}=e;return N(wl,{ref:n,boxSize:r,__css:{...i?{display:"flex",alignItems:"center",justifyContent:"center"}:{},flexShrink:0,flexGrow:0},...o})});lA.displayName="Square";var Cre=J(function(e,n){const{size:r,...i}=e;return N(lA,{size:r,ref:n,borderRadius:"9999px",...i})});Cre.displayName="Circle";var $y=K("div",{baseStyle:{display:"flex",alignItems:"center",justifyContent:"center"}});$y.displayName="Center";var Tre={horizontal:{insetStart:"50%",transform:"translateX(-50%)"},vertical:{top:"50%",transform:"translateY(-50%)"},both:{insetStart:"50%",top:"50%",transform:"translate(-50%, -50%)"}};J(function(e,n){const{axis:r="both",...i}=e;return R.createElement(K.div,{ref:n,__css:Tre[r],...i,position:"absolute"})});var zre=J(function(e,n){const r=gn("Code",e),{className:i,...o}=ut(e);return R.createElement(K.code,{ref:n,className:st("chakra-code",e.className),...o,__css:{display:"inline-block",...r}})});zre.displayName="Code";var Vre=J(function(e,n){const{className:r,centerContent:i,...o}=ut(e),s=gn("Container",e);return R.createElement(K.div,{ref:n,className:st("chakra-container",r),...o,__css:{...s,...i&&{display:"flex",flexDirection:"column",alignItems:"center"}}})});Vre.displayName="Container";var Ere=J(function(e,n){const{borderLeftWidth:r,borderBottomWidth:i,borderTopWidth:o,borderRightWidth:s,borderWidth:a,borderStyle:l,borderColor:c,...u}=gn("Divider",e),{className:d,orientation:f="horizontal",__css:h,...p}=ut(e),m={vertical:{borderLeftWidth:r||s||a||"1px",height:"100%"},horizontal:{borderBottomWidth:i||o||a||"1px",width:"100%"}};return R.createElement(K.hr,{ref:n,"aria-orientation":f,...p,__css:{...u,border:"0",borderColor:c,borderStyle:l,...m[f],...h},className:st("chakra-divider",d)})});Ere.displayName="Divider";var Nre=J(function(e,n){const{direction:r,align:i,justify:o,wrap:s,basis:a,grow:l,shrink:c,...u}=e,d={display:"flex",flexDirection:r,alignItems:i,justifyContent:o,flexWrap:s,flexBasis:a,flexGrow:l,flexShrink:c};return R.createElement(K.div,{ref:n,__css:d,...u})});Nre.displayName="Flex";var cA=J(function(e,n){const{templateAreas:r,gap:i,rowGap:o,columnGap:s,column:a,row:l,autoFlow:c,autoRows:u,templateRows:d,autoColumns:f,templateColumns:h,...p}=e,m={display:"grid",gridTemplateAreas:r,gridGap:i,gridRowGap:o,gridColumnGap:s,gridAutoColumns:f,gridColumn:a,gridRow:l,gridAutoFlow:c,gridAutoRows:u,gridTemplateRows:d,gridTemplateColumns:h};return R.createElement(K.div,{ref:n,__css:m,...p})});cA.displayName="Grid";function J3(t){return To(t,e=>e==="auto"?"auto":`span ${e}/span ${e}`)}var Ire=J(function(e,n){const{area:r,colSpan:i,colStart:o,colEnd:s,rowEnd:a,rowSpan:l,rowStart:c,...u}=e,d=WS({gridArea:r,gridColumn:J3(i),gridRow:J3(l),gridColumnStart:o,gridColumnEnd:s,gridRowStart:c,gridRowEnd:a});return R.createElement(K.div,{ref:n,__css:d,...u})});Ire.displayName="GridItem";var Mre=J(function(e,n){const r=gn("Heading",e),{className:i,...o}=ut(e);return R.createElement(K.h2,{ref:n,className:st("chakra-heading",e.className),...o,__css:r})});Mre.displayName="Heading";J(function(e,n){const r=gn("Mark",e),i=ut(e);return N(wl,{ref:n,...i,as:"mark",__css:{bg:"transparent",whiteSpace:"nowrap",...r}})});var Are=J(function(e,n){const r=gn("Kbd",e),{className:i,...o}=ut(e);return R.createElement(K.kbd,{ref:n,className:st("chakra-kbd",i),...o,__css:{fontFamily:"mono",...r}})});Are.displayName="Kbd";var Lre=J(function(e,n){const r=gn("Link",e),{className:i,isExternal:o,...s}=ut(e);return R.createElement(K.a,{target:o?"_blank":void 0,rel:o?"noopener":void 0,ref:n,className:st("chakra-link",i),...s,__css:r})});Lre.displayName="Link";J(function(e,n){const{isExternal:r,target:i,rel:o,className:s,...a}=e;return R.createElement(K.a,{...a,ref:n,className:st("chakra-linkbox__overlay",s),rel:r?"noopener noreferrer":o,target:r?"_blank":i,__css:{position:"static","&::before":{content:"''",cursor:"inherit",display:"block",position:"absolute",top:0,left:0,zIndex:0,width:"100%",height:"100%"}}})});J(function(e,n){const{className:r,...i}=e;return R.createElement(K.div,{ref:n,position:"relative",...i,className:st("chakra-linkbox",r),__css:{"a[href]:not(.chakra-linkbox__overlay), abbr[title]":{position:"relative",zIndex:1}}})});var[Zre,uA]=Zn({name:"ListStylesContext",errorMessage:`useListStyles returned is 'undefined'. Seems you forgot to wrap the components in "<List />" `}),DS=J(function(e,n){const r=js("List",e),{children:i,styleType:o="none",stylePosition:s,spacing:a,...l}=ut(e),c=ZS(i),d=a?{["& > *:not(style) ~ *:not(style)"]:{mt:a}}:{};return R.createElement(Zre,{value:r},R.createElement(K.ul,{ref:n,listStyleType:o,listStylePosition:s,role:"list",__css:{...r.container,...d},...l},c))});DS.displayName="List";var Xre=J((t,e)=>{const{as:n,...r}=t;return N(DS,{ref:e,as:"ol",styleType:"decimal",marginStart:"1em",...r})});Xre.displayName="OrderedList";var Wre=J(function(e,n){const{as:r,...i}=e;return N(DS,{ref:n,as:"ul",styleType:"initial",marginStart:"1em",...i})});Wre.displayName="UnorderedList";var Rre=J(function(e,n){const r=uA();return R.createElement(K.li,{ref:n,...e,__css:r.item})});Rre.displayName="ListItem";var Fre=J(function(e,n){const r=uA();return N(Bs,{ref:n,role:"presentation",...e,__css:r.icon})});Fre.displayName="ListIcon";var Hre=J(function(e,n){const{columns:r,spacingX:i,spacingY:o,spacing:s,minChildWidth:a,...l}=e,c=aS(),u=a?Gre(a,c):jre(r);return N(cA,{ref:n,gap:s,columnGap:i,rowGap:o,templateColumns:u,...l})});Hre.displayName="SimpleGrid";function Dre(t){return typeof t=="number"?`${t}px`:t}function Gre(t,e){return To(t,n=>{const r=TQ("sizes",n,Dre(n))(e);return n===null?null:`repeat(auto-fit, minmax(${r}, 1fr))`})}function jre(t){return To(t,e=>e===null?null:`repeat(${e}, minmax(0, 1fr))`)}var dA=K("div",{baseStyle:{flex:1,justifySelf:"stretch",alignSelf:"stretch"}});dA.displayName="Spacer";var e1="& > *:not(style) ~ *:not(style)";function Bre(t){const{spacing:e,direction:n}=t,r={column:{marginTop:e,marginEnd:0,marginBottom:0,marginStart:0},row:{marginTop:0,marginEnd:0,marginBottom:0,marginStart:e},"column-reverse":{marginTop:0,marginEnd:0,marginBottom:e,marginStart:0},"row-reverse":{marginTop:0,marginEnd:e,marginBottom:0,marginStart:0}};return{flexDirection:n,[e1]:To(n,i=>r[i])}}function Yre(t){const{spacing:e,direction:n}=t,r={column:{my:e,mx:0,borderLeftWidth:0,borderBottomWidth:"1px"},"column-reverse":{my:e,mx:0,borderLeftWidth:0,borderBottomWidth:"1px"},row:{mx:e,my:0,borderLeftWidth:"1px",borderBottomWidth:0},"row-reverse":{mx:e,my:0,borderLeftWidth:"1px",borderBottomWidth:0}};return{"&":To(n,i=>r[i])}}var fA=t=>R.createElement(K.div,{className:"chakra-stack__item",...t,__css:{display:"inline-block",flex:"0 0 auto",minWidth:0,...t.__css}});fA.displayName="StackItem";var GS=J((t,e)=>{const{isInline:n,direction:r,align:i,justify:o,spacing:s="0.5rem",wrap:a,children:l,divider:c,className:u,shouldWrapChildren:d,...f}=t,h=n?"row":r!=null?r:"column",p=S.exports.useMemo(()=>Bre({direction:h,spacing:s}),[h,s]),m=S.exports.useMemo(()=>Yre({spacing:s,direction:h}),[s,h]),v=!!c,g=!d&&!v,b=S.exports.useMemo(()=>{const x=ZS(l);return g?x:x.map((k,P)=>{const O=typeof k.key<"u"?k.key:P,z=P+1===x.length,E=d?N(fA,{children:k},O):k;if(!v)return E;const X=S.exports.cloneElement(c,{__css:m}),Y=z?null:X;return tt(S.exports.Fragment,{children:[E,Y]},O)})},[c,m,v,g,d,l]),y=st("chakra-stack",u);return R.createElement(K.div,{ref:e,display:"flex",alignItems:i,justifyContent:o,flexDirection:p.flexDirection,flexWrap:a,className:y,__css:v?{}:{[e1]:p[e1]},...f},b)});GS.displayName="Stack";var hA=J((t,e)=>N(GS,{align:"center",...t,direction:"row",ref:e}));hA.displayName="HStack";var jS=J((t,e)=>N(GS,{align:"center",...t,direction:"column",ref:e}));jS.displayName="VStack";var pA=J(function(e,n){const r=gn("Text",e),{className:i,align:o,decoration:s,casing:a,...l}=ut(e),c=WS({textAlign:e.align,textDecoration:e.decoration,textTransform:e.casing});return R.createElement(K.p,{ref:n,className:st("chakra-text",e.className),...c,...l,__css:r})});pA.displayName="Text";function Q3(t){return typeof t=="number"?`${t}px`:t}var Kre=J(function(e,n){const{spacing:r="0.5rem",spacingX:i,spacingY:o,children:s,justify:a,direction:l,align:c,className:u,shouldWrapChildren:d,...f}=e,h=S.exports.useMemo(()=>{const{spacingX:m=r,spacingY:v=r}={spacingX:i,spacingY:o};return{"--chakra-wrap-x-spacing":g=>To(m,b=>Q3(my("space",b)(g))),"--chakra-wrap-y-spacing":g=>To(v,b=>Q3(my("space",b)(g))),"--wrap-x-spacing":"calc(var(--chakra-wrap-x-spacing) / 2)","--wrap-y-spacing":"calc(var(--chakra-wrap-y-spacing) / 2)",display:"flex",flexWrap:"wrap",justifyContent:a,alignItems:c,flexDirection:l,listStyleType:"none",padding:"0",margin:"calc(var(--wrap-y-spacing) * -1) calc(var(--wrap-x-spacing) * -1)","& > *:not(style)":{margin:"var(--wrap-y-spacing) var(--wrap-x-spacing)"}}},[r,i,o,a,c,l]),p=S.exports.useMemo(()=>d?S.exports.Children.map(s,(m,v)=>N(mA,{children:m},v)):s,[s,d]);return R.createElement(K.div,{ref:n,className:st("chakra-wrap",u),overflow:"hidden",...f},R.createElement(K.ul,{className:"chakra-wrap__list",__css:h},p))});Kre.displayName="Wrap";var mA=J(function(e,n){const{className:r,...i}=e;return R.createElement(K.li,{ref:n,__css:{display:"flex",alignItems:"flex-start"},className:st("chakra-wrap__listitem",r),...i})});mA.displayName="WrapItem";var Ure={body:{classList:{add(){},remove(){}}},addEventListener(){},removeEventListener(){},activeElement:{blur(){},nodeName:""},querySelector(){return null},querySelectorAll(){return[]},getElementById(){return null},createEvent(){return{initEvent(){}}},createElement(){return{children:[],childNodes:[],style:{},setAttribute(){},getElementsByTagName(){return[]}}}},gA=Ure,sa=()=>{},qre={document:gA,navigator:{userAgent:""},CustomEvent:function(){return this},addEventListener:sa,removeEventListener:sa,getComputedStyle(){return{getPropertyValue(){return""}}},matchMedia(){return{matches:!1,addListener:sa,removeListener:sa}},requestAnimationFrame(t){return typeof setTimeout>"u"?(t(),null):setTimeout(t,0)},cancelAnimationFrame(t){typeof setTimeout>"u"||clearTimeout(t)},setTimeout:()=>0,clearTimeout:sa,setInterval:()=>0,clearInterval:sa},Jre=qre,Qre={window:Jre,document:gA},bA=typeof window<"u"?{window,document}:Qre,vA=S.exports.createContext(bA);vA.displayName="EnvironmentContext";function yA(t){const{children:e,environment:n}=t,[r,i]=S.exports.useState(null),[o,s]=S.exports.useState(!1);S.exports.useEffect(()=>s(!0),[]);const a=S.exports.useMemo(()=>{if(n)return n;const l=r==null?void 0:r.ownerDocument,c=r==null?void 0:r.ownerDocument.defaultView;return l?{document:l,window:c}:bA},[r,n]);return tt(vA.Provider,{value:a,children:[e,!n&&o&&N("span",{id:"__chakra_env",hidden:!0,ref:l=>{S.exports.startTransition(()=>{l&&i(l)})}})]})}yA.displayName="EnvironmentProvider";function _re(t){return t!=null&&typeof t=="object"&&"nodeType"in t&&t.nodeType===Node.ELEMENT_NODE}function $re(t){var n;if(!_re(t))return!1;const e=(n=t.ownerDocument.defaultView)!=null?n:window;return t instanceof e.HTMLElement}var eie=t=>t.hasAttribute("tabindex");function tie(t){return Boolean(t.getAttribute("disabled"))===!0||Boolean(t.getAttribute("aria-disabled"))===!0}function xA(t){return t.parentElement&&xA(t.parentElement)?!0:t.hidden}function nie(t){const e=t.getAttribute("contenteditable");return e!=="false"&&e!=null}function rie(t){if(!$re(t)||xA(t)||tie(t))return!1;const{localName:e}=t;if(["input","select","textarea","button"].indexOf(e)>=0)return!0;const r={a:()=>t.hasAttribute("href"),audio:()=>t.hasAttribute("controls"),video:()=>t.hasAttribute("controls")};return e in r?r[e]():nie(t)?!0:eie(t)}var iie=["input:not(:disabled):not([disabled])","select:not(:disabled):not([disabled])","textarea:not(:disabled):not([disabled])","embed","iframe","object","a[href]","area[href]","button:not(:disabled):not([disabled])","[tabindex]","audio[controls]","video[controls]","*[tabindex]:not([aria-disabled])","*[contenteditable]"],oie=iie.join(),sie=t=>t.offsetWidth>0&&t.offsetHeight>0;function aie(t){const e=Array.from(t.querySelectorAll(oie));return e.unshift(t),e.filter(n=>rie(n)&&sie(n))}var fn="top",tr="bottom",nr="right",hn="left",BS="auto",Sd=[fn,tr,nr,hn],Pl="start",Qu="end",lie="clippingParents",SA="viewport",fc="popper",cie="reference",_3=Sd.reduce(function(t,e){return t.concat([e+"-"+Pl,e+"-"+Qu])},[]),kA=[].concat(Sd,[BS]).reduce(function(t,e){return t.concat([e,e+"-"+Pl,e+"-"+Qu])},[]),uie="beforeRead",die="read",fie="afterRead",hie="beforeMain",pie="main",mie="afterMain",gie="beforeWrite",bie="write",vie="afterWrite",yie=[uie,die,fie,hie,pie,mie,gie,bie,vie];function ei(t){return t?(t.nodeName||"").toLowerCase():null}function ir(t){if(t==null)return window;if(t.toString()!=="[object Window]"){var e=t.ownerDocument;return e&&e.defaultView||window}return t}function Xs(t){var e=ir(t).Element;return t instanceof e||t instanceof Element}function Qn(t){var e=ir(t).HTMLElement;return t instanceof e||t instanceof HTMLElement}function YS(t){if(typeof ShadowRoot>"u")return!1;var e=ir(t).ShadowRoot;return t instanceof e||t instanceof ShadowRoot}function xie(t){var e=t.state;Object.keys(e.elements).forEach(function(n){var r=e.styles[n]||{},i=e.attributes[n]||{},o=e.elements[n];!Qn(o)||!ei(o)||(Object.assign(o.style,r),Object.keys(i).forEach(function(s){var a=i[s];a===!1?o.removeAttribute(s):o.setAttribute(s,a===!0?"":a)}))})}function Sie(t){var e=t.state,n={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(e.elements.popper.style,n.popper),e.styles=n,e.elements.arrow&&Object.assign(e.elements.arrow.style,n.arrow),function(){Object.keys(e.elements).forEach(function(r){var i=e.elements[r],o=e.attributes[r]||{},s=Object.keys(e.styles.hasOwnProperty(r)?e.styles[r]:n[r]),a=s.reduce(function(l,c){return l[c]="",l},{});!Qn(i)||!ei(i)||(Object.assign(i.style,a),Object.keys(o).forEach(function(l){i.removeAttribute(l)}))})}}const kie={name:"applyStyles",enabled:!0,phase:"write",fn:xie,effect:Sie,requires:["computeStyles"]};function Jr(t){return t.split("-")[0]}var Ps=Math.max,Jp=Math.min,Ol=Math.round;function t1(){var t=navigator.userAgentData;return t!=null&&t.brands?t.brands.map(function(e){return e.brand+"/"+e.version}).join(" "):navigator.userAgent}function wA(){return!/^((?!chrome|android).)*safari/i.test(t1())}function Cl(t,e,n){e===void 0&&(e=!1),n===void 0&&(n=!1);var r=t.getBoundingClientRect(),i=1,o=1;e&&Qn(t)&&(i=t.offsetWidth>0&&Ol(r.width)/t.offsetWidth||1,o=t.offsetHeight>0&&Ol(r.height)/t.offsetHeight||1);var s=Xs(t)?ir(t):window,a=s.visualViewport,l=!wA()&&n,c=(r.left+(l&&a?a.offsetLeft:0))/i,u=(r.top+(l&&a?a.offsetTop:0))/o,d=r.width/i,f=r.height/o;return{width:d,height:f,top:u,right:c+d,bottom:u+f,left:c,x:c,y:u}}function KS(t){var e=Cl(t),n=t.offsetWidth,r=t.offsetHeight;return Math.abs(e.width-n)<=1&&(n=e.width),Math.abs(e.height-r)<=1&&(r=e.height),{x:t.offsetLeft,y:t.offsetTop,width:n,height:r}}function PA(t,e){var n=e.getRootNode&&e.getRootNode();if(t.contains(e))return!0;if(n&&YS(n)){var r=e;do{if(r&&t.isSameNode(r))return!0;r=r.parentNode||r.host}while(r)}return!1}function Vi(t){return ir(t).getComputedStyle(t)}function wie(t){return["table","td","th"].indexOf(ei(t))>=0}function Xo(t){return((Xs(t)?t.ownerDocument:t.document)||window.document).documentElement}function bg(t){return ei(t)==="html"?t:t.assignedSlot||t.parentNode||(YS(t)?t.host:null)||Xo(t)}function $3(t){return!Qn(t)||Vi(t).position==="fixed"?null:t.offsetParent}function Pie(t){var e=/firefox/i.test(t1()),n=/Trident/i.test(t1());if(n&&Qn(t)){var r=Vi(t);if(r.position==="fixed")return null}var i=bg(t);for(YS(i)&&(i=i.host);Qn(i)&&["html","body"].indexOf(ei(i))<0;){var o=Vi(i);if(o.transform!=="none"||o.perspective!=="none"||o.contain==="paint"||["transform","perspective"].indexOf(o.willChange)!==-1||e&&o.willChange==="filter"||e&&o.filter&&o.filter!=="none")return i;i=i.parentNode}return null}function kd(t){for(var e=ir(t),n=$3(t);n&&wie(n)&&Vi(n).position==="static";)n=$3(n);return n&&(ei(n)==="html"||ei(n)==="body"&&Vi(n).position==="static")?e:n||Pie(t)||e}function US(t){return["top","bottom"].indexOf(t)>=0?"x":"y"}function tu(t,e,n){return Ps(t,Jp(e,n))}function Oie(t,e,n){var r=tu(t,e,n);return r>n?n:r}function OA(){return{top:0,right:0,bottom:0,left:0}}function CA(t){return Object.assign({},OA(),t)}function TA(t,e){return e.reduce(function(n,r){return n[r]=t,n},{})}var Cie=function(e,n){return e=typeof e=="function"?e(Object.assign({},n.rects,{placement:n.placement})):e,CA(typeof e!="number"?e:TA(e,Sd))};function Tie(t){var e,n=t.state,r=t.name,i=t.options,o=n.elements.arrow,s=n.modifiersData.popperOffsets,a=Jr(n.placement),l=US(a),c=[hn,nr].indexOf(a)>=0,u=c?"height":"width";if(!(!o||!s)){var d=Cie(i.padding,n),f=KS(o),h=l==="y"?fn:hn,p=l==="y"?tr:nr,m=n.rects.reference[u]+n.rects.reference[l]-s[l]-n.rects.popper[u],v=s[l]-n.rects.reference[l],g=kd(o),b=g?l==="y"?g.clientHeight||0:g.clientWidth||0:0,y=m/2-v/2,x=d[h],k=b-f[u]-d[p],P=b/2-f[u]/2+y,O=tu(x,P,k),z=l;n.modifiersData[r]=(e={},e[z]=O,e.centerOffset=O-P,e)}}function zie(t){var e=t.state,n=t.options,r=n.element,i=r===void 0?"[data-popper-arrow]":r;i!=null&&(typeof i=="string"&&(i=e.elements.popper.querySelector(i),!i)||!PA(e.elements.popper,i)||(e.elements.arrow=i))}const Vie={name:"arrow",enabled:!0,phase:"main",fn:Tie,effect:zie,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function Tl(t){return t.split("-")[1]}var Eie={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Nie(t){var e=t.x,n=t.y,r=window,i=r.devicePixelRatio||1;return{x:Ol(e*i)/i||0,y:Ol(n*i)/i||0}}function e9(t){var e,n=t.popper,r=t.popperRect,i=t.placement,o=t.variation,s=t.offsets,a=t.position,l=t.gpuAcceleration,c=t.adaptive,u=t.roundOffsets,d=t.isFixed,f=s.x,h=f===void 0?0:f,p=s.y,m=p===void 0?0:p,v=typeof u=="function"?u({x:h,y:m}):{x:h,y:m};h=v.x,m=v.y;var g=s.hasOwnProperty("x"),b=s.hasOwnProperty("y"),y=hn,x=fn,k=window;if(c){var P=kd(n),O="clientHeight",z="clientWidth";if(P===ir(n)&&(P=Xo(n),Vi(P).position!=="static"&&a==="absolute"&&(O="scrollHeight",z="scrollWidth")),P=P,i===fn||(i===hn||i===nr)&&o===Qu){x=tr;var I=d&&P===k&&k.visualViewport?k.visualViewport.height:P[O];m-=I-r.height,m*=l?1:-1}if(i===hn||(i===fn||i===tr)&&o===Qu){y=nr;var E=d&&P===k&&k.visualViewport?k.visualViewport.width:P[z];h-=E-r.width,h*=l?1:-1}}var X=Object.assign({position:a},c&&Eie),Y=u===!0?Nie({x:h,y:m}):{x:h,y:m};if(h=Y.x,m=Y.y,l){var Q;return Object.assign({},X,(Q={},Q[x]=b?"0":"",Q[y]=g?"0":"",Q.transform=(k.devicePixelRatio||1)<=1?"translate("+h+"px, "+m+"px)":"translate3d("+h+"px, "+m+"px, 0)",Q))}return Object.assign({},X,(e={},e[x]=b?m+"px":"",e[y]=g?h+"px":"",e.transform="",e))}function Iie(t){var e=t.state,n=t.options,r=n.gpuAcceleration,i=r===void 0?!0:r,o=n.adaptive,s=o===void 0?!0:o,a=n.roundOffsets,l=a===void 0?!0:a,c={placement:Jr(e.placement),variation:Tl(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:i,isFixed:e.options.strategy==="fixed"};e.modifiersData.popperOffsets!=null&&(e.styles.popper=Object.assign({},e.styles.popper,e9(Object.assign({},c,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:s,roundOffsets:l})))),e.modifiersData.arrow!=null&&(e.styles.arrow=Object.assign({},e.styles.arrow,e9(Object.assign({},c,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:l})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})}const Mie={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:Iie,data:{}};var Zf={passive:!0};function Aie(t){var e=t.state,n=t.instance,r=t.options,i=r.scroll,o=i===void 0?!0:i,s=r.resize,a=s===void 0?!0:s,l=ir(e.elements.popper),c=[].concat(e.scrollParents.reference,e.scrollParents.popper);return o&&c.forEach(function(u){u.addEventListener("scroll",n.update,Zf)}),a&&l.addEventListener("resize",n.update,Zf),function(){o&&c.forEach(function(u){u.removeEventListener("scroll",n.update,Zf)}),a&&l.removeEventListener("resize",n.update,Zf)}}const Lie={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:Aie,data:{}};var Zie={left:"right",right:"left",bottom:"top",top:"bottom"};function wh(t){return t.replace(/left|right|bottom|top/g,function(e){return Zie[e]})}var Xie={start:"end",end:"start"};function t9(t){return t.replace(/start|end/g,function(e){return Xie[e]})}function qS(t){var e=ir(t),n=e.pageXOffset,r=e.pageYOffset;return{scrollLeft:n,scrollTop:r}}function JS(t){return Cl(Xo(t)).left+qS(t).scrollLeft}function Wie(t,e){var n=ir(t),r=Xo(t),i=n.visualViewport,o=r.clientWidth,s=r.clientHeight,a=0,l=0;if(i){o=i.width,s=i.height;var c=wA();(c||!c&&e==="fixed")&&(a=i.offsetLeft,l=i.offsetTop)}return{width:o,height:s,x:a+JS(t),y:l}}function Rie(t){var e,n=Xo(t),r=qS(t),i=(e=t.ownerDocument)==null?void 0:e.body,o=Ps(n.scrollWidth,n.clientWidth,i?i.scrollWidth:0,i?i.clientWidth:0),s=Ps(n.scrollHeight,n.clientHeight,i?i.scrollHeight:0,i?i.clientHeight:0),a=-r.scrollLeft+JS(t),l=-r.scrollTop;return Vi(i||n).direction==="rtl"&&(a+=Ps(n.clientWidth,i?i.clientWidth:0)-o),{width:o,height:s,x:a,y:l}}function QS(t){var e=Vi(t),n=e.overflow,r=e.overflowX,i=e.overflowY;return/auto|scroll|overlay|hidden/.test(n+i+r)}function zA(t){return["html","body","#document"].indexOf(ei(t))>=0?t.ownerDocument.body:Qn(t)&&QS(t)?t:zA(bg(t))}function nu(t,e){var n;e===void 0&&(e=[]);var r=zA(t),i=r===((n=t.ownerDocument)==null?void 0:n.body),o=ir(r),s=i?[o].concat(o.visualViewport||[],QS(r)?r:[]):r,a=e.concat(s);return i?a:a.concat(nu(bg(s)))}function n1(t){return Object.assign({},t,{left:t.x,top:t.y,right:t.x+t.width,bottom:t.y+t.height})}function Fie(t,e){var n=Cl(t,!1,e==="fixed");return n.top=n.top+t.clientTop,n.left=n.left+t.clientLeft,n.bottom=n.top+t.clientHeight,n.right=n.left+t.clientWidth,n.width=t.clientWidth,n.height=t.clientHeight,n.x=n.left,n.y=n.top,n}function n9(t,e,n){return e===SA?n1(Wie(t,n)):Xs(e)?Fie(e,n):n1(Rie(Xo(t)))}function Hie(t){var e=nu(bg(t)),n=["absolute","fixed"].indexOf(Vi(t).position)>=0,r=n&&Qn(t)?kd(t):t;return Xs(r)?e.filter(function(i){return Xs(i)&&PA(i,r)&&ei(i)!=="body"}):[]}function Die(t,e,n,r){var i=e==="clippingParents"?Hie(t):[].concat(e),o=[].concat(i,[n]),s=o[0],a=o.reduce(function(l,c){var u=n9(t,c,r);return l.top=Ps(u.top,l.top),l.right=Jp(u.right,l.right),l.bottom=Jp(u.bottom,l.bottom),l.left=Ps(u.left,l.left),l},n9(t,s,r));return a.width=a.right-a.left,a.height=a.bottom-a.top,a.x=a.left,a.y=a.top,a}function VA(t){var e=t.reference,n=t.element,r=t.placement,i=r?Jr(r):null,o=r?Tl(r):null,s=e.x+e.width/2-n.width/2,a=e.y+e.height/2-n.height/2,l;switch(i){case fn:l={x:s,y:e.y-n.height};break;case tr:l={x:s,y:e.y+e.height};break;case nr:l={x:e.x+e.width,y:a};break;case hn:l={x:e.x-n.width,y:a};break;default:l={x:e.x,y:e.y}}var c=i?US(i):null;if(c!=null){var u=c==="y"?"height":"width";switch(o){case Pl:l[c]=l[c]-(e[u]/2-n[u]/2);break;case Qu:l[c]=l[c]+(e[u]/2-n[u]/2);break}}return l}function _u(t,e){e===void 0&&(e={});var n=e,r=n.placement,i=r===void 0?t.placement:r,o=n.strategy,s=o===void 0?t.strategy:o,a=n.boundary,l=a===void 0?lie:a,c=n.rootBoundary,u=c===void 0?SA:c,d=n.elementContext,f=d===void 0?fc:d,h=n.altBoundary,p=h===void 0?!1:h,m=n.padding,v=m===void 0?0:m,g=CA(typeof v!="number"?v:TA(v,Sd)),b=f===fc?cie:fc,y=t.rects.popper,x=t.elements[p?b:f],k=Die(Xs(x)?x:x.contextElement||Xo(t.elements.popper),l,u,s),P=Cl(t.elements.reference),O=VA({reference:P,element:y,strategy:"absolute",placement:i}),z=n1(Object.assign({},y,O)),I=f===fc?z:P,E={top:k.top-I.top+g.top,bottom:I.bottom-k.bottom+g.bottom,left:k.left-I.left+g.left,right:I.right-k.right+g.right},X=t.modifiersData.offset;if(f===fc&&X){var Y=X[i];Object.keys(E).forEach(function(Q){var ae=[nr,tr].indexOf(Q)>=0?1:-1,oe=[fn,tr].indexOf(Q)>=0?"y":"x";E[Q]+=Y[oe]*ae})}return E}function Gie(t,e){e===void 0&&(e={});var n=e,r=n.placement,i=n.boundary,o=n.rootBoundary,s=n.padding,a=n.flipVariations,l=n.allowedAutoPlacements,c=l===void 0?kA:l,u=Tl(r),d=u?a?_3:_3.filter(function(p){return Tl(p)===u}):Sd,f=d.filter(function(p){return c.indexOf(p)>=0});f.length===0&&(f=d);var h=f.reduce(function(p,m){return p[m]=_u(t,{placement:m,boundary:i,rootBoundary:o,padding:s})[Jr(m)],p},{});return Object.keys(h).sort(function(p,m){return h[p]-h[m]})}function jie(t){if(Jr(t)===BS)return[];var e=wh(t);return[t9(t),e,t9(e)]}function Bie(t){var e=t.state,n=t.options,r=t.name;if(!e.modifiersData[r]._skip){for(var i=n.mainAxis,o=i===void 0?!0:i,s=n.altAxis,a=s===void 0?!0:s,l=n.fallbackPlacements,c=n.padding,u=n.boundary,d=n.rootBoundary,f=n.altBoundary,h=n.flipVariations,p=h===void 0?!0:h,m=n.allowedAutoPlacements,v=e.options.placement,g=Jr(v),b=g===v,y=l||(b||!p?[wh(v)]:jie(v)),x=[v].concat(y).reduce(function(Te,Ve){return Te.concat(Jr(Ve)===BS?Gie(e,{placement:Ve,boundary:u,rootBoundary:d,padding:c,flipVariations:p,allowedAutoPlacements:m}):Ve)},[]),k=e.rects.reference,P=e.rects.popper,O=new Map,z=!0,I=x[0],E=0;E<x.length;E++){var X=x[E],Y=Jr(X),Q=Tl(X)===Pl,ae=[fn,tr].indexOf(Y)>=0,oe=ae?"width":"height",D=_u(e,{placement:X,boundary:u,rootBoundary:d,altBoundary:f,padding:c}),ee=ae?Q?nr:hn:Q?tr:fn;k[oe]>P[oe]&&(ee=wh(ee));var L=wh(ee),H=[];if(o&&H.push(D[Y]<=0),a&&H.push(D[ee]<=0,D[L]<=0),H.every(function(Te){return Te})){I=X,z=!1;break}O.set(X,H)}if(z)for(var q=p?3:1,le=function(Ve){var He=x.find(function(Ye){var rt=O.get(Ye);if(rt)return rt.slice(0,Ve).every(function(Xn){return Xn})});if(He)return I=He,"break"},ue=q;ue>0;ue--){var re=le(ue);if(re==="break")break}e.placement!==I&&(e.modifiersData[r]._skip=!0,e.placement=I,e.reset=!0)}}const Yie={name:"flip",enabled:!0,phase:"main",fn:Bie,requiresIfExists:["offset"],data:{_skip:!1}};function r9(t,e,n){return n===void 0&&(n={x:0,y:0}),{top:t.top-e.height-n.y,right:t.right-e.width+n.x,bottom:t.bottom-e.height+n.y,left:t.left-e.width-n.x}}function i9(t){return[fn,nr,tr,hn].some(function(e){return t[e]>=0})}function Kie(t){var e=t.state,n=t.name,r=e.rects.reference,i=e.rects.popper,o=e.modifiersData.preventOverflow,s=_u(e,{elementContext:"reference"}),a=_u(e,{altBoundary:!0}),l=r9(s,r),c=r9(a,i,o),u=i9(l),d=i9(c);e.modifiersData[n]={referenceClippingOffsets:l,popperEscapeOffsets:c,isReferenceHidden:u,hasPopperEscaped:d},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":d})}const Uie={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:Kie};function qie(t,e,n){var r=Jr(t),i=[hn,fn].indexOf(r)>=0?-1:1,o=typeof n=="function"?n(Object.assign({},e,{placement:t})):n,s=o[0],a=o[1];return s=s||0,a=(a||0)*i,[hn,nr].indexOf(r)>=0?{x:a,y:s}:{x:s,y:a}}function Jie(t){var e=t.state,n=t.options,r=t.name,i=n.offset,o=i===void 0?[0,0]:i,s=kA.reduce(function(u,d){return u[d]=qie(d,e.rects,o),u},{}),a=s[e.placement],l=a.x,c=a.y;e.modifiersData.popperOffsets!=null&&(e.modifiersData.popperOffsets.x+=l,e.modifiersData.popperOffsets.y+=c),e.modifiersData[r]=s}const Qie={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:Jie};function _ie(t){var e=t.state,n=t.name;e.modifiersData[n]=VA({reference:e.rects.reference,element:e.rects.popper,strategy:"absolute",placement:e.placement})}const $ie={name:"popperOffsets",enabled:!0,phase:"read",fn:_ie,data:{}};function eoe(t){return t==="x"?"y":"x"}function toe(t){var e=t.state,n=t.options,r=t.name,i=n.mainAxis,o=i===void 0?!0:i,s=n.altAxis,a=s===void 0?!1:s,l=n.boundary,c=n.rootBoundary,u=n.altBoundary,d=n.padding,f=n.tether,h=f===void 0?!0:f,p=n.tetherOffset,m=p===void 0?0:p,v=_u(e,{boundary:l,rootBoundary:c,padding:d,altBoundary:u}),g=Jr(e.placement),b=Tl(e.placement),y=!b,x=US(g),k=eoe(x),P=e.modifiersData.popperOffsets,O=e.rects.reference,z=e.rects.popper,I=typeof m=="function"?m(Object.assign({},e.rects,{placement:e.placement})):m,E=typeof I=="number"?{mainAxis:I,altAxis:I}:Object.assign({mainAxis:0,altAxis:0},I),X=e.modifiersData.offset?e.modifiersData.offset[e.placement]:null,Y={x:0,y:0};if(!!P){if(o){var Q,ae=x==="y"?fn:hn,oe=x==="y"?tr:nr,D=x==="y"?"height":"width",ee=P[x],L=ee+v[ae],H=ee-v[oe],q=h?-z[D]/2:0,le=b===Pl?O[D]:z[D],ue=b===Pl?-z[D]:-O[D],re=e.elements.arrow,Te=h&&re?KS(re):{width:0,height:0},Ve=e.modifiersData["arrow#persistent"]?e.modifiersData["arrow#persistent"].padding:OA(),He=Ve[ae],Ye=Ve[oe],rt=tu(0,O[D],Te[D]),Xn=y?O[D]/2-q-rt-He-E.mainAxis:le-rt-He-E.mainAxis,wr=y?-O[D]/2+q+rt+Ye+E.mainAxis:ue+rt+Ye+E.mainAxis,Mi=e.elements.arrow&&kd(e.elements.arrow),Ke=Mi?x==="y"?Mi.clientTop||0:Mi.clientLeft||0:0,Pr=(Q=X==null?void 0:X[x])!=null?Q:0,_s=ee+Xn-Pr-Ke,Dl=ee+wr-Pr,wd=tu(h?Jp(L,_s):L,ee,h?Ps(H,Dl):H);P[x]=wd,Y[x]=wd-ee}if(a){var Pd,yg=x==="x"?fn:hn,xg=x==="x"?tr:nr,Wn=P[k],Ai=k==="y"?"height":"width",Wo=Wn+v[yg],Rn=Wn-v[xg],$s=[fn,hn].indexOf(g)!==-1,Gl=(Pd=X==null?void 0:X[k])!=null?Pd:0,Od=$s?Wo:Wn-O[Ai]-z[Ai]-Gl+E.altAxis,Cd=$s?Wn+O[Ai]+z[Ai]-Gl-E.altAxis:Rn,Ro=h&&$s?Oie(Od,Wn,Cd):tu(h?Od:Wo,Wn,h?Cd:Rn);P[k]=Ro,Y[k]=Ro-Wn}e.modifiersData[r]=Y}}const noe={name:"preventOverflow",enabled:!0,phase:"main",fn:toe,requiresIfExists:["offset"]};function roe(t){return{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}}function ioe(t){return t===ir(t)||!Qn(t)?qS(t):roe(t)}function ooe(t){var e=t.getBoundingClientRect(),n=Ol(e.width)/t.offsetWidth||1,r=Ol(e.height)/t.offsetHeight||1;return n!==1||r!==1}function soe(t,e,n){n===void 0&&(n=!1);var r=Qn(e),i=Qn(e)&&ooe(e),o=Xo(e),s=Cl(t,i,n),a={scrollLeft:0,scrollTop:0},l={x:0,y:0};return(r||!r&&!n)&&((ei(e)!=="body"||QS(o))&&(a=ioe(e)),Qn(e)?(l=Cl(e,!0),l.x+=e.clientLeft,l.y+=e.clientTop):o&&(l.x=JS(o))),{x:s.left+a.scrollLeft-l.x,y:s.top+a.scrollTop-l.y,width:s.width,height:s.height}}function aoe(t){var e=new Map,n=new Set,r=[];t.forEach(function(o){e.set(o.name,o)});function i(o){n.add(o.name);var s=[].concat(o.requires||[],o.requiresIfExists||[]);s.forEach(function(a){if(!n.has(a)){var l=e.get(a);l&&i(l)}}),r.push(o)}return t.forEach(function(o){n.has(o.name)||i(o)}),r}function loe(t){var e=aoe(t);return yie.reduce(function(n,r){return n.concat(e.filter(function(i){return i.phase===r}))},[])}function coe(t){var e;return function(){return e||(e=new Promise(function(n){Promise.resolve().then(function(){e=void 0,n(t())})})),e}}function uoe(t){var e=t.reduce(function(n,r){var i=n[r.name];return n[r.name]=i?Object.assign({},i,r,{options:Object.assign({},i.options,r.options),data:Object.assign({},i.data,r.data)}):r,n},{});return Object.keys(e).map(function(n){return e[n]})}var o9={placement:"bottom",modifiers:[],strategy:"absolute"};function s9(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return!e.some(function(r){return!(r&&typeof r.getBoundingClientRect=="function")})}function doe(t){t===void 0&&(t={});var e=t,n=e.defaultModifiers,r=n===void 0?[]:n,i=e.defaultOptions,o=i===void 0?o9:i;return function(a,l,c){c===void 0&&(c=o);var u={placement:"bottom",orderedModifiers:[],options:Object.assign({},o9,o),modifiersData:{},elements:{reference:a,popper:l},attributes:{},styles:{}},d=[],f=!1,h={state:u,setOptions:function(g){var b=typeof g=="function"?g(u.options):g;m(),u.options=Object.assign({},o,u.options,b),u.scrollParents={reference:Xs(a)?nu(a):a.contextElement?nu(a.contextElement):[],popper:nu(l)};var y=loe(uoe([].concat(r,u.options.modifiers)));return u.orderedModifiers=y.filter(function(x){return x.enabled}),p(),h.update()},forceUpdate:function(){if(!f){var g=u.elements,b=g.reference,y=g.popper;if(!!s9(b,y)){u.rects={reference:soe(b,kd(y),u.options.strategy==="fixed"),popper:KS(y)},u.reset=!1,u.placement=u.options.placement,u.orderedModifiers.forEach(function(E){return u.modifiersData[E.name]=Object.assign({},E.data)});for(var x=0;x<u.orderedModifiers.length;x++){if(u.reset===!0){u.reset=!1,x=-1;continue}var k=u.orderedModifiers[x],P=k.fn,O=k.options,z=O===void 0?{}:O,I=k.name;typeof P=="function"&&(u=P({state:u,options:z,name:I,instance:h})||u)}}}},update:coe(function(){return new Promise(function(v){h.forceUpdate(),v(u)})}),destroy:function(){m(),f=!0}};if(!s9(a,l))return h;h.setOptions(c).then(function(v){!f&&c.onFirstUpdate&&c.onFirstUpdate(v)});function p(){u.orderedModifiers.forEach(function(v){var g=v.name,b=v.options,y=b===void 0?{}:b,x=v.effect;if(typeof x=="function"){var k=x({state:u,name:g,instance:h,options:y}),P=function(){};d.push(k||P)}})}function m(){d.forEach(function(v){return v()}),d=[]}return h}}var foe=[Lie,$ie,Mie,kie,Qie,Yie,noe,Vie,Uie],hoe=doe({defaultModifiers:foe}),aa=(t,e)=>({var:t,varRef:e?`var(${t}, ${e})`:`var(${t})`}),Et={arrowShadowColor:aa("--popper-arrow-shadow-color"),arrowSize:aa("--popper-arrow-size","8px"),arrowSizeHalf:aa("--popper-arrow-size-half"),arrowBg:aa("--popper-arrow-bg"),transformOrigin:aa("--popper-transform-origin"),arrowOffset:aa("--popper-arrow-offset")};function poe(t){if(t.includes("top"))return"1px 1px 1px 0 var(--popper-arrow-shadow-color)";if(t.includes("bottom"))return"-1px -1px 1px 0 var(--popper-arrow-shadow-color)";if(t.includes("right"))return"-1px 1px 1px 0 var(--popper-arrow-shadow-color)";if(t.includes("left"))return"1px -1px 1px 0 var(--popper-arrow-shadow-color)"}var moe={top:"bottom center","top-start":"bottom left","top-end":"bottom right",bottom:"top center","bottom-start":"top left","bottom-end":"top right",left:"right center","left-start":"right top","left-end":"right bottom",right:"left center","right-start":"left top","right-end":"left bottom"},goe=t=>moe[t],a9={scroll:!0,resize:!0};function boe(t){let e;return typeof t=="object"?e={enabled:!0,options:{...a9,...t}}:e={enabled:t,options:a9},e}var voe={name:"matchWidth",enabled:!0,phase:"beforeWrite",requires:["computeStyles"],fn:({state:t})=>{t.styles.popper.width=`${t.rects.reference.width}px`},effect:({state:t})=>()=>{const e=t.elements.reference;t.elements.popper.style.width=`${e.offsetWidth}px`}},yoe={name:"transformOrigin",enabled:!0,phase:"write",fn:({state:t})=>{l9(t)},effect:({state:t})=>()=>{l9(t)}},l9=t=>{t.elements.popper.style.setProperty(Et.transformOrigin.var,goe(t.placement))},xoe={name:"positionArrow",enabled:!0,phase:"afterWrite",fn:({state:t})=>{Soe(t)}},Soe=t=>{var e;if(!t.placement)return;const n=koe(t.placement);if(((e=t.elements)==null?void 0:e.arrow)&&n){Object.assign(t.elements.arrow.style,{[n.property]:n.value,width:Et.arrowSize.varRef,height:Et.arrowSize.varRef,zIndex:-1});const r={[Et.arrowSizeHalf.var]:`calc(${Et.arrowSize.varRef} / 2)`,[Et.arrowOffset.var]:`calc(${Et.arrowSizeHalf.varRef} * -1)`};for(const i in r)t.elements.arrow.style.setProperty(i,r[i])}},koe=t=>{if(t.startsWith("top"))return{property:"bottom",value:Et.arrowOffset.varRef};if(t.startsWith("bottom"))return{property:"top",value:Et.arrowOffset.varRef};if(t.startsWith("left"))return{property:"right",value:Et.arrowOffset.varRef};if(t.startsWith("right"))return{property:"left",value:Et.arrowOffset.varRef}},woe={name:"innerArrow",enabled:!0,phase:"main",requires:["arrow"],fn:({state:t})=>{c9(t)},effect:({state:t})=>()=>{c9(t)}},c9=t=>{if(!t.elements.arrow)return;const e=t.elements.arrow.querySelector("[data-popper-arrow-inner]");!e||Object.assign(e.style,{transform:"rotate(45deg)",background:Et.arrowBg.varRef,top:0,left:0,width:"100%",height:"100%",position:"absolute",zIndex:"inherit",boxShadow:poe(t.placement)})},Poe={"start-start":{ltr:"left-start",rtl:"right-start"},"start-end":{ltr:"left-end",rtl:"right-end"},"end-start":{ltr:"right-start",rtl:"left-start"},"end-end":{ltr:"right-end",rtl:"left-end"},start:{ltr:"left",rtl:"right"},end:{ltr:"right",rtl:"left"}},Ooe={"auto-start":"auto-end","auto-end":"auto-start","top-start":"top-end","top-end":"top-start","bottom-start":"bottom-end","bottom-end":"bottom-start"};function Coe(t,e="ltr"){var i;var n;const r=((n=Poe[t])==null?void 0:n[e])||t;return e==="ltr"?r:(i=Ooe[t])!=null?i:r}function Toe(t={}){const{enabled:e=!0,modifiers:n,placement:r="bottom",strategy:i="absolute",arrowPadding:o=8,eventListeners:s=!0,offset:a,gutter:l=8,flip:c=!0,boundary:u="clippingParents",preventOverflow:d=!0,matchWidth:f,direction:h="ltr"}=t,p=S.exports.useRef(null),m=S.exports.useRef(null),v=S.exports.useRef(null),g=Coe(r,h),b=S.exports.useRef(()=>{}),y=S.exports.useCallback(()=>{var E;!e||!p.current||!m.current||((E=b.current)==null||E.call(b),v.current=hoe(p.current,m.current,{placement:g,modifiers:[woe,xoe,yoe,{...voe,enabled:!!f},{name:"eventListeners",...boe(s)},{name:"arrow",options:{padding:o}},{name:"offset",options:{offset:a!=null?a:[0,l]}},{name:"flip",enabled:!!c,options:{padding:8}},{name:"preventOverflow",enabled:!!d,options:{boundary:u}},...n!=null?n:[]],strategy:i}),v.current.forceUpdate(),b.current=v.current.destroy)},[g,e,n,f,s,o,a,l,c,d,u,i]);S.exports.useEffect(()=>()=>{var E;!p.current&&!m.current&&((E=v.current)==null||E.destroy(),v.current=null)},[]);const x=S.exports.useCallback(E=>{p.current=E,y()},[y]),k=S.exports.useCallback((E={},X=null)=>({...E,ref:Co(x,X)}),[x]),P=S.exports.useCallback(E=>{m.current=E,y()},[y]),O=S.exports.useCallback((E={},X=null)=>({...E,ref:Co(P,X),style:{...E.style,position:i,minWidth:f?void 0:"max-content",inset:"0 auto auto 0"}}),[i,P,f]),z=S.exports.useCallback((E={},X=null)=>{const{size:Y,shadowColor:Q,bg:ae,style:oe,...D}=E;return{...D,ref:X,"data-popper-arrow":"",style:zoe(E)}},[]),I=S.exports.useCallback((E={},X=null)=>({...E,ref:X,"data-popper-arrow-inner":""}),[]);return{update(){var E;(E=v.current)==null||E.update()},forceUpdate(){var E;(E=v.current)==null||E.forceUpdate()},transformOrigin:Et.transformOrigin.varRef,referenceRef:x,popperRef:P,getPopperProps:O,getArrowProps:z,getArrowInnerProps:I,getReferenceProps:k}}function zoe(t){const{size:e,shadowColor:n,bg:r,style:i}=t,o={...i,position:"absolute"};return e&&(o["--popper-arrow-size"]=e),n&&(o["--popper-arrow-shadow-color"]=n),r&&(o["--popper-arrow-bg"]=r),o}function Voe(t={}){const{onClose:e,onOpen:n,isOpen:r,id:i}=t,o=Xp(n),s=Xp(e),[a,l]=S.exports.useState(t.defaultIsOpen||!1),c=r!==void 0?r:a,u=r!==void 0,d=S.exports.useId(),f=i!=null?i:`disclosure-${d}`,h=S.exports.useCallback(()=>{u||l(!1),s==null||s()},[u,s]),p=S.exports.useCallback(()=>{u||l(!0),o==null||o()},[u,o]),m=S.exports.useCallback(()=>{c?h():p()},[c,p,h]);function v(b={}){return{...b,"aria-expanded":c,"aria-controls":f,onClick(y){var x;(x=b.onClick)==null||x.call(b,y),m()}}}function g(b={}){return{...b,hidden:!c,id:f}}return{isOpen:c,onOpen:p,onClose:h,onToggle:m,isControlled:u,getButtonProps:v,getDisclosureProps:g}}var[Eoe,Noe]=Zn({strict:!1,name:"PortalManagerContext"});function EA(t){const{children:e,zIndex:n}=t;return N(Eoe,{value:{zIndex:n},children:e})}EA.displayName="PortalManager";var[NA,Ioe]=Zn({strict:!1,name:"PortalContext"}),_S="chakra-portal",Moe=".chakra-portal",Aoe=t=>N("div",{className:"chakra-portal-zIndex",style:{position:"absolute",zIndex:t.zIndex,top:0,left:0,right:0},children:t.children}),Loe=t=>{const{appendToParentPortal:e,children:n}=t,[r,i]=S.exports.useState(null),o=S.exports.useRef(null),[,s]=S.exports.useState({});S.exports.useEffect(()=>s({}),[]);const a=Ioe(),l=Noe();Ep(()=>{if(!r)return;const u=r.ownerDocument,d=e&&a!=null?a:u.body;if(!d)return;o.current=u.createElement("div"),o.current.className=_S,d.appendChild(o.current),s({});const f=o.current;return()=>{d.contains(f)&&d.removeChild(f)}},[r]);const c=l!=null&&l.zIndex?N(Aoe,{zIndex:l==null?void 0:l.zIndex,children:n}):n;return o.current?rm.exports.createPortal(N(NA,{value:o.current,children:c}),o.current):N("span",{ref:u=>{u&&i(u)}})},Zoe=t=>{const{children:e,containerRef:n,appendToParentPortal:r}=t,i=n.current,o=i!=null?i:typeof window<"u"?document.body:void 0,s=S.exports.useMemo(()=>{const l=i==null?void 0:i.ownerDocument.createElement("div");return l&&(l.className=_S),l},[i]),[,a]=S.exports.useState({});return Ep(()=>a({}),[]),Ep(()=>{if(!(!s||!o))return o.appendChild(s),()=>{o.removeChild(s)}},[s,o]),o&&s?rm.exports.createPortal(N(NA,{value:r?s:null,children:e}),s):null};function Us(t){const{containerRef:e,...n}=t;return e?N(Zoe,{containerRef:e,...n}):N(Loe,{...n})}Us.defaultProps={appendToParentPortal:!0};Us.className=_S;Us.selector=Moe;Us.displayName="Portal";var Xoe=function(t){if(typeof document>"u")return null;var e=Array.isArray(t)?t[0]:t;return e.ownerDocument.body},la=new WeakMap,Xf=new WeakMap,Wf={},cb=0,IA=function(t){return t&&(t.host||IA(t.parentNode))},Woe=function(t,e){return e.map(function(n){if(t.contains(n))return n;var r=IA(n);return r&&t.contains(r)?r:(console.error("aria-hidden",n,"in not contained inside",t,". Doing nothing"),null)}).filter(function(n){return Boolean(n)})},Roe=function(t,e,n,r){var i=Woe(e,Array.isArray(t)?t:[t]);Wf[n]||(Wf[n]=new WeakMap);var o=Wf[n],s=[],a=new Set,l=new Set(i),c=function(d){!d||a.has(d)||(a.add(d),c(d.parentNode))};i.forEach(c);var u=function(d){!d||l.has(d)||Array.prototype.forEach.call(d.children,function(f){if(a.has(f))u(f);else{var h=f.getAttribute(r),p=h!==null&&h!=="false",m=(la.get(f)||0)+1,v=(o.get(f)||0)+1;la.set(f,m),o.set(f,v),s.push(f),m===1&&p&&Xf.set(f,!0),v===1&&f.setAttribute(n,"true"),p||f.setAttribute(r,"true")}})};return u(e),a.clear(),cb++,function(){s.forEach(function(d){var f=la.get(d)-1,h=o.get(d)-1;la.set(d,f),o.set(d,h),f||(Xf.has(d)||d.removeAttribute(r),Xf.delete(d)),h||d.removeAttribute(n)}),cb--,cb||(la=new WeakMap,la=new WeakMap,Xf=new WeakMap,Wf={})}},Foe=function(t,e,n){n===void 0&&(n="data-aria-hidden");var r=Array.from(Array.isArray(t)?t:[t]),i=e||Xoe(t);return i?(r.push.apply(r,Array.from(i.querySelectorAll("[aria-live]"))),Roe(r,i,n,"aria-hidden")):function(){return null}},r1="data-focus-lock",MA="data-focus-lock-disabled",Hoe="data-no-focus-lock",Doe="data-autofocus-inside",Goe="data-no-autofocus";function joe(t,e){return typeof t=="function"?t(e):t&&(t.current=e),t}function Boe(t,e){var n=S.exports.useState(function(){return{value:t,callback:e,facade:{get current(){return n.value},set current(r){var i=n.value;i!==r&&(n.value=r,n.callback(r,i))}}}})[0];return n.callback=e,n.facade}function AA(t,e){return Boe(e||null,function(n){return t.forEach(function(r){return joe(r,n)})})}var ub={width:"1px",height:"0px",padding:0,overflow:"hidden",position:"fixed",top:"1px",left:"1px"};function LA(t){return t}function ZA(t,e){e===void 0&&(e=LA);var n=[],r=!1,i={read:function(){if(r)throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");return n.length?n[n.length-1]:t},useMedium:function(o){var s=e(o,r);return n.push(s),function(){n=n.filter(function(a){return a!==s})}},assignSyncMedium:function(o){for(r=!0;n.length;){var s=n;n=[],s.forEach(o)}n={push:function(a){return o(a)},filter:function(){return n}}},assignMedium:function(o){r=!0;var s=[];if(n.length){var a=n;n=[],a.forEach(o),s=n}var l=function(){var u=s;s=[],u.forEach(o)},c=function(){return Promise.resolve().then(l)};c(),n={push:function(u){s.push(u),c()},filter:function(u){return s=s.filter(u),n}}}};return i}function $S(t,e){return e===void 0&&(e=LA),ZA(t,e)}function XA(t){t===void 0&&(t={});var e=ZA(null);return e.options=Wr({async:!0,ssr:!1},t),e}var WA=function(t){var e=t.sideCar,n=BM(t,["sideCar"]);if(!e)throw new Error("Sidecar: please provide `sideCar` property to import the right car");var r=e.read();if(!r)throw new Error("Sidecar medium not found");return N(r,{...Wr({},n)})};WA.isSideCarExport=!0;function Yoe(t,e){return t.useMedium(e),WA}var RA=$S({},function(t){var e=t.target,n=t.currentTarget;return{target:e,currentTarget:n}}),FA=$S(),Koe=$S(),Uoe=XA({async:!0}),qoe=[],e2=S.exports.forwardRef(function(e,n){var r,i=S.exports.useState(),o=i[0],s=i[1],a=S.exports.useRef(),l=S.exports.useRef(!1),c=S.exports.useRef(null),u=e.children,d=e.disabled,f=e.noFocusGuards,h=e.persistentFocus,p=e.crossFrame,m=e.autoFocus;e.allowTextSelection;var v=e.group,g=e.className,b=e.whiteList,y=e.hasPositiveIndices,x=e.shards,k=x===void 0?qoe:x,P=e.as,O=P===void 0?"div":P,z=e.lockProps,I=z===void 0?{}:z,E=e.sideCar,X=e.returnFocus,Y=e.focusOptions,Q=e.onActivation,ae=e.onDeactivation,oe=S.exports.useState({}),D=oe[0],ee=S.exports.useCallback(function(){c.current=c.current||document&&document.activeElement,a.current&&Q&&Q(a.current),l.current=!0},[Q]),L=S.exports.useCallback(function(){l.current=!1,ae&&ae(a.current)},[ae]);S.exports.useEffect(function(){d||(c.current=null)},[]);var H=S.exports.useCallback(function(Ye){var rt=c.current;if(rt&&rt.focus){var Xn=typeof X=="function"?X(rt):X;if(Xn){var wr=typeof Xn=="object"?Xn:void 0;c.current=null,Ye?Promise.resolve().then(function(){return rt.focus(wr)}):rt.focus(wr)}}},[X]),q=S.exports.useCallback(function(Ye){l.current&&RA.useMedium(Ye)},[]),le=FA.useMedium,ue=S.exports.useCallback(function(Ye){a.current!==Ye&&(a.current=Ye,s(Ye))},[]),re=bl((r={},r[MA]=d&&"disabled",r[r1]=v,r),I),Te=f!==!0,Ve=Te&&f!=="tail",He=AA([n,ue]);return tt(_r,{children:[Te&&[N("div",{"data-focus-guard":!0,tabIndex:d?-1:0,style:ub},"guard-first"),y?N("div",{"data-focus-guard":!0,tabIndex:d?-1:1,style:ub},"guard-nearest"):null],!d&&N(E,{id:D,sideCar:Uoe,observed:o,disabled:d,persistentFocus:h,crossFrame:p,autoFocus:m,whiteList:b,shards:k,onActivation:ee,onDeactivation:L,returnFocus:H,focusOptions:Y}),N(O,{ref:He,...re,className:g,onBlur:le,onFocus:q,children:u}),Ve&&N("div",{"data-focus-guard":!0,tabIndex:d?-1:0,style:ub})]})});e2.propTypes={};e2.defaultProps={children:void 0,disabled:!1,returnFocus:!1,focusOptions:void 0,noFocusGuards:!1,autoFocus:!0,persistentFocus:!1,crossFrame:!0,hasPositiveIndices:void 0,allowTextSelection:void 0,group:void 0,className:void 0,whiteList:void 0,shards:void 0,as:"div",lockProps:{},onActivation:void 0,onDeactivation:void 0};const HA=e2;function i1(t,e){return i1=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(r,i){return r.__proto__=i,r},i1(t,e)}function Joe(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,i1(t,e)}function Qoe(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function _oe(t,e){function n(r){return r.displayName||r.name||"Component"}return function(i){var o=[],s;function a(){s=t(o.map(function(c){return c.props})),e(s)}var l=function(c){Joe(u,c);function u(){return c.apply(this,arguments)||this}u.peek=function(){return s};var d=u.prototype;return d.componentDidMount=function(){o.push(this),a()},d.componentDidUpdate=function(){a()},d.componentWillUnmount=function(){var h=o.indexOf(this);o.splice(h,1),a()},d.render=function(){return N(i,{...this.props})},u}(S.exports.PureComponent);return Qoe(l,"displayName","SideEffect("+n(i)+")"),l}}var ri=function(t){for(var e=Array(t.length),n=0;n<t.length;++n)e[n]=t[n];return e},o1=function(t){return Array.isArray(t)?t:[t]},$oe=function(t){if(t.nodeType!==Node.ELEMENT_NODE)return!1;var e=window.getComputedStyle(t,null);return!e||!e.getPropertyValue?!1:e.getPropertyValue("display")==="none"||e.getPropertyValue("visibility")==="hidden"},DA=function(t){return t.parentNode&&t.parentNode.nodeType===Node.DOCUMENT_FRAGMENT_NODE?t.parentNode.host:t.parentNode},GA=function(t){return t===document||t&&t.nodeType===Node.DOCUMENT_NODE},ese=function(t,e){return!t||GA(t)||!$oe(t)&&e(DA(t))},jA=function(t,e){var n=t.get(e);if(n!==void 0)return n;var r=ese(e,jA.bind(void 0,t));return t.set(e,r),r},tse=function(t,e){return t&&!GA(t)?ise(t)?e(DA(t)):!1:!0},BA=function(t,e){var n=t.get(e);if(n!==void 0)return n;var r=tse(e,BA.bind(void 0,t));return t.set(e,r),r},YA=function(t){return t.dataset},nse=function(t){return t.tagName==="BUTTON"},KA=function(t){return t.tagName==="INPUT"},UA=function(t){return KA(t)&&t.type==="radio"},rse=function(t){return!((KA(t)||nse(t))&&(t.type==="hidden"||t.disabled))},ise=function(t){var e=t.getAttribute(Goe);return![!0,"true",""].includes(e)},t2=function(t){var e;return Boolean(t&&((e=YA(t))===null||e===void 0?void 0:e.focusGuard))},Qp=function(t){return!t2(t)},ose=function(t){return Boolean(t)},sse=function(t,e){var n=t.tabIndex-e.tabIndex,r=t.index-e.index;if(n){if(!t.tabIndex)return 1;if(!e.tabIndex)return-1}return n||r},qA=function(t,e,n){return ri(t).map(function(r,i){return{node:r,index:i,tabIndex:n&&r.tabIndex===-1?(r.dataset||{}).focusGuard?0:-1:r.tabIndex}}).filter(function(r){return!e||r.tabIndex>=0}).sort(sse)},ase=["button:enabled","select:enabled","textarea:enabled","input:enabled","a[href]","area[href]","summary","iframe","object","embed","audio[controls]","video[controls]","[tabindex]","[contenteditable]","[autofocus]"],n2=ase.join(","),lse="".concat(n2,", [data-focus-guard]"),JA=function(t,e){var n;return ri(((n=t.shadowRoot)===null||n===void 0?void 0:n.children)||t.children).reduce(function(r,i){return r.concat(i.matches(e?lse:n2)?[i]:[],JA(i))},[])},r2=function(t,e){return t.reduce(function(n,r){return n.concat(JA(r,e),r.parentNode?ri(r.parentNode.querySelectorAll(n2)).filter(function(i){return i===r}):[])},[])},cse=function(t){var e=t.querySelectorAll("[".concat(Doe,"]"));return ri(e).map(function(n){return r2([n])}).reduce(function(n,r){return n.concat(r)},[])},i2=function(t,e){return ri(t).filter(function(n){return jA(e,n)}).filter(function(n){return rse(n)})},u9=function(t,e){return e===void 0&&(e=new Map),ri(t).filter(function(n){return BA(e,n)})},s1=function(t,e,n){return qA(i2(r2(t,n),e),!0,n)},d9=function(t,e){return qA(i2(r2(t),e),!1)},use=function(t,e){return i2(cse(t),e)},$u=function(t,e){return t.shadowRoot?$u(t.shadowRoot,e):Object.getPrototypeOf(t).contains!==void 0&&Object.getPrototypeOf(t).contains.call(t,e)?!0:ri(t.children).some(function(n){return $u(n,e)})},dse=function(t){for(var e=new Set,n=t.length,r=0;r<n;r+=1)for(var i=r+1;i<n;i+=1){var o=t[r].compareDocumentPosition(t[i]);(o&Node.DOCUMENT_POSITION_CONTAINED_BY)>0&&e.add(i),(o&Node.DOCUMENT_POSITION_CONTAINS)>0&&e.add(r)}return t.filter(function(s,a){return!e.has(a)})},QA=function(t){return t.parentNode?QA(t.parentNode):t},o2=function(t){var e=o1(t);return e.filter(Boolean).reduce(function(n,r){var i=r.getAttribute(r1);return n.push.apply(n,i?dse(ri(QA(r).querySelectorAll("[".concat(r1,'="').concat(i,'"]:not([').concat(MA,'="disabled"])')))):[r]),n},[])},_A=function(t){return t.activeElement?t.activeElement.shadowRoot?_A(t.activeElement.shadowRoot):t.activeElement:void 0},s2=function(){return document.activeElement?document.activeElement.shadowRoot?_A(document.activeElement.shadowRoot):document.activeElement:void 0},fse=function(t){return t===document.activeElement},hse=function(t){return Boolean(ri(t.querySelectorAll("iframe")).some(function(e){return fse(e)}))},$A=function(t){var e=document&&s2();return!e||e.dataset&&e.dataset.focusGuard?!1:o2(t).some(function(n){return $u(n,e)||hse(n)})},pse=function(){var t=document&&s2();return t?ri(document.querySelectorAll("[".concat(Hoe,"]"))).some(function(e){return $u(e,t)}):!1},mse=function(t,e){return e.filter(UA).filter(function(n){return n.name===t.name}).filter(function(n){return n.checked})[0]||t},a2=function(t,e){return UA(t)&&t.name?mse(t,e):t},gse=function(t){var e=new Set;return t.forEach(function(n){return e.add(a2(n,t))}),t.filter(function(n){return e.has(n)})},f9=function(t){return t[0]&&t.length>1?a2(t[0],t):t[0]},h9=function(t,e){return t.length>1?t.indexOf(a2(t[e],t)):e},eL="NEW_FOCUS",bse=function(t,e,n,r){var i=t.length,o=t[0],s=t[i-1],a=t2(n);if(!(n&&t.indexOf(n)>=0)){var l=n!==void 0?e.indexOf(n):-1,c=r?e.indexOf(r):l,u=r?t.indexOf(r):-1,d=l-c,f=e.indexOf(o),h=e.indexOf(s),p=gse(e),m=n!==void 0?p.indexOf(n):-1,v=m-(r?p.indexOf(r):l),g=h9(t,0),b=h9(t,i-1);if(l===-1||u===-1)return eL;if(!d&&u>=0)return u;if(l<=f&&a&&Math.abs(d)>1)return b;if(l>=h&&a&&Math.abs(d)>1)return g;if(d&&Math.abs(v)>1)return u;if(l<=f)return b;if(l>h)return g;if(d)return Math.abs(d)>1?u:(i+u+d)%i}},vse=function(t){return function(e){var n,r=(n=YA(e))===null||n===void 0?void 0:n.autofocus;return e.autofocus||r!==void 0&&r!=="false"||t.indexOf(e)>=0}},yse=function(t,e,n){var r=t.map(function(o){var s=o.node;return s}),i=u9(r.filter(vse(n)));return i&&i.length?f9(i):f9(u9(e))},a1=function(t,e){return e===void 0&&(e=[]),e.push(t),t.parentNode&&a1(t.parentNode.host||t.parentNode,e),e},db=function(t,e){for(var n=a1(t),r=a1(e),i=0;i<n.length;i+=1){var o=n[i];if(r.indexOf(o)>=0)return o}return!1},tL=function(t,e,n){var r=o1(t),i=o1(e),o=r[0],s=!1;return i.filter(Boolean).forEach(function(a){s=db(s||a,a)||s,n.filter(Boolean).forEach(function(l){var c=db(o,l);c&&(!s||$u(c,s)?s=c:s=db(c,s))})}),s},xse=function(t,e){return t.reduce(function(n,r){return n.concat(use(r,e))},[])},Sse=function(t,e){var n=new Map;return e.forEach(function(r){return n.set(r.node,r)}),t.map(function(r){return n.get(r)}).filter(ose)},kse=function(t,e){var n=document&&s2(),r=o2(t).filter(Qp),i=tL(n||t,t,r),o=new Map,s=d9(r,o),a=s1(r,o).filter(function(h){var p=h.node;return Qp(p)});if(!(!a[0]&&(a=s,!a[0]))){var l=d9([i],o).map(function(h){var p=h.node;return p}),c=Sse(l,a),u=c.map(function(h){var p=h.node;return p}),d=bse(u,l,n,e);if(d===eL){var f=yse(s,u,xse(r,o));if(f)return{node:f};console.warn("focus-lock: cannot find any node to move focus into");return}return d===void 0?d:c[d]}},wse=function(t){var e=o2(t).filter(Qp),n=tL(t,t,e),r=new Map,i=s1([n],r,!0),o=s1(e,r).filter(function(s){var a=s.node;return Qp(a)}).map(function(s){var a=s.node;return a});return i.map(function(s){var a=s.node,l=s.index;return{node:a,index:l,lockItem:o.indexOf(a)>=0,guard:t2(a)}})},Pse=function(t,e){"focus"in t&&t.focus(e),"contentWindow"in t&&t.contentWindow&&t.contentWindow.focus()},fb=0,hb=!1,Ose=function(t,e,n){n===void 0&&(n={});var r=kse(t,e);if(!hb&&r){if(fb>2){console.error("FocusLock: focus-fighting detected. Only one focus management system could be active. See https://github.com/theKashey/focus-lock/#focus-fighting"),hb=!0,setTimeout(function(){hb=!1},1);return}fb++,Pse(r.node,n.focusOptions),fb--}};const nL=Ose;function rL(t){var e=window,n=e.setImmediate;typeof n<"u"?n(t):setTimeout(t,1)}var Cse=function(){return document&&document.activeElement===document.body},Tse=function(){return Cse()||pse()},tl=null,Ma=null,nl=null,ed=!1,zse=function(){return!0},Vse=function(e){return(tl.whiteList||zse)(e)},Ese=function(e,n){nl={observerNode:e,portaledElement:n}},Nse=function(e){return nl&&nl.portaledElement===e};function p9(t,e,n,r){var i=null,o=t;do{var s=r[o];if(s.guard)s.node.dataset.focusAutoGuard&&(i=s);else if(s.lockItem){if(o!==t)return;i=null}else break}while((o+=n)!==e);i&&(i.node.tabIndex=0)}var Ise=function(e){return e&&"current"in e?e.current:e},Mse=function(e){return e?Boolean(ed):ed==="meanwhile"},Ase=function t(e,n,r){return n&&(n.host===e&&(!n.activeElement||r.contains(n.activeElement))||n.parentNode&&t(e,n.parentNode,r))},Lse=function(e,n){return n.some(function(r){return Ase(e,r,r)})},_p=function(){var e=!1;if(tl){var n=tl,r=n.observed,i=n.persistentFocus,o=n.autoFocus,s=n.shards,a=n.crossFrame,l=n.focusOptions,c=r||nl&&nl.portaledElement,u=document&&document.activeElement;if(c){var d=[c].concat(s.map(Ise).filter(Boolean));if((!u||Vse(u))&&(i||Mse(a)||!Tse()||!Ma&&o)&&(c&&!($A(d)||u&&Lse(u,d)||Nse(u))&&(document&&!Ma&&u&&!o?(u.blur&&u.blur(),document.body.focus()):(e=nL(d,Ma,{focusOptions:l}),nl={})),ed=!1,Ma=document&&document.activeElement),document){var f=document&&document.activeElement,h=wse(d),p=h.map(function(m){var v=m.node;return v}).indexOf(f);p>-1&&(h.filter(function(m){var v=m.guard,g=m.node;return v&&g.dataset.focusAutoGuard}).forEach(function(m){var v=m.node;return v.removeAttribute("tabIndex")}),p9(p,h.length,1,h),p9(p,-1,-1,h))}}}return e},iL=function(e){_p()&&e&&(e.stopPropagation(),e.preventDefault())},l2=function(){return rL(_p)},Zse=function(e){var n=e.target,r=e.currentTarget;r.contains(n)||Ese(r,n)},Xse=function(){return null},oL=function(){ed="just",setTimeout(function(){ed="meanwhile"},0)},Wse=function(){document.addEventListener("focusin",iL),document.addEventListener("focusout",l2),window.addEventListener("blur",oL)},Rse=function(){document.removeEventListener("focusin",iL),document.removeEventListener("focusout",l2),window.removeEventListener("blur",oL)};function Fse(t){return t.filter(function(e){var n=e.disabled;return!n})}function Hse(t){var e=t.slice(-1)[0];e&&!tl&&Wse();var n=tl,r=n&&e&&e.id===n.id;tl=e,n&&!r&&(n.onDeactivation(),t.filter(function(i){var o=i.id;return o===n.id}).length||n.returnFocus(!e)),e?(Ma=null,(!r||n.observed!==e.observed)&&e.onActivation(),_p(),rL(_p)):(Rse(),Ma=null)}RA.assignSyncMedium(Zse);FA.assignMedium(l2);Koe.assignMedium(function(t){return t({moveFocusInside:nL,focusInside:$A})});const Dse=_oe(Fse,Hse)(Xse);var sL=S.exports.forwardRef(function(e,n){return N(HA,{sideCar:Dse,ref:n,...e})}),aL=HA.propTypes||{};aL.sideCar;BE(aL,["sideCar"]);sL.propTypes={};const Gse=sL;var lL=t=>{const{initialFocusRef:e,finalFocusRef:n,contentRef:r,restoreFocus:i,children:o,isDisabled:s,autoFocus:a,persistentFocus:l,lockFocusAcrossFrames:c}=t,u=S.exports.useCallback(()=>{e!=null&&e.current?e.current.focus():r!=null&&r.current&&aie(r.current).length===0&&requestAnimationFrame(()=>{var p;(p=r.current)==null||p.focus()})},[e,r]),d=S.exports.useCallback(()=>{var h;(h=n==null?void 0:n.current)==null||h.focus()},[n]);return N(Gse,{crossFrame:c,persistentFocus:l,autoFocus:a,disabled:s,onActivation:u,onDeactivation:d,returnFocus:i&&!n,children:o})};lL.displayName="FocusLock";var Ph="right-scroll-bar-position",Oh="width-before-scroll-bar",jse="with-scroll-bars-hidden",Bse="--removed-body-scroll-bar-size",cL=XA(),pb=function(){},vg=S.exports.forwardRef(function(t,e){var n=S.exports.useRef(null),r=S.exports.useState({onScrollCapture:pb,onWheelCapture:pb,onTouchMoveCapture:pb}),i=r[0],o=r[1],s=t.forwardProps,a=t.children,l=t.className,c=t.removeScrollBar,u=t.enabled,d=t.shards,f=t.sideCar,h=t.noIsolation,p=t.inert,m=t.allowPinchZoom,v=t.as,g=v===void 0?"div":v,b=BM(t,["forwardProps","children","className","removeScrollBar","enabled","shards","sideCar","noIsolation","inert","allowPinchZoom","as"]),y=f,x=AA([n,e]),k=Wr(Wr({},b),i);return tt(_r,{children:[u&&N(y,{sideCar:cL,removeScrollBar:c,shards:d,noIsolation:h,inert:p,setCallbacks:o,allowPinchZoom:!!m,lockRef:n}),s?S.exports.cloneElement(S.exports.Children.only(a),Wr(Wr({},k),{ref:x})):N(g,{...Wr({},k,{className:l,ref:x}),children:a})]})});vg.defaultProps={enabled:!0,removeScrollBar:!0,inert:!1};vg.classNames={fullWidth:Oh,zeroRight:Ph};var Yse=function(){if(typeof __webpack_nonce__<"u")return __webpack_nonce__};function Kse(){if(!document)return null;var t=document.createElement("style");t.type="text/css";var e=Yse();return e&&t.setAttribute("nonce",e),t}function Use(t,e){t.styleSheet?t.styleSheet.cssText=e:t.appendChild(document.createTextNode(e))}function qse(t){var e=document.head||document.getElementsByTagName("head")[0];e.appendChild(t)}var Jse=function(){var t=0,e=null;return{add:function(n){t==0&&(e=Kse())&&(Use(e,n),qse(e)),t++},remove:function(){t--,!t&&e&&(e.parentNode&&e.parentNode.removeChild(e),e=null)}}},Qse=function(){var t=Jse();return function(e,n){S.exports.useEffect(function(){return t.add(e),function(){t.remove()}},[e&&n])}},uL=function(){var t=Qse(),e=function(n){var r=n.styles,i=n.dynamic;return t(r,i),null};return e},_se={left:0,top:0,right:0,gap:0},mb=function(t){return parseInt(t||"",10)||0},$se=function(t){var e=window.getComputedStyle(document.body),n=e[t==="padding"?"paddingLeft":"marginLeft"],r=e[t==="padding"?"paddingTop":"marginTop"],i=e[t==="padding"?"paddingRight":"marginRight"];return[mb(n),mb(r),mb(i)]},eae=function(t){if(t===void 0&&(t="margin"),typeof window>"u")return _se;var e=$se(t),n=document.documentElement.clientWidth,r=window.innerWidth;return{left:e[0],top:e[1],right:e[2],gap:Math.max(0,r-n+e[2]-e[0])}},tae=uL(),nae=function(t,e,n,r){var i=t.left,o=t.top,s=t.right,a=t.gap;return n===void 0&&(n="margin"),`
  .`.concat(jse,` {
   overflow: hidden `).concat(r,`;
   padding-right: `).concat(a,"px ").concat(r,`;
  }
  body {
    overflow: hidden `).concat(r,`;
    overscroll-behavior: contain;
    `).concat([e&&"position: relative ".concat(r,";"),n==="margin"&&`
    padding-left: `.concat(i,`px;
    padding-top: `).concat(o,`px;
    padding-right: `).concat(s,`px;
    margin-left:0;
    margin-top:0;
    margin-right: `).concat(a,"px ").concat(r,`;
    `),n==="padding"&&"padding-right: ".concat(a,"px ").concat(r,";")].filter(Boolean).join(""),`
  }
  
  .`).concat(Ph,` {
    right: `).concat(a,"px ").concat(r,`;
  }
  
  .`).concat(Oh,` {
    margin-right: `).concat(a,"px ").concat(r,`;
  }
  
  .`).concat(Ph," .").concat(Ph,` {
    right: 0 `).concat(r,`;
  }
  
  .`).concat(Oh," .").concat(Oh,` {
    margin-right: 0 `).concat(r,`;
  }
  
  body {
    `).concat(Bse,": ").concat(a,`px;
  }
`)},rae=function(t){var e=t.noRelative,n=t.noImportant,r=t.gapMode,i=r===void 0?"margin":r,o=S.exports.useMemo(function(){return eae(i)},[i]);return N(tae,{styles:nae(o,!e,i,n?"":"!important")})},l1=!1;if(typeof window<"u")try{var Rf=Object.defineProperty({},"passive",{get:function(){return l1=!0,!0}});window.addEventListener("test",Rf,Rf),window.removeEventListener("test",Rf,Rf)}catch{l1=!1}var ca=l1?{passive:!1}:!1,iae=function(t){return t.tagName==="TEXTAREA"},dL=function(t,e){var n=window.getComputedStyle(t);return n[e]!=="hidden"&&!(n.overflowY===n.overflowX&&!iae(t)&&n[e]==="visible")},oae=function(t){return dL(t,"overflowY")},sae=function(t){return dL(t,"overflowX")},m9=function(t,e){var n=e;do{typeof ShadowRoot<"u"&&n instanceof ShadowRoot&&(n=n.host);var r=fL(t,n);if(r){var i=hL(t,n),o=i[1],s=i[2];if(o>s)return!0}n=n.parentNode}while(n&&n!==document.body);return!1},aae=function(t){var e=t.scrollTop,n=t.scrollHeight,r=t.clientHeight;return[e,n,r]},lae=function(t){var e=t.scrollLeft,n=t.scrollWidth,r=t.clientWidth;return[e,n,r]},fL=function(t,e){return t==="v"?oae(e):sae(e)},hL=function(t,e){return t==="v"?aae(e):lae(e)},cae=function(t,e){return t==="h"&&e==="rtl"?-1:1},uae=function(t,e,n,r,i){var o=cae(t,window.getComputedStyle(e).direction),s=o*r,a=n.target,l=e.contains(a),c=!1,u=s>0,d=0,f=0;do{var h=hL(t,a),p=h[0],m=h[1],v=h[2],g=m-v-o*p;(p||g)&&fL(t,a)&&(d+=g,f+=p),a=a.parentNode}while(!l&&a!==document.body||l&&(e.contains(a)||e===a));return(u&&(i&&d===0||!i&&s>d)||!u&&(i&&f===0||!i&&-s>f))&&(c=!0),c},Ff=function(t){return"changedTouches"in t?[t.changedTouches[0].clientX,t.changedTouches[0].clientY]:[0,0]},g9=function(t){return[t.deltaX,t.deltaY]},b9=function(t){return t&&"current"in t?t.current:t},dae=function(t,e){return t[0]===e[0]&&t[1]===e[1]},fae=function(t){return`
  .block-interactivity-`.concat(t,` {pointer-events: none;}
  .allow-interactivity-`).concat(t,` {pointer-events: all;}
`)},hae=0,ua=[];function pae(t){var e=S.exports.useRef([]),n=S.exports.useRef([0,0]),r=S.exports.useRef(),i=S.exports.useState(hae++)[0],o=S.exports.useState(function(){return uL()})[0],s=S.exports.useRef(t);S.exports.useEffect(function(){s.current=t},[t]),S.exports.useEffect(function(){if(t.inert){document.body.classList.add("block-interactivity-".concat(i));var m=zne([t.lockRef.current],(t.shards||[]).map(b9),!0).filter(Boolean);return m.forEach(function(v){return v.classList.add("allow-interactivity-".concat(i))}),function(){document.body.classList.remove("block-interactivity-".concat(i)),m.forEach(function(v){return v.classList.remove("allow-interactivity-".concat(i))})}}},[t.inert,t.lockRef.current,t.shards]);var a=S.exports.useCallback(function(m,v){if("touches"in m&&m.touches.length===2)return!s.current.allowPinchZoom;var g=Ff(m),b=n.current,y="deltaX"in m?m.deltaX:b[0]-g[0],x="deltaY"in m?m.deltaY:b[1]-g[1],k,P=m.target,O=Math.abs(y)>Math.abs(x)?"h":"v";if("touches"in m&&O==="h"&&P.type==="range")return!1;var z=m9(O,P);if(!z)return!0;if(z?k=O:(k=O==="v"?"h":"v",z=m9(O,P)),!z)return!1;if(!r.current&&"changedTouches"in m&&(y||x)&&(r.current=k),!k)return!0;var I=r.current||k;return uae(I,v,m,I==="h"?y:x,!0)},[]),l=S.exports.useCallback(function(m){var v=m;if(!(!ua.length||ua[ua.length-1]!==o)){var g="deltaY"in v?g9(v):Ff(v),b=e.current.filter(function(k){return k.name===v.type&&k.target===v.target&&dae(k.delta,g)})[0];if(b&&b.should){v.cancelable&&v.preventDefault();return}if(!b){var y=(s.current.shards||[]).map(b9).filter(Boolean).filter(function(k){return k.contains(v.target)}),x=y.length>0?a(v,y[0]):!s.current.noIsolation;x&&v.cancelable&&v.preventDefault()}}},[]),c=S.exports.useCallback(function(m,v,g,b){var y={name:m,delta:v,target:g,should:b};e.current.push(y),setTimeout(function(){e.current=e.current.filter(function(x){return x!==y})},1)},[]),u=S.exports.useCallback(function(m){n.current=Ff(m),r.current=void 0},[]),d=S.exports.useCallback(function(m){c(m.type,g9(m),m.target,a(m,t.lockRef.current))},[]),f=S.exports.useCallback(function(m){c(m.type,Ff(m),m.target,a(m,t.lockRef.current))},[]);S.exports.useEffect(function(){return ua.push(o),t.setCallbacks({onScrollCapture:d,onWheelCapture:d,onTouchMoveCapture:f}),document.addEventListener("wheel",l,ca),document.addEventListener("touchmove",l,ca),document.addEventListener("touchstart",u,ca),function(){ua=ua.filter(function(m){return m!==o}),document.removeEventListener("wheel",l,ca),document.removeEventListener("touchmove",l,ca),document.removeEventListener("touchstart",u,ca)}},[]);var h=t.removeScrollBar,p=t.inert;return tt(_r,{children:[p?N(o,{styles:fae(i)}):null,h?N(rae,{gapMode:"margin"}):null]})}const mae=Yoe(cL,pae);var pL=S.exports.forwardRef(function(t,e){return N(vg,{...Wr({},t,{ref:e,sideCar:mae})})});pL.classNames=vg.classNames;const gae=pL;var qs=(...t)=>t.filter(Boolean).join(" ");function Tc(...t){return function(n){t.some(r=>(r==null||r(n),n==null?void 0:n.defaultPrevented))}}var bae=class{constructor(){z2(this,"modals");this.modals=[]}add(t){this.modals.push(t)}remove(t){this.modals=this.modals.filter(e=>e!==t)}isTopModal(t){return this.modals[this.modals.length-1]===t}},c1=new bae;function vae(t,e){S.exports.useEffect(()=>(e&&c1.add(t),()=>{c1.remove(t)}),[e,t])}function yae(t){const{isOpen:e,onClose:n,id:r,closeOnOverlayClick:i=!0,closeOnEsc:o=!0,useInert:s=!0,onOverlayClick:a,onEsc:l}=t,c=S.exports.useRef(null),u=S.exports.useRef(null),[d,f,h]=Sae(r,"chakra-modal","chakra-modal--header","chakra-modal--body");xae(c,e&&s),vae(c,e);const p=S.exports.useRef(null),m=S.exports.useCallback(z=>{p.current=z.target},[]),v=S.exports.useCallback(z=>{z.key==="Escape"&&(z.stopPropagation(),o&&(n==null||n()),l==null||l())},[o,n,l]),[g,b]=S.exports.useState(!1),[y,x]=S.exports.useState(!1),k=S.exports.useCallback((z={},I=null)=>({role:"dialog",...z,ref:Co(I,c),id:d,tabIndex:-1,"aria-modal":!0,"aria-labelledby":g?f:void 0,"aria-describedby":y?h:void 0,onClick:Tc(z.onClick,E=>E.stopPropagation())}),[h,y,d,f,g]),P=S.exports.useCallback(z=>{z.stopPropagation(),p.current===z.target&&(!c1.isTopModal(c)||(i&&(n==null||n()),a==null||a()))},[n,i,a]),O=S.exports.useCallback((z={},I=null)=>({...z,ref:Co(I,u),onClick:Tc(z.onClick,P),onKeyDown:Tc(z.onKeyDown,v),onMouseDown:Tc(z.onMouseDown,m)}),[v,m,P]);return{isOpen:e,onClose:n,headerId:f,bodyId:h,setBodyMounted:x,setHeaderMounted:b,dialogRef:c,overlayRef:u,getDialogProps:k,getDialogContainerProps:O}}function xae(t,e){const n=t.current;S.exports.useEffect(()=>{if(!(!t.current||!e))return Foe(t.current)},[e,t,n])}function Sae(t,...e){const n=S.exports.useId(),r=t||n;return S.exports.useMemo(()=>e.map(i=>`${i}-${r}`),[r,e])}var[kae,Js]=Zn({name:"ModalStylesContext",errorMessage:`useModalStyles returned is 'undefined'. Seems you forgot to wrap the components in "<Modal />" `}),[wae,zo]=Zn({strict:!0,name:"ModalContext",errorMessage:"useModalContext: `context` is undefined. Seems you forgot to wrap modal components in `<Modal />`"}),c2=t=>{const{portalProps:e,children:n,autoFocus:r,trapFocus:i,initialFocusRef:o,finalFocusRef:s,returnFocusOnClose:a,blockScrollOnMount:l,allowPinchZoom:c,preserveScrollBarGap:u,motionPreset:d,lockFocusAcrossFrames:f,onCloseComplete:h}=t,p=js("Modal",t),v={...yae(t),autoFocus:r,trapFocus:i,initialFocusRef:o,finalFocusRef:s,returnFocusOnClose:a,blockScrollOnMount:l,allowPinchZoom:c,preserveScrollBarGap:u,motionPreset:d,lockFocusAcrossFrames:f};return N(wae,{value:v,children:N(kae,{value:p,children:N(Zo,{onExitComplete:h,children:v.isOpen&&N(Us,{...e,children:n})})})})};c2.defaultProps={lockFocusAcrossFrames:!0,returnFocusOnClose:!0,scrollBehavior:"outside",trapFocus:!0,autoFocus:!0,blockScrollOnMount:!0,allowPinchZoom:!1,motionPreset:"scale"};c2.displayName="Modal";var mL=J((t,e)=>{const{className:n,...r}=t,{bodyId:i,setBodyMounted:o}=zo();S.exports.useEffect(()=>(o(!0),()=>o(!1)),[o]);const s=qs("chakra-modal__body",n),a=Js();return R.createElement(K.div,{ref:e,className:s,id:i,...r,__css:a.body})});mL.displayName="ModalBody";var gL=J((t,e)=>{const{onClick:n,className:r,...i}=t,{onClose:o}=zo(),s=qs("chakra-modal__close-btn",r),a=Js();return N(XS,{ref:e,__css:a.closeButton,className:s,onClick:Tc(n,l=>{l.stopPropagation(),o()}),...i})});gL.displayName="ModalCloseButton";function bL(t){const{autoFocus:e,trapFocus:n,dialogRef:r,initialFocusRef:i,blockScrollOnMount:o,allowPinchZoom:s,finalFocusRef:a,returnFocusOnClose:l,preserveScrollBarGap:c,lockFocusAcrossFrames:u}=zo(),[d,f]=CS();return S.exports.useEffect(()=>{!d&&f&&setTimeout(f)},[d,f]),N(lL,{autoFocus:e,isDisabled:!n,initialFocusRef:i,finalFocusRef:a,restoreFocus:l,contentRef:r,lockFocusAcrossFrames:u,children:N(gae,{removeScrollBar:!c,allowPinchZoom:s,enabled:o,forwardProps:!0,children:t.children})})}var Pae={slideInBottom:{...Jy,custom:{offsetY:16,reverse:!0}},slideInRight:{...Jy,custom:{offsetX:16,reverse:!0}},scale:{...KM,custom:{initialScale:.95,reverse:!0}},none:{}},Oae=K(Ii.section),Cae=t=>Pae[t||"none"],vL=S.exports.forwardRef((t,e)=>{const{preset:n,motionProps:r=Cae(n),...i}=t;return N(Oae,{ref:e,...r,...i})});vL.displayName="ModalTransition";var u2=J((t,e)=>{const{className:n,children:r,containerProps:i,motionProps:o,...s}=t,{getDialogProps:a,getDialogContainerProps:l}=zo(),c=a(s,e),u=l(i),d=qs("chakra-modal__content",n),f=Js(),h={display:"flex",flexDirection:"column",position:"relative",width:"100%",outline:0,...f.dialog},p={display:"flex",width:"100vw",height:"$100vh",position:"fixed",left:0,top:0,...f.dialogContainer},{motionPreset:m}=zo();return R.createElement(bL,null,R.createElement(K.div,{...u,className:"chakra-modal__content-container",tabIndex:-1,__css:p},N(vL,{preset:m,motionProps:o,className:d,...c,__css:h,children:r})))});u2.displayName="ModalContent";var yL=J((t,e)=>{const{className:n,...r}=t,i=qs("chakra-modal__footer",n),s={display:"flex",alignItems:"center",justifyContent:"flex-end",...Js().footer};return R.createElement(K.footer,{ref:e,...r,__css:s,className:i})});yL.displayName="ModalFooter";var xL=J((t,e)=>{const{className:n,...r}=t,{headerId:i,setHeaderMounted:o}=zo();S.exports.useEffect(()=>(o(!0),()=>o(!1)),[o]);const s=qs("chakra-modal__header",n),l={flex:0,...Js().header};return R.createElement(K.header,{ref:e,className:s,id:i,...r,__css:l})});xL.displayName="ModalHeader";var Tae=K(Ii.div),SL=J((t,e)=>{const{className:n,transition:r,motionProps:i,...o}=t,s=qs("chakra-modal__overlay",n),l={pos:"fixed",left:"0",top:"0",w:"100vw",h:"100vh",...Js().overlay},{motionPreset:c}=zo();return N(Tae,{...i||(c==="none"?{}:YM),__css:l,ref:e,className:s,...o})});SL.displayName="ModalOverlay";J((t,e)=>N(u2,{ref:e,role:"alertdialog",...t}));var[ece,zae]=Zn(),Vae=K(UM),Eae=J((t,e)=>{const{className:n,children:r,motionProps:i,containerProps:o,...s}=t,{getDialogProps:a,getDialogContainerProps:l,isOpen:c}=zo(),u=a(s,e),d=l(o),f=qs("chakra-modal__content",n),h=Js(),p={display:"flex",flexDirection:"column",position:"relative",width:"100%",outline:0,...h.dialog},m={display:"flex",width:"100vw",height:"$100vh",position:"fixed",left:0,top:0,...h.dialogContainer},{placement:v}=zae();return R.createElement(bL,null,R.createElement(K.div,{...d,className:"chakra-modal__content-container",__css:m},N(Vae,{motionProps:i,direction:v,in:c,className:f,...u,__css:p,children:r})))});Eae.displayName="DrawerContent";function Nae(t,e){const n=Xp(t);S.exports.useEffect(()=>{if(e==null)return;let r=null;return r=window.setTimeout(()=>{n()},e),()=>{r&&window.clearTimeout(r)}},[e,n])}function Iae(t,...e){return Mae(t)?t(...e):t}var Mae=t=>typeof t=="function",Aae=(t,e)=>t.find(n=>n.id===e);function v9(t,e){const n=kL(t,e),r=n?t[n].findIndex(i=>i.id===e):-1;return{position:n,index:r}}function kL(t,e){for(const[n,r]of Object.entries(t))if(Aae(r,e))return n}function Lae(t){const e=t.includes("right"),n=t.includes("left");let r="center";return e&&(r="flex-end"),n&&(r="flex-start"),{display:"flex",flexDirection:"column",alignItems:r}}function Zae(t){const n=t==="top"||t==="bottom"?"0 auto":void 0,r=t.includes("top")?"env(safe-area-inset-top, 0px)":void 0,i=t.includes("bottom")?"env(safe-area-inset-bottom, 0px)":void 0,o=t.includes("left")?void 0:"env(safe-area-inset-right, 0px)",s=t.includes("right")?void 0:"env(safe-area-inset-left, 0px)";return{position:"fixed",zIndex:5500,pointerEvents:"none",display:"flex",flexDirection:"column",margin:n,top:r,bottom:i,right:o,left:s}}var Xae={top:[],"top-left":[],"top-right":[],"bottom-left":[],bottom:[],"bottom-right":[]},ru=Wae(Xae);function Wae(t){let e=t;const n=new Set,r=i=>{e=i(e),n.forEach(o=>o())};return{getState:()=>e,subscribe:i=>(n.add(i),()=>{r(()=>t),n.delete(i)}),removeToast:(i,o)=>{r(s=>({...s,[o]:s[o].filter(a=>a.id!=i)}))},notify:(i,o)=>{const s=Rae(i,o),{position:a,id:l}=s;return r(c=>{var f,h;const d=a.includes("top")?[s,...(f=c[a])!=null?f:[]]:[...(h=c[a])!=null?h:[],s];return{...c,[a]:d}}),l},update:(i,o)=>{!i||r(s=>{const a={...s},{position:l,index:c}=v9(a,i);return l&&c!==-1&&(a[l][c]={...a[l][c],...o,message:Hae(o)}),a})},closeAll:({positions:i}={})=>{r(o=>{const s=["bottom","bottom-right","bottom-left","top","top-left","top-right"];return(i!=null?i:s).reduce((l,c)=>(l[c]=o[c].map(u=>({...u,requestClose:!0})),l),{...o})})},close:i=>{r(o=>{const s=kL(o,i);return s?{...o,[s]:o[s].map(a=>a.id==i?{...a,requestClose:!0}:a)}:o})},isActive:i=>Boolean(v9(ru.getState(),i).position)}}var y9=0;function Rae(t,e={}){var i,o;y9+=1;const n=(i=e.id)!=null?i:y9,r=(o=e.position)!=null?o:"bottom";return{id:n,message:t,position:r,duration:e.duration,onCloseComplete:e.onCloseComplete,onRequestRemove:()=>ru.removeToast(String(n),r),status:e.status,requestClose:!1,containerStyle:e.containerStyle}}var Fae=t=>{const{status:e,variant:n="solid",id:r,title:i,isClosable:o,onClose:s,description:a,icon:l}=t,c=r?{root:`toast-${r}`,title:`toast-${r}-title`,description:`toast-${r}-description`}:void 0;return R.createElement(JM,{addRole:!1,status:e,variant:n,id:c==null?void 0:c.root,alignItems:"start",borderRadius:"md",boxShadow:"lg",paddingEnd:8,textAlign:"start",width:"auto"},N(_M,{children:l}),R.createElement(K.div,{flex:"1",maxWidth:"100%"},i&&N($M,{id:c==null?void 0:c.title,children:i}),a&&N(QM,{id:c==null?void 0:c.description,display:"block",children:a})),o&&N(XS,{size:"sm",onClick:s,position:"absolute",insetEnd:1,top:1}))};function Hae(t={}){const{render:e,toastComponent:n=Fae}=t;return i=>typeof e=="function"?e({...i,...t}):N(n,{...i,...t})}var Dae={initial:t=>{const{position:e}=t,n=["top","bottom"].includes(e)?"y":"x";let r=["top-right","bottom-right"].includes(e)?1:-1;return e==="bottom"&&(r=1),{opacity:0,[n]:r*24}},animate:{opacity:1,y:0,x:0,scale:1,transition:{duration:.4,ease:[.4,0,.2,1]}},exit:{opacity:0,scale:.85,transition:{duration:.2,ease:[.4,0,1,1]}}},wL=S.exports.memo(t=>{const{id:e,message:n,onCloseComplete:r,onRequestRemove:i,requestClose:o=!1,position:s="bottom",duration:a=5e3,containerStyle:l,motionVariants:c=Dae,toastSpacing:u="0.5rem"}=t,[d,f]=S.exports.useState(a),h=uee();U3(()=>{h||r==null||r()},[h]),U3(()=>{f(a)},[a]);const p=()=>f(null),m=()=>f(a),v=()=>{h&&i()};S.exports.useEffect(()=>{h&&o&&i()},[h,o,i]),Nae(v,d);const g=S.exports.useMemo(()=>({pointerEvents:"auto",maxWidth:560,minWidth:300,margin:u,...l}),[l,u]),b=S.exports.useMemo(()=>Lae(s),[s]);return R.createElement(Ii.li,{layout:!0,className:"chakra-toast",variants:c,initial:"initial",animate:"animate",exit:"exit",onHoverStart:p,onHoverEnd:m,custom:{position:s},style:b},R.createElement(K.div,{role:"status","aria-atomic":"true",className:"chakra-toast__inner",__css:g},Iae(n,{id:e,onClose:v})))});wL.displayName="ToastComponent";var Gae=t=>{const e=S.exports.useSyncExternalStore(ru.subscribe,ru.getState,ru.getState),{children:n,motionVariants:r,component:i=wL,portalProps:o}=t,a=Object.keys(e).map(l=>{const c=e[l];return N("ul",{role:"region","aria-live":"polite",id:`chakra-toast-manager-${l}`,style:Zae(l),children:N(Zo,{initial:!1,children:c.map(u=>N(i,{motionVariants:r,...u},u.id))})},l)});return tt(_r,{children:[n,N(Us,{...o,children:a})]})};function jae(t,e=[]){const n=Object.assign({},t);for(const r of e)r in n&&delete n[r];return n}function Bae(t,e){const n={};for(const r of e)r in t&&(n[r]=t[r]);return n}var Yae={exit:{scale:.85,opacity:0,transition:{opacity:{duration:.15,easings:"easeInOut"},scale:{duration:.2,easings:"easeInOut"}}},enter:{scale:1,opacity:1,transition:{opacity:{easings:"easeOut",duration:.2},scale:{duration:.2,ease:[.175,.885,.4,1.1]}}}};function hc(...t){return function(n){t.some(r=>(r==null||r(n),n==null?void 0:n.defaultPrevented))}}var $p=t=>{var e;return((e=t.current)==null?void 0:e.ownerDocument)||document},u1=t=>{var e,n;return((n=(e=t.current)==null?void 0:e.ownerDocument)==null?void 0:n.defaultView)||window};function Kae(t={}){const{openDelay:e=0,closeDelay:n=0,closeOnClick:r=!0,closeOnMouseDown:i,closeOnScroll:o,closeOnPointerDown:s=i,closeOnEsc:a=!0,onOpen:l,onClose:c,placement:u,id:d,isOpen:f,defaultIsOpen:h,arrowSize:p=10,arrowShadowColor:m,arrowPadding:v,modifiers:g,isDisabled:b,gutter:y,offset:x,direction:k,...P}=t,{isOpen:O,onOpen:z,onClose:I}=Voe({isOpen:f,defaultIsOpen:h,onOpen:l,onClose:c}),{referenceRef:E,getPopperProps:X,getArrowInnerProps:Y,getArrowProps:Q}=Toe({enabled:O,placement:u,arrowPadding:v,modifiers:g,gutter:y,offset:x,direction:k}),ae=S.exports.useId(),D=`tooltip-${d!=null?d:ae}`,ee=S.exports.useRef(null),L=S.exports.useRef(),H=S.exports.useCallback(()=>{L.current&&(clearTimeout(L.current),L.current=void 0)},[]),q=S.exports.useRef(),le=S.exports.useCallback(()=>{q.current&&(clearTimeout(q.current),q.current=void 0)},[]),ue=S.exports.useCallback(()=>{le(),I()},[I,le]),re=Uae(ee,ue),Te=S.exports.useCallback(()=>{if(!b&&!L.current){re();const Ke=u1(ee);L.current=Ke.setTimeout(z,e)}},[re,b,z,e]),Ve=S.exports.useCallback(()=>{H();const Ke=u1(ee);q.current=Ke.setTimeout(ue,n)},[n,ue,H]),He=S.exports.useCallback(()=>{O&&r&&Ve()},[r,Ve,O]),Ye=S.exports.useCallback(()=>{O&&s&&Ve()},[s,Ve,O]),rt=S.exports.useCallback(Ke=>{O&&Ke.key==="Escape"&&Ve()},[O,Ve]);lb(()=>$p(ee),"keydown",a?rt:void 0),lb(()=>$p(ee),"scroll",()=>{O&&o&&ue()}),S.exports.useEffect(()=>{!b||(H(),O&&I())},[b,O,I,H]),S.exports.useEffect(()=>()=>{H(),le()},[H,le]),lb(()=>ee.current,"pointerleave",Ve);const Xn=S.exports.useCallback((Ke={},Pr=null)=>({...Ke,ref:Co(ee,Pr,E),onPointerEnter:hc(Ke.onPointerEnter,Dl=>{Dl.pointerType!=="touch"&&Te()}),onClick:hc(Ke.onClick,He),onPointerDown:hc(Ke.onPointerDown,Ye),onFocus:hc(Ke.onFocus,Te),onBlur:hc(Ke.onBlur,Ve),"aria-describedby":O?D:void 0}),[Te,Ve,Ye,O,D,He,E]),wr=S.exports.useCallback((Ke={},Pr=null)=>X({...Ke,style:{...Ke.style,[Et.arrowSize.var]:p?`${p}px`:void 0,[Et.arrowShadowColor.var]:m}},Pr),[X,p,m]),Mi=S.exports.useCallback((Ke={},Pr=null)=>{const _s={...Ke.style,position:"relative",transformOrigin:Et.transformOrigin.varRef};return{ref:Pr,...P,...Ke,id:D,role:"tooltip",style:_s}},[P,D]);return{isOpen:O,show:Te,hide:Ve,getTriggerProps:Xn,getTooltipProps:Mi,getTooltipPositionerProps:wr,getArrowProps:Q,getArrowInnerProps:Y}}var gb="chakra-ui:close-tooltip";function Uae(t,e){return S.exports.useEffect(()=>{const n=$p(t);return n.addEventListener(gb,e),()=>n.removeEventListener(gb,e)},[e,t]),()=>{const n=$p(t),r=u1(t);n.dispatchEvent(new r.CustomEvent(gb))}}var qae=K(Ii.div),Qo=J((t,e)=>{var I,E;const n=gn("Tooltip",t),r=ut(t),i=aS(),{children:o,label:s,shouldWrapChildren:a,"aria-label":l,hasArrow:c,bg:u,portalProps:d,background:f,backgroundColor:h,bgColor:p,motionProps:m,...v}=r,g=(E=(I=f!=null?f:h)!=null?I:u)!=null?E:p;if(g){n.bg=g;const X=W4(i,"colors",g);n[Et.arrowBg.var]=X}const b=Kae({...v,direction:i.direction}),y=typeof o=="string"||a;let x;if(y)x=R.createElement(K.span,{display:"inline-block",tabIndex:0,...b.getTriggerProps()},o);else{const X=S.exports.Children.only(o);x=S.exports.cloneElement(X,b.getTriggerProps(X.props,X.ref))}const k=!!l,P=b.getTooltipProps({},e),O=k?jae(P,["role","id"]):P,z=Bae(P,["role","id"]);return s?tt(_r,{children:[x,N(Zo,{children:b.isOpen&&R.createElement(Us,{...d},R.createElement(K.div,{...b.getTooltipPositionerProps(),__css:{zIndex:n.zIndex,pointerEvents:"none"}},tt(qae,{variants:Yae,initial:"exit",animate:"enter",exit:"exit",...m,...O,__css:n,children:[s,k&&R.createElement(K.span,{srOnly:!0,...z},l),c&&R.createElement(K.div,{"data-popper-arrow":!0,className:"chakra-tooltip__arrow-wrapper"},R.createElement(K.div,{"data-popper-arrow-inner":!0,className:"chakra-tooltip__arrow",__css:{bg:n.bg}}))]})))})]}):N(_r,{children:o})});Qo.displayName="Tooltip";var Jae=t=>{const{children:e,colorModeManager:n,portalZIndex:r,resetCSS:i=!0,theme:o={},environment:s,cssVarsRoot:a}=t,l=N(yA,{environment:s,children:e});return N(zQ,{theme:o,cssVarsRoot:a,children:tt(kN,{colorModeManager:n,options:o.config,children:[i?N(pre,{}):N(hre,{}),N(EQ,{}),r?N(EA,{zIndex:r,children:l}):l]})})};function Qae({children:t,theme:e=mI,toastOptions:n,...r}){return tt(Jae,{theme:e,...r,children:[t,N(Gae,{...n})]})}const _ae=({output:t})=>(S.exports.useEffect(()=>{const e=document.querySelector("#consoleWrapper");e.scrollTo(e.scrollLeft,e.scrollHeight)},[t]),tt(jS,{w:"full",h:"300px",minH:"300px",children:[N(wl,{className:"headerTab",w:"full",children:"Console"}),N(wl,{id:"consoleWrapper",overflow:"auto",w:"full",p:"5",children:tt("pre",{id:"consoleOutput",children:["$",t]})})]})),x9=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],xi=(()=>{if(typeof document>"u")return!1;const t=x9[0],e={};for(const n of x9)if((n==null?void 0:n[1])in document){for(const[i,o]of n.entries())e[t[i]]=o;return e}return!1})(),S9={change:xi.fullscreenchange,error:xi.fullscreenerror};let xn={request(t=document.documentElement,e){return new Promise((n,r)=>{const i=()=>{xn.off("change",i),n()};xn.on("change",i);const o=t[xi.requestFullscreen](e);o instanceof Promise&&o.then(i).catch(r)})},exit(){return new Promise((t,e)=>{if(!xn.isFullscreen){t();return}const n=()=>{xn.off("change",n),t()};xn.on("change",n);const r=document[xi.exitFullscreen]();r instanceof Promise&&r.then(n).catch(e)})},toggle(t,e){return xn.isFullscreen?xn.exit():xn.request(t,e)},onchange(t){xn.on("change",t)},onerror(t){xn.on("error",t)},on(t,e){const n=S9[t];n&&document.addEventListener(n,e,!1)},off(t,e){const n=S9[t];n&&document.removeEventListener(n,e,!1)},raw:xi};Object.defineProperties(xn,{isFullscreen:{get:()=>Boolean(document[xi.fullscreenElement])},element:{enumerable:!0,get:()=>{var t;return(t=document[xi.fullscreenElement])!=null?t:void 0}},isEnabled:{enumerable:!0,get:()=>Boolean(document[xi.fullscreenEnabled])}});xi||(xn={isEnabled:!1});const Hf=xn;var PL={color:void 0,size:void 0,className:void 0,style:void 0,attr:void 0},k9=R.createContext&&R.createContext(PL),yo=globalThis&&globalThis.__assign||function(){return yo=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++){e=arguments[n];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])}return t},yo.apply(this,arguments)},$ae=globalThis&&globalThis.__rest||function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]]);return n};function OL(t){return t&&t.map(function(e,n){return R.createElement(e.tag,yo({key:n},e.attr),OL(e.child))})}function Qs(t){return function(e){return N(ele,{...yo({attr:yo({},t.attr)},e),children:OL(t.child)})}}function ele(t){var e=function(n){var r=t.attr,i=t.size,o=t.title,s=$ae(t,["attr","size","title"]),a=i||n.size||"1em",l;return n.className&&(l=n.className),t.className&&(l=(l?l+" ":"")+t.className),tt("svg",{...yo({stroke:"currentColor",fill:"currentColor",strokeWidth:"0"},n.attr,r,s,{className:l,style:yo(yo({color:t.color||n.color},n.style),t.style),height:a,width:a,xmlns:"http://www.w3.org/2000/svg"}),children:[o&&N("title",{children:o}),t.children]})};return k9!==void 0?N(k9.Consumer,{children:function(n){return e(n)}}):e(PL)}function tle(t){return Qs({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z"}}]})(t)}function nle(t){return Qs({tag:"svg",attr:{viewBox:"0 0 448 512"},child:[{tag:"path",attr:{d:"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z"}}]})(t)}function rle(t){return Qs({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm-16 328c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160zm112 0c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160z"}}]})(t)}function ile(t){return Qs({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z"}}]})(t)}function ole(t){return Qs({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"}}]})(t)}function sle(t){return Qs({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z"}}]})(t)}function ale(t){return Qs({tag:"svg",attr:{viewBox:"0 0 640 512"},child:[{tag:"path",attr:{d:"M257.981 272.971L63.638 467.314c-9.373 9.373-24.569 9.373-33.941 0L7.029 444.647c-9.357-9.357-9.375-24.522-.04-33.901L161.011 256 6.99 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L257.981 239.03c9.373 9.372 9.373 24.568 0 33.941zM640 456v-32c0-13.255-10.745-24-24-24H312c-13.255 0-24 10.745-24 24v32c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24z"}}]})(t)}const bb=new Date,lle=`${bb.getFullYear()}-${bb.getMonth()}-${bb.getDay()}`,cle=({csound:t,code:e,showConsole:n,setShowConsole:r})=>{const[i,o]=S.exports.useState(!0),{isOpen:s,onOpen:a,onClose:l}=vre(),[c,u]=S.exports.useState(`${lle}_project.orc`);return S.exports.useEffect(()=>{t.addListener("play",()=>{o(!0)}),t.addListener("pause",()=>{o(!1)}),t.addListener("stop",()=>{o(!1)})},[t]),tt(hA,{w:"100%",p:"0.5em 1em",backgroundColor:"#272822",borderBottom:"1px solid #333333",children:[N("h1",{children:"csound-live-code"}),N(Qo,{hasArrow:!0,label:i?"Pause Engine":"Play Engine",children:N(Jo,{"aria-label":"Pause Engine",icon:i?N(rle,{}):N(ile,{}),fontSize:"22px",size:"sm",onClick:async()=>{i?await t.pause():await t.resume()}})}),N(Qo,{hasArrow:!0,label:"Restart Engine",children:N(Jo,{"aria-label":"Restart Engine",icon:N(sle,{}),fontSize:"22px",size:"sm",onClick:()=>{hy(t)}})}),N(Qo,{hasArrow:!0,label:"Download ORC",children:N(Jo,{"aria-label":"Download ORC",icon:N(tle,{}),fontSize:"22px",size:"sm",onClick:a})}),N(Qo,{hasArrow:!0,label:"Toggle Console",children:N(Jo,{"aria-label":"Toggle Console",icon:N(ale,{}),fontSize:"22px",size:"sm",onClick:()=>{r(!n)}})}),Hf.isEnabled&&N(Qo,{hasArrow:!0,label:"Toggle Fullscreen",children:N(Jo,{"aria-label":"Toggle Fullscreen",icon:N(nle,{}),fontSize:"22px",size:"sm",onClick:()=>{Hf.isFullscreen?Hf.exit():Hf.request()}})}),N(dA,{}),N(Qo,{hasArrow:!0,label:"Open Documentation",children:N(Jo,{"aria-label":"Open Documentation in new Window",icon:N(ole,{}),fontSize:"22px",size:"sm",onClick:pG})}),tt(c2,{isOpen:s,onClose:l,children:[N(SL,{}),tt(u2,{backgroundColor:"#222222",children:[N(xL,{children:"Save File"}),N(gL,{}),N(mL,{children:tt(iA,{children:[N(HS,{children:"Name of file"}),N(RS,{w:"full",value:c,onChange:d=>u(d.target.value)})]})}),N(yL,{children:N(mg,{colorScheme:"blue",mr:3,onClick:()=>{mG(c,e),l()},children:"Save"})})]})]})]})};function ule(t,e,n){var r=n||{},i=r.noTrailing,o=i===void 0?!1:i,s=r.noLeading,a=s===void 0?!1:s,l=r.debounceMode,c=l===void 0?void 0:l,u,d=!1,f=0;function h(){u&&clearTimeout(u)}function p(v){var g=v||{},b=g.upcomingOnly,y=b===void 0?!1:b;h(),d=!y}function m(){for(var v=arguments.length,g=new Array(v),b=0;b<v;b++)g[b]=arguments[b];var y=this,x=Date.now()-f;if(d)return;function k(){f=Date.now(),e.apply(y,g)}function P(){u=void 0}!a&&c&&!u&&k(),h(),c===void 0&&x>t?a?(f=Date.now(),o||(u=setTimeout(c?P:k,t))):k():o!==!0&&(u=setTimeout(c?P:k,c===void 0?t-x:t))}return m.cancel=p,m}function dle(t,e,n){var r=n||{},i=r.atBegin,o=i===void 0?!1:i;return ule(t,e,{debounceMode:o!==!1})}class em{constructor(e,n,r,i,o,s,a,l,c,u=0,d){this.p=e,this.stack=n,this.state=r,this.reducePos=i,this.pos=o,this.score=s,this.buffer=a,this.bufferBase=l,this.curContext=c,this.lookAhead=u,this.parent=d}toString(){return`[${this.stack.filter((e,n)=>n%3==0).concat(this.state)}]@${this.pos}${this.score?"!"+this.score:""}`}static start(e,n,r=0){let i=e.parser.context;return new em(e,[],n,r,r,0,[],0,i?new w9(i,i.start):null,0,null)}get context(){return this.curContext?this.curContext.context:null}pushState(e,n){this.stack.push(this.state,n,this.bufferBase+this.buffer.length),this.state=e}reduce(e){let n=e>>19,r=e&65535,{parser:i}=this.p,o=i.dynamicPrecedence(r);if(o&&(this.score+=o),n==0){this.pushState(i.getGoto(this.state,r,!0),this.reducePos),r<i.minRepeatTerm&&this.storeNode(r,this.reducePos,this.reducePos,4,!0),this.reduceContext(r,this.reducePos);return}let s=this.stack.length-(n-1)*3-(e&262144?6:0),a=this.stack[s-2],l=this.stack[s-1],c=this.bufferBase+this.buffer.length-l;if(r<i.minRepeatTerm||e&131072){let u=i.stateFlag(this.state,1)?this.pos:this.reducePos;this.storeNode(r,a,u,c+4,!0)}if(e&262144)this.state=this.stack[s];else{let u=this.stack[s-3];this.state=i.getGoto(u,r,!0)}for(;this.stack.length>s;)this.stack.pop();this.reduceContext(r,a)}storeNode(e,n,r,i=4,o=!1){if(e==0&&(!this.stack.length||this.stack[this.stack.length-1]<this.buffer.length+this.bufferBase)){let s=this,a=this.buffer.length;if(a==0&&s.parent&&(a=s.bufferBase-s.parent.bufferBase,s=s.parent),a>0&&s.buffer[a-4]==0&&s.buffer[a-1]>-1){if(n==r)return;if(s.buffer[a-2]>=n){s.buffer[a-2]=r;return}}}if(!o||this.pos==r)this.buffer.push(e,n,r,i);else{let s=this.buffer.length;if(s>0&&this.buffer[s-4]!=0)for(;s>0&&this.buffer[s-2]>r;)this.buffer[s]=this.buffer[s-4],this.buffer[s+1]=this.buffer[s-3],this.buffer[s+2]=this.buffer[s-2],this.buffer[s+3]=this.buffer[s-1],s-=4,i>4&&(i-=4);this.buffer[s]=e,this.buffer[s+1]=n,this.buffer[s+2]=r,this.buffer[s+3]=i}}shift(e,n,r){let i=this.pos;if(e&131072)this.pushState(e&65535,this.pos);else if((e&262144)==0){let o=e,{parser:s}=this.p;(r>this.pos||n<=s.maxNode)&&(this.pos=r,s.stateFlag(o,1)||(this.reducePos=r)),this.pushState(o,i),this.shiftContext(n,i),n<=s.maxNode&&this.buffer.push(n,i,r,4)}else this.pos=r,this.shiftContext(n,i),n<=this.p.parser.maxNode&&this.buffer.push(n,i,r,4)}apply(e,n,r){e&65536?this.reduce(e):this.shift(e,n,r)}useNode(e,n){let r=this.p.reused.length-1;(r<0||this.p.reused[r]!=e)&&(this.p.reused.push(e),r++);let i=this.pos;this.reducePos=this.pos=i+e.length,this.pushState(n,i),this.buffer.push(r,i,this.reducePos,-1),this.curContext&&this.updateContext(this.curContext.tracker.reuse(this.curContext.context,e,this,this.p.stream.reset(this.pos-e.length)))}split(){let e=this,n=e.buffer.length;for(;n>0&&e.buffer[n-2]>e.reducePos;)n-=4;let r=e.buffer.slice(n),i=e.bufferBase+n;for(;e&&i==e.bufferBase;)e=e.parent;return new em(this.p,this.stack.slice(),this.state,this.reducePos,this.pos,this.score,r,i,this.curContext,this.lookAhead,e)}recoverByDelete(e,n){let r=e<=this.p.parser.maxNode;r&&this.storeNode(e,this.pos,n,4),this.storeNode(0,this.pos,n,r?8:4),this.pos=this.reducePos=n,this.score-=190}canShift(e){for(let n=new fle(this);;){let r=this.p.parser.stateSlot(n.state,4)||this.p.parser.hasAction(n.state,e);if(r==0)return!1;if((r&65536)==0)return!0;n.reduce(r)}}recoverByInsert(e){if(this.stack.length>=300)return[];let n=this.p.parser.nextStates(this.state);if(n.length>4<<1||this.stack.length>=120){let i=[];for(let o=0,s;o<n.length;o+=2)(s=n[o+1])!=this.state&&this.p.parser.hasAction(s,e)&&i.push(n[o],s);if(this.stack.length<120)for(let o=0;i.length<4<<1&&o<n.length;o+=2){let s=n[o+1];i.some((a,l)=>l&1&&a==s)||i.push(n[o],s)}n=i}let r=[];for(let i=0;i<n.length&&r.length<4;i+=2){let o=n[i+1];if(o==this.state)continue;let s=this.split();s.pushState(o,this.pos),s.storeNode(0,s.pos,s.pos,4,!0),s.shiftContext(n[i],this.pos),s.score-=200,r.push(s)}return r}forceReduce(){let e=this.p.parser.stateSlot(this.state,5);if((e&65536)==0)return!1;let{parser:n}=this.p;if(!n.validAction(this.state,e)){let r=e>>19,i=e&65535,o=this.stack.length-r*3;if(o<0||n.getGoto(this.stack[o],i,!1)<0)return!1;this.storeNode(0,this.reducePos,this.reducePos,4,!0),this.score-=100}return this.reducePos=this.pos,this.reduce(e),!0}forceAll(){for(;!this.p.parser.stateFlag(this.state,2);)if(!this.forceReduce()){this.storeNode(0,this.pos,this.pos,4,!0);break}return this}get deadEnd(){if(this.stack.length!=3)return!1;let{parser:e}=this.p;return e.data[e.stateSlot(this.state,1)]==65535&&!e.stateSlot(this.state,4)}restart(){this.state=this.stack[0],this.stack.length=0}sameState(e){if(this.state!=e.state||this.stack.length!=e.stack.length)return!1;for(let n=0;n<this.stack.length;n+=3)if(this.stack[n]!=e.stack[n])return!1;return!0}get parser(){return this.p.parser}dialectEnabled(e){return this.p.parser.dialect.flags[e]}shiftContext(e,n){this.curContext&&this.updateContext(this.curContext.tracker.shift(this.curContext.context,e,this,this.p.stream.reset(n)))}reduceContext(e,n){this.curContext&&this.updateContext(this.curContext.tracker.reduce(this.curContext.context,e,this,this.p.stream.reset(n)))}emitContext(){let e=this.buffer.length-1;(e<0||this.buffer[e]!=-3)&&this.buffer.push(this.curContext.hash,this.reducePos,this.reducePos,-3)}emitLookAhead(){let e=this.buffer.length-1;(e<0||this.buffer[e]!=-4)&&this.buffer.push(this.lookAhead,this.reducePos,this.reducePos,-4)}updateContext(e){if(e!=this.curContext.context){let n=new w9(this.curContext.tracker,e);n.hash!=this.curContext.hash&&this.emitContext(),this.curContext=n}}setLookAhead(e){e>this.lookAhead&&(this.emitLookAhead(),this.lookAhead=e)}close(){this.curContext&&this.curContext.tracker.strict&&this.emitContext(),this.lookAhead>0&&this.emitLookAhead()}}class w9{constructor(e,n){this.tracker=e,this.context=n,this.hash=e.strict?e.hash(n):0}}var P9;(function(t){t[t.Insert=200]="Insert",t[t.Delete=190]="Delete",t[t.Reduce=100]="Reduce",t[t.MaxNext=4]="MaxNext",t[t.MaxInsertStackDepth=300]="MaxInsertStackDepth",t[t.DampenInsertStackDepth=120]="DampenInsertStackDepth"})(P9||(P9={}));class fle{constructor(e){this.start=e,this.state=e.state,this.stack=e.stack,this.base=this.stack.length}reduce(e){let n=e&65535,r=e>>19;r==0?(this.stack==this.start.stack&&(this.stack=this.stack.slice()),this.stack.push(this.state,0,0),this.base+=3):this.base-=(r-1)*3;let i=this.start.p.parser.getGoto(this.stack[this.base-3],n,!0);this.state=i}}class tm{constructor(e,n,r){this.stack=e,this.pos=n,this.index=r,this.buffer=e.buffer,this.index==0&&this.maybeNext()}static create(e,n=e.bufferBase+e.buffer.length){return new tm(e,n,n-e.bufferBase)}maybeNext(){let e=this.stack.parent;e!=null&&(this.index=this.stack.bufferBase-e.bufferBase,this.stack=e,this.buffer=e.buffer)}get id(){return this.buffer[this.index-4]}get start(){return this.buffer[this.index-3]}get end(){return this.buffer[this.index-2]}get size(){return this.buffer[this.index-1]}next(){this.index-=4,this.pos-=4,this.index==0&&this.maybeNext()}fork(){return new tm(this.stack,this.pos,this.index)}}class Ch{constructor(){this.start=-1,this.value=-1,this.end=-1,this.extended=-1,this.lookAhead=0,this.mask=0,this.context=0}}const O9=new Ch;class hle{constructor(e,n){this.input=e,this.ranges=n,this.chunk="",this.chunkOff=0,this.chunk2="",this.chunk2Pos=0,this.next=-1,this.token=O9,this.rangeIndex=0,this.pos=this.chunkPos=n[0].from,this.range=n[0],this.end=n[n.length-1].to,this.readNext()}resolveOffset(e,n){let r=this.range,i=this.rangeIndex,o=this.pos+e;for(;o<r.from;){if(!i)return null;let s=this.ranges[--i];o-=r.from-s.to,r=s}for(;n<0?o>r.to:o>=r.to;){if(i==this.ranges.length-1)return null;let s=this.ranges[++i];o+=s.from-r.to,r=s}return o}clipPos(e){if(e>=this.range.from&&e<this.range.to)return e;for(let n of this.ranges)if(n.to>e)return Math.max(e,n.from);return this.end}peek(e){let n=this.chunkOff+e,r,i;if(n>=0&&n<this.chunk.length)r=this.pos+e,i=this.chunk.charCodeAt(n);else{let o=this.resolveOffset(e,1);if(o==null)return-1;if(r=o,r>=this.chunk2Pos&&r<this.chunk2Pos+this.chunk2.length)i=this.chunk2.charCodeAt(r-this.chunk2Pos);else{let s=this.rangeIndex,a=this.range;for(;a.to<=r;)a=this.ranges[++s];this.chunk2=this.input.chunk(this.chunk2Pos=r),r+this.chunk2.length>a.to&&(this.chunk2=this.chunk2.slice(0,a.to-r)),i=this.chunk2.charCodeAt(0)}}return r>=this.token.lookAhead&&(this.token.lookAhead=r+1),i}acceptToken(e,n=0){let r=n?this.resolveOffset(n,-1):this.pos;if(r==null||r<this.token.start)throw new RangeError("Token end out of bounds");this.token.value=e,this.token.end=r}getChunk(){if(this.pos>=this.chunk2Pos&&this.pos<this.chunk2Pos+this.chunk2.length){let{chunk:e,chunkPos:n}=this;this.chunk=this.chunk2,this.chunkPos=this.chunk2Pos,this.chunk2=e,this.chunk2Pos=n,this.chunkOff=this.pos-this.chunkPos}else{this.chunk2=this.chunk,this.chunk2Pos=this.chunkPos;let e=this.input.chunk(this.pos),n=this.pos+e.length;this.chunk=n>this.range.to?e.slice(0,this.range.to-this.pos):e,this.chunkPos=this.pos,this.chunkOff=0}}readNext(){return this.chunkOff>=this.chunk.length&&(this.getChunk(),this.chunkOff==this.chunk.length)?this.next=-1:this.next=this.chunk.charCodeAt(this.chunkOff)}advance(e=1){for(this.chunkOff+=e;this.pos+e>=this.range.to;){if(this.rangeIndex==this.ranges.length-1)return this.setDone();e-=this.range.to-this.pos,this.range=this.ranges[++this.rangeIndex],this.pos=this.range.from}return this.pos+=e,this.pos>=this.token.lookAhead&&(this.token.lookAhead=this.pos+1),this.readNext()}setDone(){return this.pos=this.chunkPos=this.end,this.range=this.ranges[this.rangeIndex=this.ranges.length-1],this.chunk="",this.next=-1}reset(e,n){if(n?(this.token=n,n.start=e,n.lookAhead=e+1,n.value=n.extended=-1):this.token=O9,this.pos!=e){if(this.pos=e,e==this.end)return this.setDone(),this;for(;e<this.range.from;)this.range=this.ranges[--this.rangeIndex];for(;e>=this.range.to;)this.range=this.ranges[++this.rangeIndex];e>=this.chunkPos&&e<this.chunkPos+this.chunk.length?this.chunkOff=e-this.chunkPos:(this.chunk="",this.chunkOff=0),this.readNext()}return this}read(e,n){if(e>=this.chunkPos&&n<=this.chunkPos+this.chunk.length)return this.chunk.slice(e-this.chunkPos,n-this.chunkPos);if(e>=this.chunk2Pos&&n<=this.chunk2Pos+this.chunk2.length)return this.chunk2.slice(e-this.chunk2Pos,n-this.chunk2Pos);if(e>=this.range.from&&n<=this.range.to)return this.input.read(e,n);let r="";for(let i of this.ranges){if(i.from>=n)break;i.to>e&&(r+=this.input.read(Math.max(i.from,e),Math.min(i.to,n)))}return r}}class Th{constructor(e,n){this.data=e,this.id=n}token(e,n){ple(this.data,e,n,this.id)}}Th.prototype.contextual=Th.prototype.fallback=Th.prototype.extend=!1;function ple(t,e,n,r){let i=0,o=1<<r,{parser:s}=n.p,{dialect:a}=s;e:for(;(o&t[i])!=0;){let l=t[i+1];for(let f=i+3;f<l;f+=2)if((t[f+1]&o)>0){let h=t[f];if(a.allows(h)&&(e.token.value==-1||e.token.value==h||s.overrides(h,e.token.value))){e.acceptToken(h);break}}let c=e.next,u=0,d=t[i+2];if(e.next<0&&d>u&&t[l+d*3-3]==65535&&t[l+d*3-3]==65535){i=t[l+d*3-1];continue e}for(;u<d;){let f=u+d>>1,h=l+f+(f<<1),p=t[h],m=t[h+1]||65536;if(c<p)d=f;else if(c>=m)u=f+1;else{i=t[h+2],e.advance();continue e}}break}}function Df(t,e=Uint16Array){if(typeof t!="string")return t;let n=null;for(let r=0,i=0;r<t.length;){let o=0;for(;;){let s=t.charCodeAt(r++),a=!1;if(s==126){o=65535;break}s>=92&&s--,s>=34&&s--;let l=s-32;if(l>=46&&(l-=46,a=!0),o+=l,a)break;o*=46}n?n[i++]=o:n=new e(o)}return n}const cr=typeof process<"u"&&process.env&&/\bparse\b/.test(process.env.LOG);let vb=null;var C9;(function(t){t[t.Margin=25]="Margin"})(C9||(C9={}));function T9(t,e,n){let r=t.cursor(Vt.IncludeAnonymous);for(r.moveTo(e);;)if(!(n<0?r.childBefore(e):r.childAfter(e)))for(;;){if((n<0?r.to<e:r.from>e)&&!r.type.isError)return n<0?Math.max(0,Math.min(r.to-1,e-25)):Math.min(t.length,Math.max(r.from+1,e+25));if(n<0?r.prevSibling():r.nextSibling())break;if(!r.parent())return n<0?0:t.length}}class mle{constructor(e,n){this.fragments=e,this.nodeSet=n,this.i=0,this.fragment=null,this.safeFrom=-1,this.safeTo=-1,this.trees=[],this.start=[],this.index=[],this.nextFragment()}nextFragment(){let e=this.fragment=this.i==this.fragments.length?null:this.fragments[this.i++];if(e){for(this.safeFrom=e.openStart?T9(e.tree,e.from+e.offset,1)-e.offset:e.from,this.safeTo=e.openEnd?T9(e.tree,e.to+e.offset,-1)-e.offset:e.to;this.trees.length;)this.trees.pop(),this.start.pop(),this.index.pop();this.trees.push(e.tree),this.start.push(-e.offset),this.index.push(0),this.nextStart=this.safeFrom}else this.nextStart=1e9}nodeAt(e){if(e<this.nextStart)return null;for(;this.fragment&&this.safeTo<=e;)this.nextFragment();if(!this.fragment)return null;for(;;){let n=this.trees.length-1;if(n<0)return this.nextFragment(),null;let r=this.trees[n],i=this.index[n];if(i==r.children.length){this.trees.pop(),this.start.pop(),this.index.pop();continue}let o=r.children[i],s=this.start[n]+r.positions[i];if(s>e)return this.nextStart=s,null;if(o instanceof ct){if(s==e){if(s<this.safeFrom)return null;let a=s+o.length;if(a<=this.safeTo){let l=o.prop(de.lookAhead);if(!l||a+l<this.fragment.to)return o}}this.index[n]++,s+o.length>=Math.max(this.safeFrom,e)&&(this.trees.push(o),this.start.push(s),this.index.push(0))}else this.index[n]++,this.nextStart=s+o.length}}}class gle{constructor(e,n){this.stream=n,this.tokens=[],this.mainToken=null,this.actions=[],this.tokens=e.tokenizers.map(r=>new Ch)}getActions(e){let n=0,r=null,{parser:i}=e.p,{tokenizers:o}=i,s=i.stateSlot(e.state,3),a=e.curContext?e.curContext.hash:0,l=0;for(let c=0;c<o.length;c++){if((1<<c&s)==0)continue;let u=o[c],d=this.tokens[c];if(!(r&&!u.fallback)&&((u.contextual||d.start!=e.pos||d.mask!=s||d.context!=a)&&(this.updateCachedToken(d,u,e),d.mask=s,d.context=a),d.lookAhead>d.end+25&&(l=Math.max(d.lookAhead,l)),d.value!=0)){let f=n;if(d.extended>-1&&(n=this.addActions(e,d.extended,d.end,n)),n=this.addActions(e,d.value,d.end,n),!u.extend&&(r=d,n>f))break}}for(;this.actions.length>n;)this.actions.pop();return l&&e.setLookAhead(l),!r&&e.pos==this.stream.end&&(r=new Ch,r.value=e.p.parser.eofTerm,r.start=r.end=e.pos,n=this.addActions(e,r.value,r.end,n)),this.mainToken=r,this.actions}getMainToken(e){if(this.mainToken)return this.mainToken;let n=new Ch,{pos:r,p:i}=e;return n.start=r,n.end=Math.min(r+1,i.stream.end),n.value=r==i.stream.end?i.parser.eofTerm:0,n}updateCachedToken(e,n,r){let i=this.stream.clipPos(r.pos);if(n.token(this.stream.reset(i,e),r),e.value>-1){let{parser:o}=r.p;for(let s=0;s<o.specialized.length;s++)if(o.specialized[s]==e.value){let a=o.specializers[s](this.stream.read(e.start,e.end),r);if(a>=0&&r.p.parser.dialect.allows(a>>1)){(a&1)==0?e.value=a>>1:e.extended=a>>1;break}}}else e.value=0,e.end=this.stream.clipPos(i+1)}putAction(e,n,r,i){for(let o=0;o<i;o+=3)if(this.actions[o]==e)return i;return this.actions[i++]=e,this.actions[i++]=n,this.actions[i++]=r,i}addActions(e,n,r,i){let{state:o}=e,{parser:s}=e.p,{data:a}=s;for(let l=0;l<2;l++)for(let c=s.stateSlot(o,l?2:1);;c+=3){if(a[c]==65535)if(a[c+1]==1)c=di(a,c+2);else{i==0&&a[c+1]==2&&(i=this.putAction(di(a,c+2),n,r,i));break}a[c]==n&&(i=this.putAction(di(a,c+1),n,r,i))}return i}}var z9;(function(t){t[t.Distance=5]="Distance",t[t.MaxRemainingPerStep=3]="MaxRemainingPerStep",t[t.MinBufferLengthPrune=500]="MinBufferLengthPrune",t[t.ForceReduceLimit=10]="ForceReduceLimit",t[t.CutDepth=15e3]="CutDepth",t[t.CutTo=9e3]="CutTo"})(z9||(z9={}));class ble{constructor(e,n,r,i){this.parser=e,this.input=n,this.ranges=i,this.recovering=0,this.nextStackID=9812,this.minStackPos=0,this.reused=[],this.stoppedAt=null,this.stream=new hle(n,i),this.tokens=new gle(e,this.stream),this.topTerm=e.top[1];let{from:o}=i[0];this.stacks=[em.start(this,e.top[0],o)],this.fragments=r.length&&this.stream.end-o>e.bufferLength*4?new mle(r,e.nodeSet):null}get parsedPos(){return this.minStackPos}advance(){let e=this.stacks,n=this.minStackPos,r=this.stacks=[],i,o;for(let s=0;s<e.length;s++){let a=e[s];for(;;){if(this.tokens.mainToken=null,a.pos>n)r.push(a);else{if(this.advanceStack(a,r,e))continue;{i||(i=[],o=[]),i.push(a);let l=this.tokens.getMainToken(a);o.push(l.value,l.end)}}break}}if(!r.length){let s=i&&yle(i);if(s)return this.stackToTree(s);if(this.parser.strict)throw cr&&i&&console.log("Stuck with token "+(this.tokens.mainToken?this.parser.getName(this.tokens.mainToken.value):"none")),new SyntaxError("No parse at "+n);this.recovering||(this.recovering=5)}if(this.recovering&&i){let s=this.stoppedAt!=null&&i[0].pos>this.stoppedAt?i[0]:this.runRecovery(i,o,r);if(s)return this.stackToTree(s.forceAll())}if(this.recovering){let s=this.recovering==1?1:this.recovering*3;if(r.length>s)for(r.sort((a,l)=>l.score-a.score);r.length>s;)r.pop();r.some(a=>a.reducePos>n)&&this.recovering--}else if(r.length>1){e:for(let s=0;s<r.length-1;s++){let a=r[s];for(let l=s+1;l<r.length;l++){let c=r[l];if(a.sameState(c)||a.buffer.length>500&&c.buffer.length>500)if((a.score-c.score||a.buffer.length-c.buffer.length)>0)r.splice(l--,1);else{r.splice(s--,1);continue e}}}}this.minStackPos=r[0].pos;for(let s=1;s<r.length;s++)r[s].pos<this.minStackPos&&(this.minStackPos=r[s].pos);return null}stopAt(e){if(this.stoppedAt!=null&&this.stoppedAt<e)throw new RangeError("Can't move stoppedAt forward");this.stoppedAt=e}advanceStack(e,n,r){let i=e.pos,{parser:o}=this,s=cr?this.stackID(e)+" -> ":"";if(this.stoppedAt!=null&&i>this.stoppedAt)return e.forceReduce()?e:null;if(this.fragments){let c=e.curContext&&e.curContext.tracker.strict,u=c?e.curContext.hash:0;for(let d=this.fragments.nodeAt(i);d;){let f=this.parser.nodeSet.types[d.type.id]==d.type?o.getGoto(e.state,d.type.id):-1;if(f>-1&&d.length&&(!c||(d.prop(de.contextHash)||0)==u))return e.useNode(d,f),cr&&console.log(s+this.stackID(e)+` (via reuse of ${o.getName(d.type.id)})`),!0;if(!(d instanceof ct)||d.children.length==0||d.positions[0]>0)break;let h=d.children[0];if(h instanceof ct&&d.positions[0]==0)d=h;else break}}let a=o.stateSlot(e.state,4);if(a>0)return e.reduce(a),cr&&console.log(s+this.stackID(e)+` (via always-reduce ${o.getName(a&65535)})`),!0;if(e.stack.length>=15e3)for(;e.stack.length>9e3&&e.forceReduce(););let l=this.tokens.getActions(e);for(let c=0;c<l.length;){let u=l[c++],d=l[c++],f=l[c++],h=c==l.length||!r,p=h?e:e.split();if(p.apply(u,d,f),cr&&console.log(s+this.stackID(p)+` (via ${(u&65536)==0?"shift":`reduce of ${o.getName(u&65535)}`} for ${o.getName(d)} @ ${i}${p==e?"":", split"})`),h)return!0;p.pos>i?n.push(p):r.push(p)}return!1}advanceFully(e,n){let r=e.pos;for(;;){if(!this.advanceStack(e,null,null))return!1;if(e.pos>r)return V9(e,n),!0}}runRecovery(e,n,r){let i=null,o=!1;for(let s=0;s<e.length;s++){let a=e[s],l=n[s<<1],c=n[(s<<1)+1],u=cr?this.stackID(a)+" -> ":"";if(a.deadEnd&&(o||(o=!0,a.restart(),cr&&console.log(u+this.stackID(a)+" (restarted)"),this.advanceFully(a,r))))continue;let d=a.split(),f=u;for(let h=0;d.forceReduce()&&h<10&&(cr&&console.log(f+this.stackID(d)+" (via force-reduce)"),!this.advanceFully(d,r));h++)cr&&(f=this.stackID(d)+" -> ");for(let h of a.recoverByInsert(l))cr&&console.log(u+this.stackID(h)+" (via recover-insert)"),this.advanceFully(h,r);this.stream.end>a.pos?(c==a.pos&&(c++,l=0),a.recoverByDelete(l,c),cr&&console.log(u+this.stackID(a)+` (via recover-delete ${this.parser.getName(l)})`),V9(a,r)):(!i||i.score<a.score)&&(i=a)}return i}stackToTree(e){return e.close(),ct.build({buffer:tm.create(e),nodeSet:this.parser.nodeSet,topID:this.topTerm,maxBufferLength:this.parser.bufferLength,reused:this.reused,start:this.ranges[0].from,length:e.pos-this.ranges[0].from,minRepeatType:this.parser.minRepeatTerm})}stackID(e){let n=(vb||(vb=new WeakMap)).get(e);return n||vb.set(e,n=String.fromCodePoint(this.nextStackID++)),n+e}}function V9(t,e){for(let n=0;n<e.length;n++){let r=e[n];if(r.pos==t.pos&&r.sameState(t)){e[n].score<t.score&&(e[n]=t);return}}e.push(t)}class vle{constructor(e,n,r){this.source=e,this.flags=n,this.disabled=r}allows(e){return!this.disabled||this.disabled[e]==0}}class nm extends yz{constructor(e){if(super(),this.wrappers=[],e.version!=14)throw new RangeError(`Parser version (${e.version}) doesn't match runtime version (${14})`);let n=e.nodeNames.split(" ");this.minRepeatTerm=n.length;for(let a=0;a<e.repeatNodeCount;a++)n.push("");let r=Object.keys(e.topRules).map(a=>e.topRules[a][1]),i=[];for(let a=0;a<n.length;a++)i.push([]);function o(a,l,c){i[a].push([l,l.deserialize(String(c))])}if(e.nodeProps)for(let a of e.nodeProps){let l=a[0];typeof l=="string"&&(l=de[l]);for(let c=1;c<a.length;){let u=a[c++];if(u>=0)o(u,l,a[c++]);else{let d=a[c+-u];for(let f=-u;f>0;f--)o(a[c++],l,d);c++}}}this.nodeSet=new bx(n.map((a,l)=>pn.define({name:l>=this.minRepeatTerm?void 0:a,id:l,props:i[l],top:r.indexOf(l)>-1,error:l==0,skipped:e.skippedNodes&&e.skippedNodes.indexOf(l)>-1}))),e.propSources&&(this.nodeSet=this.nodeSet.extend(...e.propSources)),this.strict=!1,this.bufferLength=gz;let s=Df(e.tokenData);this.context=e.context,this.specializerSpecs=e.specialized||[],this.specialized=new Uint16Array(this.specializerSpecs.length);for(let a=0;a<this.specializerSpecs.length;a++)this.specialized[a]=this.specializerSpecs[a].term;this.specializers=this.specializerSpecs.map(N9),this.states=Df(e.states,Uint32Array),this.data=Df(e.stateData),this.goto=Df(e.goto),this.maxTerm=e.maxTerm,this.tokenizers=e.tokenizers.map(a=>typeof a=="number"?new Th(s,a):a),this.topRules=e.topRules,this.dialects=e.dialects||{},this.dynamicPrecedences=e.dynamicPrecedences||null,this.tokenPrecTable=e.tokenPrec,this.termNames=e.termNames||null,this.maxNode=this.nodeSet.types.length-1,this.dialect=this.parseDialect(),this.top=this.topRules[Object.keys(this.topRules)[0]]}createParse(e,n,r){let i=new ble(this,e,n,r);for(let o of this.wrappers)i=o(i,e,n,r);return i}getGoto(e,n,r=!1){let i=this.goto;if(n>=i[0])return-1;for(let o=i[n+1];;){let s=i[o++],a=s&1,l=i[o++];if(a&&r)return l;for(let c=o+(s>>1);o<c;o++)if(i[o]==e)return l;if(a)return-1}}hasAction(e,n){let r=this.data;for(let i=0;i<2;i++)for(let o=this.stateSlot(e,i?2:1),s;;o+=3){if((s=r[o])==65535)if(r[o+1]==1)s=r[o=di(r,o+2)];else{if(r[o+1]==2)return di(r,o+2);break}if(s==n||s==0)return di(r,o+1)}return 0}stateSlot(e,n){return this.states[e*6+n]}stateFlag(e,n){return(this.stateSlot(e,0)&n)>0}validAction(e,n){if(n==this.stateSlot(e,4))return!0;for(let r=this.stateSlot(e,1);;r+=3){if(this.data[r]==65535)if(this.data[r+1]==1)r=di(this.data,r+2);else return!1;if(n==di(this.data,r+1))return!0}}nextStates(e){let n=[];for(let r=this.stateSlot(e,1);;r+=3){if(this.data[r]==65535)if(this.data[r+1]==1)r=di(this.data,r+2);else break;if((this.data[r+2]&1)==0){let i=this.data[r+1];n.some((o,s)=>s&1&&o==i)||n.push(this.data[r],i)}}return n}overrides(e,n){let r=E9(this.data,this.tokenPrecTable,n);return r<0||E9(this.data,this.tokenPrecTable,e)<r}configure(e){let n=Object.assign(Object.create(nm.prototype),this);if(e.props&&(n.nodeSet=this.nodeSet.extend(...e.props)),e.top){let r=this.topRules[e.top];if(!r)throw new RangeError(`Invalid top rule name ${e.top}`);n.top=r}return e.tokenizers&&(n.tokenizers=this.tokenizers.map(r=>{let i=e.tokenizers.find(o=>o.from==r);return i?i.to:r})),e.specializers&&(n.specializers=this.specializers.slice(),n.specializerSpecs=this.specializerSpecs.map((r,i)=>{let o=e.specializers.find(a=>a.from==r.external);if(!o)return r;let s=Object.assign(Object.assign({},r),{external:o.to});return n.specializers[i]=N9(s),s})),e.contextTracker&&(n.context=e.contextTracker),e.dialect&&(n.dialect=this.parseDialect(e.dialect)),e.strict!=null&&(n.strict=e.strict),e.wrap&&(n.wrappers=n.wrappers.concat(e.wrap)),e.bufferLength!=null&&(n.bufferLength=e.bufferLength),n}hasWrappers(){return this.wrappers.length>0}getName(e){return this.termNames?this.termNames[e]:String(e<=this.maxNode&&this.nodeSet.types[e].name||e)}get eofTerm(){return this.maxNode+1}get topNode(){return this.nodeSet.types[this.top[1]]}dynamicPrecedence(e){let n=this.dynamicPrecedences;return n==null?0:n[e]||0}parseDialect(e){let n=Object.keys(this.dialects),r=n.map(()=>!1);if(e)for(let o of e.split(" ")){let s=n.indexOf(o);s>=0&&(r[s]=!0)}let i=null;for(let o=0;o<n.length;o++)if(!r[o])for(let s=this.dialects[n[o]],a;(a=this.data[s++])!=65535;)(i||(i=new Uint8Array(this.maxTerm+1)))[a]=1;return new vle(e,r,i)}static deserialize(e){return new nm(e)}}function di(t,e){return t[e]|t[e+1]<<16}function E9(t,e,n){for(let r=e,i;(i=t[r])!=65535;r++)if(i==n)return r-e;return-1}function yle(t){let e=null;for(let n of t){let r=n.p.stoppedAt;(n.pos==n.p.stream.end||r!=null&&n.pos>r)&&n.p.parser.stateFlag(n.state,2)&&(!e||e.score<n.score)&&(e=n)}return e}function N9(t){if(t.external){let e=t.extend?1:0;return(n,r)=>t.external(n,r)<<1|e}return t.get}const xle={__proto__:null,init:26,do:62,if:72,while:74,until:76,fi:80,instr:90,endin:94,opcode:98,endop:102,struct:106,declare:110},Sle=nm.deserialize({version:14,states:"8fO!gQPOOO!nQPO'#C`O!sQPO'#CeOOQO'#Dr'#DrO#pQQO'#CgO#zQPO'#CkO$]QPO'#CnO$nQQO'#EQOOQO'#Dy'#DyO%`QPO'#CfOOQO'#Dj'#DjO%hQPO'#CtO%oQPO'#CuO#zQPO'#CxO%tQPO'#CxOOQO'#Cw'#CwO#zQPO'#DOOOQO'#Dw'#DwOOQO'#Df'#DfO%|QPO'#DqQOQPOOOOQO'#DP'#DPO&TQSO'#DYO&WQSO'#D^O&WQSO'#DbO&WQSO'#DdO&]QWO,58zO&eQPO,59PO&jQPO,5:eO&qQQO,59WO'xQPO'#CrOOQO,59],59]O(PQQO,5:eO)WQQO,59VO*TQQO'#DyOOQO,59Y,59YO$]QPO,59[O$]QPO,59[O$]QPO,59[O*kQPO'#DiO+SQPO,5:lO#zQPO,59_OOQO'#Ch'#ChO$]QPO,59QOOQO-E7h-E7hOOQO,59`,59`OOQO,59a,59aO+kQQO,59dOOQO'#Cz'#CzOOQO,59d,59dO,PQQO,59jOOQO-E7d-E7dOOQO'#D['#D[O,WQPO'#EWO,`QPO,59tO,eQPO,59xO,mQPO,59|O,rQPO,5:OO,wQSO'#CbOOQO'#Dg'#DgO,|QWO1G.fOOQO1G.f1G.fOOQO1G.k1G.kO-UQQO,5:SO-gQQO1G0PO#zQPO'#DhOOQO-E7f-E7fO.nQPO,59^OOQO,59^,59^OOQO1G.w1G.wO.sQPO1G0POOQO1G.q1G.qO.zQQO,59]O0^QQO1G.vO0hQQO1G.vOOQO1G.v1G.vO0rQQO,5:TOOQO-E7g-E7gO1dQQO1G.yO1uQQO1G.lOOQO1G/O1G/OO2WQPO1G/UO2]QSO1G/UO2bQSO'#DlO2pQPO,5:rO3pQPO1G/`O3wQ`O1G/dO,mQPO1G/dOOQO'#Cg'#CgO3|QPO'#EXO4XQPO1G/hO,mQPO1G/jO4^QPO,58|OOQO-E7e-E7eOOQO7+$Q7+$QOOQO1G/n1G/nO4cQQO7+%kOOQO1G.x1G.xO5jQQO7+%kOOQO7+%k7+%kO$]QPO7+$eOOQO7+$W7+$WO5{QPO7+$pOOQO'#DX'#DXO6VQPO7+$pOOQO,5:W,5:WOOQO-E7j-E7jOOQO'#Dk'#DkO6[QPO7+$zO6cQPO7+$zO6hQPO7+%OO6mQPO7+%OO6rQPO'#DmO7QQPO,5:sOOQO7+%S7+%SO7]QPO7+%UOOQO1G.h1G.hO7bQPO<<IVOOQO<<IV<<IVO7iQQO<<HPO5{QPO<<H[OOQO'#DT'#DTOOQO<<H[<<H[OOQO-E7i-E7iO8ZQPO<<HfOOQO<<Hf<<HfO8`Q`O<<HjO8eQPO<<HjOOQO,5:X,5:XOOQO-E7k-E7kO8jQPO<<HpO8oQQOAN>qOOQOAN>qAN>qOOQOAN=vAN=vOOQOAN>QAN>QO9QQPOAN>UO9VQPOAN>UO9_QPOAN>[OOQOG24]G24]O9gQPOG23pO,mQPOG23pO9nQPOG23pO,mQPOG23vO9sQPOG23vO9xQPOLD)[O:PQPOLD)[O:UQPOLD)[O9xQPOLD)[O:ZQPOLD)bOOQOLD)bLD)bO:`QPO!$'LvOOQO!$'Lv!$'LvO:eQPO!$'LvO:jQPO!$'LvO:qQPO!$'L|OOQO!)9Bb!)9BbO:vQPO!)9BbO:}QPO!)9BbOOQO!)9Bh!)9BhO;SQPO!.K7|O;ZQPO!.K7|OOQO!.K7|!.K7|O;`QPO!4/-hOOQO!4/-h!4/-hOOQO!9A#S!9A#SO!xQQO'#DyO#zQPO,59[O#zQPO,59[O#zQPO,59[O;eQPO'#DiO;oQPO,5:lO<fQQO1G.vO<pQQO1G.vO<zQQO,5:TO#zQPO7+$eO=`QQO<<HPO#zQPO'#CnO>TQQO'#EQO>iQQO1G.yO#zQPO,59_",stateData:"?X~OPOSQOS!dOS~OTSOWWOaWOcUOj[Om]Oq^OteOueOveO}fO!RgO!VhO!XiO!hPO!jQO!qTO!vaO~O!b!eP~P]OTjO~OTkO~O^pO!nlO!qnOT!mXW!mXa!mXc!mX!r!mX!s!mX!u!mX!v!mX!w!mX~O]ZX!lZX~P!xOTrOWWOaWOc$vO!qTO~OT$kOWWOaWOcUO!qTO~OcvO!rtO!suO!uwO!wyOT!tXW!tXa!tX!q!tX!v!tX~O]zO!lzO~O!v}O~P$]O!v!OO~Oo!QOp!QO~O!b!eX~P]Oa!VO!y!UO~OV![O!g!_O~O!g!`O~O!o!bO~P#zO!n!cOT`aW`aa`ac`a!q`a!r`a!s`a!u`a!v`a!w`a!p`ao`ap`az`a!o`a!x`a~O!p!fO~P#zO!n!hOT!maW!maa!mac!ma!q!ma!r!ma!s!ma!u!ma!v!ma!w!ma!p!mao!map!maz!ma!o!ma!x!ma~Oc$nO!p!iO!r$lO!s$mO!w$yO~O^pO!nlO!qnOc!mX!r!mX!s!mX!w!mX!u!mX~O!p!mXo!mXp!mXz!mX!o!mX!x!mX~P)iOaWOcUOT!]XW!]X!q!]X!u!]X!v!]X~O!uwOT!taW!taa!tac!ta!q!ta!v!ta~Oc$nOo!QOp!QO!r$lO!s$mO!w$yO~Oz!tO~P+kO!u!uO!v!zX~O!v!wO~O!q!yO!u!xO~OT!zO~O!q!}O~O!i#OO~OV![O!g#QO~Oc$nO!o#RO!r$lO!s$mO!w$yO~O^#SOT!miW!mia!mic!mi!q!mi!r!mi!s!mi!u!mi!v!mi!w!mi!p!mio!mip!miz!mi!o!mi!x!mi~O!p#TO~O!o#VO~P#zO!v!gOcea!pea!rea!sea!weaoeapeazea!oea!uea!xea~OcvOTdiWdiadi!qdi!udi!vdi!wdi~O!rtO!suO~P/rO!rdi!sdi~P/rOcvO!rtO!suO!wyOT!]aW!]aa!]a!q!]a!u!]a!v!]a~Oc$nO!r$lO!s$mO!w$yO!x#WO~OcvO!rtO!suO!v#XO!wyO~O!v#YO~O!y#ZO~Oa#]O!y!UO!u!`X!v!`X~O!u!uO!v!za~OTSOWWOaWOcUOj[Om]Oq^OteOueOveO!qTO!vaO~O!P#aO~P2xO!S#bO~O!u#dO!v!{X!p!{X~O!v#fO~OW#hO~O!n#iOT!mqW!mqa!mqc!mq!q!mq!r!mq!s!mq!u!mq!v!mq!w!mq!p!mqo!mqp!mqz!mq!o!mq!x!mq~Oc$nO!o#jO!r$lO!s$mO!w$yO~Ox#mOy#mO~P2xO!v#nO~O!P#pO~P2xO!v#qO~O!u#rO~O!p#sO~OT!zO!u!aX!v!aX!p!aX~O!u#dO!v!{a!p!{a~O!p#vO~O!o#xO~P#zOcvO!rtO!suOTgyWgyagy!qgy!ugy!vgy!wgy~O!v#zO~O!S#{O~O!x#|O~O!x#}O~Oc$nO!o$OO!r$lO!s$mO!w$yO~O!v$PO~OT!zO!q$QO~OT!zO!q$SO~O!T$VO~P2xO!v$XO~O!v$ZO~O!T$[O~P2xO!v$]O~O!p$^O~O!p$`O~O!v$aO~O!v$bO~O!T$cO~P2xO!v$dO~O!T$fO~P2xO!v$gO~O!T$hO~P2xO!v$iO~O!v$jO~O!p!]X!u!]X~P#zO!u$oO!p!ta~Oc$nO!pdi!wdiodipdizdi!odi!udi!xdi~O!r$lO!s$mO~P;wO!rdi!sdi~P;wOc$nO!r$lO!s$mO!w$yO!p!]a!u!]a~Oc$nO!r$lO!s$mO!pgy!wgyogypgyzgy!ogy!ugy!xgy~Oc$nO!r$lO!s$mO!u$oO!w$yO!p!tX~Oc$nO!r$lO!s$mO!w$yO!x$tO~O!s!rmqpzyTj!laq~",goto:",P!|PPPP!}P#RPP!}#V#e$TPP$W$WP$}P$}$W%u$}#V#VP#V%|P&[PPP#V&ePPP&sPPP&y&|P'QP&|PPP&|P&|P'a'g'm'u(P(b(x)OPPP)U&|PPPP)XP)iPPPPPP+ZPPPPP+m+pTROcT!]j!^iaOc!w#Y#`#l$P$U$X$_$b$ehXOc!w#Y#`#l$P$U$X$_$b$eY!{!Y!y!}$Q$SQ#t#dQ$R#|R$T#}R{X!iWOTUZ]`clntuvy{!c!h!w#W#Y#`#i#l$P$U$X$_$b$e$l$m$n$o$t$v$y!kWOTUZ]`clntuvwy{!c!h!w#W#Y#`#i#l$P$U$X$_$b$e$l$m$n$o$t$v$ySoS$kR!jri_Oc!w#Y#`#l$P$U$X$_$b$eQ!R^Q!r!PR!s!Si`Oc!w#Y#`#l$P$U$X$_$b$eQ#n#YR#y#lR#[!tTbOcQ!VfQ!XgQ!YhQ!ZiR#]!uQcOR!TcQ!^jR#P!^UmSr$kR!dmQxVS!ox$pR$p$whZOc!w#Y#`#l$P$U$X$_$b$eR|ZQ#`!wQ#l#YY#o#`#l$U$_$eQ$U$PQ$_$XR$e$bQ!v!VR#^!vQ#e!{R#u#eRdOSbOce#_!w#Y#`#l$P$U$X$_$b$ejVOZc!w#Y#`#l$P$U$X$_$b$eQqTSsU$vQ!P]Q!S`S!al!cQ!ktQ!luS!mv$nQ!nwQ!pyQ!q{Q#U!hQ#k#WQ#w#iQ$q$lQ$r$mQ$s$oQ$u$tQ$wnR$x$yjYOZc!w#Y#`#l$P$U$X$_$b$eR!enR!WfQ!|!YQ#c!yQ#g!}Q$W$QR$Y$S",nodeNames:"\u26A0 BlockComment LineComment Program XmlOpen AmbiguousIdentifier XmlAttribute XmlTagName String XmlClose AssignStatement SignalRateIdentifier AssignOp init PropertyIdentifier ParenthesizedExpression BracketedExpression Number UnaryExpression ArithOp BinaryExpression CallbackExpression ArgList ConditionalExpression OpcodeStatement GotoStatement GotoLabel ControlFlowElseStatement ElseStatement ControlFlowElseIfToken ControlFlowDoTokens do ControlFlowDoToken ControlFlowElseToken ControlFlowStatement ConstrolFlowBeginToken if while until ControlFlowEndTokens fi ControlFlowEndToken ControlFlowGotoToken DeclareGotoLabel InstrumentDeclaration instr FunctionName endin UdoDeclaration opcode OpcodeArguments endop StructDeclaration struct DeclareDeclaration declare",maxTerm:89,skippedNodes:[0,1,2],repeatNodeCount:8,tokenData:"!&p~R!aXY%WYZ%c]^%cpq%Wqr%nrs%{st%vtu'suv%vvw*Oxy*`yz*ez{*j{|*r|}*z}!O*r!O!P+P!P!Q.p!Q!R0n!R![3Z![!]5R!]!^0V!^!_5W!_!`5m!`!a5w!a!b6U!c!l's!l!m6Z!m!n6Z!n!q's!q!r6Z!r!s6Z!s!u's!u!v6Z!v!x's!x!y6Z!y!}'s!}#O8d#P#Q9j#Q#R%v#R#S's#T#U6Z#U#X's#X#Y:p#Y#Z's#Z#[Gl#[#]'s#]#^KW#^#_6Z#_#`KW#`#c's#c#d!#X#d#e6Z#e#h's#h#iMm#i#o's#p#q!%h#r#s!%s$g$r's$r$s!%x$s;'S's;'S;=`)x<%lO's~%]Q!d~XY%Wpq%W~%hQ!v~YZ%c]^%cQ%sP!rQ!_!`%vQ%{O!sQ~&QWW~OY%{Zr%{rs&js#O%{#O#P&o#P;'S%{;'S;=`'m<%lO%{~&oOW~~&rRO;'S%{;'S;=`&{;=`O%{~'QXW~OY%{Zr%{rs&js#O%{#O#P&o#P;'S%{;'S;=`'m;=`<%l%{<%lO%{~'pP;=`<%l%{_'|XVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#o's$g;'S's;'S;=`)x<%lO'sR(nVjPtu)T!c!})T#R#S)T#T#o)T$g;'S)T;'S;=`)r<%lO)TR)YWTRtu)T!Q![)T!c!})T#R#S)T#T#o)T$g;'S)T;'S;=`)r<%lO)TR)uP;=`<%l)T_){P;=`<%l'sR*TQ!sQvw%v!_!`*ZR*`O!lR~*eO!q~~*jO!p~R*oP!sQ!_!`*Z~*wPc~!_!`*Z~+PO!u~~+SXtu+o!Q!R-t!R![.P!c!}+o#R#S+o#T#o+o$g;'S+o;'S;=`-n<%lO+o~+tX^~tu+o!Q![+o![!],a!c!}+o#R#S+o#T#o+o$g;'S+o;'S;=`-n<%lO+o~,dVtu,y!c!},y#R#S,y#T#o,y$g;'S,y;'S;=`-h<%lO,y~-OW^~tu,y!Q![,y!c!},y#R#S,y#T#o,y$g;'S,y;'S;=`-h<%lO,y~-kP;=`<%l,y~-qP;=`<%l+o~-yQaV!Q![.P#W#X.XV.UPaV!Q![.P~.[P#U#V._~.bP#Y#Z.e~.hP#g#h.k~.pO^~~.uR!sQz{/O!P!Q0V!_!`*Z~/RTOz/Oz{/b{;'S/O;'S;=`0P<%lO/O~/eVOz/Oz{/b{!P/O!P!Q/z!Q;'S/O;'S;=`0P<%lO/O~0POP~~0SP;=`<%l/O~0[SQ~OY0VZ;'S0V;'S;=`0h<%lO0V~0kP;=`<%l0Vg0ub!S`aV!O!P.P!Q!R1}!R![3Z!l!m3f!m!n3f!q!r3f!r!s3f!u!v3f!x!y3f!}#O3f#P#Q3f#T#U3f#W#X4j#]#^3f#^#_3f#_#`3f#c#d3f#d#e3fg2Ua!S`aV!O!P.P!Q!R1}!R![3Z!l!m3f!m!n3f!q!r3f!r!s3f!u!v3f!x!y3f!}#O3f#P#Q3f#T#U3f#]#^3f#^#_3f#_#`3f#c#d3f#d#e3fV3`QaV!O!P.P!Q![3Z`3k_!S`!Q!R3f!l!m3f!m!n3f!q!r3f!r!s3f!u!v3f!x!y3f!}#O3f#P#Q3f#T#U3f#]#^3f#^#_3f#_#`3f#c#d3f#d#e3fR4mP#U#V4pR4sP#Y#Z4vR4yP#g#h4|R5ROTR~5WO!x~~5_R!hP!sQ!P!Q5h!^!_%v!_!`%v~5mO!j~V5tP!iS!lR!_!`%vZ6OQ!gX!sQ!_!`%v!`!a%v~6ZO!w~o6fn!S`VW!ySTRtu's!Q!R6Z!R!['s![!](i!c!l's!l!m6Z!m!n6Z!n!q's!q!r6Z!r!s6Z!s!u's!u!v6Z!v!x's!x!y6Z!y!}'s!}#O3f#P#Q3f#R#S's#T#U6Z#U#]'s#]#^6Z#^#_6Z#_#`6Z#`#c's#c#d6Z#d#e6Z#e#o's$g;'S's;'S;=`)x<%lO'sb8k_!nQ!S`!Q!R3f!l!m3f!m!n3f!q!r3f!r!s3f!u!v3f!x!y3f!}#O3f#P#Q3f#T#U3f#]#^3f#^#_3f#_#`3f#c#d3f#d#e3fc9q_!oR!S`!Q!R3f!l!m3f!m!n3f!q!r3f!r!s3f!u!v3f!x!y3f!}#O3f#P#Q3f#T#U3f#]#^3f#^#_3f#_#`3f#c#d3f#d#e3f_:y]VW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#`'s#`#a;r#a#b's#b#c@[#c#o's$g;'S's;'S;=`)x<%lO's_;{ZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#g's#g#h<n#h#o's$g;'S's;'S;=`)x<%lO's_<wZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#X's#X#Y=j#Y#o's$g;'S's;'S;=`)x<%lO's_=uZVW!ySqPTRtu's!Q!['s![!](i!c!}'s#R#S's#T#]'s#]#^>h#^#o's$g;'S's;'S;=`)x<%lO's_>qZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#Y's#Y#Z?d#Z#o's$g;'S's;'S;=`)x<%lO's_?oXVW!ySmPTRtu's!Q!['s![!](i!c!}'s#R#S's#T#o's$g;'S's;'S;=`)x<%lO's_@eZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#W's#W#XAW#X#o's$g;'S's;'S;=`)x<%lO's_Aa]VW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#]'s#]#^BY#^#i's#i#jC|#j#o's$g;'S's;'S;=`)x<%lO's_BcZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#Y's#Y#ZCU#Z#o's$g;'S's;'S;=`)x<%lO's_CaXVW!ySyPTRtu's!Q!['s![!](i!c!}'s#R#S's#T#o's$g;'S's;'S;=`)x<%lO's_DVZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#b's#b#cDx#c#o's$g;'S's;'S;=`)x<%lO's_ERZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#h's#h#iEt#i#o's$g;'S's;'S;=`)x<%lO's_E}ZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#]'s#]#^Fp#^#o's$g;'S's;'S;=`)x<%lO's_FyZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#`'s#`#aCU#a#o's$g;'S's;'S;=`)x<%lO's_GuZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#c's#c#dHh#d#o's$g;'S's;'S;=`)x<%lO's_HqZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#h's#h#iId#i#o's$g;'S's;'S;=`)x<%lO's_ImZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#c's#c#dJ`#d#o's$g;'S's;'S;=`)x<%lO's_JkXVW!ySzQTRtu's!Q!['s![!](i!c!}'s#R#S's#T#o's$g;'S's;'S;=`)x<%lO'soKcr!S`VW!ySTRtu's!Q!R6Z!R!['s![!](i!c!l's!l!m6Z!m!n6Z!n!q's!q!r6Z!r!s6Z!s!u's!u!v6Z!v!x's!x!y6Z!y!}'s!}#O3f#P#Q3f#R#S's#T#U6Z#U#Z's#Z#[Gl#[#]'s#]#^6Z#^#_6Z#_#`6Z#`#c's#c#d6Z#d#e6Z#e#h's#h#iMm#i#o's$g;'S's;'S;=`)x<%lO's_MvZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#['s#[#]Ni#]#o's$g;'S's;'S;=`)x<%lO's_NrZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#X's#X#Y! e#Y#o's$g;'S's;'S;=`)x<%lO's_! nZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#b's#b#c!!a#c#o's$g;'S's;'S;=`)x<%lO's_!!lXVW!ySpRTRtu's!Q!['s![!](i!c!}'s#R#S's#T#o's$g;'S's;'S;=`)x<%lO'so!#dp!S`VW!ySTRtu's!Q!R6Z!R!['s![!](i!c!l's!l!m6Z!m!n6Z!n!q's!q!r6Z!r!s6Z!s!u's!u!v6Z!v!x's!x!y6Z!y!}'s!}#O3f#P#Q3f#R#S's#T#U6Z#U#W's#W#XCU#X#]'s#]#^6Z#^#_6Z#_#`6Z#`#c's#c#d6Z#d#e6Z#e#o's$g;'S's;'S;=`)x<%lO'sR!%mQ!sQ!_!`*Z#p#q%vQ!%xO!rQ_!&TXVW!yS!rQTRtu's!Q!['s![!](i!c!}'s#R#S's#T#o's$g;'S's;'S;=`)x<%lO's",tokenizers:[0,1,2,3,4],topRules:{Program:[0,3]},dialects:{csd:0},specialized:[{term:5,get:t=>xle[t]||-1}],tokenPrec:1376});window.editorCursorState={};const kle=dle(100,t=>{typeof t=="function"&&t()}),wle=Ht.define(),yb=Ht.define();Ht.define();Ht.define();Ht.define();const Ple=Ht.define(),Ole=xz({"Number BigNumber":V.number,"String/Escape":V.escape,instr:V.moduleKeyword,endin:V.moduleKeyword,opcode:V.moduleKeyword,endop:V.moduleKeyword,String:V.string,LineComment:V.lineComment,BlockComment:V.comment,Opcode:V.function,init:wle,AmbiguousIdentifier:Ple,XmlCsoundSynthesizerOpen:yb,XmlOpen:yb,XmlClose:yb,ArrayBrackets:V.bracket,if:V.controlKeyword,do:V.controlKeyword,fi:V.controlKeyword,while:V.controlKeyword,ControlFlowDoToken:V.controlKeyword,ControlFlowGotoToken:V.controlKeyword,ControlFlowEndToken:V.controlKeyword,ControlFlowElseIfToken:V.controlKeyword,ControlFlowElseToken:V.controlKeyword,"(":V.paren,")":V.paren,"[":V.squareBracket,"]":V.squareBracket,"{":V.bracket,"}":V.bracket}),Cle=G.mark({attributes:{class:"cm-csound-global-constant"}}),Tle=G.mark({attributes:{class:"cm-csound-opcode"}}),zle=G.mark({attributes:{class:"cm-csound-a-rate-var"}}),Vle=G.mark({attributes:{class:["cm-csound-a-rate-var","cm-csound-global-var"].join(" ")}}),Ele=G.mark({attributes:{class:"cm-csound-k-rate-var"}}),Nle=G.mark({attributes:{class:["cm-csound-k-rate-var","cm-csound-global-var"].join(" ")}}),Ile=G.mark({attributes:{class:"cm-csound-s-rate-var"}}),Mle=G.mark({attributes:{class:["cm-csound-s-rate-var","cm-csound-global-var"].join(" ")}}),Ale=G.mark({attributes:{class:"cm-csound-f-rate-var"}}),Lle=G.mark({attributes:{class:["cm-csound-f-rate-var","cm-csound-global-var"]}}),Zle=G.mark({attributes:{class:"cm-csound-p-field-var"}}),Xle=G.mark({attributes:{class:"cm-csound-xml-tag"}});G.mark({attributes:{class:"cm-csound-goto-token"}});const Wle=G.mark({attributes:{class:"cm-csound-macro-token"}});function Rle(t){return["sr","kr","ksmps","0dbfs","nchnls","nchnls_i"].includes(t)}function Fle(t,e){if(Rle(t))return Cle;if(e==="CallbackExpression"||Array.isArray(window.csoundBuiltinOpcodes)&&window.csoundBuiltinOpcodes.includes(t.replace(/:.*/,"")))return Tle;if(["XmlOpen","XmlClose"].includes(e))return Xle;if(/^p\d+$/.test(t))return Zle;if(t.startsWith("a"))return zle;if(t.startsWith("k"))return Ele;if(t.startsWith("S"))return Ile;if(t.startsWith("ga"))return Vle;if(t.startsWith("gk"))return Nle;if(t.startsWith("gS"))return Mle;if(t.startsWith("f"))return Ale;if(t.startsWith("gf"))return Lle;if(/^\$.+/.test(t))return Wle}function I9(t){const e=new Oi;for(const{from:n,to:r}of t.visibleRanges)J7(t.state,r)&&xt(t.state).iterate({from:n,to:r,enter:i=>{if(i.name==="AmbiguousIdentifier"){const s=t.state.doc.slice(i.from,i.to).text[0],a=Fle(s,i.node.parent.name);a&&e.add(i.from,i.to,a)}}});return e.finish()}const Hle=(t,e)=>{var o,s;const n=e.node;let r=n;for(;r&&r.type.name!=="ArgList";)r=r.node.parent;if(r&&((s=(o=r.node)==null?void 0:o.parent)==null?void 0:s.type.name)==="CallbackExpression")return t.state.doc.slice(r.node.parent.from,r.node.parent.to).text[0].replace(/:.*/,"").replace(/\(.*/,"");let i=n;for(;i&&i.type.name!=="OpcodeStatement";)i=i.node.parent;if(i)return t.state.doc.slice(i.from,i.to).text[0].split(/\s/).reduce(({cand:c,stop:u,lastComma:d},f)=>u?{cand:c,stop:u,lastComma:d}:f.includes(",")?{cand:void 0,stop:!1,lastComma:!0}:d?{cand:void 0,stop:!1,lastComma:!1}:{cand:f,stop:!0,lastComma:!0},{cand:void 0,stop:!1,lastComma:!1}).cand},Dle=t=>{const e=document.createElement("div");return{dom:e,update(n){if(n.heightChanged||n.selectionSet){const r=xt(t.state).cursorAt(t.state.selection.main.head),i=Hle(t,r),o=i&&window.csoundSynopsis.find(s=>s.opname===i);e.textContent=o&&o.synopsis[0]}}}},Gle=()=>hl.of(Dle),jle=nt.fromClass(class{constructor(t){const e=t.state.values.find(n=>n&&typeof n=="object"&&n.documentUid);typeof e=="object"&&e.documentUid&&(this.documentUid=e.documentUid),this.initialized||(this.decorations=I9(t),this.initialized=!0)}update(t){if((t.docChanged||t.viewportChanged)&&(this.decorations=I9(t.view)),!this.scrollPositionInitialized){const e=t.view;e.focus();const n=this.documentUid;n&&typeof window.editorCursorState[`${n}:scrollTop`]=="number"?(e.requestMeasure({read(){return{cursor:e.coordsAtPos(e.state.selection.main.head),scroller:e.scrollDOM.getBoundingClientRect()}},write(){e.scrollDOM.scrollTop=window.editorCursorState[`${n}:scrollTop`]}}),e.scrollDOM.scrollTop===window.editorCursorState[`${n}:scrollTop`]&&(this.scrollPositionInitialized=!0)):this.scrollPositionInitialized=!0}}},{decorations:t=>t.decorations,eventHandlers:{scroll:function(t,e){const n=this.documentUid;n&&e.scrollDOM.scrollTop>0&&kle(()=>{window.editorCursorState[`${n}:scrollTop`]=e.scrollDOM.scrollTop})}}}),Ble=fp.define({dialect:"csd",parser:Sle.configure({props:[Ole,Pz.add({InstrumentDeclaration:t=>t.column(t.node.from)+t.unit,UdoDeclaration:t=>t.column(t.node.from)+t.unit,ControlFlowStatement:t=>t.column(t.node.from)+t.unit}),Cz.add({InstrumentDeclaration:Kw,UdoDeclaration:Kw})]}),languageData:{closeBrackets:{brackets:["(","[","{","'",'"']},commentTokens:{line:"//",block:{open:"/*",close:"*/"}}}}),M9=Ble.configure({dialect:"csd"});function Yle(){const t=M9.data.of({autocomplete:nN((window.csoundSynopsis||[]).filter(({opname:e})=>!["0dbfs","sr","kr","ksmps","nchnls"].includes(e)).map(({opname:e,short_desc:n,type:r})=>({label:e,type:r==="opcode"?"keyword":"function",detail:n})))});return new $7(M9,[t,jle,Gle(),cd.of("  ")])}const Kle={initialColorMode:"dark",useSystemColorMode:!1},Ule=bQ({config:Kle,styles:{global:t=>({body:{color:"default",bg:"#272822"}})}}),qle=SN("csound-live-code-color-mode");function Jle(){const[t,e]=S.exports.useState(0),[n,r]=S.exports.useState(),[i,o]=S.exports.useState(),[s,a]=S.exports.useState(!1),[l,c]=S.exports.useState(""),[u,d]=S.exports.useState(`;; Select this code and press ctrl-e to evaluate
`+fG),f=S.exports.useRef({});S.exports.useEffect(()=>{(async()=>{const p=await SD({useWorker:!1});if(!p){alert("Error loading csound, please refresh and try again.");return}r(p);const m=await p.getAudioContext();o(m);let v="";p.addListener("message",g=>{v+=`
`+g,c(v)}),(m==null?void 0:m.state)==="running"?(hy(p),e(2)):e(1)})()},[]);const h=function(){i&&n&&(i==null||i.resume().then(()=>{hy(n),e(2)}))};return N(Qae,{theme:Ule,colorModeManager:qle,children:n&&t==2?tt(jS,{maxH:"100vh",spacing:"0",children:[N(cle,{csound:n,code:u,showConsole:s,setShowConsole:a}),N(wl,{w:"full",h:"full",overflow:"auto",children:N(bN,{ref:f,width:"100%",height:"100%",value:u,onChange:d,theme:wD,extensions:[Fz(),Fs.highest(ld.of([...xG(n),...vV,...jz])),Yle(),yG]})}),s&&N(_ae,{output:l})]}):t===1?N($y,{h:"100vh",children:N(mg,{onClick:h,children:"Start"})}):N($y,{h:"100vh",children:N(pA,{color:"#666666",children:"Loading..."})})})}xb.createRoot(document.getElementById("root")).render(N(_r,{children:N(R.StrictMode,{children:N(Jle,{})})}));window.onbeforeunload=function(){return"Are you sure?"};
